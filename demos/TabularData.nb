(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    390253,       7569]
NotebookOptionsPosition[    386830,       7503]
NotebookOutlinePosition[    387268,       7520]
CellTagsIndexPosition[    387225,       7517]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learning tabular data", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 
  3.8684260746987667`*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["DifferentiableHardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "DifferentiableHardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardeningLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardeningLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassScores", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassScores", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "DifferentiableHardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "DifferentiableHardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralReshapeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralReshapeLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetBooleanExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetBooleanExpression", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["RandomBalancedNormalSoftBits", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "RandomBalancedNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GetWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "GetWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetBooleanFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetBooleanFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralCount", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralCount", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomNormalSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "RandomNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralExactlyK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralExactlyK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomUniformSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "RandomUniformSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClassificationLoss", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassify", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassify", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralLTEK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralLTEK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBalanced", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeBalanced", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Require", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "Require", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["HardNetClassifyEvaluation", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassifyEvaluation", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToOne", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeBiasToOne", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "SoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardDropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardDropoutLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassPrediction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassPrediction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToZero", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeBiasToZero", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["HardNetClassProbabilities", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassProbabilities", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeToConstant", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeToConstant", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.86479111604138*^9, 3.8647911657240562`*^9, 3.864791620800887*^9, 
   3.86479194597997*^9, 3.86479198092934*^9, 3.864792204697258*^9, 
   3.864792687703233*^9, 3.864793105592959*^9, 3.864793526801218*^9, 
   3.864793732850697*^9, 3.864794507927494*^9, 3.864796071752219*^9, 
   3.864825438485825*^9, 3.864825531891514*^9, 3.8648260962141314`*^9, 
   3.864830162877289*^9, 3.8648755408909893`*^9, 3.865049480919162*^9, 
   3.865050046751976*^9, 3.865051042066378*^9, 3.8650523426134*^9, 
   3.8650543558693867`*^9, 3.865058337414798*^9, 3.8650584086343327`*^9, 
   3.86505947338*^9, 3.86506885830449*^9, 3.865397062515942*^9, 
   3.86539822002991*^9, 3.865414037240362*^9, 3.865415448442546*^9, 
   3.865415610582356*^9, 3.8654172214829617`*^9, 3.865417469191354*^9, 
   3.865419590403018*^9, 3.865420075554387*^9, 3.865428054175325*^9, 
   3.8654793173710623`*^9, 3.8655665906709213`*^9, 3.865591995941038*^9, 
   3.865658579968223*^9, 3.865772215681147*^9, 3.865779562552833*^9, 
   3.8658370145359364`*^9, 3.86584060155225*^9, 3.8659992094486027`*^9, 
   3.866003652107215*^9, 3.8660161651613417`*^9, 3.8661754677644978`*^9, 
   3.866258657623454*^9, 3.866285693609187*^9, 3.86635057486532*^9, 
   3.866512485808078*^9, 3.866512816932197*^9, 3.866553529720395*^9, 
   3.8666025113336687`*^9, 3.866606144536639*^9, 3.866608546326232*^9, 
   3.866609704076623*^9, 3.8666137219288273`*^9, 3.86671285229326*^9, 
   3.866788776837541*^9, 3.866788812552528*^9, 3.866794689702251*^9, 
   3.8667979035574636`*^9, 3.8667996941084146`*^9, 3.866800686995532*^9, 
   3.866801936715271*^9, 3.866865563143631*^9, 3.8671595128431797`*^9, 
   3.867322056244096*^9, 3.8674794507502613`*^9, 3.8675828633257*^9, 
   3.867669743397482*^9, 3.867732450434094*^9, 3.867751859422694*^9, 
   3.867752571591299*^9, 3.867811509870346*^9, 3.8678117360040903`*^9, 
   3.8678203831872883`*^9, 3.867843695133718*^9, 3.867850373374954*^9, 
   3.86800725388065*^9, 3.868015027015581*^9, 3.868070609148181*^9, 
   3.8680707782820997`*^9, 3.868071504515008*^9, 3.868078566976554*^9, 
   3.868079276409031*^9, 3.8680936161674767`*^9, 3.868332595482695*^9, 
   3.868343297990016*^9, {3.868434780605877*^9, 3.86843479524651*^9}, 
   3.868445566107071*^9, 3.868519876174618*^9, 3.86853009787873*^9, 
   3.868533409155756*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d92b2653-4301-4f99-94ac-dcbdc92fcffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get data", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 
  3.868426122274289*^9}},ExpressionUUID->"3104f7e3-d1cf-444c-857d-\
f3d3d76d7c7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8684261284499598`*^9, 3.8684261339874697`*^9}, {
   3.868426165551331*^9, 3.868426166147992*^9}, {3.868443501655848*^9, 
   3.868443511617087*^9}, {3.868445089535833*^9, 3.8684450898384523`*^9}, 
   3.8684475343091707`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          11074797896484436513746244097332570116292617748430130407896], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11074797896484436513746244097332570116292617748430130407896,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868447534840249*^9, 3.8684985354123583`*^9, 
  3.868519879764835*^9, 3.8685300999400797`*^9, 3.868533465833148*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2f2671b6-ff8c-40e2-a600-10268d1fbe8e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.868445433613286*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create feature encoders", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 
  3.86843398679764*^9}},ExpressionUUID->"fc79f348-c5f7-48d3-80d6-\
e4dab5b13de8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "featureValues"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"encoders", "=", 
   RowBox[{"Encoders", "[", "trainData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Normal", "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"encoders", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"data", "[", 
      RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868426687511053*^9, 3.868426801572831*^9}, {
   3.8684269173036003`*^9, 3.8684269578937387`*^9}, {3.8684269966730623`*^9, 
   3.868427061846773*^9}, {3.868427135120562*^9, 3.868427173055786*^9}, {
   3.868427218784813*^9, 3.868427313389267*^9}, {3.868427822986774*^9, 
   3.8684278511841917`*^9}, {3.8684280835200367`*^9, 3.868428089883707*^9}, {
   3.868428156521447*^9, 3.8684281614416733`*^9}, {3.8684281955955667`*^9, 
   3.868428284555341*^9}, 3.868434324643379*^9, {3.868434449433856*^9, 
   3.8684344506731787`*^9}, {3.868437882742872*^9, 3.8684378847594643`*^9}, {
   3.868443521427595*^9, 3.86844353043198*^9}, {3.868445371253304*^9, 
   3.868445422686679*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureLayer", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{"\"\<Catenate\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], "\[IndentingNewLine]", 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "->", "\"\<Catenate\>\""}],
         "&"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<PurchasePrice\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<PurchasePrice\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaintenanceCost\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<MaintenanceCost\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Doors\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Doors\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Passengers\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Passengers\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Cargo\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Cargo\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Safety\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Safety\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868511402960554*^9, 3.868511420437525*^9}, {
   3.8685114920935707`*^9, 3.86851156446668*^9}, 3.868511640913454*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.86843932450987*^9}},ExpressionUUID->"1674350a-bfdf-4c15-99d4-\
bba009f90f57"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numClasses", "=", 
        RowBox[{"Length", "[", "classes", "]"}]}], ",", 
       "classificationLayerSize"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"128", "*", "numClasses"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralNAND", "[", 
          RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardNeuralReshapeLayer", "[", 
          RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868434027583748*^9, 3.868434035787488*^9}, {
   3.8684347252717743`*^9, 3.868434739712077*^9}, {3.8684348123552837`*^9, 
   3.868434889688067*^9}, {3.868436138483499*^9, 3.8684361400155487`*^9}, {
   3.868439429843689*^9, 3.868439430063843*^9}, {3.868439981288126*^9, 
   3.86843999564869*^9}, {3.868440077141582*^9, 3.8684400780122023`*^9}, {
   3.868440461557928*^9, 3.868440463889024*^9}, {3.8684406325500402`*^9, 
   3.868440632800852*^9}, {3.8684407142457123`*^9, 3.868440714673073*^9}, 
   3.8684407820700693`*^9, {3.868441017230885*^9, 3.868441018893251*^9}, {
   3.8684411315833893`*^9, 3.868441133033833*^9}, {3.868518724134651*^9, 
   3.868518725441156*^9}, {3.868518928530555*^9, 3.868518943190036*^9}, {
   3.868519041547244*^9, 3.868519068014036*^9}, {3.868519147675601*^9, 
   3.868519154814497*^9}, {3.868519330700121*^9, 3.868519338754211*^9}, {
   3.868519481675853*^9, 3.868519515993621*^9}, {3.868519704140811*^9, 
   3.8685197412954483`*^9}, {3.8685197864581833`*^9, 3.868519804727289*^9}, {
   3.868520025904859*^9, 3.868520026662962*^9}, {3.868520165374518*^9, 
   3.868520172724663*^9}, {3.868520227657476*^9, 3.8685202280400333`*^9}, {
   3.868520278697311*^9, 3.868520283147401*^9}, {3.8685206145298347`*^9, 
   3.8685206150078983`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<FeatureLayer\>\"", "->", "featureLayer"}], ",", 
       RowBox[{"\"\<SoftNet\>\"", "->", "softNet"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<FeatureLayer\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868436150363471*^9, 3.868436214879616*^9}, {
   3.8684363176157846`*^9, 3.868436401711966*^9}, {3.868436439018614*^9, 
   3.868436449976253*^9}, {3.868436507251442*^9, 3.868436566344318*^9}, {
   3.868436601752877*^9, 3.868436606688592*^9}, {3.8684378203450413`*^9, 
   3.868437848662979*^9}, {3.868438156495153*^9, 3.8684381757432423`*^9}, {
   3.868438230057756*^9, 3.8684382404094887`*^9}, {3.868438312361177*^9, 
   3.868438339094953*^9}, {3.8684384459605*^9, 3.868438454771668*^9}, {
   3.8684385462566147`*^9, 3.8684385862545233`*^9}, {3.8684386245588503`*^9, 
   3.868438717976014*^9}, {3.868438791131241*^9, 3.8684388742400846`*^9}, {
   3.868438957513969*^9, 3.8684389581925077`*^9}, {3.8684390163704367`*^9, 
   3.868439068705132*^9}, {3.868442351137228*^9, 3.868442398109271*^9}, 
   3.8684433338319263`*^9, {3.86844712352503*^9, 3.868447133785776*^9}, {
   3.868511573996563*^9, 3.868511634912119*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainableNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
       RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Acceptability\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684424197508583`*^9, 3.868442462956246*^9}, 
   3.8684433239111013`*^9, {3.868447095425324*^9, 3.868447102608048*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.868439333949903*^9}},ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-\
772879a58a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "trainableNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 
  3.868447037389845*^9}},ExpressionUUID->"b925ae5d-4091-4d4b-a37f-\
d801edc11fc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedSoftNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<TrainedNet\>\"", "->", 
       RowBox[{"NetDelete", "[", 
        RowBox[{
         RowBox[{"NetFlatten", "[", 
          RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}], ",", 
         "\"\<Loss/Error\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868441715962099*^9, 3.868441726772949*^9}, {
   3.868442062468679*^9, 3.868442075018716*^9}, {3.868442527005735*^9, 
   3.86844256484381*^9}, {3.868442825916274*^9, 3.868442879501833*^9}, {
   3.868442927862575*^9, 3.868442930140501*^9}, {3.868442994108386*^9, 
   3.868442997385559*^9}, {3.868443171305544*^9, 3.868443172008521*^9}, {
   3.868443210207801*^9, 3.86844327444496*^9}, {3.868443832176667*^9, 
   3.868443841549613*^9}, {3.868443968480337*^9, 3.86844397610231*^9}, {
   3.868445156069516*^9, 3.868445169542899*^9}, {3.86844548965233*^9, 
   3.8684454911676607`*^9}, {3.868445524601853*^9, 3.868445525318458*^9}, {
   3.8684457755379953`*^9, 3.8684457785428762`*^9}, {3.868445841953512*^9, 
   3.868445843190568*^9}, {3.868446029551764*^9, 3.8684460319907627`*^9}, {
   3.868446204633617*^9, 3.8684462159667997`*^9}, {3.868446498761023*^9, 
   3.868446502318582*^9}, 3.868446990300243*^9, {3.868447023781098*^9, 
   3.868447024311913*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trainedSoftNet", ",", 
    RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868441761355565*^9, 3.86844176541033*^9}, {
   3.868442023100346*^9, 3.8684420354226837`*^9}, {3.868444107190956*^9, 
   3.868444110989802*^9}, {3.868444188263138*^9, 3.868444188997357*^9}, {
   3.8684443072021*^9, 3.868444343231183*^9}, {3.86844438017598*^9, 
   3.868444387605728*^9}, {3.868444533736438*^9, 3.868444535818205*^9}, {
   3.868444625239705*^9, 3.868444635677659*^9}, {3.8684447356698933`*^9, 
   3.8684447565897284`*^9}, 3.86844479804601*^9, {3.868445054584428*^9, 
   3.868445061735847*^9}, {3.868447028248465*^9, 3.868447028907001*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classifier method"], 
                   TextCell["Classifier method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "Net",ExpressionUUID->"0cc461c5-7894-49b7-9f40-d39b71c385e9"],
                
                TextCell["Net"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "346"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"98.6", "0.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    98.5549132947976858077`3., 0.6425050497397866156`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"70.8", "2.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    70.8092485549132959477`3., 2.4476994076247526877`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Geometric mean of probabilities"], 
                   TextCell["Geometric mean of probabilities"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9290775086486480205`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0165611754920620968`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.8959551576645238269`3.", "\", \"", 
                   "0.9621998596327722142`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.8959551576645238269`3., 
                   ", ", 0.9621998596327722142`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.0735631113034290879`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0178244532080901741`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0379142048872487397`3.", "\", \"", 
                   "0.1092120177196094361`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0379142048872487397`3., 
                   ", ", 0.1092120177196094361`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"4.53`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"3.11`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTplrpkSJu7+wfhsSXpri8tReOjN1yUOEl
hjoYHZD38tFSvrf20iuVyvQnvbCXrj/gUn7gFk71uGgJAcfjdtVv7WtfXxR5
7/rKfp78ltOK4Q9Jdk9CZ1nnW8E39rkrj5ozOT6xtwt9cT2k+zBO9eaC6mu7
X761P7OkjG/3s9f2+layCx0nP4XLP6wSWef+EOYf3OFGangCAAnPcEs=
                  "], {{0, 0}, {4, 4}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["244", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "244", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9959183673469387`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9979550102249489`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{244, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9959183673469387}], 
                    Row[{"FScore = ", 0.9979550102249489}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["70", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "70", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9859154929577465`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9722222222222222`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.979020979020979`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{70, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9859154929577465}], 
                    Row[{"Recall = ", 0.9722222222222222}], 
                    Row[{"FScore = ", 0.979020979020979}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.014084507042253521`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.058823529411764705`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.014084507042253521`}], 
                    Row[{"Row fraction = ", 0.058823529411764705`}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9565217391304347`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9166666666666666}], 
                    Row[{"FScore = ", 0.9565217391304347}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.05`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004081632653061225`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.05}], 
                    Row[{"Row fraction = ", 0.004081632653061225}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.1`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.027777777777777776`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.1}], 
                    Row[{"Row fraction = ", 0.027777777777777776`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.05`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.08333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.05}], 
                    Row[{"Row fraction = ", 0.08333333333333333}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.8`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9411764705882353`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8648648648648649`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{16, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8}], 
                    Row[{"Recall = ", 0.9411764705882353}], 
                    Row[{"FScore = ", 0.8648648648648649}]}], "Tooltip"]& ]}, 
                   
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "245", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9959183673469387`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{245, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9959183673469387}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "72", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9722222222222222`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{72, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9722222222222222}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 0.9166666666666666}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "17", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9411764705882353`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{17, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.9411764705882353}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "244", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{244, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "71", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9859154929577465`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{71, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9859154929577465}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "20", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.8`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{20, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8}]}], "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["245", TraditionalForm]}, {2.5, 
                    FormBox["72", TraditionalForm]}, {1.5, 
                    FormBox["12", TraditionalForm]}, {0.5, 
                    FormBox["17", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["244", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["71", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["20", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->212.4,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[<|
   "Model" -> ClassifierFunction[<|
      "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "PurchasePrice" -> <|"Type" -> "Expression"|>, 
              "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
              "Doors" -> <|"Type" -> "Expression"|>, 
              "Passengers" -> <|"Type" -> "Expression"|>, 
              "Cargo" -> <|"Type" -> "Expression"|>, 
              "Safety" -> <|"Type" -> "Expression"|>|>, 
            "Output" -> <|
             "PurchasePrice" -> <|"Type" -> "Expression"|>, 
              "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
              "Doors" -> <|"Type" -> "Expression"|>, 
              "Passengers" -> <|"Type" -> "Expression"|>, 
              "Cargo" -> <|"Type" -> "Expression"|>, 
              "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
            MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> False,
             "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
         "Processor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
         "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
         "Marginal" -> <|
          "unacceptable" -> 0.25, "acceptable" -> 0.25, "very good" -> 0.25, 
           "good" -> 0.25|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {4, 5}, 0., {
         1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       Automatic, "BatchProcessing" -> 
       MachineLearning`PackageScope`$BatchProcessing, 
       "Model" -> <|
        "Method" -> "Net", "Net" -> 
         NetGraph[<|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "PurchasePrice" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"low", "high", "medium", "very high"}, 
                 "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                 "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                 "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"low", "medium", "very high", "high"}, 
                 "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                 "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                 "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
              NetEncoder["Class", <|"Labels" -> {3, 2, 4, 
                   Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                  "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                 "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
              NetEncoder["Class", <|"Labels" -> {2, 
                   Interval[{5, 
                    DirectedInfinity[1]}], 4}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"high", "low", "medium"}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
            "Outputs" -> <|
             "Output" -> 
              NetDecoder[
               "Class", <|
                "Labels" -> {
                  "unacceptable", "acceptable", "very good", "good"}, 
                 "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 4, 
                 "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
            "Nodes" -> <|
             "TrainedNet" -> <|
               "Type" -> "Graph", 
                "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                  NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                  NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "Net/SoftNet/1" -> <|
                   "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
sOhBMXIX1IC4brJ2Z25gwnZc7/oW34ydDjGxT+3OSkRDjTcXPwQ44dgGZ8ye
qc28s0wF1/WpMHiWLxye3MC4XzHFu1mqIva/G0qzeqhwOVgbxIFNaz4a1Mhg
vpQObNaaiNslebRd+QP4mGmC5a8RxAT0iaaNZ1yA0uvyYOEUSqTXbSSnH1RC
9uuHZJhcBoQel8UdOiH8V0d0MYXjJOpre32MSLc5pzA+21VJx57aghWvy8Ao
vQnK7CVpP/5bsDDMhtDlbyAjXR+7cszgzuQUIuaVRTjNakE62LFq9F4eF+90
hfzeG6CfDI8++f4dJAX/u/9ZI2a5/Zx/HJPlB3vT1SVT6B6cu4zPpiFwRWYE
eRlym4/JLeT0MkX+ItspsN5FmrnsPJRZ0mtxmfWiAjInN5vJUq0hTl32gkNk
CUkJHoUsD15o06VD4qlJ/ZPA2FQVf/fzKg8gp5Mc/nLeKTzwq8dycP7//TUo
e28ojiXjDLi+uIHzovd3z0Hr52V2v3cbWPbsyBapzZASsvb9SMx4d5IZ1GbB
OBlV8lWK5HFMdAGxlTlMNIQ16teT+eFMCmi25pO8ScGki8NdRrycmKA3XAdB
J7Lh2Cf+4n2TSJP9UhKZdoWv4j2XXLa1AlepYkial8yYd73IWC+sYTjdvvIP
xuQy3OQrzJETE8jVMbv5Wj38GZlgLln1YI8I4wE8OmDBbSjk7mQ8zmuBjedE
sm3dMkhr6AwhSr1BpWg58F9thHSbdKw+fMeW1TCGB7vN4/C0RIPIZ2kKGkCf
MIqlxO2pzUgC/FxQf7km9Mik4PniZYxV2iroW9cdTLUKGG+HLiRPrxS2+VVB
0gofWFz6Fb44XOPPzdGHQ53Gc5jHr5gfef/Qi34+N5z2vLebLyZV15j5eH4L
v6lpVcWF91sZw63OzJvOmfy7PrOZ5z12MbFLjJni+dqEqJLyHjIazPWaq0zE
QBlygvFoX07oBwOy6awU+doxjpRKDWA62sUwhjanGVubk/xeU2nYv6qIrA3Y
zxx9oUQacssqmnjuJME/iF/jtou/cGIOAde9JOJGMBMqXMc7659zWU31FI7F
ZoYUi2C7MTXyjDGVoWFMpSibUBlu+tTll5ZUUY0xtWyYMTVjjrGoDjdxOaye
6TiIGidvQhWsNqZ0TF3bl/O/9s0e+QM5O1IHcgylrUX7+4Q619/u37oVKd/n
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
2a4=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                   "Net/SoftNet/2" -> <|
                   "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
fxg=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/3" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {10752}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                   "Net/SoftNet/4" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {512}|>,
                     "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/5" -> <|
                   "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{512, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "Net/FeatureLayer/Catenate" -> <|
                   "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                  "Net/SoftNet/6" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/7" -> <|
                   "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/8" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[8 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/9" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/10" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[8 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                  "Net/SoftNet/11" -> <|
                   "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 128}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                  "Loss/Harden" -> <|
                   "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_8401b642_45e4_40df_a5b0_025be2e24e2d", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CWwZ14PSWdsf8c2fHQvQhULmWGhp1oJXg2SXUONiEgC/lPis2y8WXpzlupAL
YFMBzMcAwGrHLPlL0E0FsL1kAFso9VlHuwZgJb4AdsbqXPCjiPEA5js2hfx5
TZqEviNJ/dIKfcoPLVUNOSRLKaxJBZki0VFX9lER6RB2VLjcEH3az5BOf2pC
6eUaUj3CmSuO4vmQK0r/XFj4JTgmtZ3mGc5cc90ngtvAn/yDG8qzitSXXDer
bwuNm0QN4D/y4ZAemzAvsbAG/vyJi9GHYzSQe9WQ35tRt/IfRXDV6ZhYWKHP
aeDzA6uWs7icgyRV9lfBnx+UGcT/Slv7HDslkylgvZMVHQF4idRyZzCLNY5r
dBHduFyDZ6AmmvztP6yqIivXs1QeTWtckn/mry6cdENuNrVMuIhrGigkPsi0
Cs8QIzF1hljkkk7PZo41UN1z6tPeItwgKde3hFw33eO+Vgz6VBKxhKjFv/sk
hPx69VipWbnA1luVJk6YdYkUCQlyIbqjZmFu1IZw88Nz2Eka3PJYB4utSiha
KtxekU3L9R0a+D4J6XT0YZdEjPiwi9CG+aVlFUmL9JTpanLQxczHh1vBD/ml
m25oWNZAml6mtd82yYeamlF8iMP9CvB1193HKiV3SWdIIKl/QieR0g1QTjtT
M28Hq6rYynWyet5fXWGRJIymFZmqCD6vGyRcDgR7AMEs80qtq4jgcegOIGus
Rr7zqbn8R/zlaqnJM2nZVMM/0A33scDSKnwl4DJLM2cvqxfmDFLPWYEWZr4d
tBbhX6Bza6LRkSdxmDWEjV2ne4yyvMCbL7rcWoAfZdwtbh82YN+IWSXcXD03
PNodb1kTj87W9ycYPFalCNUfw6vHA8y5asdwO+gV29ST0Oo1LYsFGd+iy+1K
8Xhd/JTwbr/qArFfMZ4V7m7s2aOs6dXxGXkwJl7Z2t/tRZw92XtaeT3MC2a0
C61eE4cQ6Atzheq8y9Xn8WpceBzC51D1YnzqT2J6JXEkoaJH8djk1MiEblX1
1ioWcfr49rA8Dsc/N3QX6n6y1S4Wdd8TthuvytfgVUXCWBV1Ff0f/OrcR52/
bZ/WQmQp/TlDNUOODugA9+nW+WnK2LAdCOFDNcei0SC2YSF4tXULjmFO2BqE
f0X1l81exCmMwVPKvE7I3V6Jw81cXImTPT2DTeseLyctb+y/9RF/VWBSAzHa
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
vzPhvwxERdZIdSL8xv8BQJziRw==
                    "]]|>, "orcInstance" -> 113659024, "orcModuleId" -> 
                    111656544, "targetMachineId" -> 78456720|>, 
                    140147808528208, 140147808528064, 140147808528144, 
                    140147808522240, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_92c85191_9a66_4f3c_82f8_7f5075b9faa3", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
lmqz0UpIMsSZGeIMkjDVWYmS6tqlzUSzNIdIy8l6Tl/dOI1Im7u01kiIc9IJ
CSmRTHvZaCAyCfnSN+gmIc6dkSmdIc7SzNc1VjcZNZrSpY06fbW5urFFYa6r
NWqKNRq1rmqJ0SC3WnUtmnKjzpyTpZH818z/DyMziNQmnVWcJS3VVddS/yBD
Qq1RVoBjJxVkr0rrKNdV7VvSMCf52Yb341OlP/95RVXmlnFLGvY+u+XteSsa
4lNl5YdDLN4/zatKfrhr3pJn41NV4I9wvYugrXFR1jS4jtDllZYOOHfdELF5
/d2Oy8KjO6OvyqllfpmaXAqfE7MuarlX1BD2MSMU+GOuqLl3O212tCWNXpXN
7vogJistO7ql+5H83c6Z7d2MJXCBC88OC88SwhEd9bxqT+zSCft3CnuDQEIG
YCmkahPaV7Dbmb8DLkbmTJ+zAC5MbzdVm3QQH3XUfskqSqeqJnWG47cBvjzu
e1lkv5obUcYoKoOV8TYse3AXAc+61laKyXl7RVpYotlonDgN4CxnnuefTZzj
hWrCy3O+D3dRr9+ndZg43i1qtdfEYe6nSXu7GveO2x0vlu3AWcwfOVhy/2Fx
+gmFXJbh056yCRgMQS2eRgrEpA2aPBrNqNsqwh085wVo0HYWbE/FD4uzJhfJ
Za3xDC6nmMMhWAHfJqeMY4pjJwnEae9CqyrurlcY+vctBFWlc6oqZIYzBwOC
Cfjp/bXP98swXgA/fne2UpQ1GClVZhJHjv+UXXPz8SoWd4Cjqr+/vPT8/fde
aytDNpXeb9pVIau4sqLmoWeAUr9fk6KKUGafe+j5IG0CfmL5qouz9EnFEcql
G89ElSNln1yZpU+HAge+eOj5PQEFWm4k/wPl/fxvEQWD8ixV/Z2W0jO/1Z33
ZyYonfxl7528W/P40Es4lDTJqSAjypCBVcCdhQzcPXlZDzmDUgAQMZw3OI7X
Woe1BzmsLnNcm/O0hMD2GdVc0zE/wQntQ9QcJtFzqKDnkNrEstpAO0jNBq5U
HZVF+3qEx9E6eU4GJidlzn8UiAmYZKZU3RqNZRA2HVOfzNBuJTCU0qUKxzM2
vj+J98JqjS1JyrmYtVpZglpI8N2j5pq42O+I8Yx0FbvEM9g4X9FRnBwS+OLO
mHhax2CKHcRUu4zXLo9+gqlkWpbCFZvG1RGIq2N7Cxd5JjgH+fEMk2LIjAvZ
n+OTU50rpsmwiCdY68wqdDrbBHwccwSEC1/NZCNz0/BeT2DARQhUJp9Mntmq
t6alqTJbdzpoMmJNw3ojftggIOZjDuQE28WzyXNbi96nuAJOPK6Qge5oBspO
ZrP5Dm1/v1zG3sex49DFi1Beifan2/s37PxVEsWQnMVdiKBNIFBjDrkTRSb3
SThKUq8uEGFsPFG5j6XcjHzazVYSPP/iYVk2HNdWJ43Bjae45cimVT/N0s+A
MLm36qHnHb7M8OiXaCWNjvstpefvbXzYiwg5tqw1x6fI9QzVxfGTJK9syMIL
laQy8++8Muz4SPIkvBQdgLC9kl3z05fXkw/SIP3zxgeeIzQqbyTP0k+fG8Tp
xlPjFkBgnsylmM+VQKh+cfIglPyakvyNYmbBSHI2POyNlI0uhevJJirgwcMb
T0WXU+tglj5NRcH8oed2GoMofeya2RNN4TKaxiWj/iCnF4GQYP1Vko7uNy7C
Fx27JezfKir0Pdftkr7WGgUF4i6Y46Q9pyU25MIoPtb+dzWHz4i+pMZT1fwj
/wNsCJ7Gho+UjGKjohJio3AUGwavksLG4iA2lgexsZhCwckQNg5AbDT/TTCx
ZhdBTDKQZhkHQTi5WFx4ypNRu6BPwioMTblXKNvHKsxtvdwNjVgUOFtL6rUy
2LEhgWUij5F4wCO/DT3LmvDjsfjneK//2NDrUbjELGPxkUVSauyZYYycP7xR
QGPk/Cwrc6ARjy4/u+r1wT/9HRaa1Ag87stVrHWRxIYXF/Y2ApRJHNfcz0mO
duE8zkDJGiW/MPPX3gjlmEITqlMt1Dw/DxFx4F2ICMF6WKo23J91IfmHLgic
n37ZQMEkCsLknZsHrkNJcm6whG3s4FCTf3GWlYFTlfHO8tIzD9c89JyApe10
483kphCoBTRGIKinBjGCBWvW/xUb52hsvERjAwtjI/J7WRy/cBqfGZ2qZkeI
GWp+kRob2UDpGNhzOowCl9b3VbyrFWNWcb3lapN9+9pqJ4/JhPWOZL6YZ4p0
hIofM6Z6WF1axHRr59KzRtgD6Qo5Cy5+3KHVsqt80n2sQIkykTNl2t2V2Kcf
27vKjGRGRNK2ddLWjfzlswSJfwh8Dtc4ifs9SKydEOyxT8a/z+2TCIvh7AMC
Y5v62ZU583B1vZcdpf5D4BDfY5h6QTCr/Oqvt3bY4wyWm52wGLNIvU0JhReT
qNLN7k5XOKgQABVCE87+W7pcdkQ+Oc1g9I7VtwWQ+Kf1/agrridAHutMC3js
iI0QdASmwJD6YlkVwrDe0Gm58Ine+ED0lGkGwa18CEMGAusfYzocil0Eh9IZ
SOuRCzi5LDOAJbBkfH893NAZQE5anOXYYTG2WobyWSOOWdSGgWHaQ/IHTLLD
aHnXF88UeBiJ1P5eiLRGe0SEbZit4/u1W5H1MO96BtzBX5VvS22GfQtUmHar
Dy7YqXAD2jOhF247Px7t3MaYQmnPfaI9TGnLt4e19cNvp3YcFld+BKKoCCqe
RFAZASPwObQ9vg4ZzvG92g9n2kKAEoiLqQcLeLep3X7BmnFf8ct61gx+ZSnh
FT1atopLN88Ht7ScVTjdvGL6ICQ/OEe4QMl7/PmUI+Ii/u3zf49Ic3ST8y/O
7mmMViHpsbfP35tJRHSqetZcnGSntsnHn5xnlYM3lY9y60jX82WBaEr9yxpN
gFI/8yCBbn6i6aKbjyJp3bqTTUmiaInI7zD4XdLSK1k9vCD//L0JYxf27Tfo
nfjLd+Lnjm60Qgbt7l7tawNjDjVbVkfR4Z35/HdypkjJUmQNTuGt7S/JmTrW
4In91c+9qHxEbSjtb5/8WdlDy+SH9u56IlhzJVw8ycW4yWoGr9swF7vD32yL
2hK8aQMjPHi8CWkss11L3Y6pc6EZHiafh5TKO3WurAzZo+h46vodvFmDt2Fn
DKQfQZofOhuAMf0gJE/9wvf9MKU/RqUAIAydUcKU4mPpAEyH7zwwSml+StAP
9ckjTMP8l+B7HBilYTu1obocpmG/O0Hwy0KYhvmXkGDMe8f4BfD81hUaS5iG
5U+E5E48FeflUPvyU/z7IJizMA3z2dDvBDBKw/x4JKgfpmF+OmyPA6M0zM8N
yeU+Ja9Cgp9hwjScHzBm3tjhcYXuGbFglIb51O93EDP2IGYeUHih7l9SaXVt
dWO1zly9HF7q6mqV8B5H3cbM5qaaDGOzxVjVmFEtLrYajaXzl9YYrdVV9DWu
fGltY3WNUaOwGnWNxrE9tGKNsabK0pJhIaulwUd1Ttac/+BHkyepkmaL88Sa
PF1OjibLlFmlkUpMUk2uKZvMzdbnmXS6TCoQjWJObVNdFa1Et1+26iwWo1Wj
0JnNNKOo2WIdlZlvXKYJX5qLrNY6a4Oxsai5ymihOhc0tpiNFcaGxtnGRk1p
hbG2oc4K1aoWPZFQ6WoNUDM4rpAE5YDOQLD5BjTYaLTW6swhxpNcWWFKaht1
5ozaOjhQXUNGQ1WdxZhhMFaZ4eWdzBATBoMuU6rP1GXm5UiN2ZlVRn2uIUsi
JbPzcnVV2VVSQ1UOacox6ODVXgNv9paq58zUVf/l0iffAf5XXwEylpkzSv5T
1igs/Dtgnr+F
                    "]]|>, "orcInstance" -> 115492320, "orcModuleId" -> 
                    71782000, "targetMachineId" -> 115057600|>, 
                    140147808514592, 140147808514192, 140147808514272, 
                    140147808514048, 
                    
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 128}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "5a0244871d7b04e7", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                  "Loss/SoftProbs" -> <|
                   "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                  "Loss/SoftmaxLayer" -> <|
                   "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                  NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                  NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                  NeuralNetworks`NetPath["Inputs", "Doors"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                  NeuralNetworks`NetPath["Inputs", "Passengers"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                  NeuralNetworks`NetPath["Inputs", "Cargo"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                  NeuralNetworks`NetPath["Inputs", "Safety"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/3", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/4", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Inputs", "Weights"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Inputs", "Weights"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Outputs", "Output"],
                   NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/Harden", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
              NeuralNetworks`NetPath["Inputs", "Cargo"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
              NeuralNetworks`NetPath["Inputs", "Doors"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
              NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
              NeuralNetworks`NetPath["Inputs", "Passengers"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
              NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
              NeuralNetworks`NetPath["Inputs", "Safety"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
           "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
         MachineLearning`MLProcessor["Identity"]|>, 
       "Log" -> <|
        "FunctionMemory" -> 185368, "LanguageVersion" -> {13.1, 0}, "Date" -> 
         DateObject[{2022, 8, 3, 17, 44, 3.111293`7.2455159002190666}, 
           "Instant", "Gregorian", 1.]|>|>], 
    "TestSet" -> <|"Input" -> {{"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "high", "high", 4, 4, "small", "high"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "very high", 4, 2, "large", "low"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "low", 2, 4, "large", "high"}, {
        "low", "high", 3, 4, "small", "low"}, {
        "high", "very high", 3, 4, "medium", "medium"}, {
        "very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "high", "low", 4, 4, "small", "high"}, {
        "very high", "low", 4, 4, "small", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "medium", 3, 2, "small", "low"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "low", "high", 2, 2, "medium", "high"}, {
        "high", "very high", 2, 4, "medium", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "very high", "very high", 2, 4, "small", "high"}, {
        "medium", "very high", 3, 2, "large", "medium"}, {
        "low", "low", 4, 4, "small", "high"}, {
        "medium", "low", 2, 4, "medium", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "low", 2, 4, "large", "high"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "very high", 4, 2, "large", "low"}, {
        "very high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "low", "medium", 2, 2, "small", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "very high", "very high", 4, 4, "small", "high"}, {
        "very high", "very high", 3, 4, "medium", "low"}, {
        "high", "high", 2, 2, "medium", "low"}, {
        "medium", "low", 3, 2, "large", "medium"}, {
        "high", "medium", 2, 2, "small", "high"}, {
        "high", "very high", 3, 2, "large", "low"}, {
        "low", "very high", 3, 2, "medium", "high"}, {
        "low", "low", 2, 4, "medium", "high"}, {
        "low", "medium", 4, 4, "medium", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "low", "high", 2, 2, "large", "high"}, {
        "very high", "medium", 4, 4, "large", "medium"}, {
        "high", "high", 3, 2, "large", "high"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "high", "medium", 2, 2, "medium", "high"}, {
        "very high", "high", 3, 4, "medium", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "low", "high", 3, 2, "small", "medium"}, {
        "high", "low", 3, 2, "small", "medium"}, {
        "low", "very high", 4, 2, "small", "medium"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "low", 2, 2, "large", "low"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "very high", 2, 4, "large", "high"}, {
        "low", "very high", 3, 4, "large", "high"}, {
        "high", "medium", 2, 2, "medium", "low"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {
        "high", "high", 3, 4, "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "high", 3, 4, "large", "high"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "high", "very high", 4, 4, "small", "low"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "low", "high", 4, 2, "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "medium", "low", 2, 4, "large", "medium"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "very high", 4, 4, "large", "medium"}, {
        "high", "low", 3, 2, "medium", "medium"}, {
        "very high", "medium", 2, 4, "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "very high", "low", 4, 4, "large", "low"}, {
        "medium", "medium", 4, 2, "small", "low"}, {
        "very high", "very high", 4, 4, "large", "low"}, {
        "low", "medium", 3, 2, "large", "medium"}, {
        "high", "medium", 2, 4, "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "medium", 3, 2, "large", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 4, 4, "small", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "very high", "low", 4, 4, "small", "low"}, {
        "medium", "high", 3, 4, "medium", "high"}, {
        "very high", "low", 3, 4, "large", "medium"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "medium", 4, 4, "small", "low"}, {
        "high", "very high", 2, 4, "medium", "high"}, {
        "low", "low", 2, 4, "medium", "medium"}, {
        "low", "medium", 4, 4, "small", "medium"}, {
        "high", "low", 4, 4, "medium", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {"medium", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "medium", "low", 2, 4, "large", "low"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "very high", 3, 4, "large", "low"}, {
        "medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "low", 3, 2, "medium", "high"}, {
        "very high", "low", 3, 4, "large", "high"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "low", "medium", 2, 4, "medium", "medium"}, {
        "low", "low", 3, 2, "large", "high"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 3, 4, "medium", "medium"}, {
        "medium", "very high", 4, 4, "large", "low"}, {
        "low", "medium", 4, 2, "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "very high", "high", 4, 2, "large", "low"}, {
        "medium", "medium", 4, 2, "large", "medium"}, {"very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "medium", 3, 2, "medium", "medium"}, {
        "high", "low", 4, 2, "small", "high"}, {
        "low", "medium", 3, 2, "medium", "medium"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "low", "low", 4, 2, "small", "medium"}, {
        "medium", "high", 2, 2, "medium", "high"}, {
        "high", "medium", 2, 4, "large", "low"}, {
        "medium", "high", 3, 2, "small", "medium"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"medium", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "low", 2, 4, "small", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "medium", 4, 2, "medium", "high"}, {
        "medium", "very high", 3, 2, "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "very high", 2, 2, "small", "low"}, {
        "medium", "low", 2, 2, "small", "high"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {
        "very high", "high", 4, 4, "large", "low"}, {
        "medium", "very high", 2, 2, "large", "low"}, {
        "medium", "very high", 3, 4, "small", "medium"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "very high", 4, 2, "medium", "high"}, {
        "very high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "low", 4, 2, "large", "high"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "high", 2, 2, "small", "low"}, {
        "high", "low", 2, 2, "small", "medium"}, {"high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "low", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "very high", "medium", 4, 2, "small", "low"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "medium", "high", 4, 2, "medium", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "high", "high", 2, 4, "medium", "high"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"low", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "medium", "medium", 4, 4, "large", "low"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "high", "high", 2, 4, "large", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "very high", "high", 3, 2, "large", "medium"}, {
        "high", "very high", 3, 2, "small", "medium"}, {
        "very high", "high", 2, 4, "medium", "low"}, {
        "low", "very high", 3, 2, "small", "low"}, {
        "very high", "very high", 4, 4, "small", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "medium", 2, 4, "medium", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "low", "high", 3, 4, "large", "medium"}, {"medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "very high", 4, 2, "small", "medium"}, {
        "medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "medium", "high", 2, 4, "medium", "low"}, {
        "high", "very high", 4, 4, "large", "medium"}, {
        "low", "very high", 3, 2, "large", "high"}, {"low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "very high", 2, 2, "medium", "high"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {
        "medium", "low", 4, 4, "large", "high"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 3, 4, "medium", "low"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "high", 4, 4, "medium", "medium"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "medium", "low", 4, 2, "medium", "high"}, {
        "low", "low", 4, 4, "large", "medium"}, {
        "medium", "medium", 3, 2, "small", "high"}, {
        "very high", "medium", 3, 2, "large", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "very high", "very high", 3, 2, "medium", "medium"}, {
        "medium", "very high", 2, 4, "large", "low"}, {
        "low", "very high", 2, 2, "medium", "low"}, {
        "high", "low", 2, 4, "small", "low"}, {
        "very high", "very high", 2, 2, "large", "medium"}, {
        "medium", "high", 2, 4, "small", "high"}, {
        "very high", "medium", 3, 4, "small", "low"}, {
        "high", "very high", 4, 2, "small", "low"}, {
        "high", "high", 4, 4, "medium", "low"}, {
        "low", "very high", 4, 4, "medium", "high"}, {
        "high", "very high", 3, 2, "medium", "low"}, {
        "very high", "high", 2, 4, "small", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "medium", 2, 4, "large", "medium"}, {
        "very high", "high", 4, 4, "medium", "low"}, {
        "medium", "high", 2, 2, "small", "low"}, {
        "low", "low", 2, 2, "medium", "medium"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "high", "very high", 2, 2, "large", "low"}, {
        "low", "very high", 2, 2, "small", "high"}, {
        "low", "high", 4, 2, "large", "medium"}, {
        "medium", "high", 3, 2, "medium", "medium"}, {
        "very high", "medium", 3, 4, "medium", "low"}, {"low", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "high", "very high", 2, 4, "large", "low"}, {
        "very high", "high", 2, 4, "large", "medium"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "medium", 3, 2, "medium", "high"}, {
        "medium", "high", 4, 2, "medium", "high"}, {
        "low", "very high", 3, 2, "large", "medium"}, {
        "very high", "very high", 3, 2, "medium", "high"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "very high", 3, 2, "medium", "medium"}, {
        "very high", "high", 2, 2, "large", "low"}, {
        "medium", "medium", 2, 4, "small", "high"}, {"very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "low", "low", 3, 2, "medium", "medium"}, {
        "low", "low", 2, 2, "medium", "high"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "low", 4, 4, "medium", "medium"}, {
        "very high", "very high", 4, 4, "large", "high"}, {
        "very high", "very high", 2, 4, "large", "low"}, {
        "low", "very high", 2, 2, "large", "high"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "very high", "medium", 2, 4, "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "high", "low", 3, 2, "small", "low"}, {"very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "low", "low", 4, 2, "medium", "low"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "low", 2, 4, "medium", "medium"}, {
        "high", "high", 4, 2, "small", "medium"}, {
        "low", "low", 4, 2, "small", "low"}, {
        "very high", "very high", 2, 2, "large", "high"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "high", 2, 4, "large", "medium"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "high", 3, 2, "medium", "medium"}, {
        "very high", "low", 3, 2, "small", "medium"}, {
        "high", "very high", 3, 2, "small", "low"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "very high", "high", 2, 4, "small", "low"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "very high", 2, 2, "small", "high"}, {
        "very high", "high", 2, 2, "large", "medium"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {
        "medium", "low", 3, 4, "small", "high"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "low", "low", 3, 4, "small", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {
        "low", "medium", 2, 2, "small", "high"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "high", 3, 4, "large", "low"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "very high", 4, 4, "medium", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 2, 2, "large", "low"}, {
        "medium", "medium", 2, 4, "small", "medium"}, {
        "low", "low", 2, 2, "large", "high"}, {
        "high", "high", 2, 4, "small", "medium"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "very high", 2, 4, "medium", "low"}, {
        "low", "high", 2, 2, "large", "medium"}, {
        "high", "medium", 3, 4, "small", "low"}, {
        "very high", "high", 3, 4, "medium", "medium"}, {
        "very high", "low", 2, 2, "medium", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "low", "high", 2, 4, "medium", "low"}, {
        "very high", "very high", 3, 4, "small", "medium"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"medium", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}}, 
      "Output" -> {
       "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "good", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "good", "very good", 
        "unacceptable", "good", "very good", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "good", "acceptable", "very good", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "very good", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "good", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "very good", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "good", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", "good", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", "acceptable", 
        "good", "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable"}|>, 
    "Predictions" -> {
     "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "good", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "good", "good", "very good", "unacceptable", "good", 
      "very good", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "acceptable", "acceptable", "very good", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", "good", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "very good", "acceptable", "unacceptable",
       "unacceptable", "acceptable", "acceptable", "very good", 
      "unacceptable", "unacceptable", "good", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", "good", 
      "unacceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
      "very good", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "very good", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "good", "good", "unacceptable", "acceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "very good", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "acceptable", "good", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "good", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "very good", "good", "unacceptable", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "good", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "very good", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", "good", 
      "acceptable", "good", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "very good", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "acceptable", "acceptable"}, 
    "LogProbabilities" -> CompressedData["
1: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
8imUx192eZ7C+Vss2Sj4Ksrf/wPlgM7s
     "], "CountMatrix" -> {{244, 0, 0, 1, 0}, {0, 70, 0, 2, 0}, {0, 0, 11, 1, 
     0}, {0, 1, 0, 16, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwV0tlrDwAAwPHfZsNsq21sI3aPbUZjdrl2sFybncbczAMPjhCREnLnXkkp
5CxXrsILOYt4cItSiFwhR45yfPbw6fsPfFOa5tTNDgoEAt9oaTAhhNKaMMKJ
IJIooomhA7HEEU9HEkgkiWRSSCWNdLrSjQwyyaI72eSQSx75FFBIEf3ozwAG
UkwJpZQxiHKGMYIKKqmimhpqqaeBMTQylnGMZwITmcRkpjCVJqYxnRnMZBZz
mcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtb2UYz29nBTnaxmz3s
ZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrXucFNbnGbO9zl
Hvd5wEMe8ZgnPOUZz3nBS17xmje85R3v+cBHPvGZL3zlOz/4yS9+84e//KNl
3CCCaUUIobShLWG0I5wIIokimhjaE0sc8XSiM11IIJEkkkkhlTTSySCTLLLp
QU9y6EVvculDHvkUUEgRfSmmhFLKGEw5QxjKcCqoZCRVVFNDLXXUM4oGRtPI
f2/7ZXI=
       "], {}, {}, {189}, {}}, {{}, {3, 7, 8, 10, 14, 15, 27, 28, 51, 57, 67, 
       70, 73, 77, 84, 86, 100, 102, 105, 106, 111, 112, 116, 119, 122, 124, 
       151, 153, 154, 156, 157, 161, 169, 175, 181, 182, 186, 187, 188, 192, 
       199, 200, 203, 207, 208, 217, 223, 224, 231, 237, 241, 244, 246, 252, 
       262, 270, 271, 280, 282, 294, 298, 302, 315, 317, 322, 328, 330, 343, 
       345, 346}, {}, {110, 127}, {}}, {{}, {}, {46, 49, 71, 101, 107, 131, 
       139, 168, 220, 293, 325}, {149}, {}}, {{}, {69}, {}, {19, 25, 26, 44, 
       45, 48, 82, 125, 148, 206, 221, 228, 251, 276, 314, 316}, {}}}, 
    "ExtendedClasses" -> {"unacceptable", "acceptable", "very good", "good"}, 
    "Weights" -> SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0003212919075144509, "SingleEvaluationTime" -> 
    0.00453125, "Version" -> {13.1, 0}|>]]], "Output",
 CellChangeTimes->{
  3.8684443883703527`*^9, 3.868444628441779*^9, 3.8684447374621*^9, 
   3.868444798788579*^9, {3.8684450567305193`*^9, 3.8684450634502573`*^9}, 
   3.86844514160921*^9, {3.868445216184236*^9, 3.868445245788845*^9}, 
   3.86844550286349*^9, 3.868445684338311*^9, 3.868445860318709*^9, 
   3.868446035571615*^9, 3.8684462387314863`*^9, 3.868446531804*^9, 
   3.868446992824225*^9, 3.868447029560577*^9, 3.8684986039156446`*^9, 
   3.8685204529294043`*^9, 3.8685215146011333`*^9, 3.8685301612497177`*^9, 
   3.868530590591856*^9, 3.86853261496434*^9, 3.8685338436228123`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a90232d0-27e4-4431-8ed6-9b9602750648"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", 
  RowBox[{"Sort", "[", 
   RowBox[{"Counts", "[", "hncwt", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8685205154017143`*^9, 3.8685205173826017`*^9}, {
  3.8685215430577707`*^9, 3.868521549831888*^9}},
 CellLabel->
  "In[162]:=",ExpressionUUID->"4af835ab-ac3c-4673-ba71-f8d94f203ed4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"unacceptable\"\>"}], ",", 
      
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "214"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "82"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "20"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"very good\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"very good\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "11"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"good\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "8"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"good\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"good\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "7"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"very good\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"good\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "2"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"very good\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "1"}], ",", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"good\"\>"}], ",", 
      RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"very good\"\>"}]}], 
     "\[RightAssociation]"}], "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.868520512188271*^9, 3.868520517682494*^9}, {
   3.8685215317152853`*^9, 3.868521550105297*^9}, 3.868531514356105*^9, 
   3.868532265047865*^9, 3.868532954890292*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"f245d176-c25c-481e-adf7-a3dc716ca6ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 3.868447049013842*^9}, {
  3.8684475100383997`*^9, 
  3.868447512030362*^9}},ExpressionUUID->"161daabc-615f-418f-a171-\
832b4a2218d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"be", "=", 
   RowBox[{"HardNetBooleanExpression", "[", 
    RowBox[{"hnf", ",", "inputSize"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bf", "=", 
   RowBox[{"HardNetBooleanFunction", "[", 
    RowBox[{"hnf", ",", "inputSize"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}, {
   3.8684988741865396`*^9, 3.868498874592616*^9}, {3.868499185605513*^9, 
   3.8684992093586597`*^9}, 3.868501716401897*^9, {3.868514975845937*^9, 
   3.868514978733061*^9}, {3.868533857047714*^9, 3.8685338619606743`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt", "=", 
   RowBox[{"HardNetClassify", "[", 
    RowBox[{"bf", ",", "featureLayer", ",", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}], ",", 
     "testData", ",", "\"\<Acceptability\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval", "=", 
  RowBox[{"HardNetClassifyEvaluation", "[", "hncwt", "]"}]}]}], "Input",
 CellChangeTimes->{{3.868518101019845*^9, 3.8685181135715637`*^9}, {
   3.868530047989657*^9, 3.868530063111247*^9}, {3.868530190826717*^9, 
   3.868530196600292*^9}, {3.86853144384466*^9, 3.868531451560924*^9}, {
   3.868532766824644*^9, 3.8685327949413958`*^9}, 3.868532945602283*^9, {
   3.868533874444491*^9, 
   3.8685338747929583`*^9}},ExpressionUUID->"f5f447dd-5588-4178-92cf-\
69aee019ae5a"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.86851514846721*^9, 3.868515162315323*^9}, {
   3.8685152259164333`*^9, 3.868515231696006*^9}, {3.868515347388423*^9, 
   3.868515363754871*^9}, {3.86851541741639*^9, 3.868515431530836*^9}, {
   3.868515509156271*^9, 3.868515511890397*^9}, {3.868515573316112*^9, 
   3.868515579026569*^9}, {3.868515751700666*^9, 3.8685157527942743`*^9}, {
   3.86851583738085*^9, 3.868515839434691*^9}, {3.868515937607679*^9, 
   3.868515939034754*^9}, {3.868516300197514*^9, 3.8685163021781473`*^9}, {
   3.86851635822871*^9, 3.8685163614104424`*^9}, {3.8685174050541363`*^9, 
   3.868517426301255*^9}, {3.86851800475167*^9, 3.868518023027822*^9}, 
   3.8685180968758574`*^9, {3.868518273107486*^9, 3.8685182801196947`*^9}, 
   3.8685338733936577`*^9},ExpressionUUID->"0af5386a-45b5-47ea-ad24-\
ea4b00289a0b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.9075144508670521`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.868518273502015*^9, 3.868518280489999*^9}, 
   3.868518338565795*^9, {3.868518370785715*^9, 3.868518377800254*^9}, 
   3.8685184189914207`*^9, 3.868520470813703*^9, 3.868521526868782*^9, 
   3.868530201393174*^9, 3.868530603832062*^9, 3.868531457621526*^9, 
   3.868532187408174*^9, 3.868532258179199*^9, 3.868532632580673*^9, 
   3.868532949410964*^9},
 CellLabel->
  "Out[161]=",ExpressionUUID->"dfcfa015-4bae-40fa-92a6-0157e5999534"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a91410a-fdc1-4cfe-a437-7a311bcf3ad2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[797, 28, 628, 13, 29, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[CellGroupData[{
Cell[1450, 45, 202, 3, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1655, 50, 26697, 596, 291, "Output",ExpressionUUID->"d92b2653-4301-4f99-94ac-dcbdc92fcffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28389, 651, 204, 4, 69, "Chapter",ExpressionUUID->"3104f7e3-d1cf-444c-857d-f3d3d76d7c7a"],
Cell[CellGroupData[{
Cell[28618, 659, 465, 9, 29, "Input",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],
Cell[29086, 670, 127555, 2371, 652, "Output",ExpressionUUID->"2f2671b6-ff8c-40e2-a600-10268d1fbe8e"]
}, Open  ]],
Cell[156656, 3044, 8493, 202, 37, "Input",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165186, 3251, 317, 5, 69, "Chapter",ExpressionUUID->"fc79f348-c5f7-48d3-80d6-e4dab5b13de8"],
Cell[165506, 3258, 2784, 69, 216, "Input",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],
Cell[168293, 3329, 1798, 40, 257, "Input",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170128, 3374, 355, 6, 69, "Chapter",ExpressionUUID->"1674350a-bfdf-4c15-99d4-bba009f90f57"],
Cell[170486, 3382, 2293, 42, 133, "Input",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],
Cell[172782, 3426, 1441, 26, 32, "Input",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],
Cell[174226, 3454, 1091, 24, 117, "Input",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175354, 3483, 355, 6, 69, "Chapter",ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-772879a58a20"],
Cell[175712, 3491, 1166, 27, 133, "Input",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176915, 3523, 456, 7, 69, "Chapter",ExpressionUUID->"b925ae5d-4091-4d4b-a37f-d801edc11fc9"],
Cell[177374, 3532, 1751, 32, 97, "Input",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],
Cell[CellGroupData[{
Cell[179150, 3568, 855, 13, 29, "Input",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],
Cell[180008, 3583, 199993, 3755, 495, "Output",ExpressionUUID->"a90232d0-27e4-4431-8ed6-9b9602750648"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380038, 7343, 333, 7, 29, "Input",ExpressionUUID->"4af835ab-ac3c-4673-ba71-f8d94f203ed4"],
Cell[380374, 7352, 2703, 63, 87, "Output",ExpressionUUID->"f245d176-c25c-481e-adf7-a3dc716ca6ea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383126, 7421, 507, 8, 69, "Chapter",ExpressionUUID->"161daabc-615f-418f-a171-832b4a2218d6"],
Cell[383636, 7431, 845, 19, 71, "Input",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],
Cell[384484, 7452, 827, 17, 51, "Input",ExpressionUUID->"f5f447dd-5588-4178-92cf-69aee019ae5a"],
Cell[CellGroupData[{
Cell[385336, 7473, 842, 12, 29, "Input",ExpressionUUID->"0af5386a-45b5-47ea-ad24-ea4b00289a0b"],
Cell[386181, 7487, 609, 11, 33, "Output",ExpressionUUID->"dfcfa015-4bae-40fa-92a6-0157e5999534"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

