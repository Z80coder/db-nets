(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1359430,      27399]
NotebookOptionsPosition[   1351954,      27259]
NotebookOutlinePosition[   1352392,      27276]
CellTagsIndexPosition[   1352349,      27273]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learning tabular data", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 
  3.8684260746987667`*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["DifferentiableHardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "DifferentiableHardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardeningLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardeningLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomNormalSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "RandomNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "DifferentiableHardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBalanced", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "InitializeBalanced", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomUniformSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "RandomUniformSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "DifferentiableHardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToOne", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "InitializeBiasToOne", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Require", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "Require", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToZero", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "InitializeBiasToZero", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "SoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeToConstant", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "InitializeToConstant", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClassificationLoss", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralReshapeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralReshapeLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftWeightSize", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "SoftWeightSize", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralCount", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralCount", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SpaceSaving", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "SpaceSaving", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardDropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardDropoutLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralExactlyK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralExactlyK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralLTEK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardNeuralLTEK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["RandomBalancedNormalSoftBits", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5ba811ef-112e-4fc4-8f61-04213cb926f5", {
                   "RandomBalancedNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.86479111604138*^9, 3.8647911657240562`*^9, 3.864791620800887*^9, 
   3.86479194597997*^9, 3.86479198092934*^9, 3.864792204697258*^9, 
   3.864792687703233*^9, 3.864793105592959*^9, 3.864793526801218*^9, 
   3.864793732850697*^9, 3.864794507927494*^9, 3.864796071752219*^9, 
   3.864825438485825*^9, 3.864825531891514*^9, 3.8648260962141314`*^9, 
   3.864830162877289*^9, 3.8648755408909893`*^9, 3.865049480919162*^9, 
   3.865050046751976*^9, 3.865051042066378*^9, 3.8650523426134*^9, 
   3.8650543558693867`*^9, 3.865058337414798*^9, 3.8650584086343327`*^9, 
   3.86505947338*^9, 3.86506885830449*^9, 3.865397062515942*^9, 
   3.86539822002991*^9, 3.865414037240362*^9, 3.865415448442546*^9, 
   3.865415610582356*^9, 3.8654172214829617`*^9, 3.865417469191354*^9, 
   3.865419590403018*^9, 3.865420075554387*^9, 3.865428054175325*^9, 
   3.8654793173710623`*^9, 3.8655665906709213`*^9, 3.865591995941038*^9, 
   3.865658579968223*^9, 3.865772215681147*^9, 3.865779562552833*^9, 
   3.8658370145359364`*^9, 3.86584060155225*^9, 3.8659992094486027`*^9, 
   3.866003652107215*^9, 3.8660161651613417`*^9, 3.8661754677644978`*^9, 
   3.866258657623454*^9, 3.866285693609187*^9, 3.86635057486532*^9, 
   3.866512485808078*^9, 3.866512816932197*^9, 3.866553529720395*^9, 
   3.8666025113336687`*^9, 3.866606144536639*^9, 3.866608546326232*^9, 
   3.866609704076623*^9, 3.8666137219288273`*^9, 3.86671285229326*^9, 
   3.866788776837541*^9, 3.866788812552528*^9, 3.866794689702251*^9, 
   3.8667979035574636`*^9, 3.8667996941084146`*^9, 3.866800686995532*^9, 
   3.866801936715271*^9, 3.866865563143631*^9, 3.8671595128431797`*^9, 
   3.867322056244096*^9, 3.8674794507502613`*^9, 3.8675828633257*^9, 
   3.867669743397482*^9, 3.867732450434094*^9, 3.867751859422694*^9, 
   3.867752571591299*^9, 3.867811509870346*^9, 3.8678117360040903`*^9, 
   3.8678203831872883`*^9, 3.867843695133718*^9, 3.867850373374954*^9, 
   3.86800725388065*^9, 3.868015027015581*^9, 3.868070609148181*^9, 
   3.8680707782820997`*^9, 3.868071504515008*^9, 3.868078566976554*^9, 
   3.868079276409031*^9, 3.8680936161674767`*^9, 3.868332595482695*^9, 
   3.868343297990016*^9, {3.868434780605877*^9, 3.86843479524651*^9}, 
   3.868445566107071*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"cd2722d1-d772-4469-be63-d0eebb069d1d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get data", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 
  3.868426122274289*^9}},ExpressionUUID->"3104f7e3-d1cf-444c-857d-\
f3d3d76d7c7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8684261284499598`*^9, 3.8684261339874697`*^9}, {
   3.868426165551331*^9, 3.868426166147992*^9}, {3.868443501655848*^9, 
   3.868443511617087*^9}, {3.868445089535833*^9, 3.8684450898384523`*^9}, 
   3.8684475343091707`*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          11074601994551025311312673025736676355333299320227221000136], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11074601994551025311312673025736676355333299320227221000136,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868447534840249*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"98c2f6ee-f813-4a1b-9a70-faa6d86edcbb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.868445433613286*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create feature encoders", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 
  3.86843398679764*^9}},ExpressionUUID->"fc79f348-c5f7-48d3-80d6-\
e4dab5b13de8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "featureValues"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"encoders", "=", 
   RowBox[{"Encoders", "[", "trainData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Normal", "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"encoders", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"data", "[", 
      RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868426687511053*^9, 3.868426801572831*^9}, {
   3.8684269173036003`*^9, 3.8684269578937387`*^9}, {3.8684269966730623`*^9, 
   3.868427061846773*^9}, {3.868427135120562*^9, 3.868427173055786*^9}, {
   3.868427218784813*^9, 3.868427313389267*^9}, {3.868427822986774*^9, 
   3.8684278511841917`*^9}, {3.8684280835200367`*^9, 3.868428089883707*^9}, {
   3.868428156521447*^9, 3.8684281614416733`*^9}, {3.8684281955955667`*^9, 
   3.868428284555341*^9}, 3.868434324643379*^9, {3.868434449433856*^9, 
   3.8684344506731787`*^9}, {3.868437882742872*^9, 3.8684378847594643`*^9}, {
   3.868443521427595*^9, 3.86844353043198*^9}, {3.868445371253304*^9, 
   3.868445422686679*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.86843932450987*^9}},ExpressionUUID->"1674350a-bfdf-4c15-99d4-\
bba009f90f57"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numClasses", "=", 
        RowBox[{"Length", "[", "classes", "]"}]}], ",", 
       "classificationLayerSize"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"256", "*", "numClasses"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralNAND", "[", 
          RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardNeuralReshapeLayer", "[", 
          RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868434027583748*^9, 3.868434035787488*^9}, {
   3.8684347252717743`*^9, 3.868434739712077*^9}, {3.8684348123552837`*^9, 
   3.868434889688067*^9}, {3.868436138483499*^9, 3.8684361400155487`*^9}, {
   3.868439429843689*^9, 3.868439430063843*^9}, {3.868439981288126*^9, 
   3.86843999564869*^9}, {3.868440077141582*^9, 3.8684400780122023`*^9}, {
   3.868440461557928*^9, 3.868440463889024*^9}, {3.8684406325500402`*^9, 
   3.868440632800852*^9}, {3.8684407142457123`*^9, 3.868440714673073*^9}, 
   3.8684407820700693`*^9, {3.868441017230885*^9, 3.868441018893251*^9}, {
   3.8684411315833893`*^9, 3.868441133033833*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Catenate\>\"", "->", 
        RowBox[{"CatenateLayer", "[", "]"}]}], ",", 
       RowBox[{"\"\<SoftNet\>\"", "->", "softNet"}]}], 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NetPort", "[", 
            RowBox[{"First", "[", "#", "]"}], "]"}], "->", 
           "\"\<Catenate\>\""}], "&"}], ",", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Normal", "[", "encoders", "]"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Catenate\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], "]"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<PurchasePrice\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<PurchasePrice\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaintenanceCost\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<MaintenanceCost\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Doors\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Doors\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Passengers\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Passengers\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Cargo\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Cargo\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Safety\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Safety\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868436150363471*^9, 3.868436214879616*^9}, {
   3.8684363176157846`*^9, 3.868436401711966*^9}, {3.868436439018614*^9, 
   3.868436449976253*^9}, {3.868436507251442*^9, 3.868436566344318*^9}, {
   3.868436601752877*^9, 3.868436606688592*^9}, {3.8684378203450413`*^9, 
   3.868437848662979*^9}, {3.868438156495153*^9, 3.8684381757432423`*^9}, {
   3.868438230057756*^9, 3.8684382404094887`*^9}, {3.868438312361177*^9, 
   3.868438339094953*^9}, {3.8684384459605*^9, 3.868438454771668*^9}, {
   3.8684385462566147`*^9, 3.8684385862545233`*^9}, {3.8684386245588503`*^9, 
   3.868438717976014*^9}, {3.868438791131241*^9, 3.8684388742400846`*^9}, {
   3.868438957513969*^9, 3.8684389581925077`*^9}, {3.8684390163704367`*^9, 
   3.868439068705132*^9}, {3.868442351137228*^9, 3.868442398109271*^9}, 
   3.8684433338319263`*^9, {3.86844712352503*^9, 
   3.868447133785776*^9}},ExpressionUUID->"d4969fd9-cfe3-4b00-becd-\
a1837d573614"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainableNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
       RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Acceptability\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684424197508583`*^9, 3.868442462956246*^9}, 
   3.8684433239111013`*^9, {3.868447095425324*^9, 
   3.868447102608048*^9}},ExpressionUUID->"7439541b-c071-4819-9fbd-\
8e1e8cfa2b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.868439333949903*^9}},ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-\
772879a58a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "trainableNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 
  3.868447037389845*^9}},ExpressionUUID->"b925ae5d-4091-4d4b-a37f-\
d801edc11fc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedSoftNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<TrainedNet\>\"", "->", 
       RowBox[{"NetDelete", "[", 
        RowBox[{
         RowBox[{"NetFlatten", "[", 
          RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}], ",", 
         "\"\<Loss/Error\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868441715962099*^9, 3.868441726772949*^9}, {
   3.868442062468679*^9, 3.868442075018716*^9}, {3.868442527005735*^9, 
   3.86844256484381*^9}, {3.868442825916274*^9, 3.868442879501833*^9}, {
   3.868442927862575*^9, 3.868442930140501*^9}, {3.868442994108386*^9, 
   3.868442997385559*^9}, {3.868443171305544*^9, 3.868443172008521*^9}, {
   3.868443210207801*^9, 3.86844327444496*^9}, {3.868443832176667*^9, 
   3.868443841549613*^9}, {3.868443968480337*^9, 3.86844397610231*^9}, {
   3.868445156069516*^9, 3.868445169542899*^9}, {3.86844548965233*^9, 
   3.8684454911676607`*^9}, {3.868445524601853*^9, 3.868445525318458*^9}, {
   3.8684457755379953`*^9, 3.8684457785428762`*^9}, {3.868445841953512*^9, 
   3.868445843190568*^9}, {3.868446029551764*^9, 3.8684460319907627`*^9}, {
   3.868446204633617*^9, 3.8684462159667997`*^9}, {3.868446498761023*^9, 
   3.868446502318582*^9}, 3.868446990300243*^9, {3.868447023781098*^9, 
   3.868447024311913*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trainedSoftNet", ",", 
    RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868441761355565*^9, 3.86844176541033*^9}, {
   3.868442023100346*^9, 3.8684420354226837`*^9}, {3.868444107190956*^9, 
   3.868444110989802*^9}, {3.868444188263138*^9, 3.868444188997357*^9}, {
   3.8684443072021*^9, 3.868444343231183*^9}, {3.86844438017598*^9, 
   3.868444387605728*^9}, {3.868444533736438*^9, 3.868444535818205*^9}, {
   3.868444625239705*^9, 3.868444635677659*^9}, {3.8684447356698933`*^9, 
   3.8684447565897284`*^9}, 3.86844479804601*^9, {3.868445054584428*^9, 
   3.868445061735847*^9}, {3.868447028248465*^9, 3.868447028907001*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classifier method"], 
                   TextCell["Classifier method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "Net",ExpressionUUID->"5536202e-a653-4c08-8871-70b208a1ba40"],
                
                TextCell["Net"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "346"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"98.6", "0.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    98.5549132947976858077`3., 0.6425050497397866156`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"69.4", "2.5"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    69.3641618497109817554`3., 2.4818350129436712592`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Geometric mean of probabilities"], 
                   TextCell["Geometric mean of probabilities"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9405450611959182972`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0219486023417738707`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.8966478565123705557`3.", "\", \"", 
                   "0.9844422658794660386`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.8966478565123705557`3., 
                   ", ", 0.9844422658794660386`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.0612957194314105377`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0233339279953562288`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0146278634406980801`3.", "\", \"", 
                   "0.1079635754221229954`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0146278634406980801`3., 
                   ", ", 0.1079635754221229954`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"4.`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"2.36`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNK7wtlOvuV/609W6lk6ZvpL+wtrflZOK/f
ItkcZyuOP3IVb+3fz911V8Hqlf1uwUcHciwe4lSvrLFHmNHtnb1upP8iaZe3
9nffq3mwKLyEyz+sElnn/hDmDgYGEd6Liqkv39qnrQ3L0Hz22v54+oYTxyY+
xWnOu+2lDs1fX9s7VRfd3nfksf0CRzvrjcX7CdpLLA0ARQJvLQ==
                  "], {{0, 0}, {4, 4}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["78", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "78", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9873417721518988`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9873417721518988`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9873417721518988`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{78, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9873417721518988}], 
                    Row[{"Recall = ", 0.9873417721518988}], 
                    Row[{"FScore = ", 0.9873417721518988}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.012658227848101266`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004166666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.012658227848101266`}], 
                    Row[{"Row fraction = ", 0.004166666666666667}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.004219409282700422`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.012658227848101266`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.004219409282700422}], 
                    Row[{"Row fraction = ", 0.012658227848101266`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["236", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "236", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9957805907172996`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9833333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9895178197064991`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{236, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9957805907172996}], 
                    Row[{"Recall = ", 0.9833333333333333}], 
                    Row[{"FScore = ", 0.9895178197064991}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.14285714285714285`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.008333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.14285714285714285`}], 
                    Row[{"Row fraction = ", 0.008333333333333333}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.923076923076923`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{12, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8571428571428571}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.923076923076923}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.0625`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.004166666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.0625}], 
                    Row[{"Row fraction = ", 0.004166666666666667}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["15", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "15", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9375`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.967741935483871`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{15, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9375}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.967741935483871}]}], "Tooltip"]& ]}, 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "79", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9873417721518988`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{79, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9873417721518988}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "240", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9833333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{240, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9833333333333333}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "15", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{15, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "79", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9873417721518988`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{79, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9873417721518988}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "237", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9957805907172996`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{237, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 0.9957805907172996}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8571428571428571}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9375`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{16, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 0.9375}]}], "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["79", TraditionalForm]}, {2.5, 
                    FormBox["240", TraditionalForm]}, {1.5, 
                    FormBox["12", TraditionalForm]}, {0.5, 
                    FormBox["15", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["79", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["237", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["14", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["16", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->212.4,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[<|
   "Model" -> ClassifierFunction[<|
      "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "PurchasePrice" -> <|"Type" -> "Expression"|>, 
              "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
              "Doors" -> <|"Type" -> "Expression"|>, 
              "Passengers" -> <|"Type" -> "Expression"|>, 
              "Cargo" -> <|"Type" -> "Expression"|>, 
              "Safety" -> <|"Type" -> "Expression"|>|>, 
            "Output" -> <|
             "PurchasePrice" -> <|"Type" -> "Expression"|>, 
              "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
              "Doors" -> <|"Type" -> "Expression"|>, 
              "Passengers" -> <|"Type" -> "Expression"|>, 
              "Cargo" -> <|"Type" -> "Expression"|>, 
              "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
            MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> False,
             "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
         "Processor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
         "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
         "Marginal" -> <|
          "acceptable" -> 0.25, "unacceptable" -> 0.25, "good" -> 0.25, 
           "very good" -> 0.25|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {4, 5}, 0., {
         1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       Automatic, "BatchProcessing" -> 
       MachineLearning`PackageScope`$BatchProcessing, 
       "Model" -> <|
        "Method" -> "Net", "Net" -> 
         NetGraph[<|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "PurchasePrice" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"high", "low", "medium", "very high"}, 
                 "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                 "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                 "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"medium", "low", "high", "very high"}, 
                 "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                 "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                 "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
              NetEncoder["Class", <|"Labels" -> {4, 2, 3, 
                   Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                  "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                 "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
              NetEncoder["Class", <|"Labels" -> {
                   Interval[{5, 
                    DirectedInfinity[1]}], 2, 4}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"medium", "small", "large"}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"medium", "high", "low"}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
            "Outputs" -> <|
             "Output" -> 
              NetDecoder[
               "Class", <|
                "Labels" -> {
                  "acceptable", "unacceptable", "good", "very good"}, 
                 "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 4, 
                 "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, "Nodes" -> 
            <|"TrainedNet" -> <|
               "Type" -> "Graph", 
                "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                  NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                  NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "Net/SoftNet/1" -> <|
                   "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
/3qbjTWLOhyfX4INqB4urZ/jrBw9hCyzPEJvXVFPR+zXQ+lPJWDmyGEkVsyG
3rvzE1KK6PEl29CSzxPAvTaTtpg2XriGuodC9keip0N7o/sPF9ILTbT5n+5o
kOtVFsLpbePhyTcNCitL13WXGN13ZCqjJQnqonz+yhYaa5llHu3fJq508DAT
T7sqIbDVtULX+PtQ3fKjwrX7Y0Rk2ULJjnDIGxSICku2onO2JnBO5hTteUYa
NaEMtJywJT0mHEVt4c88zaiMcExgbZo9APhCW3bOaxT0IlFAiu0RdE49j4j3
8YKv+z6A0od4wTSpaLSsNlFQ9TVZ8P3LSLCoSxTsuL5T8N3UjY6KiRJc+p4o
MOB6ULi996c99HL3UUy/0vsmt36/ZdTvx4J6oo4ol7Ji/C/H6mlt62+qmqq0
YeOb3iRWjEeZJJIU9sVH4hhaMlEWSiSWohnLZqL30y+h2MMBiK276N+fKu60
gWJ9lqHxaeRFBznASIZJUzb3diI7J2eKjbFsnByIfOcNQqx/7qAcqK26ydju
bsoUG1u0/B0T+3n/h5r9eOZ39qZ4h9eaPkTrHJuw8Uc/2a962K7PbK7akWev
1P1x/KvGiVFXqn99zvhfOHicR+Xltp//39T8fp0/d3kQYOIf8yjWXtVjDHVw
dxlMfqQkwFrjWAf7qnQF3++GAFtTGSXH6InGUUy76vFjGC3vYQ39BrmLmDWM
R/WM0GBsEzUehTX81NV2NZlFcxk95OYoYP3UYwEQPPqAgM2NrtdCmYHbYMct
Cl2ccR5dyv7EaPUZEuEc1kGBdVysmBemPZGztB5i67G+SxEwOa6wP7D+bZ9q
qat0eAwzx01h+tX/eSJ3hvOEvz5+VxVbf5fauczl//XZQUek1fKoqJYVv4zh
44XTqWFbA+BnJlS1xhc1hcDeo1qQJZYFXbZFo2yjfUz+QfdMKO5ViiaZlqBp
3ULRJ9dbaJG0C8K5I47PaZb14x6Q7/2LaFMDV3TuuTvKtJ1AX+KOQQoPHqEA
IwPUODQeXQvrimbldUIf1vdg2i52HkdijZSoIquX9KMffufzE7z/+3fS2jJh
jQXFOfSQ6Yf+t9zBjvaH/I1RDJri9lzW/plEnxayv29r7aDjWxg6C9v31A2G
t1XHAYRxpYHBcDDKllav2UuXjPxCD9ykQcxUk6Qf7VVAb8J5/I/He9JRnfoy
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
RQf4L2nOw/hKhyNBcx1d4KsNGyCU9d70uYZi+k2nsc/1uH3/IcTx8hR7NMvo
AqqeY4d4q5dDbJo9Kn/WSBtV9wavODuEc0yx92AKq066OcV5Fx/aoYWLXSE4
0Rj1jbVHpxUe0SmGF5CstSIaHrScwooJp1L4Ff4eaMYJS7QgUxksnjwkuRrG
WPhGnEeMUIT4V5+Q1XYNmJABNMw4iWo/HkJSr3vD4uoQcCjfhTrH+SOFye/p
oyafkO4CG5hanA2ti8bBnRJvcAk4jJrk8+Dr7nngbbAIbBQHwxbF2eC95AgE
Lq9Elqoh8K3XAnJERgTqX6ECZzYcssWKeSjat7kYUxQfQS95m07j+HjcYyHn
fxjbi8o2iYGRlhb0qdd5NK7VZ54Xnts4m1wmrfePc5uC9Jjfzl1Oyuj+Mib8
mgzrrXzsQX4vzIczDwqFWP+ORuIGiotH6Aro9rUhyw2RY/ANxOX8wNtsfeeE
dRCwOoEYr4H/MzCBOC2bQKBVR9n81alkolgmgVg8eAiZXyagsGLeHuwujvH9
gmUJRJ4dEJwXPVdATRu2AdbP7wI3EnciasM72u16mvBUXgSNfcw+a1lk830l
7dU1FxpLJyLsTdBoGxf44wst3ayOXCytoP8Ma+GPuV3YMcm6EajmvRS95dt2
JHdeHsa6HRVyvPvug7BqysWTnNfPWgvOQl80ZdMepLRIHQ2aOR7t0VZC62fo
ISnXH3Sp53n0v5yXJhzaTMYJJ//HeeuVrN3s9kl4ue9/+nwmJpYZSS0t7Tj+
qaQEdTLU5z8uM0/U9/JgLr/07F5xL1xP/vk/DjeMARMtmk9jNbvRphwVEhms
VjYW0RkKJ5Ca6hZxTf70cbRA2gCUSwzg0cIkdLRuGG22OhENtRgNHK1VV0is
XrvsYeu+LeDxZhQwT8ezOfbT1UaD3+GBrOKa5Ifp4rHz8tTgXbA963fr0Q8e
8Nei7kqliE/ViOkZOJVqn9e/q4P2+XwkjW5MnQYZueZsfv7TRD5Xa7+d0puY
DnPuqHVt72GoH3lqK1P567WAQdILcqhw6i/+KV1VW8yjdRsorLdrZ1Gc93fW
dfYht/YO5Unkh/Nm0+G893nhPJwX6UeKl9Ntj4BqDB4LHO93CKjx3w3pmJvJ
wkVPVtDh0rdRWPYzNNG5G/rkYggj371B+46bof2iGi+nBg15PghCh6hDL5iF
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
+Nc=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{21504}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {21504}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{21504}, NeuralNetworks`AtomT]|>|>,
                   "Net/SoftNet/2" -> <|
                   "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1024}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/3" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {21504}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{21504}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{21504}, NeuralNetworks`AtomT]|>|>,
                   "Net/SoftNet/4" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/5" -> <|
                   "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1024, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{21504}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "Net/Catenate" -> <|
                   "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                  "Net/SoftNet/6" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{1024, 21}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/7" -> <|
                   "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 21}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/8" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/9" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/10" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>|>, 
                  "Net/SoftNet/11" -> <|
                   "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                  "Loss/Harden" -> <|
                   "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b2f8dc72_2699_4e3f_8e10_456434a9c3c6", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
X64iv31ouBVcUizunCCAPYNV1g9GquXFngYlJAk3RlvKB+fAMjxmegMjmvCN
0nyIqK/ROu/jBvD27/GSuNo5qoLQ0ea8/I4hvyaQ56+jlq8x0O3R6NAADNqH
Z8qfIO85hLNqzynQELRT3JIHa8KTRL7dqJCF6puOYzXcqjj9je2I7b2XvHGp
11oCfv9mKKHk0YBtw9zU7Ore8SZdX6wL+1cmcx2y9xb6qN3buE7e+Vl4hiyW
825yMMKfy+2He8AZlY1yi9UFsAzIx532jTBw2hlRuPm1gkqoFlf5sJg+hIvd
DhLet6Mdxg3wz6Zqg8kbqumDpTlhdgowuwmo1A/GtgblLint+V28PrytfQ84
Skzl8By9YcFe7/n/Fb9u4PHrOWGOuWDAhCnHy3mT9wksi01mJv/suSf6uxk/
/+e7aMVvkQF79iTPLPH8Ofp48ibPn3cEJEcvcSqXbJsno03/e93V6CF5vFnu
c4lsG+3crV0nb34oOL/HzPElFozex+S3y4eudta7H7Rv/lXicXVPY6JFsfve
0hX0E9qyf041ikvPx5pdu/sL2eLO3eDTfUd6kmVbhF/frvlgouxvdH/ny/1V
Ynkz+i/3g3woMR501rmH2XItfiRN7z35OlRx9W29+yV7f2Jg971tDynn3nIn
nCuM3SOXF9zfZWbdIz1HPjv/arCZ9WrSdm6KzF+25RPvLOvHt1fEpZmUi1KW
RZL5j2/TZC7bzk/oP1Kntw3N/lON/NRw9KNxHjO4xfGT+o+06kWcT96W/rKr
57Y8saGM/q22LOpOjbiNQeGeNU4n18iHzicO97FbDdNncB8q8vpPy7qP/HhT
XGqnhWi8e1587vUOM+vFSYDK+seAlBy7QD5758EOs1/769zfBQOF8h1/AfYR
BPa3FHsfywuuRJpda0DYm97cYeZ44Bvx+M1/YWPYN+6xj9Z1KX/sY5voAn4P
g2/3s3sQpg9DnfrZJeMzaS4yxv5t5xdaaJ85HvGXe/lCyQSGuQXn7PFhmWXK
lt/Dza7dl5wjW5yQ7zC79haNf+LmHrPcB4Q0u+tfdwzBG2sFzrcakKNg3sDS
pEiLd8qtFlEb/c/IlAqlIcswEF0ZHv4eGz9RueP0rfRfX8MYv+FDdDnXvB1+
HG6WW4ghhSjs2XPz/emr4rbdlsCrpMeRGy8o69z/nth/JJopQcze+yC2fnjP
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
nUaZpp9XpeO6T7cVXbVN/3zV9p3mqu2vbny9bGZIM404qDqhVnpMv8ZKOqEK
kdgJJLoZE3cONHd+X+kXLSgX3BGZUucjSp4CJddT7D2baTE0UlLRfHR8+giN
RPIxtl1CZ5A46PL4YixlLMnlFotbouMioWUz1xvhx30LpRO32Zprt9FIAk8W
nTJOitGPTVifji7alorw07ufL9rOYx8stUo2rSLYJ6DHZb4qnV6uXyW68tnM
vZPMktanak69ZlIXUrOpsVU6JfMGk50R0ySfr7J6aI6uBrAvllpRJrWJ1Kde
QQW0ZjLi/I3W2TP/8dc3R9c1Iz5fqZ2BX1FlAe/OLGIZZDN3Z6HrmqJ9XM62
rZF62dRdwPFZl1KW+CByRZ6aeULYz2Aes16R6ojsX1+9K7EqmlRuTH2o6r4D
3TYVZ+WydKkUMobR9VUHXsR30b71lgnoCGx/fHjgyN/Nqjt5X7qOPLxU9ym8
iUZsqze0fkIHAWn70c6875MVpCcbenLTBsqO479kBvTcapAXNCjKWhzwEwnt
dqc6FoZtXqLl9im0xjkw7gstN/uK/vw0zlbhStKRwz3X0Wk136O2o/YmX3NG
73VfT8tYtYJ0JKznRlr9w5H7kIc6lGKFrIhmOo7V0nv5p29hyLA64ggbvot4
rvVOF+88By85yHlGFGJLs//2UNPttNrgwuWkJw2tN1pWj2M12CbU3DV0lKQp
YpYqyhaofjkWp/UnhirKpgjRYbiA9vyGuoVy3gM1B4ca0fGT1z+g0XM6eePR
PDE1tl28G0QprotnR8wd28mrIY4jLD3tvnlimctOI8GL/OG6G2knDtsQO++t
ecMd8fro15t9Fe1xp9Hv0eeN0TDVQMKWYzBK0+1O/OeHc027unjT2KpflRZs
VM7t4tGJkyIb1oUATWzv1tsNlkBTzoY656gFOsSPkZVNieEej//BkgscKl3R
nig6ARtTtxoxFgSynqISb9MgOmO6B0kMnUH+Af0YHr8BHQV7MVJKKQrZh8kw
R8wGhezJdMTARICWkFLlvDg5bxqZOKjU76hE57uWgpYsbb+ZxlmOCk15ab4b
UaH/eprvJiEgcKr6etr61C0jGKNB0gT0M6XaMXT3ci23vJN1CZ1zkiaTnAMP
oJ33eYfbnQOP4KUrQKkjTmm7/Sl5Yti3ozfWQxWyFrRfPv+kn2SUAtUUdPKm
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
M+G/DERF1kh1IvzG/wHScOJE
                    "]]|>, "orcInstance" -> 105344832, "orcModuleId" -> 
                    80475552, "targetMachineId" -> 104719680|>, 
                    139796469868368, 139796469868224, 139796469868304, 
                    139796469862400, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_11be13c5_be87_4595_8fff_3d5281c5be4b", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
axQW/h2MP8AM
                    "]]|>, "orcInstance" -> 105817376, "orcModuleId" -> 
                    70999952, "targetMachineId" -> 107271696|>, 
                    139796469854752, 139796469854352, 139796469854432, 
                    139796469854208, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 256}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "09999b5a127a5cf4", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                  "Loss/SoftProbs" -> <|
                   "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                  "Loss/SoftmaxLayer" -> <|
                   "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Inputs", "Input1"] -> 
                  NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Inputs", "Input2"] -> 
                  NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Inputs", "Input3"] -> 
                  NeuralNetworks`NetPath["Inputs", "Doors"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Inputs", "Input4"] -> 
                  NeuralNetworks`NetPath["Inputs", "Passengers"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Inputs", "Input5"] -> 
                  NeuralNetworks`NetPath["Inputs", "Cargo"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Inputs", "Input6"] -> 
                  NeuralNetworks`NetPath["Inputs", "Safety"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/3", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/4", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Inputs", "Weights"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Inputs", "Weights"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/Catenate", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/Harden", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
              NeuralNetworks`NetPath["Inputs", "Cargo"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
              NeuralNetworks`NetPath["Inputs", "Doors"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
              NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
              NeuralNetworks`NetPath["Inputs", "Passengers"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
              NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
              NeuralNetworks`NetPath["Inputs", "Safety"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
           "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
         MachineLearning`MLProcessor["Identity"]|>, 
       "Log" -> <|
        "FunctionMemory" -> 224736, "LanguageVersion" -> {13.1, 0}, "Date" -> 
         DateObject[{2022, 8, 2, 17, 37, 9.170033`7.714945885264198}, 
           "Instant", "Gregorian", 1.]|>|>], 
    "TestSet" -> <|"Input" -> {{"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {
        "medium", "medium", 3, 2, "small", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {"medium", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "medium", 2, 2, "small", "high"}, {
        "high", "very high", 3, 2, "medium", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {
        "very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "very high", "low", 4, 4, "large", "medium"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "low", "very high", 2, 2, "small", "high"}, {"low", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "very high", 4, 4, "medium", "low"}, {
        "medium", "high", 2, 4, "small", "high"}, {
        "medium", "very high", 4, 4, "medium", "high"}, {
        "low", "low", 3, 4, "small", "low"}, {
        "medium", "high", 2, 2, "medium", "low"}, {
        "low", "low", 2, 2, "small", "high"}, {"medium", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"very high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "low", "very high", 2, 2, "medium", "low"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "high", "high", 3, 2, "large", "low"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "very high", "very high", 4, 2, "small", "high"}, {
        "very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "low", "very high", 2, 4, "large", "low"}, {
        "very high", "low", 4, 2, "medium", "low"}, {"medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "low", "high", 4, 4, "medium", "low"}, {
        "high", "high", 4, 2, "small", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "high", "low", 2, 2, "medium", "medium"}, {
        "low", "medium", 3, 4, "large", "low"}, {
        "medium", "low", 4, 4, "small", "high"}, {
        "high", "high", 3, 4, "small", "medium"}, {
        "very high", "medium", 4, 2, "large", "low"}, {
        "medium", "high", 3, 4, "large", "high"}, {
        "high", "very high", 2, 4, "medium", "low"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "very high", "high", 4, 2, "small", "high"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "medium", 3, 2, "medium", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"medium", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "medium", 2, 4, "small", "low"}, {
        "low", "very high", 2, 2, "large", "low"}, {
        "low", "low", 4, 4, "large", "low"}, {
        "medium", "medium", 3, 4, "medium", "high"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {
        "medium", "high", 2, 2, "small", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "high", 3, 2, "large", "low"}, {
        "low", "low", 2, 4, "small", "low"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "low", "low", 3, 2, "small", "high"}, {
        "medium", "high", 3, 2, "medium", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "high", "very high", 3, 4, "small", "high"}, {
        "very high", "very high", 4, 2, "large", "medium"}, {
        "very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "low", 3, 4, "large", "high"}, {"low", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {
        "very high", "very high", 3, 2, "small", "high"}, {
        "very high", "very high", 3, 4, "small", "low"}, {
        "low", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "very high", "medium", 2, 2, "small", "low"}, {
        "low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "medium", 2, 2, "large", "medium"}, {
        "high", "very high", 2, 4, "small", "medium"}, {
        "very high", "very high", 3, 4, "medium", "medium"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "low", 2, 4, "medium", "low"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "low", "medium", 3, 2, "large", "high"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "low", 3, 2, "large", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "medium", 2, 4, "medium", "medium"}, {
        "high", "medium", 2, 2, "large", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "high", 3, 4, "small", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "high", "medium", 4, 2, "medium", "high"}, {
        "low", "low", 4, 4, "medium", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "medium", "very high", 4, 2, "medium", "medium"}, {
        "low", "medium", 3, 4, "small", "high"}, {
        "very high", "very high", 4, 4, "small", "low"}, {
        "medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "very high", 4, 4, "medium", "medium"}, {
        "very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "low", 3, 2, "small", "low"}, {
        "low", "low", 4, 2, "large", "low"}, {
        "low", "low", 3, 2, "small", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {
        "low", "low", 4, 4, "small", "high"}, {
        "high", "low", 3, 2, "large", "high"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "very high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"medium", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "medium", "high", 4, 4, "medium", "low"}, {
        "high", "high", 2, 4, "medium", "medium"}, {"medium", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "medium", 3, 2, "small", "medium"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "medium", "very high", 4, 2, "large", "high"}, {
        "very high", "very high", 4, 4, "small", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "high", 4, 4, "large", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {"medium", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "medium", 3, 4, "small", "high"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "very high", 2, 2, "large", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {
        "high", "medium", 2, 4, "large", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "medium", "very high", 2, 4, "large", "low"}, {
        "very high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "medium", 3, 2, "large", "low"}, {"medium", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "high", 3, 2, "small", "high"}, {"high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "high", "low", 2, 2, "small", "high"}, {
        "medium", "medium", 4, 4, "large", "high"}, {"medium", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "very high", "medium", 3, 2, "large", "medium"}, {"medium", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "high", 2, 4, "large", "medium"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"low", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "low", 4, 2, "small", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "low", 4, 2, "small", "high"}, {
        "very high", "medium", 2, 4, "medium", "low"}, {
        "high", "low", 2, 4, "small", "medium"}, {
        "high", "low", 2, 2, "small", "low"}, {
        "low", "low", 2, 2, "small", "medium"}, {
        "high", "high", 3, 4, "large", "medium"}, {
        "low", "low", 3, 2, "large", "medium"}, {"low", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "high", 4, 4, "small", "medium"}, {
        "low", "high", 2, 4, "small", "medium"}, {
        "low", "high", 4, 4, "small", "medium"}, {
        "low", "medium", 3, 4, "large", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "medium", "medium", 4, 2, "small", "high"}, {"low", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "low", 2, 4, "small", "low"}, {"medium", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "low", 3, 4, "large", "high"}, {
        "high", "medium", 3, 4, "small", "high"}, {
        "very high", "very high", 4, 4, "large", "medium"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "very high", 4, 2, "large", "low"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "low", 2, 4, "medium", "low"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "low", "very high", 3, 4, "small", "medium"}, {
        "low", "low", 4, 4, "medium", "high"}, {
        "very high", "very high", 2, 2, "small", "low"}, {
        "very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "medium", "high", 4, 2, "medium", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "very high", 2, 2, "small", "high"}, {
        "low", "low", 4, 4, "large", "medium"}, {
        "medium", "low", 2, 2, "medium", "high"}, {
        "high", "low", 4, 4, "medium", "low"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "high", 2, 2, "small", "low"}, {
        "medium", "very high", 3, 2, "medium", "medium"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "low", "medium", 3, 4, "large", "high"}, {
        "very high", "high", 4, 4, "large", "low"}, {
        "low", "high", 2, 2, "medium", "low"}, {
        "high", "medium", 3, 4, "medium", "medium"}, {
        "medium", "very high", 3, 2, "large", "medium"}, {
        "very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "medium", 2, 2, "medium", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "low", 2, 4, "medium", "high"}, {
        "high", "medium", 4, 2, "large", "medium"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "medium", 2, 2, "medium", "low"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "medium", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "very high", 4, 4, "small", "medium"}, {
        "medium", "high", 2, 4, "small", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 2, 2, "large", "high"}, {
        "low", "low", 4, 2, "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "medium", 3, 4, "large", "high"}, {
        "low", "medium", 4, 2, "small", "high"}, {"medium", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "low", "medium", 2, 4, "large", "medium"}, {"medium", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"medium", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "high", "very high", 3, 2, "large", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "medium", 2, 4, "small", "low"}, {"very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "high", 2, 2, "large", "medium"}, {
        "medium", "very high", 3, 2, "large", "high"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "low", "medium", 4, 2, "large", "medium"}, {
        "medium", "medium", 3, 2, "small", "low"}, {
        "low", "medium", 2, 2, "small", "low"}, {"very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "very high", "medium", 2, 4, "large", "high"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "high", 2, 2, "medium", "high"}, {
        "low", "very high", 2, 4, "large", "high"}, {
        "high", "very high", 3, 2, "large", "high"}, {
        "very high", "medium", 4, 2, "small", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "high", "high", 4, 4, "medium", "medium"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "very high", "low", 2, 4, "large", "low"}, {"high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"medium", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "low", "high", 3, 4, "large", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {
        "high", "medium", 3, 4, "large", "high"}, {
        "low", "high", 4, 2, "medium", "low"}, {"high", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "medium", "low", 3, 2, "large", "high"}, {
        "high", "low", 4, 2, "small", "low"}, {
        "high", "high", 3, 2, "large", "high"}, {
        "medium", "medium", 2, 4, "small", "medium"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "medium", 3, 2, "large", "low"}, {
        "medium", "high", 3, 4, "small", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "medium", 3, 4, "medium", "low"}, {
        "high", "medium", 4, 4, "large", "medium"}, {
        "high", "medium", 2, 4, "medium", "medium"}, {
        "very high", "very high", 4, 2, "medium", "high"}, {
        "medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "medium", "high", 3, 2, "large", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {
        "very high", "low", 3, 4, "large", "medium"}, {
        "low", "high", 3, 2, "large", "high"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"medium", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "low", "high", 3, 2, "small", "high"}, {
        "medium", "low", 3, 4, "large", "medium"}, {
        "very high", "medium", 3, 2, "medium", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "very high", "very high", 2, 2, "small", "medium"}, {
        "low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "very high", 3, 4, "small", "medium"}, {
        "very high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "low", 2, 4, "medium", "high"}, {
        "low", "medium", 2, 2, "large", "low"}, {"very high", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "low", "low", 4, 2, "medium", "high"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "low", 3, 4, "medium", "medium"}, {
        "low", "very high", 2, 2, "small", "low"}, {
        "medium", "medium", 4, 4, "large", "low"}, {
        "low", "very high", 4, 4, "large", "low"}, {
        "high", "medium", 3, 2, "large", "high"}, {
        "high", "medium", 3, 2, "medium", "high"}, {
        "high", "high", 3, 2, "medium", "medium"}, {
        "medium", "medium", 3, 4, "medium", "medium"}}, 
      "Output" -> {
       "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
        "acceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "very good", "very good", "very good", "unacceptable", "unacceptable",
         "unacceptable", "very good", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", "good", 
        "unacceptable", "acceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "good", "very good", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "acceptable", "unacceptable", "good", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "very good", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "good", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable"}|>, 
    "Predictions" -> {
     "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "acceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
      "acceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "very good", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "good", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", "good", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "very good", "very good", "very good", 
      "unacceptable", "unacceptable", "unacceptable", "very good", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "good", "unacceptable", "unacceptable", 
      "good", "unacceptable", "acceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "good", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "very good", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "acceptable", "unacceptable", "very good", "acceptable", "unacceptable",
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "good", "very good", 
      "unacceptable", "very good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "very good", 
      "unacceptable", "acceptable", "unacceptable", "good", "unacceptable", 
      "unacceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "very good", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "very good", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "unacceptable", "very good", "acceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", "good", 
      "good", "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "very good", "unacceptable", "acceptable", "unacceptable",
       "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "acceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "very good", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable"}, 
    "LogProbabilities" -> CompressedData["
1:eJx1Wnk4Vd0XvqZEKk0kipDIWNccmcs8pMGQ0mBIkaQUQoYQGpQyZUqzFKlU
7j07kSFDqBRFKSIRopHub+1z7/me7/E9P//s51z3nrP3Wu9617vWOou37Vnr
wU2j0Vy4aDReWAXfzfTh7+ZBv/VW7hzQvUscXNMwkBOqi6iV8duS5um5Ar1w
lrQ9+MWMmRv3ODwtzQhV1nYQdXWr0Vy/zoi0tOXob4HzhU0eTswv+dsR/r/d
JnVDOt0E7d6raaRR6kDoSPeEf6qXQFH7HR8l0aRQX9cp9zn1aihJsOwVb/d+
4lPc+QvSO1WQW3OAwZxsMWTDvcK4c5cI8qpMotHpWsjixR8WfX4rQ7FtGtzX
DF1okjb09LREPFGH4BTGiEX+3Sw7mTkP/m+DKhvE4HNHxGs9+uPlsXFidlxt
h+spRZSvkrVQ+1gVod4o2vHohwI6mF8bTqOpo8jjRdlFdxcz39Ni4FoPva9N
ptXX6SGHqaYZnvLRhM0WZxVz/TnoicsUtcILYkhLylCoVIOOHq6Y+0gZzhPx
xGDrYbDTfa+jSUXvNAmx0uvlpz3lUOPwVVZamgZq2tvDKk8dZ/TfHTGg0UzR
ge69EZ6epihsjSfYVxPpF46xvhX3MZwzN8BZjFB/tCOqqzNHP21+za+vU0KL
Vw2VceddYs4Xrp9Go4Hd9D8L0ul05H3SCeyvj8L+wvEvmzDoi9i/q2g2Aj9Y
IfGj0Xoxxn5E5Ocrtko+IuhzauDSwxkKyHfJojPMenXkarNw6Z09ysSGmz/2
3k1bjLbeEPNfSJNHfLO49tjTZRBLjneWl6cKKkpHtncacpjUtUL8fQFsn1s0
9jlonD8k8Q42YoN0nduJtDQb9LDFIQbjZ/ZjgwKdsFPMj8MbBPDvu8djedLT
dFB6QHJzJ5zvts4CHz36SvQko+rFddiHU6/dLdnnMsRQ8s4K18vJRJ1Xg/Pl
2cIoPd6pMFZPBjmzzr+8yqv2n+cPmM8Gv1mj6GO/s9PSHBDfXCM1mwwxZDf+
PcSc7kps8thgkwN4ymuKkuOpN0Y309QE9j6SIbai+Ec34LkCTQvd/cEfmiN8
7oKAixOeP2ov5ScQoj8GHXdfFkPmLbsctQNF0Pc8K8cpRnOQRdiZGwHbNAme
fTMrFQEHyudXwSqPPvcc3RYK5/5lUteVAvs+22Yj2p2STJy86vOzVUsL7Zml
FjRt1yrkm9hv8O/9M0ofw7Ut+sHfL0mn26MJqcGOb2rahH7M4e01sD9qjTsY
tGUb+Me29mF4HfjBdBzM3r6eMZZfYkCnr0E/PvJCHNihB3wJEXV1auieecBP
k+W7mFFThY7g7++9VsOF42r/AXb8Rr5z+hPo5cTMWlMP8a2D5uzqION88v6O
LaxgraBboFxPNcCZJQpTZU3F/nSyG3pX0nCSuXVWQDSdboDOLkgwptONkGfo
7zkYv4a2ewbUZ15gio8ZCaRDPHyJsT+GcVHu9QLutxIt6IP9zwphBHux72u8
7Tk83w41Z2oK6sE5zwyvv/t77mzC6IDzND26Itp990WMD/xesXgXud/K+ywW
UZ7D2Og+BjcyQ948DbBaoVcplvxCTbJo1dZogcXjEYSuDZdg8co5aKWuL/8+
LRm09kto+Ve43q/52786Yzm6rb3RIiroCFFxb2mXG68UyrD627ESni8SHGQ8
/dEsopu58GdDnSHKNsmA1Rwph8kBDxn/Yx9noybYzxokyYlDKXH0e1NVALH7
sUr/SMZi5Nj+4Hl4kwSKHdj2UhT4rbFSIwLbKxLTFyHJWMmqJ/ddMaiRk5Zm
j5YWph9Nhf3Nyla1FKmJIDSda/KsNbQQtQpuT2Kd+aVF5IcUj6oC/j6tDBr5
UyeLalx8D4nStNG+ewWs1H/xw8i2kXDM21rhchHYztukGRHYD0kWkptbgd/j
ngjTMP8R88Xg81WIu4gv8uEOd2IuOm01hUsefWh0t57CJYVWRomlXIK46lLq
dPqZtxh9S70yWlSWTPgkmt4qA7wf9viuFNqkjrh2xccniwujQ7urY5/YzkHD
yonvY5MziAxRmXj3Xon/xC/FG085+OW5eozE703JUJUbS3Yx//I3G2JcJUcG
gd0NkatF0ZbUNAVUkzEhXCVfxeT2bdyYlmaC6iwVROl0K6RRKhvOYtGRWk5R
eHHJYqaG/w/IW8YowHUNywPO98t6TIEOeIrO1Ce6G0uYrT8KTuNzv+9POUMH
XPo+ekCwWCb/7G/5TjXgZwu0ed8o4NYODatd51ulLI9KQ1KdeLLvElVW5pJK
vTxIs8F9msioGMTVoNO75lZC3X4b744EZbR5+wbeahFxdHZ/vkTcoxEiTBTH
lyHqJ/PXr7KvF03gKeZoI9dCOJ85at2fSvr/Do0ww/737a2XFuPWRnqMBclC
XMYoMy4Y+E4dCd9F4a7NM5nOrepk/l18dTqZJ285OKQqAu9XiZ4eI/T8CN61
x3cw67VRx/wjKzrB7jw38oEvLP45XzkHd/TeXvjcAZ3MfjIPx++Lz7q8Tu15
TD3He/E474S0EST/P3mh+XeduiuxUuW1CebZXr5teYZeKohx76R9C/Do/VCd
j8r1Skh44bxryofMCfnl6U9OgA5QWVG/dwL2vcC/U8AT+CNuqb8LE/jDX3pP
DM5n1CptMBCO/eGBzZO9nKG6iR3faZw8X6y7jjxfumK7EILzOc/O7dnopYmk
nsrSZ6evQZkDH+H7K9Gj77A4ejM+DWTD/VYjpW42vko+tBtge1PnT+WbZ0ij
2f5z/rXb59aX+gcQAbkMRR+IW7u3E3OPaMigc7SfKtwQv7GCxcSPZUtQ7uqZ
7823aSHu/Kipg6A32vsnzgyBzlDd214pWbgYNV93eX/VXxP9CRcVutcvgGhr
rGrKY/OJMD9phrWAPHrbELr5Eq82KmQcCzoH8bNdeBst+FwyceK9O3m+stmz
A/D5rhbe8cB52zCws/gg6IjJ8f3EzNgQ88/VL6xOFssePT07FI7xTp1P6GkN
gfmlunOGFJ2+FinFXt/LC3pC48nuYV6Ie9pp2y7MtyjJK+tU9Syi6KxKK6+N
KxHjU1dvC/7l8uX2aof8JrBGssQX8qO8sy3EAR0t6tfvLLhNZx5tCybjOchQ
l+RxeXE2fhvzBEj8iraZ53U3aCPLO2KzLqWbIDPpeZ91ABcmjW2VSYCLB6E+
JF5UirtJfMx8Nd0Q+4vafzbnXEFdSyNwfo/br3+2SO0isaBm+lbFHxKIWv9c
1apzGRRAgrPRw8BsglDW+Jp97qwgWjax87KqGi8SCIvsmyakjMpdNTO54DzB
53fONq7sY1LXaUI36nH8H1+RFYHPt/mzfvZdON/ylQsh/tegpNe87/A+yjj6
+JWz5Cqsj3PspWhY9/af0Cb1Kf/t7ax/67PLh7JZmH+/P5QFO9kjtfVusOoi
8yr4v+RxhrD4HDgl5D+d+fC5NQobe8yP82vv9K/Dhk7JTBNLnmicr/fy/IrC
utEj11o1J8CSSG1NSs4F+/3t76nRrJf9Zy3Zc3cHk1seyUZkn5Xs30+MHR96
IgL6+mHJjqouwG+H8f0gnufpREg1F98U4OeNm+fxNi8QRiuuu0UcaVFDq48L
R+D8RsUfFY/U50un31+2AvizrFJp1hDwZ8/O3jMslgFa2WCcgvO65FjBaI++
H7FM3YGhCjh+Qwh23GpQQn3K5YNM0P+T8cPjpEbmU1XxdjKPuqfrRGB+dMH2
izVl+HD0rnnbCpLnQkff9noF6hLy+2X7vAG3K79UfeIC/MRdPdOnDvkw7v4F
k+oaGUK9O/Up1ndirio1wWDP+Oi3Hy6ADhnZiSzFAJeJ3xfEYZwuUboqcxt0
wAd//ibMr8mJhSzVe3uI2DLeT5swz8x5H5gCeXwiNC2gukEWFS1j50/D04tW
sYbMmBNVkSysR1ob2Hk0laOPwmxvzb0D/BbZtdSYRjNEyz6iKGxHm/tWD+Yl
jBPL5TzujS9TRq9kPP8OJFQRF3tc7247JYOudZ4m8195cShfpPVuZsb074BH
LdRv9DcM57UTi9nPP+sqOcMP8NfPw0XmxfaDeDVF64O/GKbBuWL47z6zhnol
Xfub69HaCMJ9w/XcuvMK/6mfRIq0DXHepPLAl+pvwXz3HQjP5561o3COY779
p/oAZ3uKLlfhOs7b/5vt7cB8oqR6c3MA8NrPiMi2HH9dJMZaMnA3ywjN8p5u
pQc8eGxHWUwn8OKGzk3D8pvl0RWrN0FzVdX/U7/IcOKdt3wVDddJspz87Z1b
ZHAC8neA5hfAixmqbFEn+eVa4aZrbwBP2rICcdaH/YlNKgaOseAn3pDua8Lc
UqhwqTMN62GKP6ZuuQe/t0Ftel8lMb8X3+c1xDj63AvPVw5h6PxVjMC43TCf
nZfPnuIh61jq95Qe3neBXX8qHllF6ggqPkrVrCOw7pvFec7U+XYlE5liiN8u
9MtF4O03iy7xnVLeRVCfF21l47/VWP+ERhmdSfMMJ/VskPVu0i6nXL6cDgFc
x7OW8bovMSZaviSkmIPdb2kSqe8Bz33q9Nk4P0d171YZvp3HjNgfBfpaHwkv
LSDz84LW+VP3B5oTyQucLp4Cv/l13+ytBdxT6+T6dHhhH/CTKbJuziHz5H1p
B+EF+/MJ7qlvtvuDf8/XfF0ws1ABRbhGJ+kKqqFXt9aW4HpU1vnPdjX1Wua7
LkWfdNBjVxJ27sa4Zwqw+UGnL3PTIPDDz7W98dje9+7G1WI71WtsdI/7GkEs
anj56CrOEzvtunR55VHRlnNdfqDPH063IvlV/P7C1T/GzJg9dz6R9Y44VySs
2mj0VS1ZX4296JqH66v+kHm/XmkZIL9xk/EYDTN0SfvY0Z6aceLgAp3sOXXC
qDbNRqIksoaoctNuEvCU+g/+fDi6q4lTh+nLSztcMbtEXLE4kVc4IoCOXChc
O5wsgqpr+x3j92qi0IPHZ9WB/b/evt4+qySPWSTAFMB8vjDSUwD7sVvFNxnz
XoH4ycFcyN/cj/p3OIE+ebvr8ogZ1J8dHD1O4evt5nYDrH+p/Gx3Ij4f6yWP
wsqIcPDje+mgvrNw/7wte0Y/gp+2Ja/uNv2jQWwXWvMd158dt4pCboI/Y2Qr
f5sDrjTWLT2xtMCSYG7W2nIB7hO0R/xWFuDpj1TQK2/gkb2vfwnlecmhU7sP
Tml4tp245968aDbgsp/XR2x1owSaO7+PwDxM7Y/S5cH7Bd09PR3+Yz9fTv0j
xdEZyPfAk9WhfoS2rc0xDbDD63jeihLgzT8Zb7e6gB0m1286/N9Iff77CruO
ndz/Of+VrceVXFThuWbobFrpMqzfVxalT09cfofZL1KQgvNj8NZFZzA+bPsS
Mp8NuhH2MQ+/FjRIIJ8bzkFfwU7UNVWvUeejeGFtbh+s69DXTez4zMnR3xN4
j860Ne2FeNdFKmpt4TjPbSwadEsDvKsUnLvyEOqPu8xXKrie6x81LcR2mVyf
Z3N4o+OTRATm12cr2PnBnz4U/RDyQ6+ybzTWHVVL+cpxnGyVkyD96hxpFqAK
fr68Shz8q4NOe2v/FQR+lN8hSPs3P1G8NFL8xwD3f0L9uXrO0l0J1SX9+lag
36Ymn7bVgbwbamza2AxxNVlfb+ioJvt6lL5+ZzR3uwX8/nWMHdlHEVZB1jrA
Y1+nz7Bpgd8d2FUBT9VGZg5/WfyPKhg1omz/ffJn63TKf2vAf1rgP8Z2dn/L
zppdH4sUSTR5e8qh67k3dnqBXcVbTj33Bnvo76uIvEwfYNYwL2aeSzAnRjoS
3ZIBv3oVsWrjYG9WvrjYcnhusymb/wj7LyJcEH/qihvj8Xlqgh3iMa76b6id
wHm9dUPiGnnI8/RFrbI4v/M2614U41ZDC4+K09IBLx23nIPWejgxZ7meI+vx
2kxpQ5x/Vg84LbUttCSEZL/5YX31jK/q3nmIH1+taw+ewT5zQmrKS6D+7pXV
+qaG+4D3YobHof4+Ihx5KAzsW0u85ML8uCwjJNtVI4yZtGPrEYzb0bZKMj9v
npmmrQxxcdk9sx7roYI7DRkfoM6uFdUOKLLwI84fN/DQ3OdETDXPTZeHuuq1
X4m6I+CWWvXQlCYWSxV9kJ8+U9ygjdl/0L63DnTzpr3FzTTQsUKc+r7TXjKr
APSB/QU2f6bvjCbjdnL+d1R7GI5xQ60/hMPD6f/qz0ybRkc4P/AvYOtU1wr+
COxfG/DvUvDvE4KdL7WXs3Hg3uM+aAbx2S2QK1v6BXTYod9fCiBv3dWI2/8S
dM3FhKxwXE++69dn5YH+e/1mnPwdtY61WJB568FqM4N9wH+VIgrey0FXda/y
CuyGfdRw+l0U/ofj+uB39v/wZzinvzqvcIy15HYfwzKMndev17B5d3nyHD4T
lR6CWun7L6VOs1qBri/0En0laoACX2b14/07pPG4CPTLEFHlVgN4/z83iH/P
A5591ZeSxQV56uP6GVNHA8MIBZ6rOjx+Iohab/3ZSfJ/4d7vzzH/bxhb5rFE
3QChfYnFs9PN0PbZXePzUStRlvHN4mXZCJE2FPLBsxL2a3trBz3ZAB28rpa5
GHC7xfXd8bOA4xcXH+YXA36LQ3bn4zrqu1tk2lnIfxVxX+UCmtQQLfOhV9bZ
ZGJu4h27j3kK6IlqDtn33WGYeiYhXQMlrvQn+7/TLhd+jzb2I+Q2jf19Bng9
77lW+M0wi/mhOTHcG/DyTMGblQFxUS3d/iMgXQENLf/wJxtwEPU1ZBjziFPX
cb3uVa6E+Ft2/9Bxtl3QoiNOzAjfr2S8XxIrJfNzkgY73il8lfalGuC6Zny+
ijuufwwetJHxkTHI3ce9P4zpbnj1CMZv7st3RzA+GwfWy2ZDvKfMc+u0Sp5K
TNi8kG2B/WoIj8vtBt7YnGQYf/RlNCFfLmXMly+GVG89NsnWn4N+977M1eCT
QsJcW1WFoX617WlrsoZ9x7jIerVBXGRYb1BvAb45783mVwuX7acxv77eqjc+
D3hl6rW/+nshPudx+CGnyDnEHvhBizPXaJcRQjhPywUbnnfOUyJW/FXOsQNe
CHsQ33QZvv+wJDb/DuBkROEtgftRFD6pfOrp2GxAo1n/p/6TcGX3v4L52X2I
yfG3ZZDdv4hvYff3AxvY+69dZvcE719K6EWwBdhfLa4/OBR48Gk8XbG1SQk9
n39T4JZ8NDHLf8Z6PMfwVduyAc8xnnH0XxnovwbQf4GPrGn1dYaodEYHue/X
Luz8V1Wjz3K7Q2fmVyST+7l2dB7ZX6o62EbqL+GrkUuw/hrKkP65t0kdXS/z
DZVsNEUtptFknbGmVbrJWmMlWrkxi6xHXvDcIGKgDqH6EZR96BVKgKd16NWn
+YVP6zaij0c/C7yF+HhzqtycnzFCVCf+6tEZBl34iXtsZ+UK9IhTfx9ylvQM
Bn676TBC5uXk8jbAnyF61pe7GM9nFhgJnhChqaM5V1Yb/ZmpSQQbJki6Q1z/
+rX4TyPgKaVQw31eH4uZPzHFQJ1uhHzv9jPrgR8m1x8O/cvI+tQkYSOZv2af
/FKhBPcvCOp83wW4Hc8eyDLYpkn0T9yHz+XRiGc8Hfe35tLir68Wvc/8fPSa
GtYr7d2Fopj3nnP4T79X36AZ+G+OKVv3px2yIPOQbjIbf6vinVqcvZ2YnrGl
ZH3ZMsIkcXOU08+i7Ncpt8QQzw2o+o2aLxkA/w0X9zGuTVM0xH61XHoK9IEF
crE0jcAr9XtK12VFqsLVWsRcvtghbNo5Qk/SJHjfYRGkyPQ5/PqDBAqZ9urg
dFFhNJCta4N5Jul9h5zQLl1U4KScjvnI2XiUlQ48NFkfzixgz+90OX28yfUV
VX9qcfrg61V2Nr6DutHZNKBoCtSRl27LJa7ZRkeD1TtgXYnaah1pmH/OXHZu
9YH4VE0OhPrNAI28no7w/bNOPif1GhVfw6/Z9eVgHRt3b75PRHKJXCZE9krw
V1SJIa/GeXzJZ0CvF16cPjQmgIxkhKUUSrYTF+64RgqDLuZ9uDTKFHRxdadj
rg/ooMn9n4s+eiQ+YitkyOfYs+gm+1XCiJ6r0zKGfUUQtR63UPC6Cfztosnu
L8Vn65+IBH3pxtGX/CVy5Dn4CUvLkVcRhG1ZeUgWxM2WVTv0eZpk0bS88EW2
UM8XnHLkwfnfKjBE0x/0hceLeeR8h9GdT+rCyf7vEtUh7fvuCtvPhW+syHj/
QfLzp7Jzii5wbY4saqYD/6wGvrT2xHwZnJh2G/PlneFDNfbAowHf3FXHrF0J
VsnbAO2nSkTmM4c6W+C/kkX2sEK+rDOrw/xnLGQqSZtVQuS4F/JI6Qoiaj10
gUGLOy6HNGSvJ+G8dnRj+XJJyHO3PpyTxn2KIi7h/HBvXTRfRL8N90Nv3l41
0A78Usf3NigA+MVghqzefW9D9P6qAalLh8rWeeD53mYRTZsc4KeA2o89meCH
d5/Hdp4D/yhPNPZth8+HqrUv4npqWuUvrxTQE284+oyVGlK5CexXdTLnCNaP
h9+vRZg/zpvfXuCqroLSztlcHj7YQwTvyVKXaJz9z3UaEfGxR4WfaODjedoE
PHLHgt+DG+7Xk/G2bhfkJ2r+Q819qDkQNf8ZTFBYdAPyW7hGwpabkrKEh9V9
yUKwG3f3vpmtoI9if4pc8Ya6+4D7xqBlUIdnCIsqzID62/DWp7m++lpogLN/
7nMhLW6w/1ec/VOriVOG5AuIH8tLX3NHlykjq0/PM+Uhjk4I7c51OaWIAjal
avWD7jDL/ri96dgSZHsrrzoR+FbWscmDlymPKtUu6H00cCUy65TGsZ3NwxK5
AkEPNPNEceM+f7jKI1JfKgWWK/eMrGEuDLxEziNEbdRh1UbWnP4dNd9QuTYD
Yb6heGbiI3t+cdKljXXTZRbzEnMaqSedC0NIXfrh2gNNrDdajlro7AH/an93
ssH1x5ZdvjZT0pejC35z+pVgvwki2fSncI5HOzzp9YoaaEXht2LPylXohark
BwGwT3EFd69GpQzR+y3hCe4DXhfe0iUA+WBy/nHdKPSOxVqL+J6tiExL24Be
Wkacw/r8tJr61yLQb+6xeR7D8Lt3i2V7ZEHHzZr+OBzrled3ULhP80xmYHst
WT/Nu2BGw3MFBzEVEr9+A0YdGL+ltx//vMirjXLeVf3AfYqrHP5P79c/cQn4
P23TawPcH4zi9NFFlrPrw29GQ8KlUB9W1Qvy4r5iH6d/2LZ5SuYMbik0MTN3
ek+oP7Fb648NP5caev7opU4U7FtR7hjZP2DI5J7G/QP9H0I71UDf6DvHlBRB
HtDju163E3Ca3XXGRubGF+b0tUv21YPu7vHOHcF1pEvVd8XzSlKImxXoO8/u
LrHbjVFwpZsHHR6akyL+QQ0NxUqS87gJ0r8tZdTck1on658gmmkE7q9Q+meJ
kSzt3/NPN0497sCpQ3+6d+Vtm7WayGX8MXOCPFs9P9tkGOKFup56LOGzGvh3
vECkXw3ssvyl/VV8XqsLvUJ795sTk/vL3UWiJC9bHFYi62Q3a9ZuBY39hHW/
o3URxOPJsWxz0WYJtMPyyWoxWP/f+xUSnP6exMy3BM4z1PkWrbtO4Pcfdm5l
z6+zh9n233Vu5g1sf+/d5cBDWmg2dxSsBuicAeMEzmuW0b4dOM+tY5xOCk7R
RIRjoVBhtT6q+3jj/gyw9wPuUdVXuneJIG3+jbmhq9DjqHrFe/km/5mffuHM
FTaUVnTiOkjtMXu+Zug7ELOj8SRzukkqH67XNyPHaJwn3LJHpr+H56bo+m2a
CvvID6qXOVGhgt6HjJ8KTtFFW3lGa/8Cbjf/Pj1xGnB8er32xM09Kmhi477w
abs0UVMcl5CE9Vmi63WkmLWIMBpLerqwOFQEvZlbf/QX/P/jrM9kfbBpdE2h
/QxX5rkvbSysp844RUVg3WklF0q+b0PN5+Z9ZM/jHmmx5x9ONZ2Xu6DOuLjy
1wDmnywnjV/7gH9S/bpDWoB3KB1L6VtK71I6N0NrrRl+f8fDU4V8f6dja7sq
/v6+4qDEGG51xKobPReUKE/svWp5vBh4Ye4x9YT5kO8GbnYkdAOfK2TeIN+D
+Evimyij6k05jn5xsfpSj+vs9eGSM9ZUvmauf+R7G+M9jJGyD39v8ON6Mj8f
tHQyFzQPY6ou+0n27/dGVXHjvCzZOBZ0IUsB9a299rpDIZqIvq0yWgD783kb
O7ga9jtZ31Hzcap+SuL0/x+4Sq7yBf2xReQbGW/Z383JOt3w0c6aLsBNUtRi
kWmAI19PxQ+6IurILfD4Nj8LLRRxulzNDux6lrGuUhf49d6hZ1Y4f1YvO+qJ
34/R58x5qOdT8+IDUz6G4/h56Bb/m6/dgEgc8L9jAPEYPRJX+hrseGTfd5ej
cL736evfR0HeSj1QzY/nA4MnZKL3z5VHK2JfGuf6r0DnkoJIPNzJLQo/Cvp6
ydBhkvdL//KTunBfv/m8tjBz4tE+rZ+4DyAaWPU7BfQFo7dsAvevL9wfJOtm
VnwDWUcrbWV+oCdrob9/dhT3pBj+X/2nZ83Wvfmc+fmcO4iVDvy9AOmQutuN
M0efrE8p/qL4bfL8nHrvSGhuiwHuH+5ukb7sk1VFOG04u8YjaZw4pOq4johf
iGzLdF/sAR0bdyLzCJ7vmH/7XRbzOYb59H7eEYyLmD6CG+f110bSM0N7eBBj
UzuX9mk59HY4Zqq/3EIU8qtLNdL7LvHUU5L06195OdLPL6TZ/k2fs+QD/wdt
pGHGz1UP9x8wDyjF7/8M77oUgeNt7jWTIzjPlt5kz/dj1rYperfnMXtkvARw
Plqn4kH2zybXP0qc9ydOqRBkH/ZlkdviXeDXm+sM3KsC8wkGK3aHrqA2otbJ
9ScVr1R82vex9Ut+yYFf37QgPg6t4Mb8RHf8TMN5cFdd9BYVyGPa9Bdqlt4q
qGLv26Q/xn5Eqr2sKu5jUP271lvOCf/u36WstWfnpWGFKuOgSOL4DfsLLXli
iKHbn5e7R+SfVS1hPBzHCeW//EzhnLo6B5Q4YAA6YD1inXktrZ1TRZg+vC14
GfzX972ks+SUDHr2lpfRCH6cnP9NhDrJfHBy80uS/6NHbSL+/f7Bva1zyPnx
THn2XOrVlg+tG43OEEvpT9cZzRVGqUfer2u/IYZ+LOguiPUHfcV5P+QlyT8C
DOpakIfdX6Nz3p8olRtKwO9PbL25nBvb7d1ZNr8PPenzNRORR6V94ul+qy8R
G6IyO4eSRdCraN2yohEBpHeN3b9J/+pY5RnoxDwxR44L27+q5x7Zv1kk8FXr
lIYr0TG1eiPmicirijcu1Suh/OttL7EOazkvrY79n6dvN1YL/pfsbPbAcyEV
S3NY9f4zf6N462PIMNjHEWWdn/1XUkMGPU9OHfvR6EekxOexYsCvB+4V/DUA
v9PC2Px23lv0wKUFq5mOWffJ/pJbIPv9JHHO+0EqC0Olby3ZxTy5+wnZz76T
wiJ1hQgHH8eLnK/j/o3d5VCy3qH6OO/vRLBS/zV/iOVjz39mbGfPYaRchyTC
6lyJug351evg/K49btuv1csi3ec12zqA9/8Hn5NoCg==
     "], "CountMatrix" -> {{78, 1, 0, 0, 0}, {1, 236, 2, 1, 0}, {0, 0, 12, 0, 
     0}, {0, 0, 0, 15, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwNzzFKQgEAANCvJIJTLYJGgglRECgaTm4tIdjwIZIWMYLKoUA9QDi66ODg
KA0NBd7A1gT3DuBmSEttNfiGd4CXvX4MHyJBEJyzRYwE2+yQJEWaXTIck6dI
hVOqhFxwSZ0GTW645Y57WrTp0OWJHn0GDBkxZsIzL7zyxpQZ73wwZ8EnS1Z8
seabH37545+ocJwkKfbYJ8cBhxxRoMQJZSqcUaVGyBUbhgEiFg==
       "], {185}, {}, {}, {}}, {{133}, CompressedData["
1:eJwV0tlrDwAAwPEfYzN22SaLsf3YTJuN0exqdthsy9rGZsyVJl5oy4M7JCI5
CiFstCiUch/hRY4ityRylqsQHpAHx8fDp+8/8A22tE1s7RIIBD7xv10JIZQw
wokgkiiiiSWOePqSQCIDSCKZIIMYTAqpDCGNoaSTQSZZjCCbUeQwmlzyyKeA
QooYQzEllFJGORWMo5IqqqmljnoaaKSJZqYyjenMYCazaGE2c5jLPObTShsL
WMgiFrOEpSxjOStYySpWs4a1rGM9G9jIJjazha1sYzs72MkudrOHvbTTwT72
08kBDnKIwxzhKMc4zglOcorTnOEs5zjPBS5yictc4SrXuM4NbnKL29zhLve4
zwMe8ojHPOEpz3jOC17yite84S3veM8HPvKZL3zlG9/5wU9+8Zs//CXEqN3o
Tig9CKcnvYggkiiiiaE3scQRTx8S6Ed/EhlIEskESSGVNNLJYBiZZDGcbEaS
Qy555FNAIUUUU0IpZYylnAoqqWY8NdRSRz0TaKCRSTQxmSk08w/GT2ML
       "], {52, 136}, {250}, {}}, {{}, {}, {8, 11, 41, 109, 112, 124, 191, 
       216, 219, 256, 257, 326}, {}, {}}, {{}, {}, {}, {21, 75, 76, 77, 81, 
       165, 173, 192, 194, 212, 227, 242, 248, 279, 318}, {}}}, 
    "ExtendedClasses" -> {"acceptable", "unacceptable", "good", "very good"}, 
    "Weights" -> SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0004227514450867052, "SingleEvaluationTime" -> 
    0.0040055, "Version" -> {13.1, 0}|>]]], "Output",
 CellChangeTimes->{
  3.8684443883703527`*^9, 3.868444628441779*^9, 3.8684447374621*^9, 
   3.868444798788579*^9, {3.8684450567305193`*^9, 3.8684450634502573`*^9}, 
   3.86844514160921*^9, {3.868445216184236*^9, 3.868445245788845*^9}, 
   3.86844550286349*^9, 3.868445684338311*^9, 3.868445860318709*^9, 
   3.868446035571615*^9, 3.8684462387314863`*^9, 3.868446531804*^9, 
   3.868446992824225*^9, 3.868447029560577*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"f5a22ce3-54e4-45a2-bd4a-554484c3e1ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 3.868447049013842*^9}, {
  3.8684475100383997`*^9, 
  3.868447512030362*^9}},ExpressionUUID->"161daabc-615f-418f-a171-\
832b4a2218d6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedHardNet", "=", 
  RowBox[{"HardNetFunction", "[", 
   RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"Function", "[", 
       RowBox[{
         RowBox[{"Typed", "[", 
           RowBox[{"neurallogic`Private`input", ",", 
             RowBox[{
               RowBox[{"TypeSpecifier", "[", "\"PackedArray\"", "]"}], "[", 
               RowBox[{"\"MachineReal\"", ",", "1"}], "]"}]}], "]"}], ",", 
         RowBox[{"First", "[", 
           RowBox[{
             RowBox[{"(", 
               RowBox[{
                 RowBox[{"Function", "[", 
                   RowBox[{
                    RowBox[{"{", "neurallogic`Private`inputs$", "}"}], ",", 
                    RowBox[{"HardNOT", "[", 
                    RowBox[{
                    RowBox[{"HardAND", "[", "1024", "]"}], "[", 
                    "neurallogic`Private`inputs$", "]"}], "]"}]}], "]"}], 
                 "/*", 
                 RowBox[{"Function", "[", 
                   RowBox[{
                    RowBox[{"{", "neurallogic`Private`inputs$", "}"}], ",", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"neurallogic`Private`input", ",", 
                    "neurallogic`Private`weights"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"neurallogic`Private`input", ",", 
                    "neurallogic`Private`weights"}], "}"}], "=", 
                    "neurallogic`Private`inputs$"}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{"neurallogic`Private`input", ",", 
                    FractionBox[
                    RowBox[{"Length", "[", "neurallogic`Private`input", "]"}],
                     "4"]}], "]"}], ",", 
                    RowBox[{"Drop", "[", 
                    RowBox[{"neurallogic`Private`weights", ",", 
                    RowBox[{"UpTo", "[", "1", "]"}]}], "]"}]}], "}"}]}]}], 
                    "]"}]}], "]"}]}], ")"}], "[", 
             RowBox[{"{", 
               RowBox[{"neurallogic`Private`input", ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "False", ",", "False", ",", "False", ",", "True", ",", 
                    "True", ",", 
                    TemplateBox[{"21494"}, "OutputSizeLimit`Skeleton"], ",", 
                    "False", ",", "False", ",", "False", ",", "False", ",", 
                    "False"}], "}"}], ",", 
                    TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "}"}]}],
                "}"}], "]"}], "]"}]}], "]"}], Short[#, 5]& ], "line" -> 75, 
   "sessionID" -> 32545330205499919790, "byteCount" -> 182464, "size" -> 5, 
   "stored" -> False, "expr" -> Missing["NotStored"], "wrap" -> 
   OutputSizeLimit`Defer, "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.868447615896991*^9, 3.868448159576116*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"76b180f9-7ae4-4678-b5c1-b027d5ac14ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionCompile", "[", "trainedHardNet", "]"}]], "Input",
 CellChangeTimes->{{3.86844799400079*^9, 3.8684479976827383`*^9}, {
  3.868448047177867*^9, 3.8684480520874557`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"78237fdf-a58b-42a3-8484-e3e957616053"],

Cell[BoxData[
 RowBox[{"Compile", "[", "trainedHardNet", "]"}]], "Output",
 CellChangeTimes->{3.8684480028750143`*^9, 3.8684480476411324`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"146b0d90-0a45-4cba-8f44-b9b17cdbb147"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.8666054582437687`*^9, 
  3.866605459643314*^9}},ExpressionUUID->"c980f6be-656d-464c-97de-\
7bbd91e03ade"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HardPrediction", "[", "m_", "]"}], ":=", 
  RowBox[{"Ordering", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"t", "=", 
           RowBox[{"#", "[", "True", "]"}]}], "}"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MissingQ", "[", "t", "]"}], ",", "0", ",", "t"}], "]"}]}],
         "]"}], "&"}], ")"}], "/@", 
     RowBox[{"Counts", "/@", "m"}]}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardTarget", "[", "t_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"Position", "[", 
    RowBox[{"t", ",", "True"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HardResults", "[", "hardPredictionTargetPairs_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"results", ",", "accuracy"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"results", "=", 
      RowBox[{"Reverse", "[", 
       RowBox[{"Sort", "[", 
        RowBox[{"Counts", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"HardPrediction", "[", 
               RowBox[{"First", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"HardTarget", "[", 
               RowBox[{"Last", "[", "#", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], "/@", 
          "hardPredictionTargetPairs"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"accuracy", "=", 
      RowBox[{"KeySelect", "[", 
       RowBox[{"results", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"First", "[", "#", "]"}], "==", 
          RowBox[{"Last", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Accuracy = \>\"", "<>", 
        RowBox[{"ToString", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"Total", "[", "accuracy", "]"}], 
           RowBox[{"Length", "[", "hardPredictionTargetPairs", "]"}]], "*", 
          "100.0"}], "]"}], "<>", "\"\<%\>\""}], ",", "results"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.866544665069222*^9, 3.866544678336033*^9}, {
  3.866544717412966*^9, 3.866544787984428*^9}, {3.866544845678438*^9, 
  3.866544933668165*^9}, {3.866545008326929*^9, 3.866545292029965*^9}, {
  3.866545452822143*^9, 3.86654557558593*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867227950964772*^9, 3.867227975562758*^9}, {
  3.867480105517453*^9, 3.867480107005077*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"f98077b4-8d7e-401d-8481-6508057768cf"],

Cell[BoxData[
 RowBox[{"{", "3", "}"}]], "Output",
 CellChangeTimes->{3.867227976087944*^9, 3.867480107441572*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"e4ae1fb4-c0bc-4bf3-89db-46ae92637e0c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8672279902982407`*^9, 3.8672280084975967`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d9b20918-29d1-46bd-b70f-acfd27b2c0a3"],

Cell[BoxData[
 RowBox[{"{", "2", "}"}]], "Output",
 CellChangeTimes->{{3.867227992235056*^9, 3.867228008956266*^9}, 
   3.867480108955101*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"37311f9f-d207-4160-970d-ddd98433cd87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardPrediction", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.867228025234231*^9, 3.867228036921878*^9}},
 CellLabel->
  "In[742]:=",ExpressionUUID->"cf906399-5828-4b87-80e7-ddc37d71aa2a"],

Cell["Null", "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Learn XOR", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 
  3.864793644095471*^9}},ExpressionUUID->"e172cf77-104a-417b-9e8b-\
0895cfdd6efc"],

Cell[CellGroupData[{

Cell["Generate training data", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 
  3.864793759486944*^9}},ExpressionUUID->"ea4901f7-e0c3-4d87-b293-\
6cf447e04ea7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numBooleanVariables", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Echo", "[", 
   SuperscriptBox["2", "numBooleanVariables"], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bf", "=", 
   RowBox[{"BooleanConvert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Xor", "[", 
       RowBox[{
       "#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5", ",", "#6", ",", "#7",
         ",", "#8", ",", "#9", ",", "#10"}], "]"}], "&"}], ",", 
     "\"\<BooleanFunction\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxExamples", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", "=", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "numBooleanVariables"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Soften", "/@", "x"}], "->", 
         RowBox[{"Soften", "[", 
          RowBox[{"Boole", "[", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r", "=", 
               RowBox[{"bf", "@@", "x"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"r", ",", 
               RowBox[{"!", "r"}]}], "}"}]}], "]"}], "]"}], "]"}]}]}], "]"}], 
      "&"}], ",", 
     RowBox[{"Range", "[", "maxExamples", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"examples", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8631507903678637`*^9, 3.8631507905196667`*^9}, {
   3.863151242837092*^9, 3.863151247696003*^9}, 3.863158542401339*^9, 
   3.863163212116626*^9, 3.8631766947235193`*^9, 3.863176797755232*^9, {
   3.863179909310301*^9, 3.863179923837204*^9}, {3.863243605533627*^9, 
   3.863243620585451*^9}, {3.86324880283392*^9, 3.863248807664549*^9}, 
   3.863261133634419*^9, {3.86326137325694*^9, 3.8632614056637583`*^9}, {
   3.863261437377194*^9, 3.863261502775928*^9}, {3.8632617677613983`*^9, 
   3.863261767960438*^9}, {3.8632618648892*^9, 3.8632618650156393`*^9}, {
   3.863263609082129*^9, 3.863263612112956*^9}, {3.8632641205013657`*^9, 
   3.8632641216097193`*^9}, {3.8632646726440353`*^9, 
   3.8632646847617817`*^9}, {3.863265794153249*^9, 3.863265797374902*^9}, {
   3.86326617446527*^9, 3.8632661766776447`*^9}, {3.8632663950099487`*^9, 
   3.863266397423538*^9}, {3.863266602290083*^9, 3.863266603667367*^9}, {
   3.863267749709738*^9, 3.8632677506435137`*^9}, {3.863268331863552*^9, 
   3.863268332996944*^9}, {3.864793623697935*^9, 3.864793626168922*^9}, {
   3.864793718272374*^9, 3.864793728328333*^9}, {3.8647937905288*^9, 
   3.864793839705696*^9}, {3.8648255889830313`*^9, 3.864825592504498*^9}, {
   3.864825624917417*^9, 3.864825626880946*^9}, {3.864829407265236*^9, 
   3.8648294087742167`*^9}, {3.864829443456806*^9, 3.864829444846697*^9}, {
   3.864829792396603*^9, 3.8648297927316837`*^9}, {3.864830032545388*^9, 
   3.8648300662967587`*^9}, 3.86483040909219*^9, {3.864830633132044*^9, 
   3.8648306348014383`*^9}, {3.8648309522842607`*^9, 
   3.8648309524254227`*^9}, {3.864831241412085*^9, 3.8648312465735483`*^9}, {
   3.864831361588151*^9, 3.864831427353725*^9}, {3.864831467589365*^9, 
   3.864831467738257*^9}, {3.8650545097885313`*^9, 3.865054521919083*^9}, {
   3.865574752812943*^9, 3.865574784399784*^9}, {3.865592534192895*^9, 
   3.865592534298318*^9}, {3.865592762627692*^9, 3.8655927636071053`*^9}, {
   3.865594557687479*^9, 3.865594557984342*^9}, {3.865594963476437*^9, 
   3.8655949635928717`*^9}, {3.865780594387285*^9, 3.8657805954725647`*^9}, {
   3.86578528554428*^9, 3.865785286930284*^9}, {3.8658288989019117`*^9, 
   3.865828899235673*^9}, {3.865830427368958*^9, 3.865830428545253*^9}, {
   3.865830742328867*^9, 3.8658307442321053`*^9}, {3.865831732136331*^9, 
   3.8658317341109133`*^9}, {3.865837020252844*^9, 3.865837020623869*^9}, {
   3.8658371834605103`*^9, 3.865837184543343*^9}, {3.8658377080420017`*^9, 
   3.865837708413855*^9}, {3.865837740366976*^9, 3.86583774055787*^9}, {
   3.865859522557151*^9, 3.865859523313833*^9}, {3.865859830431425*^9, 
   3.865859831995036*^9}, {3.865866201299968*^9, 3.865866202414603*^9}, {
   3.8658663169608183`*^9, 3.865866318295281*^9}, {3.865866383754406*^9, 
   3.8658663858232803`*^9}, {3.8660002644683657`*^9, 3.866000265575876*^9}, {
   3.866000397664502*^9, 3.866000398839758*^9}, {3.8660004574432163`*^9, 
   3.8660004580794077`*^9}, {3.8666042520823517`*^9, 3.866604264374364*^9}, {
   3.866604302861124*^9, 3.866604304397232*^9}, {3.866604362727042*^9, 
   3.866604365684434*^9}, {3.866634397416646*^9, 3.86663441391949*^9}, {
   3.866634545413786*^9, 3.866634547171479*^9}, {3.8666346718798122`*^9, 
   3.866634702156291*^9}, {3.867671157222414*^9, 3.867671157363698*^9}, {
   3.868095338683979*^9, 3.868095349658772*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"a1d35da7-df69-4f5a-aded-2375da917235"],

Cell[BoxData["1024"], "Echo",
 CellChangeTimes->{
  3.868410044962035*^9},ExpressionUUID->"c5a032b3-c31d-4116-ae58-\
de03d5f9c5af"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Hard neural logic", "Section",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.866604080745175*^9, 
  3.8666040868730593`*^9}},ExpressionUUID->"741eda3f-af0a-4750-965a-\
e5d5e10c6c4b"],

Cell[CellGroupData[{

Cell["Create net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86660409306982*^9, 
  3.866604093249838*^9}},ExpressionUUID->"78cdb806-63d5-4627-b46f-\
81c4507b63c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.86678913871952*^9, 3.86678914729805*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"58a7a509-6e27-4603-86a4-437a1775943b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"4", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"inputSize", ",", "250", ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}], 
          ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"250", ",", "classificationLayerSize", ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}], 
          ",", 
          RowBox[{
           RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866512854091155*^9, 3.8665128815568047`*^9}, {
   3.866513103300004*^9, 3.866513116326098*^9}, {3.8665133340990458`*^9, 
   3.8665133419773703`*^9}, {3.86651391128594*^9, 3.866513915466413*^9}, {
   3.866514318655335*^9, 3.866514323501399*^9}, {3.866514602855854*^9, 
   3.866514605749691*^9}, {3.86651468027989*^9, 3.8665147385101433`*^9}, {
   3.8665168378259563`*^9, 3.866516840683816*^9}, {3.866516968713831*^9, 
   3.866516971903157*^9}, {3.8665173610656767`*^9, 3.866517372695388*^9}, 
   3.866517444884035*^9, {3.86651878744969*^9, 3.8665188117507257`*^9}, {
   3.866518954624714*^9, 3.866518969573318*^9}, {3.866520101802957*^9, 
   3.866520108575643*^9}, {3.866520188881999*^9, 3.8665202157280684`*^9}, {
   3.866520364293333*^9, 3.866520392296053*^9}, {3.86652044871375*^9, 
   3.8665204631835423`*^9}, {3.8665219880508347`*^9, 3.866522005928316*^9}, {
   3.8665272161026173`*^9, 3.8665272312695007`*^9}, {3.866527801201952*^9, 
   3.866527883631137*^9}, {3.866528045329198*^9, 3.8665280486071043`*^9}, {
   3.866528154113455*^9, 3.8665281741152687`*^9}, {3.866528447153947*^9, 
   3.866528447260316*^9}, {3.866528670002123*^9, 3.86652867583491*^9}, {
   3.86652876246611*^9, 3.86652876256351*^9}, {3.866528813858374*^9, 
   3.866528848079921*^9}, {3.866530033731058*^9, 3.866530050034823*^9}, {
   3.866532603007605*^9, 3.8665326199562283`*^9}, {3.8665328331522837`*^9, 
   3.866532845529175*^9}, {3.866532894976413*^9, 3.866532895812646*^9}, {
   3.8665329705120907`*^9, 3.866532996865466*^9}, {3.866533798129952*^9, 
   3.866533798585582*^9}, {3.866542948856092*^9, 3.866542956003662*^9}, {
   3.866543312214932*^9, 3.8665433126315613`*^9}, {3.866545711295557*^9, 
   3.866545711720436*^9}, {3.866546071686404*^9, 3.866546081040039*^9}, {
   3.866547900239717*^9, 3.8665479093644657`*^9}, {3.866549693552167*^9, 
   3.866549704088811*^9}, {3.866550126984569*^9, 3.8665501393456163`*^9}, {
   3.866551310563048*^9, 3.866551316716016*^9}, {3.866552552251585*^9, 
   3.866552552469812*^9}, {3.866552612077286*^9, 3.866552621902178*^9}, {
   3.86655297295109*^9, 3.8665530085584908`*^9}, {3.866553815227034*^9, 
   3.866553831744128*^9}, {3.866554274483659*^9, 3.8665542884172983`*^9}, {
   3.866554409228067*^9, 3.866554412577661*^9}, {3.866554466780363*^9, 
   3.866554467185257*^9}, {3.866554546724543*^9, 3.866554547081894*^9}, {
   3.866554637927086*^9, 3.866554643213908*^9}, {3.8665551202789803`*^9, 
   3.866555125450521*^9}, {3.866555219318622*^9, 3.8665552411393957`*^9}, {
   3.866555370545534*^9, 3.866555374243248*^9}, {3.866600476190877*^9, 
   3.866600520811289*^9}, {3.866600851629229*^9, 3.8666008545843487`*^9}, {
   3.866601173213505*^9, 3.866601184697352*^9}, {3.866602823213896*^9, 
   3.866602823651602*^9}, {3.866604371939287*^9, 3.866604381826564*^9}, {
   3.866604749040091*^9, 3.8666047509630136`*^9}, {3.866604849825338*^9, 
   3.866604850409642*^9}, {3.866604910415758*^9, 3.8666049155794764`*^9}, {
   3.8666049635848503`*^9, 3.866604963802972*^9}, {3.8666050360329323`*^9, 
   3.8666050443319817`*^9}, {3.8666050857854013`*^9, 3.866605102679984*^9}, {
   3.866605133064426*^9, 3.866605167596745*^9}, 3.8666053219956837`*^9, {
   3.866605368956347*^9, 3.866605372897883*^9}, {3.866608559321225*^9, 
   3.86660857578793*^9}, {3.8666256514454317`*^9, 3.8666256570367737`*^9}, {
   3.866625747091804*^9, 3.866625749618054*^9}, {3.866625787684525*^9, 
   3.8666257907528152`*^9}, {3.8666258795422707`*^9, 3.866625882833005*^9}, {
   3.866626038446534*^9, 3.866626043128318*^9}, {3.866626077493651*^9, 
   3.866626081166033*^9}, {3.866634901739232*^9, 3.866634904401794*^9}, {
   3.86678873629885*^9, 3.866788736859007*^9}, {3.866788795186584*^9, 
   3.866788797694313*^9}, {3.8667891530822077`*^9, 3.866789154124004*^9}, {
   3.866800206265554*^9, 3.866800215024955*^9}, 3.866864934672009*^9, {
   3.867583261611472*^9, 3.86758326430956*^9}, 3.868078626392386*^9, {
   3.868078751184596*^9, 3.868078763479973*^9}, {3.868079693635331*^9, 
   3.868079731711684*^9}, {3.868079771114848*^9, 3.868079771892219*^9}, {
   3.868079826790793*^9, 3.868079826970495*^9}, {3.8680960627939796`*^9, 
   3.868096097814007*^9}, {3.868096278330597*^9, 3.868096287564961*^9}, {
   3.868096361084002*^9, 3.8680963760035353`*^9}, {3.868097353083192*^9, 
   3.868097359152732*^9}, 3.868097728956376*^9, {3.868341989247307*^9, 
   3.868341991217548*^9}, {3.868361738187723*^9, 3.868361743035413*^9}, {
   3.8683617787973843`*^9, 3.8683617899588957`*^9}, {3.868361869796091*^9, 
   3.868361874567515*^9}, {3.868362155149584*^9, 3.868362160703273*^9}, {
   3.86836224054467*^9, 3.8683622406543293`*^9}, {3.8683622781244097`*^9, 
   3.868362292672575*^9}, {3.8683625068713284`*^9, 3.86836250698913*^9}, {
   3.868410265163364*^9, 3.868410266983426*^9}, {3.868410337029778*^9, 
   3.868410367332881*^9}, {3.8684105110305357`*^9, 3.868410517127541*^9}, {
   3.868410929237455*^9, 3.8684109512837057`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"9f7ed563-e3db-4f0c-b6ae-311c23f293e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"net", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"8", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"inputSize", ",", "50"}], "]"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"HardDropoutLayer", "[", "0.25", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"50", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866613777500483*^9, 3.866613821043852*^9}, {
   3.866613926333091*^9, 3.866613930531905*^9}, {3.866626083815942*^9, 
   3.866626086822467*^9}, {3.866634907171651*^9, 3.86663490948984*^9}, {
   3.866788799974736*^9, 3.866788801526519*^9}, {3.866789160113908*^9, 
   3.866789161089756*^9}, {3.8668002187768106`*^9, 3.866800226245089*^9}, 
   3.8668649413004713`*^9, {3.868079834269272*^9, 3.868079855577284*^9}, {
   3.8680800097335777`*^9, 3.8680800236039543`*^9}, {3.868080065710907*^9, 
   3.868080109250407*^9}, {3.868082277506411*^9, 3.868082282846843*^9}, {
   3.8680823135378942`*^9, 3.8680823467111893`*^9}, {3.868082398321929*^9, 
   3.868082403311109*^9}, {3.868082450330059*^9, 3.8680824734389687`*^9}, {
   3.8680826243462753`*^9, 3.8680826261993227`*^9}, {3.868093913038671*^9, 
   3.868093915117836*^9}, {3.868094121115714*^9, 3.8680941321352997`*^9}, {
   3.868094165599618*^9, 3.868094184216015*^9}, {3.868094434336821*^9, 
   3.868094437631937*^9}, {3.868094694069008*^9, 3.8680946999277277`*^9}, {
   3.868094738149344*^9, 3.868094742288522*^9}, {3.868094880184539*^9, 
   3.8680948903555927`*^9}, {3.868094957619068*^9, 3.868094963192429*^9}, {
   3.868095358374504*^9, 3.8680953594237957`*^9}, {3.868095391621917*^9, 
   3.868095396223934*^9}, {3.868095430526176*^9, 3.868095432664307*^9}, {
   3.868095484934177*^9, 3.868095515680094*^9}, {3.868095573311261*^9, 
   3.8680955753602457`*^9}, {3.868095639986772*^9, 3.868095649555504*^9}, {
   3.868095750594564*^9, 3.868095755464787*^9}, {3.86809582235927*^9, 
   3.868095825032096*^9}, {3.868095894664363*^9, 3.868095897672505*^9}, {
   3.8680959371380568`*^9, 3.868095946484288*^9}, {3.868096052675674*^9, 
   3.868096057968585*^9}, {3.868341995574396*^9, 3.8683419963055153`*^9}, {
   3.8683612317222652`*^9, 3.86836123506921*^9}, {3.868361533899996*^9, 
   3.868361572194687*^9}, {3.868361603498942*^9, 3.868361647963326*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"278acab4-3241-466c-905c-bc0ec791ddf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"softNet", "=", 
  RowBox[{"NetGraph", "[", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "net"}], ",", 
      RowBox[{"\"\<Loss\>\"", "->", 
       RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
     "\[RightAssociation]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866634565957718*^9, 3.866634566999825*^9}, {3.86680026940904*^9, 
   3.866800269792528*^9}, {3.8675831417592773`*^9, 3.867583145913877*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"e3c08978-37d7-4772-8ade-495439d8bdfc"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 103.49999999999997`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29.5, 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25},
                     {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {12.75, 
                    17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|"Type" -> "RandomArray", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    2500}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{250, 10}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250, 
                    10}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{250, 10}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{250, 10},
                     NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{250}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {250}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{250}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {250}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|"Type" -> "RandomArray", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    250}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2000}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2000}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2000}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2000}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|"Type" -> "RandomArray", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    2000}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {2000}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{8, 250}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    250}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8, 250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8, 
                    250}, NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|"Type" -> "RandomArray", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    8}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|"Type" -> "Elementwise", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{2, 
                    4}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_9be1f074_4f91_48c2_9652_b079df9ff1c7", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
jTJVP69Kx3Wfbiu6apv++artO81V21/d+HrZzJBmGnFQdUKt9Jh+jbV0QhUi
sRNIdDMm7hxo7vy+0i9aUC64IzKlzkeUPAVKrqfYezbTYmikpKL56Pj0ERqJ
5GNsu4TOIHHQ5fHFWMpYksstFrdEx0VCy2auN8KP+xZKzbbZWmi30UgCTxad
Mk6K0Y9NWJ+OLtqWivDTu58v2s5jHyy1TjatItgnoMdlviqdVq5fJbry2cy9
k8yT1qdqTr1mUhdSs6mxVTol8waTnRHTJJ+vsnpojq4GsC+WWlMmtonUp15B
BbRmMOL8jdbZM//x17dA1zUjPl+pnY5fUWUB784sYhlkM3dnoeuaon1czrat
kXrZ1F3A8ZmXUpb4IHJFnpp5QtjPYB7zXpHqiOxfX70rsS6aWG5MfajqvgPd
NhVn5bJ0qRQyhtH1VQdexHfRvvWWCegIbH98eODI382qO3lfuo48vFT3KbyJ
RmyrN7R+QgcBafvRzrzvkxWkJxt6ctMGyo7jv2QG9NxqkBc0KMpaHPATCe12
pzoWhm1eouX2KbTGOTDuCy03+4r+/DTOVuFK0pHDPdfRaTXfo7aj9iZfc0bv
dV9Py1i1gnQkrOdGWv3DkfuQhzqUYoWsiGY6jtXSe/mnb2HIsDriCBu+i3iu
9U4X7zwHLznIeUYUYkuz//ZQ0+202uDC5aQnDa03WlaPYzXYJtTcNXSUpCli
lirKFqh+ORan9SeGKsomC9FhuID2/Ia6hXLeAzUHhxrR8ZPXP6DRczp549E8
MTW2XbwbRCmui2dHzB3byashjiMsPe2+2azMZaeR4EX+cN2NtBOH5xA77615
wx3x+ujXm30V7XGn0e/R543RMNVAwpZjMErT7U7854dzTbu6eFPZql+VFmxU
zu3i0YmTIhvWhQBNbO/W2w1WQFPOhjrnqAU6xI+RlU2J4R6P/8GSCxwqXdGe
KDoBG1O3GjEWBLKeohJv0yA6Y7oHSQydQf4B/RgevwEdBXsxUkopCtmHSTBH
zAaF7Mk0xMBEgJaQUuW8ODlvKpk4qNTvqETnu5aClixtv5nGWY4KTXlpvhtR
of96mu8mISBwqvp62vrULSMYo0HSBPQzpdoxdPdyLbe8k3UJnbOTJpGcAw+g
nfd5h9udA4/gpStAqSNOabv9KXli2LejN9ZDFbIWtF8+/6SfZJQC1RR08qYW
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
mfBfBqIia6Q6EX7j/wDfVuJ6
                    "]]|>, "orcInstance" -> 80785904, "orcModuleId" -> 
                    81740736, "targetMachineId" -> 74143072|>, 
                    140472673367888, 140472673367744, 140472673367824, 
                    140472673361920, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_95c6a289_3b3a_4ed7_a1e5_0cf1ee2521c5", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
WPh3OqO/+g==
                    "]]|>, "orcInstance" -> 80559440, "orcModuleId" -> 
                    67530160, "targetMachineId" -> 81709760|>, 
                    140472673354272, 140472673353872, 140472673353952, 
                    140472673353728, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {2, 4}, 
                    "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0687af7ab8e2440f", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 2, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604385531515*^9, 3.866604752320993*^9, 3.86660485170772*^9, 
   3.8666049165654373`*^9, 3.8666049650282393`*^9, 3.866605045496359*^9, {
   3.866605087083253*^9, 3.866605103860919*^9}, {3.8666051697048388`*^9, 
   3.866605182334133*^9}, 3.866605324607296*^9, 3.8666053743162518`*^9, 
   3.866613822746578*^9, 3.866613934203129*^9, 3.866625674155504*^9, 
   3.866625715079267*^9, 3.866625752494906*^9, 3.866625887178625*^9, 
   3.8666259363839493`*^9, 3.866626046404351*^9, 3.866626088088612*^9, {
   3.866634558081018*^9, 3.8666345677114687`*^9}, 3.866634708596148*^9, 
   3.866634851921915*^9, 3.8666349107311773`*^9, 3.866800271472727*^9, 
   3.866802647448588*^9, 3.866862630429627*^9, 3.866863023262228*^9, 
   3.866863927813119*^9, 3.867583164957588*^9, 3.867583267374192*^9, 
   3.867583362103986*^9, 3.8675909755646267`*^9, 3.867671173714522*^9, 
   3.868078661468258*^9, 3.8680787665350857`*^9, 3.868078828044715*^9, 
   3.868078992541626*^9, 3.868079062150077*^9, 3.868079329323824*^9, 
   3.868079512059731*^9, 3.868079579466331*^9, 3.868079734982574*^9, 
   3.868079774883353*^9, 3.868079857387781*^9, {3.868080025171183*^9, 
   3.868080048248355*^9}, 3.868080079183749*^9, 3.8680801102711887`*^9, 
   3.868082284316763*^9, {3.868082319783573*^9, 3.8680823479944477`*^9}, 
   3.868082404340212*^9, {3.868082451836179*^9, 3.868082474897846*^9}, 
   3.868082627165916*^9, 3.8680939357486277`*^9, 3.868094190803768*^9, 
   3.868094249976954*^9, 3.868094438882329*^9, 3.8680947009691896`*^9, 
   3.8680947435443087`*^9, 3.8680948925646677`*^9, 3.8680949653882*^9, 
   3.868095361587243*^9, 3.868095397354843*^9, 3.868095433602148*^9, {
   3.868095486810574*^9, 3.868095516668479*^9}, 3.8680955763489313`*^9, 
   3.868095651062407*^9, 3.868095756678466*^9, 3.8680958264076977`*^9, 
   3.86809589879016*^9, 3.868095948100271*^9, 3.868096101655993*^9, 
   3.868096291186028*^9, 3.868096379876704*^9, 3.868097733929288*^9, 
   3.868361237960902*^9, 3.868361427718354*^9, {3.868361539595975*^9, 
   3.868361573261231*^9}, {3.868361621729368*^9, 3.868361649244988*^9}, 
   3.868361746376389*^9, 3.8683617968743553`*^9, 3.8683618782356167`*^9, 
   3.868362165070512*^9, 3.868362243990834*^9, 3.868362298350729*^9, 
   3.8684097530238447`*^9, 3.868409854216321*^9, 3.868410092247651*^9, 
   3.8684102707525387`*^9, 3.868410372604804*^9, 3.868410521643359*^9, 
   3.8684105896318274`*^9, 3.868410955384721*^9},
 CellLabel->"Out[87]=",ExpressionUUID->"0fbf3e9d-d270-4cd8-a5d9-e21551f6c72b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.866604099593103*^9, 
  3.866604099793066*^9}},ExpressionUUID->"f41264f3-0416-47d7-bf15-\
5c0bdda1b4b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "softNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomSample", "[", 
         RowBox[{"testData", ",", 
          RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}], ",", 
        RowBox[{"\"\<Interval\>\"", "->", "10"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, 3.866604776742971*^9, {3.86680027773044*^9, 
   3.866800278113852*^9}, {3.868094967186932*^9, 3.868094986665822*^9}, {
   3.868095019045618*^9, 3.868095019220586*^9}, {3.868361304394638*^9, 
   3.868361304829949*^9}, {3.868361488191626*^9, 3.868361491259301*^9}, 
   3.868361525155517*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"7672c6d3-df1d-405b-9e2a-90aa6887df6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedSoftNet", "=", 
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
    "\"\<NeuralLogicNet\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
  3.866800388275832*^9, 3.866800388780817*^9}, {3.8683615002909307`*^9, 
  3.868361522978859*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"9dfbfa0c-b8e2-42c4-ae5a-99e0b63edb66"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sigma", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Distribution", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{250, 
                    10}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250, 10}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{250}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {250}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{250}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {250}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sigma", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Distribution", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Outputs", "Output"]}|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2000}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2000}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{2000}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2000}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {2000}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sigma", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Distribution", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{8, 
                    250}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8, 250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Mu" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sigma", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Distribution", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Outputs", "Output"]}|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "OutputClip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "OutputClip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "2", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.866604444065995*^9, 3.866604825257682*^9, 3.866604891009988*^9, 
   3.866604946387684*^9, 3.8666050262184153`*^9, 3.8666050785043297`*^9, 
   3.866605125883642*^9, 3.866605305208755*^9, 3.8666053506104107`*^9, 
   3.866605402815572*^9, 3.8666139117587347`*^9, 3.866613968840701*^9, 
   3.866625704725067*^9, 3.866625739869501*^9, 3.866625776351536*^9, 
   3.866625908542205*^9, 3.866625954933941*^9, 3.866626069327134*^9, 
   3.866626118723287*^9, 3.866634633753524*^9, 3.8666348346758213`*^9, 
   3.866634880920323*^9, 3.866635024288516*^9, {3.866800377101527*^9, 
   3.8668003895056067`*^9}, 3.866802672634994*^9, 3.866862759681157*^9, 
   3.866863134091525*^9, 3.866863952315647*^9, 3.867589276039692*^9, 
   3.867671664534728*^9, 3.868083021532551*^9, 3.868361683452351*^9, 
   3.8683619120523787`*^9, 3.868362224655265*^9, 3.8683622583423357`*^9, 
   3.8683624814264603`*^9, 3.868410245228744*^9, {3.868410304556037*^9, 
   3.8684103257472963`*^9}, 3.868410484715262*^9, 3.868410567554624*^9, 
   3.8684106340951653`*^9, 3.868411017595937*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"9cb79cb9-2b64-4e90-9ca3-124ca7d16c1f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetFlatten", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.868411051318389*^9, 3.868411055911145*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"03b20ea2-f844-4684-8be9-d62af227f5d2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"23\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.9999999732051, 
                    1.000000294743867}], 
                    
                    Offset[{0, -13.5}, {-10.9999999732051, 
                    1.000000294743867}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-14.999999999999995`, 
                    4.0192345543676764`*^-7}], 
                    
                    Offset[{0, -13.5}, {-14.999999999999995`, 
                    4.0192345543676764`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"13\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-13.999999973205098`, 
                    1.000000375128558}], 
                    
                    Offset[{0, -15.5}, {-13.999999973205098`, 
                    1.000000375128558}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-6.000000107179586, -3.9999998392306164`}], 
                    
                    Offset[{
                    0, -13.5}, {-6.000000107179586, -3.9999998392306164`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"16\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-5.000000053589792, -1.9999998660255143`}], 
                    
                    Offset[{
                    0, -15.5}, {-5.000000053589792, -1.9999998660255143`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"11\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-6.000000080384689, -2.999999839230617}], 
                    
                    Offset[{
                    0, -13.5}, {-6.000000080384689, -2.999999839230617}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"12\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-6.000000053589792, -1.999999839230617}], 
                    
                    Offset[{
                    0, -13.5}, {-6.000000053589792, -1.999999839230617}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"17\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-12.9999999732051, 
                    1.000000348333661}], 
                    
                    Offset[{0, -13.5}, {-12.9999999732051, 
                    1.000000348333661}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"14\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-10.000000026794893`, -0.9999997320510293}], 
                    
                    Offset[{
                    0, -15.5}, {-10.000000026794893`, -0.9999997320510293}]], 
                    
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"18\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-9.000000026794893, -0.9999997588459264}], 
                    
                    Offset[{
                    0, -13.5}, {-9.000000026794893, -0.9999997588459264}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"15\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-31, 
                    2]}, {-9.00000005358979, -1.9999997588459262`}], 
                    
                    Offset[{
                    0, -15.5}, {-9.00000005358979, -1.9999997588459262`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"19\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-8.000000053589792, -1.9999997856408231`}], 
                    
                    Offset[{
                    0, -13.5}, {-8.000000053589792, -1.9999997856408231`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"20\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-4.000000053589793, -1.9999998928204112`}], 
                    
                    Offset[{
                    0, -13.5}, {-4.000000053589793, -1.9999998928204112`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"21\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-11.9999999732051, 
                    1.000000321538764}], 
                    
                    Offset[{0, -13.5}, {-11.9999999732051, 
                    1.000000321538764}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"26\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-8.000000026794895, -0.9999997856408235}], 
                    
                    Offset[{
                    0, -13.5}, {-8.000000026794895, -0.9999997856408235}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"22\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-7.000000053589791, -1.9999998124357201`}], 
                    
                    Offset[{
                    0, -13.5}, {-7.000000053589791, -1.9999998124357201`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-14.999999973205098`, 
                    1.0000004019234552`}], 
                    
                    Offset[{0, -13.5}, {-14.999999973205098`, 
                    1.0000004019234552`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"31\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-3.000000026794896, -0.9999999196153085}], 
                    
                    Offset[{
                    0, -13.5}, {-3.000000026794896, -0.9999999196153085}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"28\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-6.000000026794895, -0.9999998392306175}], 
                    
                    Offset[{
                    0, -13.5}, {-6.000000026794895, -0.9999998392306175}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"24\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{0, -13.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"25\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    
                    Offset[{0, -13.5}, {-8.999999999999996, 
                    2.411540732620606*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"27\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-7.000000026794894, -0.9999998124357204}], 
                    Offset[{
                    0, -13.5}, {-7.000000026794894, -0.9999998124357204}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"29\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-5.000000026794895, -0.9999998660255145}], 
                    
                    Offset[{
                    0, -13.5}, {-5.000000026794895, -0.9999998660255145}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"30\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-4.000000026794896, -0.9999998928204116}], 
                    
                    Offset[{
                    0, -13.5}, {-4.000000026794896, -0.9999998928204116}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-14.9999999464102, 
                    2.000000401923455}], 
                    
                    Offset[{0, -13.5}, {-14.9999999464102, 
                    2.000000401923455}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-2.0000000267948965`, -0.9999999464102056}], 
                    
                    Offset[{
                    0, -13.5}, {-2.0000000267948965`, -0.9999999464102056}]], 
                    
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"33\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-1.0000000267948967`, -0.9999999732051026}], 
                    
                    Offset[{
                    0, -13.5}, {-1.0000000267948967`, -0.9999999732051026}]], 
                    
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-2.6794897029117842`*^-8, -0.9999999999999997}], 
                    
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-11.00000005358979, -1.999999705256132}], 
                    
                    Offset[{
                    0, -13.5}, {-11.00000005358979, -1.999999705256132}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-11.000000026794893`, -0.9999997052561324}], 
                    
                    Offset[{
                    0, -13.5}, {-11.000000026794893`, -0.9999997052561324}]], 
                    
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"6\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    
                    Offset[{0, -13.5}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"7\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-10.000000107179584`, -3.9999997320510285`}], 
                    
                    Offset[{
                    0, -13.5}, {-10.000000107179584`, -3.9999997320510285`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-10.000000080384687`, -2.999999732051029}], 
                    
                    Offset[{
                    0, -13.5}, {-10.000000080384687`, -2.999999732051029}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"9\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-10.00000005358979, -1.999999732051029}], 
                    
                    Offset[{
                    0, -13.5}, {-10.00000005358979, -1.999999732051029}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-11.449999985262803`, 
                    0.5500003068015709}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"2500\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337044`}, {-14.449999985262803`, 
                    0.5500003871862619}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334008,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-5.4559017774589655`, \
-2.9118032526846642`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337044`}, {-5.450000065647496, \
-2.4499998539678103`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334008,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-5.450000053589792, \
-1.9999998539678105`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"2500\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337052`*^-7, 
                    5.499999999999999}, {-13.449999973205099`, 
                    1.0000003603913648`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489696788555*^-8}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399287`*^-7, 
                    5.499999999999997}, {-9.450000026794893, \
-0.9999997467882227}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897078907796`*^-8}], 
                    InsetBox[
                    FormBox["\"2000\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337052`*^-7, 
                    5.499999999999999}, {-8.450000053589791, \
-1.9999997735831196`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489696788555*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-4.450000053589792, \
-1.9999998807627075`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"2500\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-12.449999973205099`, 
                    1.0000003335964678`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{1.473719339339932*^-7, 
                    5.499999999999999}, {-8.450000026794894, \
-0.9999997735831199}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907852`*^-8}], 
                    InsetBox[
                    FormBox["\"2000\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337007`*^-7, 
                    5.499999999999997}, {-7.4500000535897914`, \
-1.9999998003780164`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.679489696788547*^-8}], 
                    InsetBox[
                    FormBox["\"2500\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-14.449999973205099`, 
                    1.0000003871862617`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-3.4500000388525995`, \
-1.4499999075576047`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"250\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-11.449999973205099`, 
                    1.0000003068015708`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"8\"", "\"250\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.8890871923183172`, 
                    3.889087400733702}, {-6.450000038852599, \
-1.4499998271729138`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.707106762239694}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"250\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183172`}, {-10.449999987942292`, 
                    0.4500002800066738}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.707106762239694, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-9.449999999999996, 
                    2.532117769251636*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337066`, 
                    3.8890871923183137`}, {-8.450000014737192, \
-0.54999977358312}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396934, -0.7071068001334012}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337007`*^-7, 
                    5.499999999999997}, {-7.4500000267948945`, \
-0.9999998003780168}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.679489696788547*^-8}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399303`*^-7, 
                    5.499999999999999}, {-6.4500000267948945`, \
-0.9999998271729138}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907825`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"8\"", "\"250\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.450000026794895, \
-0.9999998539678109}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399303`*^-7, 
                    5.499999999999999}, {-4.450000026794895, \
-0.999999880762708}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907825`*^-8}], 
                    InsetBox[
                    FormBox["\"2500\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.889087192318317}, {-14.449999961147395`, 
                    1.4500003871862615`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-3.4500000267948963`, \
-0.9999999075576049}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399298`*^-7, 
                    5.499999999999999}, {-2.4500000267948963`, \
-0.9999999343525019}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897078907816`*^-8}], 
                    InsetBox[
                    FormBox["\"8\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4500000267948967`, \
-0.999999961147399}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.45000002679489687`, \
-0.9999999879422959}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-10.450000038852597`, \
-1.4499997199933254`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-10.450000026794893`, \
-0.9999997199933257}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"250\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183172`}, {-10.450000014737189`, \
-0.5499997199933259}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.707106762239694, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"2000\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-9.455901777458962, \
-2.9118031455050764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"2000\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-9.450000065647494, \
-2.4499997467882224`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"2000\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-9.45000005358979, \
-1.9999997467882227`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-14.999999999999995`, 
                    4.0192345543676764`*^-7}, {-13.999999973205098`, 
                    1.000000375128558}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.000000107179586, -3.9999998392306164`}, \
{-5.000000053589792, -1.9999998660255143`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.000000080384689, -2.999999839230617}, \
{-5.000000053589792, -1.9999998660255143`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.000000053589792, -1.999999839230617}, \
{-5.000000053589792, -1.9999998660255143`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-13.999999973205098`, 
                    1.000000375128558}, {-12.9999999732051, 
                    1.000000348333661}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.000000026794893`, -0.9999997320510293}, \
{-9.000000026794893, -0.9999997588459264}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.00000005358979, -1.9999997588459262`}, \
{-8.000000053589792, -1.9999997856408231`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.000000053589792, -1.9999998660255143`}, \
{-4.000000053589793, -1.9999998928204112`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-12.9999999732051, 
                    1.000000348333661}, {-11.9999999732051, 
                    1.000000321538764}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.000000026794893, -0.9999997588459264}, \
{-8.000000026794895, -0.9999997856408235}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.000000053589792, -1.9999997856408231`}, \
{-7.000000053589791, -1.9999998124357201`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-14.999999973205098`, 
                    1.0000004019234552`}, {-13.999999973205098`, 
                    1.000000375128558}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000053589793, -1.9999998928204112`}, \
{-3.000000026794896, -0.9999999196153085}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.9999999732051, 
                    1.000000321538764}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
250\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 250\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.000000053589791, -1.9999998124357201`}, \
{-6.000000026794895, -0.9999998392306175}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
8\[Times]250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 8\[Times]250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.9999999732051, 
                    1.000000294743867}, {-9.999999999999996, 
                    2.679489702911784*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
250\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 250\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.999999999999996, 
                    2.411540732620606*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-8.000000026794895, \
-0.9999997856408235}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.000000026794895, -0.9999997856408235}, \
{-7.000000026794894, -0.9999998124357204}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.000000026794894, -0.9999998124357204}, \
{-6.000000026794895, -0.9999998392306175}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.000000026794895, -0.9999998392306175}, \
{-5.000000026794895, -0.9999998660255145}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
8\[Times]250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 8\[Times]250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.000000026794895, -0.9999998660255145}, \
{-4.000000026794896, -0.9999998928204116}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-14.9999999464102, 
                    2.000000401923455}, {-13.999999973205098`, 
                    1.000000375128558}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000026794896, -0.9999998928204116}, \
{-3.000000026794896, -0.9999999196153085}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-2.0000000267948965`, -0.9999999464102056}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.0000000267948965`, -0.9999999464102056}, \
{-1.0000000267948967`, -0.9999999732051026}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.0000000267948967`, -0.9999999732051026}, \
{-2.6794897029117842`*^-8, -0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.00000005358979, -1.999999705256132}, \
{-10.000000026794893`, -0.9999997320510293}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.000000026794893`, -0.9999997052561324}, \
{-10.000000026794893`, -0.9999997320510293}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-10.000000026794893`, \
-0.9999997320510293}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.000000107179584`, -3.9999997320510285`}, \
{-9.00000005358979, -1.9999997588459262`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.000000080384687`, -2.999999732051029}, \
{-9.00000005358979, -1.9999997588459262`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.00000005358979, -1.999999732051029}, \
{-9.00000005358979, -1.9999997588459262`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999985262803`, 
                    0.5500003068015709}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-14.449999985262803`, 
                    0.5500003871862619}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4559017774589655`, -2.9118032526846642`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.450000065647496, -2.4499998539678103`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.450000053589792, -1.9999998539678105`}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-13.449999973205099`, 
                    1.0000003603913648`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999982, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.450000026794893, -0.9999997467882227}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.450000053589791, -1.9999997735831196`}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999982, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.450000053589792, -1.9999998807627075`}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-12.449999973205099`, 
                    1.0000003335964678`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.450000026794894, -0.9999997735831199}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999999999982, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4500000535897914`, -1.9999998003780164`}, \
{-0.25, 0}, 
                    Offset[8], {
                    1.0000000000000009`, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-14.449999973205099`, 
                    1.0000003871862617`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4500000388525995`, -1.4499999075576047`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999973205099`, 
                    1.0000003068015708`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
250\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 250\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.450000038852599, -1.4499998271729138`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
8\[Times]250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 8\[Times]250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999987942292`, 
                    0.4500002800066738}, {-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
250\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 250\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999999999996, 
                    2.532117769251636*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.450000014737192, -0.54999977358312}, {-0.25, 
                    0}, 
                    Offset[8], {0.9999999732051013, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4500000267948945`, -0.9999998003780168}, \
{-0.25, 0}, 
                    Offset[8], {
                    1.0000000000000009`, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4500000267948945`, -0.9999998271729138}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999999999991, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.450000026794895, -0.9999998539678109}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
8\[Times]250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 8\[Times]250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.450000026794895, -0.999999880762708}, {-0.25,
                     0}, 
                    Offset[8], {0.9999999999999991, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-14.449999961147395`, 
                    1.4500003871862615`}, {-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2500\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2500\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.4500000267948963`, -0.9999999075576049}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4500000267948963`, -0.9999999343525019}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4500000267948967`, -0.999999961147399}, \
{-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.45000002679489687`, -0.9999999879422959}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.450000038852597`, -1.4499997199933254`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.450000026794893`, -0.9999997199933257}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.450000014737189`, -0.5499997199933259}, \
{-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 250\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 250\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.455901777458962, -2.9118031455050764`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.450000065647494, -2.4499997467882224`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051028}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    
                    False]], {-9.45000005358979, -1.9999997467882227`}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2000\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2000\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.999999999999996`, 3.2153876434941414`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.9999999732051, 1.000000294743867}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-10.9999999732051, 
                    1.000000294743867}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"23\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["23", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-14.999999999999995`, 
                    4.0192345543676764`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-14.999999999999995`, 
                    4.0192345543676764`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-14.999999999999995`, 
                    4.0192345543676764`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-14.999999999999995`, 
                    4.0192345543676764`*^-7}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-14.999999999999995`, 
                    4.0192345543676764`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-13.999999973205098`, 1.000000375128558}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-13.999999973205098`, 1.000000375128558}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-13.999999973205098`, 
                    1.000000375128558}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"13\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["13", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-6.000000107179586, -3.9999998392306164`}], 
                    
                    Offset[{-10.5, -10.5}, {-6.000000107179586, \
-3.9999998392306164`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-6.000000107179586, -3.9999998392306164`}], 
                    
                    Offset[{10.5, 
                    10.5}, {-6.000000107179586, -3.9999998392306164`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-6.000000107179586, \
-3.9999998392306164`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["10", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-5.000000053589792, -1.9999998660255143`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-5.000000053589792, -1.9999998660255143`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5.000000053589792, \
-1.9999998660255143`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"16\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["16", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-6.000000080384689, -2.999999839230617}], 
                    
                    Offset[{-10.5, -10.5}, {-6.000000080384689, \
-2.999999839230617}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-6.000000080384689, -2.999999839230617}], 
                    
                    Offset[{10.5, 
                    10.5}, {-6.000000080384689, -2.999999839230617}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-6.000000080384689, \
-2.999999839230617}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["11", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.000000053589792, -1.999999839230617}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-6.000000053589792, \
-1.999999839230617}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"12\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["12", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-12.9999999732051, 1.000000348333661}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-12.9999999732051, 
                    1.000000348333661}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"17\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["17", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-10.000000026794893`, -0.9999997320510293}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-10.000000026794893`, -0.9999997320510293}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-10.000000026794893`, \
-0.9999997320510293}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"14\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["14", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-9.000000026794893, -0.9999997588459264}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-9.000000026794893, \
-0.9999997588459264}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"18\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["18", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-9.00000005358979, -1.9999997588459262`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-9.00000005358979, -1.9999997588459262`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-9.00000005358979, \
-1.9999997588459262`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"15\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["15", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.000000053589792, -1.9999997856408231`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.000000053589792, \
-1.9999997856408231`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"19\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["19", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.000000053589793, -1.9999998928204112`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-4.000000053589793, \
-1.9999998928204112`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"20\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["20", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-11.9999999732051, 1.000000321538764}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-11.9999999732051, 
                    1.000000321538764}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"21\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["21", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.000000026794895, -0.9999997856408235}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-8.000000026794895, \
-0.9999997856408235}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"26\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["26", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.000000053589791, -1.9999998124357201`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-7.000000053589791, \
-1.9999998124357201`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"22\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["22", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-14.999999973205098`, 
                    1.0000004019234552`}], 
                    
                    Offset[{-10.5, -10.5}, {-14.999999973205098`, 
                    1.0000004019234552`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-14.999999973205098`, 
                    1.0000004019234552`}], 
                    
                    Offset[{10.5, 10.5}, {-14.999999973205098`, 
                    1.0000004019234552`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-14.999999973205098`, 
                    1.0000004019234552`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-3.000000026794896, \
-0.9999999196153085}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"31\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["31", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.000000026794895, -0.9999998392306175}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-6.000000026794895, \
-0.9999998392306175}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"28\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["28", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-9.999999999999996, 2.679489702911784*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-9.999999999999996, 
                    2.679489702911784*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"24\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["24", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm89rE0EUx9NW0UoVfxXEk/YP8FBBBQUtWGvFYm2t+AOVJjuzTWtaSCu1
VehFwV+IICLiwUvNzK4o2oOCguBFBUFFcvCiHvTipSAoelDjm6ilO7tJNjQz
u0/3C6/N7uk7H2bevPmxK+MDHbQ6FosNzoU/Hd3DTel090jnQnjo6h9Mmv3E
aO0fIiZJr4vXwMvVEO0Qs2KhV1vQBpAr4jczVZhfrqq3117Wk7DWmwbfAXGQ
Up4khA9Qag3C76P5MNioSazjxaKyvpRpxvy6uuwa4LOHGtymhE9C5CoRlWic
Bs2In2lkmqGt2Uox+5/4EcIOQDt/qGD3r/OD8bof2vizSPs/EGLdh1zHTcKv
wfNF+H8B8tpZeH8Knk9DPjwJY/5Eoah0QxWpbH5ifoD2f/Jg9pAQe6PIhyqM
hlRl84N+NC6zMw1rrwpzCFQWP1GXuPod5WdUmUOgsvjBnJGR+L2i9MpsVeYQ
yDe/ZPL6IuD1bTo/mAuISnMI5JsfjNPDUt97OzY2Vq3SHAL550f4CynvHVNp
DIl88evpYSvkeSMeZ8tVm0MgX/zEHoCDn8EeqzaGRH75TTjqPcKGVRtDopL8
Uqm7c4DZ5+n8DCOzSoc5BCrJD2qUzfLaVuzz6TCHQCX5iTW/M/fxqzqMIVFJ
fsDrmbNuYft0GEOiovxSqfEFrj0+mlmqyxwCFeVHCG+Vcl9WlzEkKsEvv9c5
rW7hl3QZQ6Ki/IDXE2m/YLcuY0hUkF88fme+vGYTe886zSFQQX6mYW2T9gte
6zSGRAX5Qd1yzjl22WWdxpCoMD/KnzvPONguncaQyJNfX9+tJa7zyaju85In
P5hnO6W546VuY0jkyU+cezv5Wed1G0MiFz9xpgG83jvnDr49CHMI5OJHKVsr
jd0vlE7MC8IcArn4eexX2UEYQyKJX64KmL2L1my+5eBnmpmt0tj9Cmu2uqDM
IZCDH/B6IK3ZbgZlDImm+HnMG8DP3hCkOQTK8/tzxpaT5o1HQZtDoLZ8vQes
3Hf6Ms1Bmwu7GhrWpKFW/ujue9a9sJxRUmq16wxC2E6xfhV1hzgrE3eVTYMl
xDcY8G5E7EMBo6eiLm5pOeK+u0z5m0TCXhw0t79y+QtRePCbDNvdAuExrNHY
2DH1u2lTX7a+vqE79ntOCUPkFXQfK9r/tgx9FzWf2BsN6715yDu3dYeoeyHX
3TAJs8R9efENhsh7+bWtwUYhTx4Sd8Fra+s6g+aDXNH3l5EiRVKmXweTrmA=

                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.999999999999996, 
                    2.411540732620606*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"25\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["25", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.000000026794894, -0.9999998124357204}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm89rE0EUx9NW0UoVfxXEk/YP8FBBBQUtWGvFYm2t+AOVJjuzTWtaSCu1
VehFwV+IICLiwUvNzK4o2oOCguBFBUFFcvCiHvTipSAoelDjm6ilO7tJNjQz
u0/3C6/N7uk7H2bevPmxK+MDHbQ6FosNzoU/Hd3DTel090jnQnjo6h9Mmv3E
aO0fIiZJr4vXwMvVEO0Qs2KhV1vQBpAr4jczVZhfrqq3117Wk7DWmwbfAXGQ
Up4khA9Qag3C76P5MNioSazjxaKyvpRpxvy6uuwa4LOHGtymhE9C5CoRlWic
Bs2In2lkmqGt2Uox+5/4EcIOQDt/qGD3r/OD8bof2vizSPs/EGLdh1zHTcKv
wfNF+H8B8tpZeH8Knk9DPjwJY/5Eoah0QxWpbH5ifoD2f/Jg9pAQe6PIhyqM
hlRl84N+NC6zMw1rrwpzCFQWP1GXuPod5WdUmUOgsvjBnJGR+L2i9MpsVeYQ
yDe/ZPL6IuD1bTo/mAuISnMI5JsfjNPDUt97OzY2Vq3SHAL550f4CynvHVNp
DIl88evpYSvkeSMeZ8tVm0MgX/zEHoCDn8EeqzaGRH75TTjqPcKGVRtDopL8
Uqm7c4DZ5+n8DCOzSoc5BCrJD2qUzfLaVuzz6TCHQCX5iTW/M/fxqzqMIVFJ
fsDrmbNuYft0GEOiovxSqfEFrj0+mlmqyxwCFeVHCG+Vcl9WlzEkKsEvv9c5
rW7hl3QZQ6Ki/IDXE2m/YLcuY0hUkF88fme+vGYTe886zSFQQX6mYW2T9gte
6zSGRAX5Qd1yzjl22WWdxpCoMD/KnzvPONguncaQyJNfX9+tJa7zyaju85In
P5hnO6W546VuY0jkyU+cezv5Wed1G0MiFz9xpgG83jvnDr49CHMI5OJHKVsr
jd0vlE7MC8IcArn4eexX2UEYQyKJX64KmL2L1my+5eBnmpmt0tj9Cmu2uqDM
IZCDH/B6IK3ZbgZlDImm+HnMG8DP3hCkOQTK8/tzxpaT5o1HQZtDoLZ8vQes
3Hf6Ms1Bmwu7GhrWpKFW/ujue9a9sJxRUmq16wxC2E6xfhV1hzgrE3eVTYMl
xDcY8G5E7EMBo6eiLm5pOeK+u0z5m0TCXhw0t79y+QtRePCbDNvdAuExrNHY
2DH1u2lTX7a+vqE79ntOCUPkFXQfK9r/tgx9FzWf2BsN6715yDu3dYeoeyHX
3TAJs8R9efENhsh7+bWtwUYhTx4Sd8Fra+s6g+aDXNH3l5EiRVKmXweTrmA=

                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-7.000000026794894, \
-0.9999998124357204}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"27\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["27", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.000000026794895, -0.9999998660255145}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-5.000000026794895, \
-0.9999998660255145}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"29\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["29", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.000000026794896, -0.9999998928204116}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm89rE0EUx9NW0UoVfxXEk/YP8FBBBQUtWGvFYm2t+AOVJjuzTWtaSCu1
VehFwV+IICLiwUvNzK4o2oOCguBFBUFFcvCiHvTipSAoelDjm6ilO7tJNjQz
u0/3C6/N7uk7H2bevPmxK+MDHbQ6FosNzoU/Hd3DTel090jnQnjo6h9Mmv3E
aO0fIiZJr4vXwMvVEO0Qs2KhV1vQBpAr4jczVZhfrqq3117Wk7DWmwbfAXGQ
Up4khA9Qag3C76P5MNioSazjxaKyvpRpxvy6uuwa4LOHGtymhE9C5CoRlWic
Bs2In2lkmqGt2Uox+5/4EcIOQDt/qGD3r/OD8bof2vizSPs/EGLdh1zHTcKv
wfNF+H8B8tpZeH8Knk9DPjwJY/5Eoah0QxWpbH5ifoD2f/Jg9pAQe6PIhyqM
hlRl84N+NC6zMw1rrwpzCFQWP1GXuPod5WdUmUOgsvjBnJGR+L2i9MpsVeYQ
yDe/ZPL6IuD1bTo/mAuISnMI5JsfjNPDUt97OzY2Vq3SHAL550f4CynvHVNp
DIl88evpYSvkeSMeZ8tVm0MgX/zEHoCDn8EeqzaGRH75TTjqPcKGVRtDopL8
Uqm7c4DZ5+n8DCOzSoc5BCrJD2qUzfLaVuzz6TCHQCX5iTW/M/fxqzqMIVFJ
fsDrmbNuYft0GEOiovxSqfEFrj0+mlmqyxwCFeVHCG+Vcl9WlzEkKsEvv9c5
rW7hl3QZQ6Ki/IDXE2m/YLcuY0hUkF88fme+vGYTe886zSFQQX6mYW2T9gte
6zSGRAX5Qd1yzjl22WWdxpCoMD/KnzvPONguncaQyJNfX9+tJa7zyaju85In
P5hnO6W546VuY0jkyU+cezv5Wed1G0MiFz9xpgG83jvnDr49CHMI5OJHKVsr
jd0vlE7MC8IcArn4eexX2UEYQyKJX64KmL2L1my+5eBnmpmt0tj9Cmu2uqDM
IZCDH/B6IK3ZbgZlDImm+HnMG8DP3hCkOQTK8/tzxpaT5o1HQZtDoLZ8vQes
3Hf6Ms1Bmwu7GhrWpKFW/ujue9a9sJxRUmq16wxC2E6xfhV1hzgrE3eVTYMl
xDcY8G5E7EMBo6eiLm5pOeK+u0z5m0TCXhw0t79y+QtRePCbDNvdAuExrNHY
2DH1u2lTX7a+vqE79ntOCUPkFXQfK9r/tgx9FzWf2BsN6715yDu3dYeoeyHX
3TAJs8R9efENhsh7+bWtwUYhTx4Sd8Fra+s6g+aDXNH3l5EiRVKmXweTrmA=

                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-4.000000026794896, \
-0.9999998928204116}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"30\"", Bold, StripOnInput -> False]}, {
                    StyleBox["ElementwiseLayer", FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["30", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-14.9999999464102, 2.000000401923455}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-14.9999999464102, 
                    2.000000401923455}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.0000000267948965`, -0.9999999464102056}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm89rE0EUx9NW0UoVfxXEk/YP8FBBBQUtWGvFYm2t+AOVJjuzTWtaSCu1
VehFwV+IICLiwUvNzK4o2oOCguBFBUFFcvCiHvTipSAoelDjm6ilO7tJNjQz
u0/3C6/N7uk7H2bevPmxK+MDHbQ6FosNzoU/Hd3DTel090jnQnjo6h9Mmv3E
aO0fIiZJr4vXwMvVEO0Qs2KhV1vQBpAr4jczVZhfrqq3117Wk7DWmwbfAXGQ
Up4khA9Qag3C76P5MNioSazjxaKyvpRpxvy6uuwa4LOHGtymhE9C5CoRlWic
Bs2In2lkmqGt2Uox+5/4EcIOQDt/qGD3r/OD8bof2vizSPs/EGLdh1zHTcKv
wfNF+H8B8tpZeH8Knk9DPjwJY/5Eoah0QxWpbH5ifoD2f/Jg9pAQe6PIhyqM
hlRl84N+NC6zMw1rrwpzCFQWP1GXuPod5WdUmUOgsvjBnJGR+L2i9MpsVeYQ
yDe/ZPL6IuD1bTo/mAuISnMI5JsfjNPDUt97OzY2Vq3SHAL550f4CynvHVNp
DIl88evpYSvkeSMeZ8tVm0MgX/zEHoCDn8EeqzaGRH75TTjqPcKGVRtDopL8
Uqm7c4DZ5+n8DCOzSoc5BCrJD2qUzfLaVuzz6TCHQCX5iTW/M/fxqzqMIVFJ
fsDrmbNuYft0GEOiovxSqfEFrj0+mlmqyxwCFeVHCG+Vcl9WlzEkKsEvv9c5
rW7hl3QZQ6Ki/IDXE2m/YLcuY0hUkF88fme+vGYTe886zSFQQX6mYW2T9gte
6zSGRAX5Qd1yzjl22WWdxpCoMD/KnzvPONguncaQyJNfX9+tJa7zyaju85In
P5hnO6W546VuY0jkyU+cezv5Wed1G0MiFz9xpgG83jvnDr49CHMI5OJHKVsr
jd0vlE7MC8IcArn4eexX2UEYQyKJX64KmL2L1my+5eBnmpmt0tj9Cmu2uqDM
IZCDH/B6IK3ZbgZlDImm+HnMG8DP3hCkOQTK8/tzxpaT5o1HQZtDoLZ8vQes
3Hf6Ms1Bmwu7GhrWpKFW/ujue9a9sJxRUmq16wxC2E6xfhV1hzgrE3eVTYMl
xDcY8G5E7EMBo6eiLm5pOeK+u0z5m0TCXhw0t79y+QtRePCbDNvdAuExrNHY
2DH1u2lTX7a+vqE79ntOCUPkFXQfK9r/tgx9FzWf2BsN6715yDu3dYeoeyHX
3TAJs8R9efENhsh7+bWtwUYhTx4Sd8Fra+s6g+aDXNH3l5EiRVKmXweTrmA=

                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-2.0000000267948965`, \
-0.9999999464102056}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"32\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["32", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.0000000267948967`, -0.9999999732051026}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-1.0000000267948967`, \
-0.9999999732051026}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"33\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["33", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.6794897029117842`*^-8, -0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-11.00000005358979, -1.999999705256132}], 
                    
                    Offset[{-10.5, -10.5}, {-11.00000005358979, \
-1.999999705256132}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-11.00000005358979, -1.999999705256132}], 
                    
                    Offset[{10.5, 
                    10.5}, {-11.00000005358979, -1.999999705256132}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-11.00000005358979, \
-1.999999705256132}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 30), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-11.000000026794893`, -0.9999997052561324}], 
                    
                    Offset[{-10.5, -10.5}, {-11.000000026794893`, \
-0.9999997052561324}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-11.000000026794893`, -0.9999997052561324}], 
                    Offset[{10.5, 
                    10.5}, {-11.000000026794893`, -0.9999997052561324}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-11.000000026794893`, \
-0.9999997052561324}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 31), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.999999999999996`, 2.9474386732029625`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["6", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 32), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-10.000000107179584`, -3.9999997320510285`}], 
                    
                    Offset[{-10.5, -10.5}, {-10.000000107179584`, \
-3.9999997320510285`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-10.000000107179584`, -3.9999997320510285`}], 
                    
                    Offset[{10.5, 
                    10.5}, {-10.000000107179584`, -3.9999997320510285`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-10.000000107179584`, \
-3.9999997320510285`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["7", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 33), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-10.000000080384687`, -2.999999732051029}], 
                    
                    Offset[{-10.5, -10.5}, {-10.000000080384687`, \
-2.999999732051029}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-10.000000080384687`, -2.999999732051029}], 
                    
                    Offset[{10.5, 
                    10.5}, {-10.000000080384687`, -2.999999732051029}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-10.000000080384687`, \
-2.999999732051029}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["8", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 34), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.00000005358979, -1.999999732051029}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-10.00000005358979, \
-1.999999732051029}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["9", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 35), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ/e8/CKgfOHXycsG/yVPtUq5KAvmqBz4tkfNnYPhg
/xcsr3vAZg8H778fs+ySwfLaB5IWb0oByZ8LMWRnYJA40MOY8+r/f/4Daatm
MDMwiBx4E855B6hw/6z/Kawg+V6wPDtUXuKANPONKyB5iH2aByb5NcaCzJuh
9QzoKpUD2+NVC/7/f78fwlc6EMHZUQfiG4WeYQTxV7O47AfpNwbzFQ5UR5Ye
A/HTweYLHNizxuoxwnz1A4d++oeBzJ8JNk/hwM9Nr3pA5qWC1csc8F637CxI
PcR/ugeMfzzOBqmHuJcD6l6Y/RIHrNg2rATxIeGnfKC2dgNHyO+JdhC+4oHw
6/Ou/NObYGcIVi9zYGaM72yEfpEDt9YL7QDxIe4XgLr//f6Tq4z/geyX/PPR
FOhQB4h/GKD+eb//PDi8P+yPCZv7EcRPSpJyDD4asw8STzDz1Q5wRT/cAPIP
JPzUDohvO5SIcK/qgcXKh2xWHp9sB/GfCjS++A+cqd/EBOK/BfPZD0DMU4G6
9/9+AIAWMIg=
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 25, 21, 25, 21, 21, 21, 25, 21, 25, 21, 
                    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 
                    21, 8, 21, 21, 21, 21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {882.9999985262804, 378.0000132634739}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {True, False}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {800, Automatic}]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "1" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "2" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2500}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2500}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "3" -> <|"Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{250}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {250}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "5" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{250}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {250}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "6" -> <|"Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`RealT]|>|>, 
                    "7" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2000}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2000}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "8" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{2000}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {2000}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "9" -> <|"Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`RealT]|>|>, 
                    "10" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "11" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "12" -> <|"Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "13" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2500}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "14" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>|>|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "15" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{2000}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "16" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT],
                     "Sigma" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "17" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {2500}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "18" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "19" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {2000}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "20" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "21" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{250, 10}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2500}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "22" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{8, 250}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2000}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "23" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{250, 10}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "24" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250, 10}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "25" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "26" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "27" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], 
                    "$Dimensions" -> {250}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "28" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{250}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8, 250}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "29" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8, 250}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "30" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "31" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "32" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    LogisticSigmoid[4 (-1 + 2 #)]& ], "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>|>, 
                    "33" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 4}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 4}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "23", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "13", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "13", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "14", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "14", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "15", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath[
                    "Nodes", "15", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "16", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "22", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "31", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "22", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "24", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "23", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "25", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "24", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "26", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "25", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "27", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "26", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "28", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "27", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "29", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "28", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "30", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "29", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "31", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "30", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "32", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "31", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "33", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "32", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "33", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "23"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "13"], 
                    NeuralNetworks`NetPath["Nodes", "10"], 
                    NeuralNetworks`NetPath["Nodes", "16"], 
                    NeuralNetworks`NetPath["Nodes", "11"], 
                    NeuralNetworks`NetPath["Nodes", "12"], 
                    NeuralNetworks`NetPath["Nodes", "17"], 
                    NeuralNetworks`NetPath["Nodes", "14"], 
                    NeuralNetworks`NetPath["Nodes", "18"], 
                    NeuralNetworks`NetPath["Nodes", "15"], 
                    NeuralNetworks`NetPath["Nodes", "19"], 
                    NeuralNetworks`NetPath["Nodes", "20"], 
                    NeuralNetworks`NetPath["Nodes", "21"], 
                    NeuralNetworks`NetPath["Nodes", "26"], 
                    NeuralNetworks`NetPath["Nodes", "22"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "31"], 
                    NeuralNetworks`NetPath["Nodes", "28"], 
                    NeuralNetworks`NetPath["Nodes", "24"], 
                    NeuralNetworks`NetPath["Nodes", "25"], 
                    NeuralNetworks`NetPath["Nodes", "27"], 
                    NeuralNetworks`NetPath["Nodes", "29"], 
                    NeuralNetworks`NetPath["Nodes", "30"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "32"], 
                    NeuralNetworks`NetPath["Nodes", "33"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "7"], 
                    NeuralNetworks`NetPath["Nodes", "8"], 
                    NeuralNetworks`NetPath["Nodes", "9"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "23"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "13"], 
                    NeuralNetworks`NetPath["Nodes", "10"], 
                    NeuralNetworks`NetPath["Nodes", "16"], 
                    NeuralNetworks`NetPath["Nodes", "11"], 
                    NeuralNetworks`NetPath["Nodes", "12"], 
                    NeuralNetworks`NetPath["Nodes", "17"], 
                    NeuralNetworks`NetPath["Nodes", "14"], 
                    NeuralNetworks`NetPath["Nodes", "18"], 
                    NeuralNetworks`NetPath["Nodes", "15"], 
                    NeuralNetworks`NetPath["Nodes", "19"], 
                    NeuralNetworks`NetPath["Nodes", "20"], 
                    NeuralNetworks`NetPath["Nodes", "21"], 
                    NeuralNetworks`NetPath["Nodes", "26"], 
                    NeuralNetworks`NetPath["Nodes", "22"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "31"], 
                    NeuralNetworks`NetPath["Nodes", "28"], 
                    NeuralNetworks`NetPath["Nodes", "24"], 
                    NeuralNetworks`NetPath["Nodes", "25"], 
                    NeuralNetworks`NetPath["Nodes", "27"], 
                    NeuralNetworks`NetPath["Nodes", "29"], 
                    NeuralNetworks`NetPath["Nodes", "30"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Nodes", "32"], 
                    NeuralNetworks`NetPath["Nodes", "33"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Nodes", "6"], 
                    NeuralNetworks`NetPath["Nodes", "7"], 
                    NeuralNetworks`NetPath["Nodes", "8"], 
                    NeuralNetworks`NetPath["Nodes", "9"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868411057252934*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"f88733b9-5b3e-4593-92e1-da98cff594b9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.86680041674398*^9}},ExpressionUUID->"ef5026cf-d3fa-473c-a6d2-\
fd3ceabc2c77"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"softPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"trainedSoftNet", "[", 
         RowBox[{"First", "[", "#", "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardenedPredictionTargetPairs", "=", 
   RowBox[{"Harden", "[", "softPredictionTargetPairs", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "/@", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"RandomSample", "[", 
       RowBox[{"hardenedPredictionTargetPairs", ",", "5"}], "]"}], ",", "1"}],
      "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{"True", "->", 
     RowBox[{"Style", "[", 
      RowBox[{"True", ",", "Red"}], "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.861598551906061*^9, 3.8615985567851887`*^9}, {
   3.863178625879333*^9, 3.8631786268708572`*^9}, {3.863240306853362*^9, 
   3.863240307588504*^9}, {3.8647943299915457`*^9, 3.864794330447215*^9}, {
   3.864794373237455*^9, 3.864794410229562*^9}, {3.864825813950893*^9, 
   3.8648258236291018`*^9}, {3.86505446234156*^9, 3.865054476285439*^9}, {
   3.86505502598845*^9, 3.865055037244231*^9}, {3.8650600546900873`*^9, 
   3.8650600574960833`*^9}, {3.865421281430146*^9, 3.865421283958905*^9}, {
   3.866604469348693*^9, 3.866604469491571*^9}, {3.866604715196765*^9, 
   3.8666047309003077`*^9}, {3.8668003939552097`*^9, 3.86680039453754*^9}, {
   3.866863741581986*^9, 3.866863750762281*^9}, 3.866865427474077*^9, {
   3.8683616889636908`*^9, 3.868361689132121*^9}},
 CellLabel->
  "In[114]:=",ExpressionUUID->"83a191b0-e40c-4fb5-b1f9-ccd397e52042"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 62.5%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "19"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "12"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "6"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "3"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866604740014987*^9, 3.866604827512426*^9, 3.866604892766753*^9, 
   3.866604948159389*^9, 3.866605027608502*^9, 3.8666050797060127`*^9, 
   3.8666051270238*^9, 3.866605306478503*^9, 3.866605351838655*^9, 
   3.866605404161014*^9, 3.866613913674348*^9, 3.8666139705107*^9, 
   3.8666257065730343`*^9, 3.86662574134376*^9, 3.8666257777013702`*^9, 
   3.866625909825324*^9, 3.866625956361196*^9, 3.866626070645979*^9, 
   3.866626120217812*^9, {3.866634635480035*^9, 3.8666346577282267`*^9}, 
   3.866634835967009*^9, 3.8666348822118883`*^9, 3.866635025677926*^9, 
   3.866800397397952*^9, 3.866802676908917*^9, 3.866862761074505*^9, 
   3.866863136267887*^9, 3.866863751771923*^9, 3.866863953699317*^9, 
   3.867589280643219*^9, 3.867671666206935*^9, 3.868083027246509*^9, 
   3.868361690186409*^9, 3.8683619143664494`*^9, 3.868362227139744*^9, 
   3.868362260154688*^9, 3.8683624847840557`*^9, 3.8684102473316793`*^9, {
   3.868410306389978*^9, 3.868410327656372*^9}, 3.8684104865363493`*^9, 
   3.868410568955965*^9, 3.868410635419859*^9, {3.868411019285528*^9, 
   3.8684110319771852`*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"76388542-9eb9-4306-b880-cb3a1d53419e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Subsection",
 CellChangeTimes->{{3.864793756054949*^9, 3.864793759486944*^9}, {
  3.864793999069639*^9, 3.8647940005418167`*^9}, {3.86479404330995*^9, 
  3.864794044933494*^9}, {3.864794315714326*^9, 3.8647943165808363`*^9}, {
  3.866800415776203*^9, 
  3.8668004242321167`*^9}},ExpressionUUID->"aedaa5e1-1481-4153-8a9a-\
7340dfa910d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hardPredictionTargetPairs", "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["DynamicMap", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"4.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://www.wolframcloud.com/obj/resourcesystem/\
published/FunctionRepository/resources/DynamicMap"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "DynamicMap"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "DynamicMap", "ShortName" -> "DynamicMap", "UUID" -> 
        "962b5001-b624-4bc4-9b1e-401e550f4f2b", "ResourceType" -> "Function", 
        "Version" -> "4.0.0", "Description" -> 
        "Map functions over lists while showing dynamic progress", 
        "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/objects/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$f51668a7ac6041a9b46390842a7243d8`DynamicMap", 
        "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/9d55b90e-e3c6-4d27-bdcf-\
8c3ebb4fe19a"]|>, ResourceSystemBase -> Automatic]],
     Selectable->False], "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hnf", "[", 
         RowBox[{"Harden", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], ",", 
        RowBox[{"Last", "[", "#", "]"}]}], "}"}], "&"}], ",", "testData"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"HardResults", "[", "hardenedPredictionTargetPairs", "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.86680194442417*^9, 3.866801959585536*^9}, 
   3.8668020564125566`*^9, 3.8668021880135727`*^9, 3.86680224094079*^9, {
   3.866862414056994*^9, 3.866862435758893*^9}, 3.8668631732132587`*^9, 
   3.866863454099498*^9, {3.866863887767027*^9, 3.866863891596203*^9}},
 CellLabel->"In[80]:=",ExpressionUUID->"75f9651e-a0eb-4d63-a6ab-7f292ab49187"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Accuracy = 95.%\"\>"},
    {
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}], "\[Rule]", "21"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "17"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", "1"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "1"}]}], 
      "\[RightAssociation]"}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866863904017839*^9, 3.866863961760541*^9, 3.8675892984722157`*^9, 
   3.86767169281933*^9, 3.868361698871398*^9, {3.868361917822958*^9, 
   3.868361933207971*^9}, 3.8683622302754173`*^9, {3.868362262276*^9, 
   3.868362268771079*^9}, 3.868362487698016*^9, 3.868410250177473*^9, {
   3.868410310040957*^9, 3.868410330913924*^9}, 3.868410488272045*^9, 
   3.86841057140838*^9, 3.868410637139415*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"7ad78ee0-e734-4468-8cb2-ec04655431b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SpaceSaving", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.8668642342489862`*^9, 3.8668642483212557`*^9}, {
  3.866864301980486*^9, 3.866864302505608*^9}, {3.866864406655108*^9, 
  3.86686453684363*^9}, {3.866864775311109*^9, 3.866864778850369*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"653d89c7-18c0-4eb6-8f2f-18461069c675"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Soft net size = 5.2 kilobytes\"\>"},
    {"\<\"Hard net size = 0.1625 kilobytes\"\>"},
    {"\<\"Saving factor = 32.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.866864249947411*^9, 3.8668643028534403`*^9, 3.866864414235868*^9, 
   3.866864445660204*^9, {3.866864494244638*^9, 3.866864537301672*^9}, 
   3.866864595971245*^9, 3.866864779447701*^9, 3.867590966091876*^9, 
   3.868361701943183*^9, 3.868410255904086*^9, 3.8684104927220297`*^9, 
   3.868410572746669*^9, 3.868410639061859*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"21cd0e2b-5cc8-4056-aae9-b92f8f8680a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"boolNet", "=", 
  RowBox[{"hnf", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<b\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "inputSize"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->"In[84]:=",ExpressionUUID->"19fb0538-abb5-447b-a710-5d81fa013a2c"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{"Majority", "[", 
               RowBox[{
                 RowBox[{"Majority", "[", 
                   
                   RowBox[{
                    "b1", ",", "b10", ",", "b2", ",", "b3", ",", "b4", ",", 
                    "b5", ",", "b6", ",", "b7", ",", "b8", ",", "b9"}], "]"}],
                  ",", 
                 RowBox[{"Majority", "[", 
                   
                   RowBox[{
                    "b1", ",", "b10", ",", "b2", ",", "b3", ",", "b4", ",", 
                    "b5", ",", "b6", ",", "b7", ",", "b8", ",", "b9"}], "]"}],
                  ",", 
                 RowBox[{"Majority", "[", 
                   
                   RowBox[{
                    "b1", ",", "b10", ",", "b2", ",", "b3", ",", "b4", ",", 
                    "b5", ",", "b6", ",", "b7", ",", "b8", ",", "b9"}], "]"}],
                  ",", 
                 RowBox[{"Majority", "[", 
                   
                   RowBox[{
                    "b1", ",", "b10", ",", "b2", ",", "b3", ",", "b4", ",", 
                    "b5", ",", "b6", ",", "b7", ",", "b8", ",", "b9"}], "]"}],
                  ",", 
                 RowBox[{"Majority", "[", 
                   
                   RowBox[{
                    "b1", ",", "b10", ",", "b2", ",", "b3", ",", "b4", ",", 
                    "b5", ",", "b6", ",", "b7", ",", "b8", ",", "b9"}], "]"}],
                  ",", 
                 RowBox[{"Majority", "[", 
                   
                   RowBox[{
                    "b1", ",", "b10", ",", "b2", ",", "b3", ",", "b4", ",", 
                    "b5", ",", "b6", ",", "b7", ",", "b8", ",", "b9"}], "]"}],
                  ",", 
                 TemplateBox[{"38"}, "OutputSizeLimit`Skeleton"], ",", 
                 RowBox[{"Majority", "[", 
                   RowBox[{
                    RowBox[{"!", "b1"}], ",", 
                    RowBox[{"!", "b10"}], ",", 
                    RowBox[{"!", "b2"}], ",", 
                    RowBox[{"!", "b3"}], ",", 
                    RowBox[{"!", "b4"}], ",", 
                    RowBox[{"!", "b5"}], ",", 
                    RowBox[{"!", "b6"}], ",", 
                    RowBox[{"!", "b7"}], ",", 
                    RowBox[{"!", "b8"}], ",", 
                    RowBox[{"!", "b9"}]}], "]"}], ",", 
                 RowBox[{"Majority", "[", 
                   RowBox[{
                    RowBox[{"!", "b1"}], ",", 
                    RowBox[{"!", "b10"}], ",", 
                    RowBox[{"!", "b2"}], ",", 
                    RowBox[{"!", "b3"}], ",", 
                    RowBox[{"!", "b4"}], ",", 
                    RowBox[{"!", "b5"}], ",", 
                    RowBox[{"!", "b6"}], ",", 
                    RowBox[{"!", "b7"}], ",", 
                    RowBox[{"!", "b8"}], ",", 
                    RowBox[{"!", "b9"}]}], "]"}], ",", 
                 RowBox[{"Majority", "[", 
                   RowBox[{
                    RowBox[{"!", "b1"}], ",", 
                    RowBox[{"!", "b10"}], ",", 
                    RowBox[{"!", "b2"}], ",", 
                    RowBox[{"!", "b3"}], ",", 
                    RowBox[{"!", "b4"}], ",", 
                    RowBox[{"!", "b5"}], ",", 
                    RowBox[{"!", "b6"}], ",", 
                    RowBox[{"!", "b7"}], ",", 
                    RowBox[{"!", "b8"}], ",", 
                    RowBox[{"!", "b9"}]}], "]"}], ",", 
                 RowBox[{"Majority", "[", 
                   RowBox[{
                    RowBox[{"!", "b1"}], ",", 
                    RowBox[{"!", "b10"}], ",", 
                    RowBox[{"!", "b2"}], ",", 
                    RowBox[{"!", "b3"}], ",", 
                    RowBox[{"!", "b4"}], ",", 
                    RowBox[{"!", "b5"}], ",", 
                    RowBox[{"!", "b6"}], ",", 
                    RowBox[{"!", "b7"}], ",", 
                    RowBox[{"!", "b8"}], ",", 
                    RowBox[{"!", "b9"}]}], "]"}], ",", 
                 RowBox[{"Majority", "[", 
                   RowBox[{
                    RowBox[{"!", "b1"}], ",", 
                    RowBox[{"!", "b10"}], ",", 
                    RowBox[{"!", "b2"}], ",", 
                    RowBox[{"!", "b3"}], ",", 
                    RowBox[{"!", "b4"}], ",", 
                    RowBox[{"!", "b5"}], ",", 
                    RowBox[{"!", "b6"}], ",", 
                    RowBox[{"!", "b7"}], ",", 
                    RowBox[{"!", "b8"}], ",", 
                    RowBox[{"!", "b9"}]}], "]"}], ",", 
                 RowBox[{"Majority", "[", 
                   RowBox[{
                    RowBox[{"!", "b1"}], ",", 
                    RowBox[{"!", "b10"}], ",", 
                    RowBox[{"!", "b2"}], ",", 
                    RowBox[{"!", "b3"}], ",", 
                    RowBox[{"!", "b4"}], ",", 
                    RowBox[{"!", "b5"}], ",", 
                    RowBox[{"!", "b6"}], ",", 
                    RowBox[{"!", "b7"}], ",", 
                    RowBox[{"!", "b8"}], ",", 
                    RowBox[{"!", "b9"}]}], "]"}]}], "]"}], ",", 
             TemplateBox[{"6"}, "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"Majority", "[", 
               TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "]"}]}], "}"}],
          ",", 
         RowBox[{"{", 
           TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], "}"}]}], "}"}], 
     Short[#, 5]& ], "line" -> 84, "sessionID" -> 32545096924591972647, 
   "byteCount" -> 269032, "size" -> 5, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.868361725915637*^9, 3.868362023740739*^9, 
  3.8683622718290453`*^9, 3.8683624928840437`*^9, 3.8684102572843437`*^9, 
  3.868410495543437*^9, 3.868410573837557*^9, 3.8684106410099697`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"4fd2a7c2-4659-4995-b9b0-f338806259f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BooleanConvert", "[", "boolNet", "]"}]], "Input",
 CellChangeTimes->{{3.868410646183634*^9, 3.868410651220463*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"975b70b9-6561-4320-be2e-c1d364a54c6a"],

Cell[BoxData[
 TemplateBox[<|"shortenedBoxes" -> TagBox[
     RowBox[{"{", 
       RowBox[{
         RowBox[{"{", 
           RowBox[{
             RowBox[{
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&",
                    "b5"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&",
                    "b6"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&",
                    "b6"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b3", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&",
                    "b6"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b4", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b5", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b5", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b5", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b5", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b5", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b5", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b2", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b6"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b4", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b5", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b5", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b5", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b5", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b5", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b5", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b3", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b5", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b5", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b5", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b4", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b5", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b5", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b10", "&&", "b6", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", 
                   "b6"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", 
                   "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&", 
                   "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&", 
                   "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b3", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b4", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b5", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b5", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b2", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b4", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b5", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b3", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b4", "&&", "b5", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b4", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b1", "&&", "b5", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b6"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b4", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b5", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b3", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b5", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b4", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b5", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b5", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b2", "&&", "b6", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b4", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b5", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b3", "&&", "b6", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b4", "&&", "b5", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b4", "&&", "b6", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b10", "&&", "b5", "&&", "b6", "&&", "b7", "&&", "b8", "&&",
                    "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b7"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b5", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b4", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b5", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b5", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 RowBox[{
                  "b2", "&&", "b3", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b4", "&&", "b5", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b4", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b2", "&&", "b5", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b8"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b3", "&&", "b4", "&&", "b5", "&&", "b6", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b3", "&&", "b4", "&&", "b5", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b3", "&&", "b4", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b3", "&&", "b5", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}], "||", 
               RowBox[{"(", 
                 
                 RowBox[{
                  "b4", "&&", "b5", "&&", "b6", "&&", "b7", "&&", "b8", "&&", 
                   "b9"}], ")"}]}], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "}"}], ",", 
         RowBox[{"{", 
           RowBox[{
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"], ",", 
             TemplateBox[{"1"}, "OutputSizeLimit`Skeleton"]}], "}"}]}], "}"}],
      Short[#, 80]& ], "line" -> 85, "sessionID" -> 32545096924591972647, 
   "byteCount" -> 636632, "size" -> 80, "stored" -> False, "expr" -> 
   Missing["NotAvailable", "NewSessionID"], "wrap" -> OutputSizeLimit`Defer, 
   "version" -> 1|>,
  "OutputSizeLimitTemplate"]], "Output",
 CellChangeTimes->{3.8684106523223543`*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"454ed177-30f1-4702-bd8a-76a27a925d2c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a91410a-fdc1-4cfe-a437-7a311bcf3ad2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[797, 28, 629, 13, 59, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[CellGroupData[{
Cell[1451, 45, 202, 3, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1656, 50, 23763, 530, 269, "Output",ExpressionUUID->"cd2722d1-d772-4469-be63-d0eebb069d1d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25456, 585, 204, 4, 69, "Chapter",ExpressionUUID->"3104f7e3-d1cf-444c-857d-f3d3d76d7c7a"],
Cell[CellGroupData[{
Cell[25685, 593, 466, 9, 29, "Input",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],
Cell[26154, 604, 127461, 2370, 652, "Output",ExpressionUUID->"98c2f6ee-f813-4a1b-9a70-faa6d86edcbb"]
}, Open  ]],
Cell[153630, 2977, 8493, 202, 37, "Input",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162160, 3184, 317, 5, 69, "Chapter",ExpressionUUID->"fc79f348-c5f7-48d3-80d6-e4dab5b13de8"],
Cell[162480, 3191, 2784, 69, 216, "Input",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165301, 3265, 355, 6, 69, "Chapter",ExpressionUUID->"1674350a-bfdf-4c15-99d4-bba009f90f57"],
Cell[165659, 3273, 1648, 33, 133, "Input",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],
Cell[167310, 3308, 2706, 58, 198, "Input",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],
Cell[170019, 3368, 1073, 25, 117, "Input",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171129, 3398, 355, 6, 69, "Chapter",ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-772879a58a20"],
Cell[171487, 3406, 1166, 27, 133, "Input",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172690, 3438, 456, 7, 69, "Chapter",ExpressionUUID->"b925ae5d-4091-4d4b-a37f-d801edc11fc9"],
Cell[173149, 3447, 1751, 32, 97, "Input",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],
Cell[CellGroupData[{
Cell[174925, 3483, 855, 13, 29, "Input",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],
Cell[175783, 3498, 233330, 4327, 495, "Output",ExpressionUUID->"f5a22ce3-54e4-45a2-bd4a-554484c3e1ea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[409162, 7831, 507, 8, 69, "Chapter",ExpressionUUID->"161daabc-615f-418f-a171-832b4a2218d6"],
Cell[CellGroupData[{
Cell[409694, 7843, 294, 5, 29, "Input",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],
Cell[409991, 7850, 3182, 67, 200, "Output",ExpressionUUID->"76b180f9-7ae4-4678-b5c1-b027d5ac14ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413210, 7922, 278, 4, 29, "Input",ExpressionUUID->"78237fdf-a58b-42a3-8484-e3e957616053"],
Cell[413491, 7928, 221, 3, 33, "Output",ExpressionUUID->"146b0d90-0a45-4cba-8f44-b9b17cdbb147"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413761, 7937, 207, 4, 69, "Chapter",ExpressionUUID->"c980f6be-656d-464c-97de-7bbd91e03ade"],
Cell[413971, 7943, 2717, 72, 187, "Input",ExpressionUUID->"a640c9f1-9738-4c46-b19d-979750434b3f"],
Cell[CellGroupData[{
Cell[416713, 8019, 537, 13, 29, "Input",ExpressionUUID->"f98077b4-8d7e-401d-8481-6508057768cf"],
Cell[417253, 8034, 193, 3, 33, "Output",ExpressionUUID->"e4ae1fb4-c0bc-4bf3-89db-46ae92637e0c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417483, 8042, 493, 12, 29, "Input",ExpressionUUID->"d9b20918-29d1-46bd-b70f-acfd27b2c0a3"],
Cell[417979, 8056, 221, 4, 33, "Output",ExpressionUUID->"37311f9f-d207-4160-970d-ddd98433cd87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418237, 8065, 489, 13, 29, "Input",ExpressionUUID->"cf906399-5828-4b87-80e7-ddc37d71aa2a"],
Cell[418729, 8080, 77, 0, 34, "Output",ExpressionUUID->"a059d7eb-fb26-44d7-914e-ed15b2f67445"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[418855, 8086, 156, 3, 58, "Chapter",ExpressionUUID->"e172cf77-104a-417b-9e8b-0895cfdd6efc"],
Cell[CellGroupData[{
Cell[419036, 8093, 167, 3, 67, "Section",ExpressionUUID->"ea4901f7-e0c3-4d87-b293-6cf447e04ea7"],
Cell[CellGroupData[{
Cell[419228, 8100, 13448, 296, 162, "Input",ExpressionUUID->"a1d35da7-df69-4f5a-aded-2375da917235"],
Cell[432679, 8398, 131, 3, 26, "Echo",ExpressionUUID->"c5a032b3-c31d-4116-ae58-de03d5f9c5af"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[432859, 8407, 213, 4, 53, "Section",ExpressionUUID->"741eda3f-af0a-4750-965a-e5d5e10c6c4b"],
Cell[CellGroupData[{
Cell[433097, 8415, 254, 4, 54, "Subsection",ExpressionUUID->"78cdb806-63d5-4627-b46f-81c4507b63c2"],
Cell[433354, 8421, 331, 8, 29, "Input",ExpressionUUID->"58a7a509-6e27-4603-86a4-437a1775943b"],
Cell[433688, 8431, 6292, 100, 133, "Input",ExpressionUUID->"9f7ed563-e3db-4f0c-b6ae-311c23f293e5"],
Cell[439983, 8533, 2954, 51, 154, "Input",ExpressionUUID->"278acab4-3241-466c-905c-bc0ec791ddf1"],
Cell[CellGroupData[{
Cell[442962, 8588, 13455, 188, 32, "Input",ExpressionUUID->"e3c08978-37d7-4772-8ade-495439d8bdfc"],
Cell[456420, 8778, 176828, 3299, 68, "Output",ExpressionUUID->"0fbf3e9d-d270-4cd8-a5d9-e21551f6c72b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[633297, 12083, 302, 5, 54, "Subsection",ExpressionUUID->"f41264f3-0416-47d7-bf15-5c0bdda1b4b1"],
Cell[633602, 12090, 16419, 233, 133, "Input",ExpressionUUID->"7672c6d3-df1d-405b-9e2a-90aa6887df6d"],
Cell[CellGroupData[{
Cell[650046, 12327, 446, 9, 29, "Input",ExpressionUUID->"9dfbfa0c-b8e2-42c4-ae5a-99e0b63edb66"],
Cell[650495, 12338, 55134, 1023, 68, "Output",ExpressionUUID->"9cb79cb9-2b64-4e90-9ca3-124ca7d16c1f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705666, 13366, 225, 4, 29, "Input",ExpressionUUID->"03b20ea2-f844-4684-8be9-d62af227f5d2"],
Cell[705894, 13372, 572791, 12057, 68, "Output",ExpressionUUID->"f88733b9-5b3e-4593-92e1-da98cff594b9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1278734, 25435, 360, 6, 54, "Subsection",ExpressionUUID->"ef5026cf-d3fa-473c-a6d2-fd3ceabc2c77"],
Cell[CellGroupData[{
Cell[1279119, 25445, 9886, 234, 99, "Input",ExpressionUUID->"83a191b0-e40c-4fb5-b1f9-ccd397e52042"],
Cell[1289008, 25681, 1946, 42, 54, "Output",ExpressionUUID->"76388542-9eb9-4306-b880-cb3a1d53419e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1291003, 25729, 363, 6, 54, "Subsection",ExpressionUUID->"aedaa5e1-1481-4153-8a9a-7340dfa910d6"],
Cell[CellGroupData[{
Cell[1291391, 25739, 9019, 215, 78, "Input",ExpressionUUID->"75f9651e-a0eb-4d63-a6ab-7f292ab49187"],
Cell[1300413, 25956, 1247, 31, 54, "Output",ExpressionUUID->"7ad78ee0-e734-4468-8cb2-ec04655431b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301697, 25992, 369, 5, 29, "Input",ExpressionUUID->"653d89c7-18c0-4eb6-8f2f-18461069c675"],
Cell[1302069, 25999, 779, 16, 80, "Output",ExpressionUUID->"21cd0e2b-5cc8-4056-aae9-b92f8f8680a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302885, 26020, 409, 11, 29, "Input",ExpressionUUID->"19fb0538-abb5-447b-a710-5d81fa013a2c"],
Cell[1303297, 26033, 6081, 131, 184, "Output",ExpressionUUID->"4fd2a7c2-4659-4995-b9b0-f338806259f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1309415, 26169, 218, 3, 29, "Input",ExpressionUUID->"975b70b9-6561-4320-be2e-c1d364a54c6a"],
Cell[1309636, 26174, 42254, 1078, 961, "Output",ExpressionUUID->"454ed177-30f1-4702-bd8a-76a27a925d2c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

