(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1999159,      39261]
NotebookOptionsPosition[   1988530,      39090]
NotebookOutlinePosition[   1988991,      39108]
CellTagsIndexPosition[   1988948,      39105]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Logic Networks", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 3.8684260746987667`*^9}, {3.8702277849671593`*^9, 
  3.870227791549492*^9}, {3.8702278401258373`*^9, 3.870227857653405*^9}, {
  3.870228612084*^9, 
  3.870228616445198*^9}},ExpressionUUID->"f846cc42-aa02-4854-b58f-\
d6a00f3f9f87"],

Cell[CellGroupData[{

Cell["A classification problem", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}},ExpressionUUID->"3104f7e3-d1cf-444c-857d-\
f3d3d76d7c7a"],

Cell["\<\
This is a demo of a new kind of neural network architecture.
To explain what it is, and why it\[CloseCurlyQuote]s useful, we need to \
compare it to a standard neural network.
So let\[CloseCurlyQuote]s begin with a machine learning problem.\
\>", "Text",
 CellChangeTimes->{{3.8703177942276583`*^9, 3.870317970323607*^9}, 
   3.870318007171329*^9, {3.870318069923915*^9, 3.870318103043672*^9}, {
   3.870318192772327*^9, 3.870318206427456*^9}, {3.8703182560362587`*^9, 
   3.87031837325214*^9}, {3.870320527755094*^9, 
   3.8703205336030693`*^9}},ExpressionUUID->"91644f0d-05ee-464c-b993-\
67d43ce3e7d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8684261284499598`*^9, 3.8684261339874697`*^9}, {
   3.868426165551331*^9, 3.868426166147992*^9}, {3.868443501655848*^9, 
   3.868443511617087*^9}, {3.868445089535833*^9, 3.8684450898384523`*^9}, 
   3.8684475343091707`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          11078781741449491416521022390144375302997744126678992189992], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11078781741449491416521022390144375302997744126678992189992,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868447534840249*^9, 3.8684985354123583`*^9, 
  3.868519879764835*^9, 3.8685300999400797`*^9, 3.868533465833148*^9, 
  3.868591722379105*^9, 3.868670373439299*^9, 3.868944316441147*^9, 
  3.869023715466254*^9, 3.869041339373542*^9, 3.869119740136602*^9, 
  3.869212283188902*^9, 3.869281595247718*^9, 3.869292700722034*^9, 
  3.869640816336421*^9, 3.8696453168534527`*^9, 3.86965027000084*^9, 
  3.870169789163184*^9, 3.870177174885811*^9, 3.870231765756899*^9, 
  3.8702376132679653`*^9, 3.870241797776621*^9, 3.870243875703352*^9, 
  3.870268224312619*^9, 3.870317048814157*^9, 3.870319834622563*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"67d52c6c-25a9-4352-b32f-d7a24e15400b"]
}, Open  ]],

Cell["\<\
This describes various features of cars -- such as their price, maintenance \
cost, number of doors and so on. 
The goal is to predict whether a particular car is an acceptable purchase. 
In other words, we want to predict the last column of this table from the \
first 6 columns.
Let\[CloseCurlyQuote]s begin by splitting this data into a training and test \
set.\
\>", "Text",
 CellChangeTimes->{{3.870318390776444*^9, 
  3.8703185408041*^9}},ExpressionUUID->"48ea5e8f-466a-4c85-ab93-40800af9e474"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.1", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.868445433613286*^9, {3.870243561779406*^9, 3.870243561968156*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Utilities", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.8703155021345863`*^9, 
  3.87031551041442*^9}},ExpressionUUID->"5f3c722a-5b07-470f-a683-\
0797441c8c07"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}, {
   3.868604559041458*^9, 3.868604559653843*^9}, {3.868937073460001*^9, 
   3.868937074141531*^9}, {3.869042727278556*^9, 3.869042728153739*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[CellGroupData[{

Cell["Feature encoders", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 
  3.870229155458066*^9}},ExpressionUUID->"f72c241a-1149-4a03-acba-\
ddb61b56d0cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "featureValues"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"encoders", "=", 
   RowBox[{"Encoders", "[", "trainData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Normal", "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"encoders", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"data", "[", 
      RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868426687511053*^9, 3.868426801572831*^9}, {
   3.8684269173036003`*^9, 3.8684269578937387`*^9}, {3.8684269966730623`*^9, 
   3.868427061846773*^9}, {3.868427135120562*^9, 3.868427173055786*^9}, {
   3.868427218784813*^9, 3.868427313389267*^9}, {3.868427822986774*^9, 
   3.8684278511841917`*^9}, {3.8684280835200367`*^9, 3.868428089883707*^9}, {
   3.868428156521447*^9, 3.8684281614416733`*^9}, {3.8684281955955667`*^9, 
   3.868428284555341*^9}, 3.868434324643379*^9, {3.868434449433856*^9, 
   3.8684344506731787`*^9}, {3.868437882742872*^9, 3.8684378847594643`*^9}, {
   3.868443521427595*^9, 3.86844353043198*^9}, {3.868445371253304*^9, 
   3.868445422686679*^9}, {3.868682465592621*^9, 3.868682467103612*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureLayer", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<Catenate\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "->", "\"\<Catenate\>\""}],
         "&"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Normal", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868511402960554*^9, 3.868511420437525*^9}, {
   3.8685114920935707`*^9, 3.86851156446668*^9}, 3.868511640913454*^9, {
   3.8686824585003*^9, 3.86868246003918*^9}, {3.870169840877633*^9, 
   3.870169867024181*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define standard net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229155458066*^9}, {
  3.870229223868904*^9, 3.870229226109354*^9}, {3.870232286851343*^9, 
  3.870232287011444*^9}, {3.8703155418382473`*^9, 
  3.8703155430464373`*^9}},ExpressionUUID->"e2cfd996-b3e0-4a6a-9a63-\
c7e94ed6e33b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StandardNet", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"standardNet", ",", "net"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"standardNet", "=", 
      RowBox[{"NetChain", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LinearLayer", "[", 
          RowBox[{"20", ",", 
           RowBox[{"\"\<Input\>\"", "->", "inputSize"}]}], "]"}], ",", 
         RowBox[{
         "ElementwiseLayer", "[", "\"\<ScaledExponentialLinearUnit\>\"", 
          "]"}], ",", 
         RowBox[{"LinearLayer", "[", "4", "]"}], ",", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"net", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<FeatureLayer\>\"", "->", "featureLayer"}], ",", 
          RowBox[{"\"\<SoftNet\>\"", "->", "standardNet"}]}], 
         "\[RightAssociation]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<FeatureLayer\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
         RowBox[{"\"\<Loss\>\"", "->", 
          RowBox[{
          "CrossEntropyLossLayer", "[", "\"\<Probabilities\>\"", "]"}]}]}], 
        "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
          RowBox[{"NetPort", "[", 
           RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
         RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<Acceptability\>\"", "->", 
        RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8703155622098083`*^9, 3.870315613075685*^9}, 
   3.870315665945262*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"d45e19d8-d785-4cd3-85c0-bcb5b5c014a9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train standard net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229168220998*^9}, {
  3.870315719181529*^9, 
  3.8703157206453257`*^9}},ExpressionUUID->"fb1d3f32-8b9a-4b63-9b09-\
a125030d0486"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TrainStandardNet", "[", 
    RowBox[{"net_", ",", "trainData_", ",", "testData_"}], "]"}], ":=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"TrainingStoppingCriterion", "->", 
      RowBox[{"Function", "[", 
       RowBox[{"#ValidationLoss", "<", "0.02"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "->", "Infinity"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"WorkingPrecision", "->", "\"\<Real32\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}, {3.86912172241117*^9, 
   3.8691217224768143`*^9}, {3.869651243457945*^9, 3.8696512443590508`*^9}, {
   3.869652345237102*^9, 3.8696523460650587`*^9}, {3.870176213162601*^9, 
   3.870176232203189*^9}, {3.8702327961179457`*^9, 3.870232798554442*^9}, {
   3.870232836854951*^9, 3.870232914399068*^9}, {3.870233679878804*^9, 
   3.870233680303206*^9}, {3.87024364648061*^9, 3.870243646626822*^9}, {
   3.870315726587103*^9, 3.87031575199937*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0eb909d3-63ba-47a2-bfff-4fe73d2964b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrainedStandardNet", "[", "result_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\"\<TrainedNet\>\"", "->", 
      RowBox[{"NetDelete", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
        "\"\<Loss\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "}"}], ",", 
    RowBox[{"\"\<Output\>\"", "->", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8703158319448547`*^9, 3.8703158542175283`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"d6b63b82-43f7-41c2-9384-527d689efab6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate standard net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229168220998*^9}, {
  3.870315719181529*^9, 3.8703157206453257`*^9}, {3.870315891997168*^9, 
  3.8703158928212757`*^9}},ExpressionUUID->"2ce60129-160a-41fc-adfe-\
0034b0a21389"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluateStandardNet", "[", 
   RowBox[{"trainedStandardNet_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"predictions", ",", "eval"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"predictions", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Association", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Prediction\>\"", "->", 
            RowBox[{"trainedStandardNet", "[", 
             RowBox[{
              RowBox[{"KeyDrop", "[", 
               RowBox[{"{", "\"\<Acceptability\>\"", "}"}], "]"}], "@", "#"}],
              "]"}]}], ",", 
           RowBox[{"\"\<Target\>\"", "->", 
            RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}]}]}], "}"}], 
         "]"}], "&"}], "/@", 
       RowBox[{"Normal", "[", "testData", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"eval", "=", 
      RowBox[{"HardNetClassifyEvaluation", "[", "predictions", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"predictions", ",", "eval"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.870315924897118*^9, 3.8703159725030947`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"25bf8b72-c804-410f-bb9c-0ed53d200d85"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetStandardWeights", "[", "trainedStandardNet_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Flatten", "[", 
     RowBox[{"Normal", "/@", 
      RowBox[{"DeleteMissing", "[", 
       RowBox[{"Values", "[", 
        RowBox[{"Quiet", "[", 
         RowBox[{"NetExtract", "[", 
          RowBox[{
           RowBox[{"NetFlatten", "[", "trainedStandardNet", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"All", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], "]"}], 
        "]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.87031602184839*^9, 3.8703160494705*^9}, {
  3.870317262750186*^9, 3.87031726998748*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"17da0be0-62bc-465d-8a91-33ed2580ae99"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define neural logic net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229155458066*^9}, {
  3.870229223868904*^9, 
  3.870229226109354*^9}},ExpressionUUID->"7c05c242-1747-4740-86f8-\
9b6f56cec517"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NeuralLogicNet", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"softNet", ",", "hardNet", ",", "net", ",", "trainableNet"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralOR", "[", 
          RowBox[{"inputSize", ",", "64"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"HardNeuralNOT", "[", 
          RowBox[{"64", ",", 
           RowBox[{"Length", "[", "classes", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"net", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<FeatureLayer\>\"", "->", "featureLayer"}], ",", 
          RowBox[{"\"\<SoftNet\>\"", "->", "softNet"}]}], 
         "\[RightAssociation]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<FeatureLayer\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trainableNet", "=", 
      RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
          RowBox[{"\"\<Loss\>\"", "->", 
           RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
         "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
           RowBox[{"NetPort", "[", 
            RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
          RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Acceptability\>\"", "->", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"trainableNet", ",", "hardNet"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.870316148536023*^9, 3.870316177877225*^9}, {
  3.870316242397109*^9, 3.870316276263557*^9}, {3.8703163134641523`*^9, 
  3.870316346416483*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"f6750e7f-a063-4c4f-888f-5be83e682770"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train neural logic net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229168220998*^9}, {
  3.870315719181529*^9, 3.8703157206453257`*^9}, {3.870316379099872*^9, 
  3.8703163810083933`*^9}},ExpressionUUID->"a8b3252c-540b-4f9d-b22d-\
df59ae9d30be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrainNeuralLogicNet", "[", 
   RowBox[{"net_", ",", "trainData_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingStoppingCriterion", "->", 
     RowBox[{"Function", "[", 
      RowBox[{"#ValidationLoss", "<", "0.02"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", 
     RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"WorkingPrecision", "->", "\"\<Real64\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "Infinity"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}, {3.86912172241117*^9, 
   3.8691217224768143`*^9}, {3.869651243457945*^9, 3.8696512443590508`*^9}, {
   3.869652345237102*^9, 3.8696523460650587`*^9}, {3.870176213162601*^9, 
   3.870176232203189*^9}, {3.870233790438415*^9, 3.8702337978709087`*^9}, {
   3.870235358600091*^9, 3.870235363421095*^9}, 3.870235431774667*^9, 
   3.870235695013812*^9, {3.870235881306831*^9, 3.87023588141299*^9}, {
   3.870235916262095*^9, 3.870235920686771*^9}, {3.870236438934493*^9, 
   3.870236439037176*^9}, {3.870243617635653*^9, 3.870243617791752*^9}, {
   3.870250244952783*^9, 3.870250248200946*^9}, {3.870250344774638*^9, 
   3.870250344930841*^9}, {3.870316390958275*^9, 3.870316415069676*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"d716c9c0-e25b-49fc-8778-6b0e6c9888bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrainedNeuralLogicNet", "[", "result_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\"\<TrainedNet\>\"", "->", 
      RowBox[{"NetDelete", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
        "\"\<Loss\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8703221356095753`*^9, 3.87032213864957*^9}, {
  3.8703225168620043`*^9, 3.870322517932423*^9}, {3.8703227373279047`*^9, 
  3.870322738357666*^9}, {3.870322791840272*^9, 3.870322805116704*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"0157c297-7579-4c36-a2ea-5d4df0024196"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate neural logic net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229168220998*^9}, {
  3.870315719181529*^9, 3.8703157206453257`*^9}, {3.870315891997168*^9, 
  3.8703158928212757`*^9}, {3.870316491772222*^9, 
  3.8703164930441008`*^9}},ExpressionUUID->"2cfca464-a6ee-4f84-87bd-\
c33f3d393bed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluateNeuralLogicNet", "[", 
   RowBox[{"hardNetFunction_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"predictions", ",", "eval"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"predictions", "=", 
      RowBox[{"HardNetClassify", "[", 
       RowBox[{"hardNetFunction", ",", "testData", ",", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"featureLayer", "[", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "&"}], 
        ",", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"eval", "=", 
      RowBox[{"HardNetClassifyEvaluation", "[", "predictions", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"predictions", ",", "eval"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.870316527012061*^9, 3.870316567396411*^9}, {
  3.8703165999968977`*^9, 3.870316643565425*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"97dae8b9-699f-460c-9d4d-9c4fe4b770c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetNeuralLogicWeights", "[", "trainedNeuralLogicNet_", "]"}], ":=", 
  RowBox[{"Harden", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ExtractWeights", "[", "trainedNeuralLogicNet", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8703167115430202`*^9, 3.870316778623686*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"90a2ce41-ec16-4f6e-bb59-22c60344c976"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["A standard neural network", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868966010330719*^9, 
  3.8689660115546227`*^9}, {3.870228622887129*^9, 
  3.8702286260204678`*^9}},ExpressionUUID->"85881d34-aa2c-47a4-9cef-\
231d0c092462"],

Cell["\<\
Now we define a standard neural network that can learn this classification \
problem.\
\>", "Text",
 CellChangeTimes->{{3.870318560891963*^9, 
  3.870318576803911*^9}},ExpressionUUID->"00d95308-a694-443a-a631-\
9d6d99579905"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"standardNet", "=", 
  RowBox[{"StandardNet", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.8703156857371893`*^9, 3.8703156902938766`*^9}, {
   3.8703157833898687`*^9, 3.870315784342063*^9}, 3.870318578534869*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"a2422372-8bb4-43f9-87d0-673e72a9d7c9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000053589793, -1.9999999196153082`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Net\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000026794896, -0.9999999196153085}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    Offset[{0, -7}, {-2.999999919615308, 3.00000008038469}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019}, {-2.479056953218156, \
-0.4371707580865526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.3162277914367091,
                     0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.4596749070632327`}, {-2.455901697074275, 
                    0.08819666693064376}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721361946604227`, 0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-2.4499999611473986`, 
                    1.4500000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406267, 
                    2.459674643436304}, {-2.4559016482109186`, 
                    1.911803464680622}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829576}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000053589793, -1.9999999196153082`}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999946410205, 
                    2.0000000803846905`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999919615308, 
                    3.00000008038469}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    
                    False]], {-2.479056953218156, -0.4371707580865526}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000803846907`, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.455901697074275, 
                    0.08819666693064376}, {-0.25, 0}, 
                    Offset[8], {1.0000000535897937`, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999611473986`, 
                    1.4500000656474974`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4559016482109186`, 
                    1.911803464680622}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102058, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"CE\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000053589793, -1.9999999196153082`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999732051024`, 1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999946410205, 2.0000000803846905`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999919615308, 3.00000008038469}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-3.000000053589793, \
-1.9999999196153082`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-3.000000026794896, \
-0.9999999196153085}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.999999973205102, 
                    1.0000000803846907`}, {-2.999999946410205, 
                    2.0000000803846905`}, {-2.999999919615308, 
                    3.00000008038469}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {232.49999999999991`, 322.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.49999557884198, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> A\
utomatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "FeatureLayer" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"PurchasePrice" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Nodes" -> <|"Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    "SoftNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{20, 21}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {20}, 
                    "$OutputSize" -> 20, "$InputSize" -> 21, 
                    "$InputDimensions" -> {21}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {20}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`TensorT[{4, 20}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {4}, 
                    "$OutputSize" -> 4, "$InputSize" -> 20, 
                    "$InputDimensions" -> {20}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Outputs", "Output"]}|>, 
                    "Loss" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"very good\"", "\"unacceptable\"", "\"acceptable\"", 
                    "\"good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"high\"", "\"medium\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"very high\"", "\"medium\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 3, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"large\"", "\"small\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"high\"", "\"medium\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.870318579093378*^9, 3.870319854100978*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"326ae035-14ff-443a-a4f9-e66250ca750e"]
}, Open  ]],

Cell["\<\
This net takes car features as input, converts them to real-valued vectors, \
processes those inputs, and then predicts the car\[CloseCurlyQuote]s \
Acceptability.
We can flatten the net to get a closer look at its architecture.\
\>", "Text",
 CellChangeTimes->{{3.870318859171664*^9, 
  3.870319000667831*^9}},ExpressionUUID->"7fb122b0-11ec-4374-8553-\
decf50e0a6b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetFlatten", "[", "standardNet", "]"}]], "Input",
 CellChangeTimes->{{3.870232334236212*^9, 3.8702323374512777`*^9}, {
  3.87031578706712*^9, 3.870315788365946*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"cb58b248-af71-467a-ab22-7a37ee09db45"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               OverlayBox[{
                 GraphicsBox[{
                   Thickness[0.0149], {
                    GrayLevel[0.6], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style[
                    "Miter", 
                    NeuralNetworks`Private`FormattingCommon`foreground], 
                    10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                    18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                    49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                    18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}, {
                    FaceForm[
                    RGBColor[0.84, 0.84, 0.84]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    45.5, 40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.6]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {
                    45., 33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 
                    40.}, {52., 40.}}}]}}, ImageMargins -> 0, 
                  ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
                 StyleBox["uninitialized", 
                  RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto",
                   Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                  Scaled[0.0001]}], CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-7.000000053589791, -1.9999998124357201`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/Featu..\"", "\"Net/FeatureLayer/Catenate\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "Net/FeatureLayer/Catenate", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-7.000000026794894, -0.9999998124357204}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.9999999732051, 1.0000001875642788`}], 
                    
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-6.999999946410203, 
                    2.0000001875642783`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-6.999999919615306, 
                    3.0000001875642783`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/1\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/1", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/2\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/2", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/3\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/3", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/4\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/4", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.739252852901899}, {-6.479056953218155, \
-0.4371706509069645}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670887`, 0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592804, 
                    2.459674907063231}, {-6.455901697074274, 
                    0.08819677411023186}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.447213619466042, 
                    0.8944271790168734}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.8890871923183172`, 
                    3.889087400733702}, {-6.449999985262805, 
                    0.5500001728270857}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.707106762239694}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337044`, 
                    3.8890871923183155`}, {-6.449999961147397, 
                    1.4500001728270853`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396937, -0.7071068001334008}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406269, 
                    2.459674643436302}, {-6.455901648210917, 
                    1.9118035718602102`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338731, -0.8944272029829579}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"21\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"20\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox["\"20\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.000000053589791, -1.9999998124357201`}, \
{-5.999999973205101, 1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.000000026794894, -0.9999998124357204}, \
{-5.999999973205101, 1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999946410203, 
                    2.0000001875642783`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999919615306, 
                    3.0000001875642783`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 20\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 20\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 20\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 20\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.479056953218155, -0.4371706509069645}, \
{-0.25, 0}, 
                    Offset[8], {1.00000008038469, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.455901697074274, 
                    0.08819677411023186}, {-0.25, 0}, 
                    Offset[8], {1.000000053589793, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.449999985262805, 
                    0.5500001728270857}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.449999961147397, 
                    1.4500001728270853`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051021, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.455901648210917, 
                    1.9118035718602102`}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102052, -2.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 20\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 20\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 20\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 20\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"CE\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-7.000000053589791, -1.9999998124357201`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.999999973205101, 1.0000001607693818`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 16], {-5.999999973205101, 
                    1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/FeatureLayer/Catenate\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/FeatureLayer/Catenate", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-7.000000026794894, -0.9999998124357204}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.9999999732051, 1.0000001875642788`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.999999946410203, 2.0000001875642783`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.999999919615306, 3.0000001875642783`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    Offset[{-10.5, -10.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{10.5, 10.5}, {-4.999999973205101, 
                    1.0000001339744848`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    GrayLevel[0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-4.999999973205101, 1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/1", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm11IVEEUx1eNEvqyDyiCMivKpKc1sKICK3cRssLyRZL2Y+5cV3OD1TB7
cLGnIKIgiiBKEHXm7oMlUS9BvgR9QQ9lERRRWSAUQkVqZG1n1t3a5I67q/dj
dr1/GEXZ3fv3x5kzc86MBZ5jlTjbZrM15sKXSndzaSDgbjmYBz9U+Rt9sl9C
5f4mSZYCWzw58MtiGAdgzLIJrwqzDUyU7FUqsEQHzfaRpIThh3FoIcb0GrAL
s2G2nyQlBD9JUvYAu/cxdha/5FRXF5onS/RiPDeLX3KC+bodOL1WYwex+Mws
XynKcH4uV3uuLClngNNvFXa/YC6fbmi4PcdoX1OUofxkmWwGRs9VY06irySJ
bDPSjwYyhF9VVWg25Lk2YDSmxo7lwJqajrlGeNFYuvOr9dJNkM+eqMecMsDW
Xr096Cjd+EHM5cgSaQZOPzgx1872fHo93yDpwk+S6Hrgc5+T5wYhz+3T47km
SFN+wWAwG2PiB0bDHHakvr5niZbPNFma8autJauBz10Ot08yIoe0epZA0oBf
OAvYeIHRV84a0YtQ97LpP0dITYufx0NWQK67xYm5L5DnXIyvRl5F1BT5hbMg
z1UDoyEOuzuwtq7S1qqQSpkfxt1LMaIhDrfvGJF6to7oYVZApcRPRnQ/23+o
sYN5fM/rDa3Ty6igSoqfz9e1CBh1cGJuFPJcE9sv621WQCXkB/WVExh94LB7
hBDdaIRRQcXl5/H0zgc+lzncfsJ8bQ0G+9LgiEdXqfKTZWUnMHrDYdePMbUb
bVRQ/ceP9TYhrs5mSG/TCP3lF+1tvsig3qYRqkjU24RxIU17m7orP99+lN/b
pO+gbt1ltkcxBTW/RJqdjiZOzJGrDQ2dC8x2GVWFaKOkpJo4ncfDdntlmH2P
jbKywFBR0e42s/3ZBDnXVxOsoS2xOGPM/tVfpBvqr8Vm+xNZrLaPn6cxfhna
29RUGCuNE/Ocw9E4ijEpMdub2GJrBT2vVvcXFpa2mu1OZI3flSCKes9EcdoE
ztNmq85NVsKa8FC1x4mpI/oyi5+KoIbdy2JM9RxMDm2Ne6nFL07sPh2354Tp
SxhrJ7zF4hcVxFw5/zxH6eXclZjx/NiZA7C7walhxyDmTkxynjNj+bGz10n6
w8n2nGYcP4RCBay+56wPkT4nxNy5JHtOM4Lf+L0c6pAlpWeSeGPjAeuDpvDR
Gc3P5wltwEg5BVw+JuD2VkbK4SmcW2cUP/b3w/wsjjLrT8CMrasDrCcwjTOJ
NOcXzvK5u9bA3ESROguRz4mZRcZTjJUjrPc+TQNpxQ/2t8sj+zRETkJNf5O/
X1MdI/CeTvZ/ExreaRKeH0b0ErsbwmqnFFjFnRnSPhafLtf1PB3sic8vdWbf
2H5YRtRtwL3DTOA3HIkxpAQRIjs0yGmpKN34jcB8fgzjCuRAzO5BWHdILFkS
V38A161KQQ==
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/2", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.9206666666666666, 0.7666666666666667, 
                    0.7666666666666667]], 
                    EdgeForm[
                    RGBColor[0.881, 0.65, 0.65]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    GrayLevel[0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2.999999973205102, 1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "LinearLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/3", Bold], 
                    Style[
                    LinearLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztWFtIk2EYdnO6zaFuc9N5SHSbp6lT2cmpqNOpOwiRUhkUoXkgCoVpSBdF
dROdLqqbLqKuuomC6EARFEGR0F1FEdVVFEQXRecDnZ5HNhiytWn/1oG98Prr
9/7/93zv+73f+72P5SNTA+PitLS0aRl+DAzPugKB4a2DSvyxcnJ648Tk2Kh3
cmZsYizQPJKOQQe0FCpJS0lKUpKS/1syMjJUpaWl4yaTaX9FRcU2rVbbl2hM
vV4/7fF4Xvv9/m/d3d1P8PzS39//w263nxeJROJEYNbU1OwjBrC+wt9Rjkkk
kmyLxXKS42VlZZuExszLy3NxbqvVetrtdj/Nzs42hWxSqbSANpvNdlZoXKfT
ec3n833Kzc21er3eD3g25eTkNFL5O3C/OxyOi0Jiwh8d58UeXtDpdCvoWyQ1
m81HhcRFjDs5L/Z3T3V19e6GhoZjGo3GvVCzsrL0QuLCxwHiVlVV7UK8r+bn
5/tCNuZVc3PzFaxpr5CYFKVSaSNua2vrTZ6hzMzMvJCtrq7uMG3FxcVrhcaF
iFpaWq5zfuKiTniKiopWMX85xvqRAMx5kclkJcA5F55HnZ2d9+HnmkRhhkt6
eroCZ7eO60gGXkr+TUHN1UEbk604Dzui1dtEKu7SIeiZZOuf3ueUJFcKCtgq
xc5Hg8EwIyQu7nQ/52UvhbvvRjTFPTgkJC7vm7a2tlvBvnSzkHPHEvQTWpfL
9Yi9eWFh4WAysdmj9fT0PGe81Wp1ezzfKBSKCvIJ9B8H+ESPa14KNvpiC/qa
t319fa9410d7D3sjR495nDyCvTX6+mfsexkvo9G4dSnY6KV6yYHIEeRy+bKF
drFYLGWeEZM5AZ+NHGe8Ojo67hF7KX4zz7DXDzlnSUnJuoX2ysrKnbTV1tYe
7O3tfRFuQ86vpg0xDywSVgTOdYrf1tfXH4m0JsT1XXt7+232sfQ7xF2o4G4b
gmd9djGg8GU7v+N84JgZC+0hfzDvFvobrcYsprcGR1jO3OC+ku9FWdf83Y1a
40VPP1deXj4Vib+Qp8eDSY6JPH6DM/SRXCHae+AKh4jLPh7xfk/OErKpVCon
+UuknIgkXFtXV9fjYB6t/9W7jC/fA/+8hNy9ExrnuWLNw7o/I68N8eCG7oVY
9bmpqekE44+z/TLIneYQ027+HwBruMuzRz4XD2Y4biwFR3nA91HLWokTZiP/
voz9sceL+TuCmq5hfcA+qZOBl5KU/E3yE7YM2js=
                    "], {{0, 29.333333333333332`}, {16., 0}}, {0, 255}, 
                    ColorFunction -> RGBColor, ImageResolution -> 135.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {16., 29.333333333333332`}, 
                    PlotRange -> {{0, 16.}, {0, 29.333333333333332`}}, 
                    ImageSize -> 16], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SoftmaxLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/4", Bold], 
                    Style[
                    SoftmaxLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-7.000000053589791, \
-1.9999998124357201`}, {-5.999999973205101, 
                    1.0000001607693818`}, {-7.000000026794894, \
-0.9999998124357204}, {-6.999999999999997, 
                    1.875642792038249*^-7}, {-6.9999999732051, 
                    1.0000001875642788`}, {-6.999999946410203, 
                    2.0000001875642783`}, {-6.999999919615306, 
                    3.0000001875642783`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}, {-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 21, 8, 8, 8, 8, 8, 8, 21, 21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {448.49999999999983`, 314.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.49999557884198, 25.}, {25., 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{20, 21}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {20}, "$OutputSize" -> 20, 
                    "$InputSize" -> 21, "$InputDimensions" -> {21}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {20}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`TensorT[{4, 20}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/4" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"very good\"", "\"good\"", 
                    "\"acceptable\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"low\"", "\"high\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"low\"", "\"high\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {2, 3, 
                    Interval[{5, 
                    DirectedInfinity[1]}], 4}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 4, "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 2, 4}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"large\"", "\"small\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"low\"", "\"high\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/4"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/4"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8702323385229597`*^9, 3.87024973694477*^9, 
  3.870249909024963*^9, 3.870250031804776*^9, 3.870250078905864*^9, 
  3.870269608706935*^9, 3.870317107479403*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"bb59af57-4d84-443c-b0a2-dcd7fc41d015"]
}, Open  ]],

Cell["\<\
The net has 2 layers: a first layer of 20 nonlinear neurons, and a second \
layer of 4 linear neurons.
I chose this architecture because it\[CloseCurlyQuote]s the smallest network \
that can learn the classification problem.
The final output is a real-valued vector of size 4, which corresponds to the \
4 possible values of Acceptability, which is \
\[OpenCurlyDoubleQuote]acceptable\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]unacceptable\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]good\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]very good\[CloseCurlyDoubleQuote].
This vector is then converted to a probability distribution and the loss \
function is a standard cross-entropy loss.
We can therefore train the weights of this network from the data. So let\
\[CloseCurlyQuote]s do that.\
\>", "Text",
 CellChangeTimes->{{3.870319022051667*^9, 3.87031920133228*^9}, {
  3.870319234395797*^9, 
  3.870319338267494*^9}},ExpressionUUID->"5deaf1b9-d1e7-46d2-a8d2-\
ddd7b6be33d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"TrainStandardNet", "[", 
   RowBox[{"standardNet", ",", "trainData", ",", "testData"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}, {3.86912172241117*^9, 
   3.8691217224768143`*^9}, {3.869651243457945*^9, 3.8696512443590508`*^9}, {
   3.869652345237102*^9, 3.8696523460650587`*^9}, {3.870176213162601*^9, 
   3.870176232203189*^9}, {3.8702327961179457`*^9, 3.870232798554442*^9}, {
   3.870232836854951*^9, 3.870232914399068*^9}, {3.870233679878804*^9, 
   3.870233680303206*^9}, {3.87024364648061*^9, 3.870243646626822*^9}, {
   3.8703157749264793`*^9, 3.870315798445942*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"c66847a1-a2e5-4f1a-b8f1-4352838fd8f7"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "9475"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "379"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["28s"], 
                  TextCell["28s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "22441"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "1555"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "173"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "606400"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"1.09\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.010948890233598685`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["0%"], 
                  TextCell["0%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"1.97\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.019679625821193383`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["0%"], 
                  TextCell["0%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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

                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJw1mAk0ld3bxqVJRCmlNMhQKiVFCpVbVAqFzJHhmIccZ0JehaJUEg1KmqRS
ekulpGkjDUooIlLJdDgOzjyFvue8//1Z1rLOevazz973fd3X71p0AmNcghUV
FBRWjFNQkP/9/5/mMZXSjNqLVqu/nqUObBNY7XLzVnygUo7+93kCbJvkf7To
TTX6gPxX/o5UA7OU4uwZX97j5xrwz6yP692u1aKkHYlOvV5zobiTXGjV3oDX
L4Q5Wa/TtpIa0XEtvYlDr3QgyNC3N+ltE35fH+ID8wYWVzSjliylzr6GJbBJ
2b6r4/o3vN8yOOwYseBUSSuSv93VaQiNJ3cLR1hteH8j4JBM12rub0frX/Y7
xuw3hpawobVveD/w962G0fuDD1nff6KfcT4vosabQHcDh7Hw0y/8/aZwMsE+
Ii25Ax1eU7884sRa6Gvmia4u/I3PYwZRDR5f4hN+o+WD1hdCZ62HKwlHFDhN
v/H5zOFVDIW/0LkTNdwqnRx82QIStCLi79V34vNaAtuoPtVxThdiBBoQvxvh
taWaZVtAFz7/JvC2P67X86kLLViQ1+1XYgUe4ul3lpt34/sA+G0S1LfSutHv
yPTb9+Zbw7cSw0PNLd34ftYg7XUuLF/Sg0xriA0DNsPH1pMKc8N68H1twJB+
U6PiUg86skSqefeGDay6nnfgbX8Pvr8tdI76PrRZ2ou+HyIKwLKFxRYcbX3/
XlyPLbAlF/UITvUiI/kBjLbCwOfadS3Vvbg+W+Gire2EnIlMlLLpxsal1G1Q
+kC2mb+UietlBy/G7mo3OzJR08WfgptldqC8JLjZJJuJ67cd3lidUl/3gokM
iOMtHtkOdWYejkaNTFzPHfCqSrOxT8ZE+92dSYVgDzNqxiWEGffh+tpDL0Wz
at3ePvTp0TEtvTQH+BlSV7iG0Yfr7QiRt9p9Iwr70CL16s/Xahyh/tPc63te
9+H674Sd4y/lsQb7EHXf6NFFartAWbKYtEaxH/djF7Q68cxztfpRV/C8q7uW
OYEaa+Q8uPXj/jiBzZU1Wgtc+lGmxtM/Jz86wbGKB9MCU/txv5yhcPuVIduj
/cjstatHXbQz3DVYxJtysx/3zxnazJ6eW/CzH3XEch+qTneByp4+/yeN/bif
LrBvxbbNTFY/ylh0Us3xoQvo5z/rzF7Iwv3dDWvSmtxj5rGQibxdrrtBuFot
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

                    "]]}, {}}}, Prolog -> {{
                    Text[100, 
                    Offset[{-2, -2}, {100., 0.223}], {1., 1.}], 
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.223}], {1., 1.}], 
                    Text[300, 
                    Offset[{-2, -2}, {300., 0.223}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.223}], {1., 1.}], 
                    Text[500, 
                    Offset[{-2, -2}, {500., 0.223}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-2"], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 379.02}, {-2.123, 0.223}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{100., 200., 300., 400., 500.}, {{-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-2.6989700043360183`, 
                    GrayLevel[0.8501]}, {-2.397940008672037, 
                    GrayLevel[0.8501]}, {-2.221848749616356, 
                    GrayLevel[0.8501]}, {-2.0969100130080562`, 
                    GrayLevel[0.8501]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
KDNFfk/sU2QXfyYg/CdUnEXk
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1: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
oAQwzVNg/U8q+H926YAX
                    "]]}, {}}}, Prolog -> {{
                    Text[100, 
                    Offset[{-2, -2}, {100., 0.5555}], {1., 1.}], 
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.5555}], {1., 1.}], 
                    Text[300, 
                    Offset[{-2, -2}, {300., 0.5555}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.5555}], {1., 1.}], 
                    Text[500, 
                    Offset[{-2, -2}, {500., 0.5555}], {1., 1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.2], 
                    Offset[{3, 0}, {0, 0.2}], {-1, -1.}], 
                    Text[
                    PercentForm[0.4], 
                    Offset[{3, 0}, {0, 0.4}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 379.02}, {-0.0055000000000000005`, 
                    0.5555}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{100., 200., 300., 400., 500.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.2, 
                    GrayLevel[0.3001]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    ImageSizeCache->{253., {10.1904296875, 15.8095703125}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    ImageSizeCache->{314., {94.566796875, 98.633203125}},
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{3.8703171700672827`*^9, 3.870319890755116*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"3befd225-53d0-4dc8-8f83-674d7eab0042"]
}, Open  ]],

Cell["\<\
I chose the car dataset because it\[CloseCurlyQuote]s quite small, and so I \
can demo in real-time.
We can see the loss on the training and validation set decreasing.
And we can see the predictive accuracy of the net increasing.
It takes about 30 seconds to get high accuracy on the validation set.
Once trained, we can extract the trained classifier.\
\>", "Text",
 CellChangeTimes->{{3.870319353179541*^9, 3.870319466172065*^9}, {
  3.870321492178154*^9, 
  3.8703214972181664`*^9}},ExpressionUUID->"436dc481-493a-4854-ae98-\
ffc8efad6c40"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedStandardNet", "=", 
  RowBox[{"GetTrainedStandardNet", "[", "result", "]"}]}]], "Input",
 CellChangeTimes->{{3.8702331140748243`*^9, 3.870233166240426*^9}, {
  3.8703158642472563`*^9, 3.8703158732698383`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"fd57ad56-2adf-4ee4-813b-767080d20188"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"TrainedNet\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{0, -15.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999464102052`, 
                    2.0000000535897935`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999998928204112`, 
                    4.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999998660255143`, 
                    5.000000053589792}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {8.038469108735353*^-8, 
                    2.999999999999999}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019002`}, {-1.479056899628362, 
                    1.5628292151185497`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-1.4559016434844814`, 
                    2.088196640135746}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999931673012, 
                    2.5500000388526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-1.4499999196153084`, 
                    3.0000000388525994`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318316}, {-1.4499999075576047`, 
                    3.4500000388525995`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396938, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406268, 
                    2.459674643436304}, {-1.4559015946211251`, 
                    3.911803437885724}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829577}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-0.44999991961530866`, 
                    3.000000012057703}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999464102052`, 
                    2.0000000535897935`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998928204112`, 
                    4.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998660255143`, 
                    5.000000053589792}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, ImagePadding -> 
                    {{7., 7.}, {10., 5.}}, ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999196153085, 3.000000026794896}, {
                    8.038469108735353*^-8, 2.999999999999999}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.479056899628362, 
                    1.5628292151185497`}, {-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4559016434844814`, 
                    2.088196640135746}, {-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999931673012, 
                    2.5500000388526}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999196153084`, 
                    3.0000000388525994`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999075576047`, 
                    3.4500000388525995`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051027, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4559015946211251`, 
                    3.911803437885724}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102057, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999991961530866`, 
                    3.000000012057703}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999196153085, 
                    3.000000026794896}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999196153085, 
                    3.000000026794896}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999196153085, 3.000000026794896}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"TrainedNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["TrainedNet", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999464102052`, 2.0000000535897935`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999196153082`, 3.000000053589793}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998928204112`, 4.000000053589793}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998660255143`, 5.000000053589792}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{8.038469108735353*^-8, 2.999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-1.9999999464102052`, 
                    2.0000000535897935`}, {-1.9999999196153082`, 
                    3.000000053589793}, {-1.9999998928204112`, 
                    4.000000053589793}, {-1.9999998660255143`, 
                    5.000000053589792}, {8.038469108735353*^-8, 
                    2.999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {177.49999999999994`, 322.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.499995578841975`, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "TrainedNet" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Net" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"PurchasePrice" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"FeatureLayer" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"PurchasePrice" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Nodes" -> <|"Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    "SoftNet" -> <|"Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 21}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{20}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {20}, 
                    "$OutputSize" -> 20, "$InputSize" -> 21, 
                    "$InputDimensions" -> {21}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {20}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>|>, 
                    "3" -> <|"Type" -> "Linear", 
                    "Arrays" -> <|"Weights" -> 
                    NeuralNetworks`Private`DummyArray[{4, 20}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{4}]|>, 
                    "Parameters" -> <|"OutputDimensions" -> {4}, 
                    "$OutputSize" -> 4, "$InputSize" -> 20, 
                    "$InputDimensions" -> {20}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{20}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "4" -> <|"Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"high\"", "\"medium\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"very high\"", "\"medium\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 3, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"large\"", "\"small\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"high\"", "\"medium\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"very good\"", "\"unacceptable\"", "\"acceptable\"", 
                    "\"good\""}, "InputDepth" -> 1, "Multilabel" -> False, 
                    "Dimensions" -> 4, "$Rank" -> 0, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "TrainedNet"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "TrainedNet"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.870233139945414*^9, 3.870233167235887*^9}, 
   3.8702386253530684`*^9, 3.870250122734139*^9, 3.870269663320654*^9, 
   3.870317184559782*^9, 3.870319902184812*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"4bbe10f2-0890-4e87-b925-153b2b20ef2f"]
}, Open  ]],

Cell["\<\
Now we have a nonlinear function that can predict the acceptability of a car.
Let\[CloseCurlyQuote]s evaluate it on the test data.\
\>", "Text",
 CellChangeTimes->{{3.8703194810673428`*^9, 
  3.870319498051421*^9}},ExpressionUUID->"7fb2dfa2-ca03-4424-9df6-\
f9c13557cfa1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"predictions", ",", "summary"}], "}"}], "=", 
   RowBox[{"EvaluateStandardNet", "[", 
    RowBox[{"trainedStandardNet", ",", "testData"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.870315982896927*^9, 3.870316003781217*^9}, 
   3.870317196331381*^9, {3.8703172424621773`*^9, 3.870317243299294*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"27c69bb5-1f2c-46f8-a9b2-dd5d0d9f09d2"],

Cell["\<\
We can eyeball the predictions of the net compared to the ground truth.\
\>", "Text",
 CellChangeTimes->{{3.87031950519561*^9, 
  3.8703195166517773`*^9}},ExpressionUUID->"5b2b8457-a087-490d-a372-\
95ff87d5203a"],

Cell[BoxData["predictions"], "Input",
 CellChangeTimes->{{3.870319519093515*^9, 
  3.8703195200522957`*^9}},ExpressionUUID->"fcd58c86-cd92-4055-8e89-\
45d7759b0506"],

Cell["And we can measure the overall accuracy of the net.", "Text",
 CellChangeTimes->{{3.870319524795453*^9, 
  3.8703195506273203`*^9}},ExpressionUUID->"9fc78c6a-48b8-4010-baee-\
fde9b5bdd3c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"summary", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.870317199598048*^9, 3.870317247259336*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c985cb0f-60de-4b49-b4d6-10ed744b86e8"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.870317201143787*^9, 3.8703172477607813`*^9}, 
   3.870319907475828*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"c125fb2f-3eeb-4ab6-9cf0-2c36b1167eae"]
}, Open  ]],

Cell["\<\
How big is the net? To find out we can extract the learned weights.\
\>", "Text",
 CellChangeTimes->{{3.870319561338522*^9, 
  3.870319576995384*^9}},ExpressionUUID->"b9c5e504-6d0c-4a32-9c35-\
e175a5de8e24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"standardWeights", "=", 
   RowBox[{"GetStandardWeights", "[", "trainedStandardNet", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868965930761516*^9, 3.868965950743415*^9}, {
   3.8689659831088343`*^9, 3.868965987890936*^9}, {3.868966862559198*^9, 
   3.868966873437675*^9}, {3.870233235672789*^9, 3.870233250294325*^9}, {
   3.8702333295749197`*^9, 3.8702333853023148`*^9}, {3.870233486040847*^9, 
   3.870233495582412*^9}, {3.870233572560326*^9, 3.87023365846*^9}, {
   3.870238652997134*^9, 3.870238690570578*^9}, {3.870316053670169*^9, 
   3.870316059698886*^9}, {3.870316787228128*^9, 3.870316789763981*^9}, 
   3.8703172855981407`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"ea88cf34-6d1f-4d4a-88af-e09ff8e02fd4"],

Cell["\<\
Now each weight is typically either a 32-bit or 64-bit number. So the RAM \
cost of this particular classifier turns out to be about 16K.\
\>", "Text",
 CellChangeTimes->{{3.870319582347453*^9, 
  3.870319623995675*^9}},ExpressionUUID->"aeeff9c0-62c9-4e41-8881-\
40212ba3b69e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"standardNetSize", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "standardWeights", "]"}], "*", 
     RowBox[{"32", "/", "1024.0"}]}], ",", "\"\<Kilobytes\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8702336659500923`*^9, 3.870233701869587*^9}, {
  3.870238669133988*^9, 3.870238670026904*^9}, {3.870269588968584*^9, 
  3.870269591366375*^9}, {3.87026970279957*^9, 3.870269707149496*^9}, {
  3.870269765455564*^9, 3.870269777517768*^9}, {3.870316794893106*^9, 
  3.870316796688457*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"e8125b4a-aaf2-4efe-a7b6-a3d9bfce94e5"],

Cell[BoxData[
 TemplateBox[{"15.625`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.870233668428349*^9, 3.8702337026184483`*^9}, 
   3.870238634372211*^9, {3.870238670625368*^9, 3.870238696048998*^9}, 
   3.870250128513183*^9, 3.8702696693447027`*^9, 3.870269707964851*^9, {
   3.8702697697325068`*^9, 3.870269778090227*^9}, 3.870317287505951*^9, 
   3.8703199144738207`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"48e02e35-c8a1-4879-a35d-d5da5daf9b61"]
}, Open  ]],

Cell["\<\
This is a small dataset. 16K for a single classifier isn\[CloseCurlyQuote]t \
much memory. But for bigger problems the size of NNs can rapidly become very \
large.
For some applications, memory is a scarce. For example, in the ATM project we \
had to control the size of the NN that integrates with CodeQL to avoid OOM \
errors.
And we\[CloseCurlyQuote]ll want to integrate many more predictive models in \
the future.
So can we do better? Can we get the same predictive performance but for less \
memory cost?
Also, we have ideas for making learning a first-class citizen of the QL \
language. But to achieve that vision we\[CloseCurlyQuote]d need to \
back-propagate through non-differentiable logical predicates.
So, for all these reasons, we need a different kind of neural network, which \
for now I\[CloseCurlyQuote]m calling a \[OpenCurlyDoubleQuote]neural logic \
network\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.8703199398593082`*^9, 3.8703200571793623`*^9}, {
  3.870320094011066*^9, 
  3.870320463177799*^9}},ExpressionUUID->"03b49d21-4bd5-4b01-a35e-\
56268b42b92d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A neural logic network", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.86843932450987*^9}, {3.870228699973207*^9, 
  3.870228702399172*^9}},ExpressionUUID->"1674350a-bfdf-4c15-99d4-\
bba009f90f57"],

Cell["\<\
Let\[CloseCurlyQuote]s define a neural logic network that can learn the same \
\[OpenCurlyDoubleQuote]cars\[CloseCurlyDoubleQuote] problem as before.\
\>", "Text",
 CellChangeTimes->{{3.870320470026945*^9, 
  3.87032049148285*^9}},ExpressionUUID->"e5a43929-84d4-4b97-8593-\
77be8fbda82b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"NeuralLogicNet", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.870259991769372*^9, 3.870259996681082*^9}, {
   3.870260439802258*^9, 3.8702604494722023`*^9}, {3.870261069178686*^9, 
   3.870261091508623*^9}, 3.87026125357766*^9, {3.870261371476782*^9, 
   3.870261371570752*^9}, {3.870261447665851*^9, 3.870261455476227*^9}, {
   3.870261539441456*^9, 3.870261540767321*^9}, {3.87026169518561*^9, 
   3.870261706102409*^9}, {3.8702676248171673`*^9, 3.870267691460342*^9}, {
   3.8702678430801764`*^9, 3.87026785701112*^9}, {3.870267956033484*^9, 
   3.870267958323094*^9}, {3.870268040954144*^9, 3.870268046611794*^9}, {
   3.8702684445887337`*^9, 3.8702684523723183`*^9}, {3.870268563998494*^9, 
   3.870268579532372*^9}, 3.870268664131528*^9, {3.870268710755327*^9, 
   3.870268713780798*^9}, {3.870268809234954*^9, 3.8702688096046963`*^9}, {
   3.870268913851412*^9, 3.8702689998438597`*^9}, {3.870269140651743*^9, 
   3.870269142674301*^9}, {3.8702692415882072`*^9, 3.870269244861579*^9}, {
   3.8703161943097363`*^9, 3.870316197301139*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"84c57495-f98a-4ca4-922c-c5d2c5fd64e9"],

Cell["\<\
Notice that we\[CloseCurlyQuote]ve actually defined 2 things here: a soft \
net, and a hard net. Ignore the hard net for now.
Let\[CloseCurlyQuote]s flatten the soft net to examine the architecture.\
\>", "Text",
 CellChangeTimes->{{3.8703206795304193`*^9, 
  3.870320710578745*^9}},ExpressionUUID->"5ffa9b79-f5dc-428f-803a-\
6955dbdea24d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetFlatten", "[", "softNet", "]"}]], "Input",
 CellChangeTimes->{{3.8702403261056013`*^9, 3.870240335861072*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"b2b63338-5834-4d32-98ef-185081700ecb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss/Error\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-9.00000005358979, -1.9999997588459262`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/Featu..\"", "\"Net/FeatureLayer/Catenate\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "Net/FeatureLayer/Catenate", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    Offset[{0, -13.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-9.000000026794893, -0.9999997588459264}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    Offset[{0, -7}, {-8.9999999732051, 1.000000241154073}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-8.999999946410203, 
                    2.0000002411540727`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-8.999999919615306, 
                    3.0000002411540723`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Hard..\"", "\"Loss/Harden\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/Harden", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Soft..\"", "\"Loss/SoftProbs\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/SoftProbs", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Soft..\"", "\"Loss/SoftmaxLayer\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/SoftmaxLayer", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/7\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/7", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/1\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/1", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999892820409, 
                    4.000000267948969}], 
                    
                    Offset[{0, -13.5}, {-9.999999892820409, 
                    4.000000267948969}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/3\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/3", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999892820409, 
                    4.000000241154072}], 
                    
                    Offset[{0, -13.5}, {-8.999999892820409, 
                    4.000000241154072}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/2\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/2", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{0, -13.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/4\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/4", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{0, -13.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/5\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/5", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.999999946410203, 
                    2.0000002143591757`}], 
                    
                    Offset[{0, -13.5}, {-7.999999946410203, 
                    2.0000002143591757`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/6\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/6", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}], 
                    
                    Offset[{0, -13.5}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/9\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/9", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/8\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/8", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.739252852901899}, {-8.479056953218153, \
-0.43717059731717045`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670887`, 0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592804, 
                    2.459674907063231}, {-8.455901697074271, 
                    0.08819682770002596}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.447213619466042, 
                    0.8944271790168734}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.8890871923183177`, 
                    3.889087400733702}, {-8.449999985262803, 
                    0.5500002264168798}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.7071067622396942}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-8.4499999732051, 
                    1.0000002264168797`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.889087400733705, 
                    3.8890871923183155`}, {-8.449999961147396, 
                    1.4500002264168796`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396937, -0.7071068001334009}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406268, 
                    2.459674643436302}, {-8.455901648210915, 
                    1.9118036254500042`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721357153387314`, -0.8944272029829577}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"21\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-7.4499999732051005`, 
                    1.0000001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"1344\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999892820408, 
                    4.000000253211775}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"256\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"1344\"", TraditionalForm], 
                    
                    Offset[{4.919349616406268, 
                    2.459674643436302}, {-8.455901621416018, 
                    2.9118036254500037`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721357153387314`, -0.8944272029829577}], 
                    InsetBox[
                    FormBox["\"256\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-6.4499999999999975`, 
                    1.728270858378101*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"21\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.889087192318317}, {-7.449999961147396, 
                    1.4500001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334005}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-5.449999985262805, 
                    0.5500001460321887}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"64\"", "\"21\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"64\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.00000005358979, -1.9999997588459262`}, \
{-7.9999999732051, 1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.000000026794893, -0.9999997588459264}, \
{-7.9999999732051, 1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.9999999732051, 
                    1.000000241154073}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999946410203, 
                    2.0000002411540727`}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999919615306, 
                    3.0000002411540723`}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999892820409, 
                    4.000000267948969}, {-8.999999892820409, 
                    4.000000241154072}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.999999999999997, 
                    2.1435917623294274`*^-7}, {-6.999999999999997, 
                    1.875642792038249*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999892820409, 
                    4.000000241154072}, {-7.999999946410203, 
                    2.0000002143591757`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999999999998, 
                    1.6076938217470707`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.999999946410203, 
                    2.0000002143591757`}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
64\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999999999998, 
                    1.6076938217470707`*^-7}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
64\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.479056953218153, -0.43717059731717045`}, \
{-0.25, 0}, 
                    Offset[8], {1.00000008038469, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.455901697074271, 
                    0.08819682770002596}, {-0.25, 0}, 
                    Offset[8], {1.000000053589793, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999985262803, 
                    0.5500002264168798}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.4499999732051, 
                    1.0000002264168797`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999961147396, 
                    1.4500002264168796`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051021, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.455901648210915, 
                    1.9118036254500042`}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102052, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999732051005`, 
                    1.0000001996219825`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999892820408, 
                    4.000000253211775}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.455901621416018, 
                    2.9118036254500037`}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102052, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999999999975`, 
                    1.728270858378101*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.449999961147396, 
                    1.4500001996219825`}, {-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
64\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.449999985262805, 
                    0.5500001460321887}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
64\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"CE\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss/Error\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/Error", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-9.00000005358979, -1.9999997588459262`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.9999999732051, 1.000000214359176}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 16], {-7.9999999732051, 1.000000214359176}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/FeatureLayer/Catenate\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/FeatureLayer/Catenate", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-9.000000026794893, -0.9999997588459264}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8.9999999732051, 1.000000241154073}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8.999999946410203, 2.0000002411540727`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-8.999999919615306, 3.0000002411540723`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.98, 0.98, 0.98]], 
                    EdgeForm[
                    GrayLevel[0.97]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"C\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/Harden\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CompiledLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/Harden", Bold], 
                    Style[
                    CompiledLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Sum]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/SoftProbs\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Total", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/SoftProbs", Bold], 
                    HoldForm[
                    AggregationLayer[Total]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztWFtIk2EYdnO6zaFuc9N5SHSbp6lT2cmpqNOpOwiRUhkUoXkgCoVpSBdF
dROdLqqbLqKuuomC6EARFEGR0F1FEdVVFEQXRecDnZ5HNhiytWn/1oG98Prr
9/7/93zv+73f+72P5SNTA+PitLS0aRl+DAzPugKB4a2DSvyxcnJ648Tk2Kh3
cmZsYizQPJKOQQe0FCpJS0lKUpKS/1syMjJUpaWl4yaTaX9FRcU2rVbbl2hM
vV4/7fF4Xvv9/m/d3d1P8PzS39//w263nxeJROJEYNbU1OwjBrC+wt9Rjkkk
kmyLxXKS42VlZZuExszLy3NxbqvVetrtdj/Nzs42hWxSqbSANpvNdlZoXKfT
ec3n833Kzc21er3eD3g25eTkNFL5O3C/OxyOi0Jiwh8d58UeXtDpdCvoWyQ1
m81HhcRFjDs5L/Z3T3V19e6GhoZjGo3GvVCzsrL0QuLCxwHiVlVV7UK8r+bn
5/tCNuZVc3PzFaxpr5CYFKVSaSNua2vrTZ6hzMzMvJCtrq7uMG3FxcVrhcaF
iFpaWq5zfuKiTniKiopWMX85xvqRAMx5kclkJcA5F55HnZ2d9+HnmkRhhkt6
eroCZ7eO60gGXkr+TUHN1UEbk604Dzui1dtEKu7SIeiZZOuf3ueUJFcKCtgq
xc5Hg8EwIyQu7nQ/52UvhbvvRjTFPTgkJC7vm7a2tlvBvnSzkHPHEvQTWpfL
9Yi9eWFh4WAysdmj9fT0PGe81Wp1ezzfKBSKCvIJ9B8H+ESPa14KNvpiC/qa
t319fa9410d7D3sjR495nDyCvTX6+mfsexkvo9G4dSnY6KV6yYHIEeRy+bKF
drFYLGWeEZM5AZ+NHGe8Ojo67hF7KX4zz7DXDzlnSUnJuoX2ysrKnbTV1tYe
7O3tfRFuQ86vpg0xDywSVgTOdYrf1tfXH4m0JsT1XXt7+232sfQ7xF2o4G4b
gmd9djGg8GU7v+N84JgZC+0hfzDvFvobrcYsprcGR1jO3OC+ku9FWdf83Y1a
40VPP1deXj4Vib+Qp8eDSY6JPH6DM/SRXCHae+AKh4jLPh7xfk/OErKpVCon
+UuknIgkXFtXV9fjYB6t/9W7jC/fA/+8hNy9ExrnuWLNw7o/I68N8eCG7oVY
9bmpqekE44+z/TLIneYQ027+HwBruMuzRz4XD2Y4biwFR3nA91HLWokTZiP/
voz9sceL+TuCmq5hfcA+qZOBl5KU/E3yE7YM2js=
                    "], {{0, 29.333333333333332`}, {16., 0}}, {0, 255}, 
                    ColorFunction -> RGBColor, ImageResolution -> 135.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {16., 29.333333333333332`}, 
                    PlotRange -> {{0, 16.}, {0, 29.333333333333332`}}, 
                    ImageSize -> 16], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/SoftmaxLayer\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SoftmaxLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/SoftmaxLayer", Bold], 
                    Style[
                    SoftmaxLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.9999999732051, 1.0000001875642788`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/7", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-9.999999892820409, 
                    4.000000267948969}], 
                    
                    Offset[{-10.5, -10.5}, {-9.999999892820409, 
                    4.000000267948969}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-9.999999892820409, 
                    4.000000267948969}], 
                    
                    Offset[{10.5, 10.5}, {-9.999999892820409, 
                    4.000000267948969}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-9.999999892820409, 
                    4.000000267948969}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/1", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999892820409, 4.000000241154072}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.999999892820409, 
                    4.000000241154072}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/3", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-7.999999999999997, 
                    2.1435917623294274`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/2", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-6.999999999999997, 
                    1.875642792038249*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/4", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.999999946410203, 2.0000002143591757`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-7.999999946410203, 
                    2.0000002143591757`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/5", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.999999999999998, 1.6076938217470707`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-5.999999999999998, 
                    1.6076938217470707`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/6", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/9", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.999999973205101, 1.0000001607693818`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Max\"", 
                    GrayLevel[0.33], Bold, 9, StripOnInput -> False], 
                    TraditionalForm]], {-5.999999973205101, 
                    1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/8\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Max", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/8", Bold], 
                    HoldForm[
                    AggregationLayer[Max]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ/fc/GOxPSpJyDD6aYxcTNvfj///v958PMWRnYPhg
bxR6hpGBQenAahaX/SB1J1cZ//v/X/5A47IuS5D8DK1nDCD5CM6OOpC+f2Dj
FA+EX5935Z/eBLuUq5JgfuDv3Q4g9afA+hUPrPgbqwDU6GDQ4PsXxF8O5nM4
QNwRYwdx13v7qaHpf/7/5z/gEHxUBqR/GpjPfiD/32RREF939bkfIHfNX5nE
B+JD3Cd9YENgpBFCvfIB9pDfggwMAg4QvuKBy//0BEB8iD3yByD29kDtlT4g
Jvb9xgqdTjuI/fJQ+xkcIP4TP3Dq5OWCf5Nb7SD+ET4gsOKbMsJ/4gce/FHX
BvEBkabCSg==
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 21, 8, 8, 8, 8, 8, 8, 21, 21, 21, 21, 21, 
                    21, 21, 21, 21, 21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {602.9999955788418, 370.00000147371924`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{27.999999999999957`, 25.}, {25., 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1344}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1344}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {1344}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/8" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_6036b217_5ba6_4e48_99d8_87d580a3c745", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
0epE+I3/A69R2So=
                    "]]|>, "orcInstance" -> 1064450640, "orcModuleId" -> 
                    1062272176, "targetMachineId" -> 652343152|>, 
                    140439677974336, 140439677974192, 140439677974272, 
                    140439677968384, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_4a84f33f_85d3_4bf6_b13b_72d058fc1a0f", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
IYmqPOzeTKWTcgFQLjTj7L9lKuQHFRMzjCbfaH17EEl8Wj+AuhP6guThroyg
14HYCUFncBJ0aSCeVSmM6J07qRA+1hsbjJ00xSi4WQBhyEBg/WNMhVNxiOBU
uoIZfQoBJ49lAbAElo4dbIAbOgMoSKurAjsgxlbKUT5rxFlEbRgYptuvuM8k
O03Wd/2JTIGXkUzt78VIW6xXRNiH2Xp+QLcZWQvjbmDAHfxVxZb0Ftg3T43p
Nvvhgp0MN6Bd4/rhtvPjoa4tjEmU9uzH2sOUtmJrRNsw/HZ65wFx1UcghvKg
8rEHVVHQA79T1+fvlOMc/6uDMNNWApRCXEzeV8i7Re3281aN+Ypf3rfq6FfW
Ul7JwyUruHTzbGhLy12B083L5g/C8kdnCeepeI8+n3RQXMK/dfbvURnOXnLu
hZl9TbFqJDP+1tm704moLnXfqgsTHNQ2+eiTs6wK8KbqYV496X6+PBhLqX9Z
qw1S6qfuJ9HNT7Q9dPNhNK1bf7w5RRQrEQWcxoBbVnZZ2scL8c/eHTd6Yd96
g96Jv3wncfaTjVbIoM3drXttaNShZtPKGNq9U5//TsEUqVhK6dFJvNWDpbmT
Rw94rLvmuRdVD6kNpePt4z+r+miZgvDe3UCEaq6Ei6e4GTdYLeB1O+ZmdwZa
7DGbQjdtYIIHjzchjWd26KjbMXUutMDD5POQUnGnzpVV4fEoOpa6fodu1uBt
2BkH6UeQFoTPBmBUPwjLU7/IfT9C6Y9RaQAIw2eUCKX4WCYAU+E7DzyhND8t
ZIf65BGhEf5L8D0BPKGRcerCdTlCI3a3g9CXhQiN8C8iIZ93j7IL4PmtJzyX
CI3IHwvLHXvKz0vh9qWn+PdAKGYRGuGzod1x4AmN8BORkH6ERviZsD0GPKER
fl5YLu8peTUS+gwToZH4gFF5Y0fmFb5nxIMnNMKnfr+DmHGEMHOfwgt1/ZLJ
aupqmmr0lpql8E5XX6eC1zjqMmaxNNdmmVqspuqmrBrxDJvJVDZ3ca3JVlNN
3+IqFtc11dSatEqbSd9kGt1DK9aaaqutrVlWskYWetTkSmf9BztaqV4mNWdn
m7WyHGO2Vmow52oN4myDNk9iJHNk5mqxnjRTjmiVs+qa66tpJbr9sk1vtZps
WqXeYqEZJS1W2xOZuaYl2silucRmq7c1mppKWqpNVqpzXlOrxVRpamyaaWrS
llWa6hrrbVCtesFjCbW+zgg1Q/MKS1AG6AiEmm/AAZtMtjq9Jcx4HCsbDEld
k96SVVcPJ6pvzGqsrreasoymagu8vJNZYsJo1GfLDNn67PxcmSknu9pkyDNK
JTIyJz9PX51TLTNW55LmXKMeXu218GZvrX7OQl31Xy57/B3gf/UVIGuJJav0
P0WNwsK/A4LCwCQ=
                    "]]|>, "orcInstance" -> 1062207024, "orcModuleId" -> 
                    1063912688, "targetMachineId" -> 1063795728|>, 
                    140439592120864, 140439592120464, 140439592120544, 
                    140439592120320, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {4, 64},
                     "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "7e1013fc2458a4a2", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/Error" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"very good\"", "\"unacceptable\"", "\"acceptable\"", 
                    "\"good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"high\"", "\"medium\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"very high\"", "\"medium\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 3, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"large\"", "\"small\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"high\"", "\"medium\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Error"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Harden"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftProbs"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftmaxLayer"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/7"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/4"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/5"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/6"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/9"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/8"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Error"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Harden"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftProbs"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftmaxLayer"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/7"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/4"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/5"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/6"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/9"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/8"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8702403273312798`*^9, 3.8702403365743628`*^9}, {
   3.870240370775208*^9, 3.870240390383648*^9}, 3.8702404498574533`*^9, 
   3.870240533881447*^9, 3.8702406325987473`*^9, 3.8702408890520678`*^9, 
   3.8702412008640614`*^9, 3.870241316393173*^9, 3.87024136781075*^9, 
   3.870241817399996*^9, 3.870242169731282*^9, 3.8702423881924067`*^9, 
   3.8702425735859413`*^9, 3.8702427213143377`*^9, 3.87024275430576*^9, 
   3.870242863898876*^9, 3.870242958027252*^9, 3.870243096739131*^9, 
   3.870243243476796*^9, 3.8702433996050377`*^9, 3.870243899445455*^9, 
   3.8702487260950727`*^9, 3.870250240315624*^9, 3.8702503076299353`*^9, {
   3.870250439294239*^9, 3.8702504639746523`*^9}, 3.8702505077151613`*^9, 
   3.8702506128186283`*^9, 3.87025066995681*^9, 3.870250754134753*^9, 
   3.870250838956868*^9, 3.870250901725518*^9, 3.8702509867969217`*^9, 
   3.870251053296275*^9, 3.870251279256816*^9, 3.870251332762998*^9, 
   3.870251426856062*^9, 3.870260451155424*^9, 3.870261092908564*^9, 
   3.870261255878683*^9, {3.8702613477668123`*^9, 3.870261373702249*^9}, 
   3.8702614577049913`*^9, 3.870261542353531*^9, 3.8702617106090183`*^9, 
   3.8702676943103657`*^9, 3.870267858897608*^9, 3.870267961093233*^9, 
   3.8702680503877583`*^9, 3.870268250009288*^9, 3.870268454551862*^9, 
   3.8702685818386106`*^9, 3.8702686668490458`*^9, 3.870268715576152*^9, 
   3.870268811305696*^9, {3.8702689833096*^9, 3.870269001781554*^9}, 
   3.870269144325844*^9, 3.870269246923285*^9, 3.870269327301519*^9, 
   3.870269395780827*^9, 3.870269509800359*^9, 3.8702697885058947`*^9, 
   3.870317320041833*^9, 3.870320733523279*^9, 3.8703224304163027`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"401ba84a-fb74-40ae-bc61-eb6431e47efe"]
}, Open  ]],

Cell["\<\
As before, this net takes as input the 6 car features.
And, as before, the net outputs 4 probability values and uses a cross-entropy \
loss.
But otherwise the architecture is quite different.
In fact, this net also has 2 layers.
I chose this architecture because it\[CloseCurlyQuote]s the smallest \
neural-logic network that can learn the classification problem.
The first layer consists of 64 neurons that act like the logical OR operator \
but are continuous functions and therefore differentiable.
The second layer consists of 4 neurons that act like the logical NOT operator \
but are also differentiable.
The learnable real-valued weights in this net are real-valued \
\[OpenCurlyDoubleQuote]soft bits\[CloseCurlyDoubleQuote] that range between 0 \
and 1.
They control whether specific OR or NOT operations are active.
Although the semantics correspond to non-differentiable logical operations \
the entire net is end-to-end differentiable.
So we can train it like a normal neural network.
Let\[CloseCurlyQuote]s  do that.\
\>", "Text",
 CellChangeTimes->{{3.8703207576663094`*^9, 3.870320782570817*^9}, {
  3.870320814706141*^9, 3.870321227698745*^9}, {3.8703212579790907`*^9, 
  3.870321274530603*^9}},ExpressionUUID->"7a697f04-03c9-417e-8209-\
cc642ea858a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"TrainNeuralLogicNet", "[", 
   RowBox[{"softNet", ",", "trainData", ",", "testData"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}, {3.86912172241117*^9, 
   3.8691217224768143`*^9}, {3.869651243457945*^9, 3.8696512443590508`*^9}, {
   3.869652345237102*^9, 3.8696523460650587`*^9}, {3.870176213162601*^9, 
   3.870176232203189*^9}, {3.870233790438415*^9, 3.8702337978709087`*^9}, {
   3.870235358600091*^9, 3.870235363421095*^9}, 3.870235431774667*^9, 
   3.870235695013812*^9, {3.870235881306831*^9, 3.87023588141299*^9}, {
   3.870235916262095*^9, 3.870235920686771*^9}, {3.870236438934493*^9, 
   3.870236439037176*^9}, {3.870243617635653*^9, 3.870243617791752*^9}, {
   3.870250244952783*^9, 3.870250248200946*^9}, {3.870250344774638*^9, 
   3.870250344930841*^9}, {3.8703164242373543`*^9, 3.870316433077147*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "15625"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "625"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["56s"], 
                  TextCell["56s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "17945"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "1555"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "173"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "1000000"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"2.21\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.022051603981476493`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["0.625%"], 
                  TextCell["0.625%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"1.83\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.018251413756695697`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["0%"], 
                  TextCell["0%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJw1mHk8lOsbxrU7IVuRlC1UtNizJLcoQsqSLJFdIYaxrzMjJVHaDilRKaXS
4uhUqidCqU4LpY5UUsoSZt73ndFy4vf08/CPj+2d57nv6/pe11APjHYNmSgm
JrZ4gpjY78/jHxaB3pqJ4ket7ttza4eui8HlTQPSq1ua0NjXMtD9pM7hwcw3
SGfA+kjYLCXw/a5+zv3ie/JzNZjINy4vd/uIvhcHVOp+0QSlOGfV72+7ye8v
AlOVg8mxrz+gzVYaOadslkD5gMf+9l/d5O/1IF/17OcE5c+oM0ZwVeqZAbwJ
ta74eKqPPM8IGsJ2DtfZ9yO5hucn1o6YwObXMnbOg5/I883gsbnr2yzZfmSj
cLUge7EF9C2Iep+o2UtezxKUt6w4v72uF8VvPZBZ520Fn0ymqD1U7yWvDzBa
7CmeZv0Fufma/Z3RYA09gj1auSf6yXlWgfJeIxOlokEUufNc1bE3NqB/3Sah
enSAnM8WLt/cWiD0GkDZl5TO3KRWw2PVUv0zOwfJeddAuYVXIUvsKzr+enfJ
6z/sIfe0u0RFbw85/1q4MCWg0vpzP/p7wo9DIjUHeLz9tV80m0/u4wgfXtTR
pzfw0TOd8LyZpk6wo2rZ5jw3PrnfOvBysLtod24I9bq1Zxmsdwb33A1BnXf5
5L7rwb9MIlkoSSPuytOWCw03gO3z3rtxb/jk/hvgPzHHvT2mAiT1ewArXeBL
cdjWdeECMg8XeLWjl2W4aQgVh80yXuPgCiGuUXu0zflkPq5Qoxy9xKRrCGmn
/aP3cqMbDExS0aw4LSDzcgPFg1qGeuoDqBrfJjjAHe4YVvuN5ArI/NwhHKld
u5bVh6zw8ejIjfCopHXxvRgBmedGCH0S9q4RP+/RDeF8XpIH3FmqwPlkQJH5
esC+Pfd82+Io5Pnkoqrsjk2gWN/814OzfDJvT8iA/st17nz0qStEuWyfJ9jk
2d7J/VNA5u8F+lPY51bKCVDM8DzFZUe9YEBO/GmBKUP24Q3ZOU88NMIp9Eui
Te7OGW+omR3aX+RIk/34QHho3flGeRrlqu2dse6qD6RLpzne30SRfW2GyFHf
252zhUjBeM30jtubIcKuqUFLlib784WywcVXuiwpdHLtyJSIZl+YudF9+no5
muzTD6SWq/J2KjJomd+1CT9e+EGrscpeWRCQ/W6BdLmS7GOdfFQbG/Urp3ML
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

                    "]]}, {}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.32200000000000006`}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.32200000000000006`}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 0.32200000000000006`}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 0.32200000000000006`}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 0.32200000000000006`}], {1., 
                    1.}]}, {
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 625.02}, {-1.9220000000000002`, 
                    0.32200000000000006`}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{200., 400., 600., 800., 1000.}, {{-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
YZ+yor6bme3aLCv51Z9/CaOT
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1: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
                    "]]}, {}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.795375}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.795375}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 0.795375}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 0.795375}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 0.795375}], {1., 1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.2], 
                    Offset[{3, 0}, {0, 0.2}], {-1, -1.}], 
                    Text[
                    PercentForm[0.4], 
                    Offset[{3, 0}, {0, 0.4}], {-1, -1.}], 
                    Text[
                    PercentForm[0.6], 
                    Offset[{3, 0}, {0, 0.6}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 625.02}, {-0.007875000000000002, 
                    0.795375}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.2, 
                    GrayLevel[0.3001]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    ImageSizeCache->{253., {10.1904296875, 15.8095703125}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    ImageSizeCache->{314., {94.566796875, 98.633203125}},
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{3.8703173877306547`*^9, 3.870322493891736*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"cd6a9030-7871-4492-bcec-5b8c1da70b62"]
}, Open  ]],

Cell["\<\
It takes about a minute to get high accuracy on the validation set.
So training takes longer.
Neural-logic nets have the same worst-case time-complexity as standard nets \
but there is a constant cost to pay.
Also neural-logic nets require more memory at training time.
But the additional training costs yield the benefit of very compact \
classifiers that are cheap to query and have the same predictive performance, \
as we\[CloseCurlyQuote]re about to see.
Let\[CloseCurlyQuote]s extract the trained net.\
\>", "Text",
 CellChangeTimes->{{3.870322180929741*^9, 3.8703221863362207`*^9}, {
  3.870322956276149*^9, 3.870323044164714*^9}, {3.870326175931581*^9, 
  3.870326303970292*^9}},ExpressionUUID->"52a22fbd-4527-4294-80fb-\
729864c6e2a8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedNeuralLogicNet", "=", 
   RowBox[{"GetTrainedNeuralLogicNet", "[", "result", "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.870322194712606*^9, 3.870322209683584*^9}, 
   3.870322712711472*^9, 3.870322823222105*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"db16a4ec-95e1-41d9-a946-025c87ea0139"],

Cell["\<\
Now, when we defined the neural-logic net we got 2 things: a soft net and a \
hard net.
These are 2 different representations of the same network architecture.
The soft net uses real weights, and is a differentiable nonlinear function.
The hard net uses boolean weights, and is a non-differentiable, discrete \
boolean function.

Now comes the trick!
We use the soft net to learn real-valued weights.
Then we convert the real-valued weights to boolean-valued weights, just True \
and False.
And then we use the boolean weights with the hard net.
Unlike existing binarization techniques this conversion is perfect ... we don\
\[CloseCurlyQuote]t introduce any approximation error.
Let\[CloseCurlyQuote]s do this now.\
\>", "Text",
 CellChangeTimes->{{3.870321479464013*^9, 3.870321515930093*^9}, {
   3.87032154969018*^9, 3.870321815428266*^9}, {3.870321847140533*^9, 
   3.870321847868649*^9}, {3.870321887117103*^9, 3.8703220009424267`*^9}, {
   3.8703221795930853`*^9, 3.870322189016119*^9}, {3.870322267488628*^9, 
   3.8703222947977324`*^9}, {3.8703260712296247`*^9, 3.870326165004257*^9}, 
   3.870326284314814*^9, {3.8703263151783*^9, 
   3.87032634371426*^9}},ExpressionUUID->"471beace-3c54-497f-b2ed-\
e2d40ad7ebd0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedNeuralLogicNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"hnbe", "=", 
  RowBox[{"HardNetBooleanExpression", "[", 
   RowBox[{"hnf", ",", "inputSize"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}, {
   3.8684988741865396`*^9, 3.868498874592616*^9}, {3.868499185605513*^9, 
   3.8684992093586597`*^9}, 3.868501716401897*^9, {3.868514975845937*^9, 
   3.868514978733061*^9}, {3.868533857047714*^9, 3.8685338619606743`*^9}, {
   3.868592161602441*^9, 3.8685921624093037`*^9}, {3.868937316229151*^9, 
   3.8689373167579613`*^9}, {3.868937496012*^9, 3.86893752144172*^9}, {
   3.868937596537734*^9, 3.868937603616037*^9}, 3.868937747599498*^9, 
   3.868938118528597*^9, {3.868939027026972*^9, 3.8689390465517597`*^9}, {
   3.868976302381322*^9, 3.868976307139587*^9}, {3.869121279126927*^9, 
   3.869121279479135*^9}, {3.870170868231748*^9, 3.870170876076961*^9}, 
   3.8701713579985523`*^9, {3.870317394371962*^9, 3.870317399254509*^9}, {
   3.8703218191813583`*^9, 3.870321831848304*^9}, {3.8703220097353773`*^9, 
   3.870322011095257*^9}, {3.870322050265683*^9, 3.870322062125989*^9}, {
   3.870322215788803*^9, 3.870322217453288*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "b6", "||", "b11", "||", "b14", "||", "b17", "||", "b19", "||", "b21"}], 
     ",", 
     RowBox[{
     "b1", "||", "b3", "||", "b6", "||", "b14", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{
     "b2", "||", "b8", "||", "b10", "||", "b14", "||", "b16", "||", "b18", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b6", "||", "b10", "||", "b17", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b3", "||", "b5", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b4", "||", "b5", "||", "b6", "||", "b7", "||", "b14", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b11", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b2", "||", "b5", "||", "b8", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", 
        "b19"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b8", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b17", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b10", "||", "b14", "||", "b17", "||", "b19", "||", "b21"}], ",", 
     RowBox[{"b1", "||", "b13", "||", "b18"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b6", "||", "b8", "||", "b14", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b2", "||", "b5"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b18", "||",
         "b20"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b16", "||", "b20"}], 
     ",", 
     RowBox[{
     "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b14", "||", "b16"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16", "||", 
        "b18"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
         "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b3", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b15"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b20", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b2", "||", "b8", "||", "b14", "||", "b21"}], ",", 
     RowBox[{
     "b8", "||", "b14", "||", "b17", "||", "b18", "||", "b19", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b14", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b5", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], ",", 
     
     RowBox[{"b2", "||", "b5", "||", "b7", "||", "b16", "||", "b19"}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b5", "||", "b14", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b10", "||", "b11", "||", "b14", "||", "b17", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b10", "||", "b13", "||", "b14", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b10", "||", "b14", "||", "b16", "||",
         "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b6", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"b3", "||", "b4", "||", "b5", "||", "b8"}], ",", 
     RowBox[{"b1", "||", "b3", "||", "b16"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
         "b18", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b6", "||", "b7", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b9", "||", "b12", "||", 
      "b14", "||", "b15", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b14", "||", "b15", "||", "b16", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b6", "||", "b8", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b6", "||", "b10", "||", "b13", "||", "b14", "||", "b16", "||", 
        "b21"}], ")"}]}], ",", 
     RowBox[{"b14", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b15"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b12", "||", "b16"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b5", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{"b1", "||", "b16", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b11", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b10", "||", "b14", "||", "b16", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b9", "||", "b12", "||", "b14", "||",
         "b17", "||", "b18", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b20", "||",
         "b21"}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "b6", "||", "b11", "||", "b14", "||", "b17", "||", "b19", "||", "b21"}], 
     ",", 
     RowBox[{
     "b1", "||", "b3", "||", "b6", "||", "b14", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b8", "||", "b10", "||", "b14", "||", "b16", "||", "b18", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b6", "||", "b10", "||", "b17", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b3", "||", "b5", "||", "b7"}], ")"}]}], ",", 
     RowBox[{
     "b3", "||", "b4", "||", "b5", "||", "b6", "||", "b7", "||", "b14", "||", 
      "b21"}], ",", 
     RowBox[{"b4", "||", "b11", "||", "b14", "||", "b17", "||", "b21"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], 
       ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b2", "||", "b5", "||", "b8", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"b2", "||", "b4", "||", "b14", "||", "b17", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", 
        "b19"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b8", "||", "b14", "||", "b17", "||", "b21"}], 
     ",", 
     RowBox[{"b6", "||", "b14", "||", "b17", "||", "b20", "||", "b21"}], ",", 
     
     RowBox[{"b2", "||", "b4", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"b10", "||", "b14", "||", "b17", "||", "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b13", "||", "b18"}], ")"}]}], ",", 
     RowBox[{"b2", "||", "b6", "||", "b8", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b2", "||", "b5"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b18", "||",
       "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b16", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b14", "||", 
        "b16"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16", "||", 
        "b18"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
       "b17", "||", "b21"}], ",", 
     RowBox[{
     "b1", "||", "b3", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b15"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"b2", "||", "b8", "||", "b14", "||", "b21"}], ",", 
     RowBox[{
     "b8", "||", "b14", "||", "b17", "||", "b18", "||", "b19", "||", "b21"}], 
     ",", 
     RowBox[{"b8", "||", "b14", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5", "||", "b7"}], ")"}]}], ",", 
     RowBox[{"b6", "||", "b14", "||", "b17", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b5", "||", "b7", "||", "b16", "||", "b19"}], 
       ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b5", "||", "b14", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b10", "||", "b11", "||", "b14", "||", "b17", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{"b4", "||", "b10", "||", "b13", "||", "b14", "||", "b21"}], ",", 
     
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b10", "||", "b14", "||", "b16", "||",
       "b17", "||", "b21"}], ",", 
     RowBox[{"b6", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b4", "||", "b5", "||", "b8"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b3", "||", "b16"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b6", "||", "b7", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b9", "||", "b12", "||", 
      "b14", "||", "b15", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b14", "||", "b15", "||", "b16", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", 
        "b19"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b6", "||", "b8", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b6", "||", "b10", "||", "b13", "||", "b14", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"b14", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b15"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b12", "||", "b16"}], ")"}]}], ",", 
     RowBox[{"b4", "||", "b5", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b16", "||", "b19"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b11", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"b6", "||", "b14", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", 
        "b19"}], ")"}]}], ",", 
     RowBox[{"b10", "||", "b14", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b9", "||", "b12", "||", "b14", "||",
       "b17", "||", "b18", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b20", "||",
       "b21"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b6", "||", "b11", "||", "b14", "||", "b17", "||", "b19", "||", 
        "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b3", "||", "b6", "||", "b14", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b8", "||", "b10", "||", "b14", "||", "b16", "||", "b18", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b2", "||", "b6", "||", "b10", "||", "b17", "||", "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b3", "||", "b5", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b4", "||", "b5", "||", "b6", "||", "b7", "||", "b14", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b11", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b2", "||", "b5", "||", "b8", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b8", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b17", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b10", "||", "b14", "||", "b17", "||", "b19", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b13", "||", "b18"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b6", "||", "b8", "||", "b14", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b2", "||", "b5"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b18", "||",
       "b20"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b16", "||", "b20"}], 
     ",", 
     RowBox[{
     "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b14", "||", "b16"}], 
     ",", 
     RowBox[{
     "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16", "||", "b18"}], 
     ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
       "b17", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b3", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"b13", "||", "b15"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b8", "||", "b14", "||", "b17", "||", "b18", "||", "b19", "||", 
        "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b14", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b5", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], ",", 
     
     RowBox[{"b2", "||", "b5", "||", "b7", "||", "b16", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b4", "||", "b5", "||", "b14", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b10", "||", "b11", "||", "b14", "||", "b17", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b10", "||", "b13", "||", "b14", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b10", "||", "b14", "||", "b16", "||",
       "b17", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b3", "||", "b4", "||", "b5", "||", "b8"}], ",", 
     RowBox[{"b1", "||", "b3", "||", "b16"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"b2", "||", "b3", "||", "b6", "||", "b7", "||", "b20"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b9", "||", "b12", "||", 
      "b14", "||", "b15", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b12", "||", "b14", "||", "b15", "||", "b16", "||", "b20", 
        "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
       "b21"}], ",", 
     RowBox[{"b2", "||", "b4", "||", "b6", "||", "b8", "||", "b20"}], ",", 
     RowBox[{
     "b6", "||", "b10", "||", "b13", "||", "b14", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b14", "||", "b16", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b13", "||", "b15"}], ",", 
     RowBox[{"b9", "||", "b12", "||", "b16"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b5", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b16", "||", "b19"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b11", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"b6", "||", "b14", "||", "b20", "||", "b21"}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b10", "||", "b14", "||", "b16", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b9", "||", "b12", "||", "b14", "||",
       "b17", "||", "b18", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b20", "||",
       "b21"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b6", "||", "b11", "||", "b14", "||", "b17", "||", "b19", "||", 
        "b21"}], ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b3", "||", "b6", "||", "b14", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b8", "||", "b10", "||", "b14", "||", "b16", "||", "b18", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b2", "||", "b6", "||", "b10", "||", "b17", "||", "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b3", "||", "b5", "||", "b7"}], ",", 
     RowBox[{
     "b3", "||", "b4", "||", "b5", "||", "b6", "||", "b7", "||", "b14", "||", 
      "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b11", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], ",", 
     
     RowBox[{
     "b1", "||", "b2", "||", "b5", "||", "b8", "||", "b14", "||", "b17", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b8", "||", "b14", "||", "b17", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b6", "||", "b14", "||", "b17", "||", "b20", "||", "b21"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b10", "||", "b14", "||", "b17", "||", "b19", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b13", "||", "b18"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b6", "||", "b8", "||", "b14", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b2", "||", "b5"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b18", "||",
       "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b16", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b14", "||", "b16"}], 
     ",", 
     RowBox[{
     "b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16", "||", "b18"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
         "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b3", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b15"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b20", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b8", "||", "b14", "||", "b17", "||", "b18", "||", "b19", "||", 
        "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b14", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5", "||", "b7"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b11", "||", "b12", "||", "b13", "||", "b16"}], ",", 
     
     RowBox[{"b2", "||", "b5", "||", "b7", "||", "b16", "||", "b19"}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b5", "||", "b14", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b10", "||", "b11", "||", "b14", "||", "b17", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b10", "||", "b13", "||", "b14", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b10", "||", "b14", "||", "b16", "||",
         "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b4", "||", "b5", "||", "b8"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b3", "||", "b16"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
         "b18", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b6", "||", "b7", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b9", "||", "b12", "||",
         "b14", "||", "b15", "||", "b16", "||", "b20", "||", "b21"}], ")"}]}],
      ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b12", "||", "b14", "||", "b15", "||", "b16", "||", "b20", 
        "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b10", "||", "b14", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b4", "||", "b6", "||", "b8", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b6", "||", "b10", "||", "b13", "||", "b14", "||", "b16", "||", 
        "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b14", "||", "b16", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b13", "||", "b15"}], ",", 
     RowBox[{"b9", "||", "b12", "||", "b16"}], ",", 
     RowBox[{"b4", "||", "b5", "||", "b14", "||", "b21"}], ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{"b1", "||", "b16", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b11", "||", "b14", "||", "b17", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b6", "||", "b14", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b12", "||", "b15", "||", "b16", "||", "b17", "||", "b19"}], 
     ",", 
     RowBox[{"b10", "||", "b14", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b9", "||", "b12", "||", "b14", "||",
         "b17", "||", "b18", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b14", "||", "b17", "||", "b20", "||",
       "b21"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.87032181960079*^9, 3.870322015842202*^9, {3.870322051150364*^9, 
   3.870322063228509*^9}, {3.870322218355064*^9, 3.870322238585806*^9}, 
   3.8703228285137453`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"5ad4fcd8-23d5-4720-80bb-70c1d713a00e"]
}, Open  ]],

Cell["\<\
This expression is a Boolean function. Each b, from 1 to 21, is a single \
input bit, which together represent a car\[CloseCurlyQuote]s features. \
\>", "Text",
 CellChangeTimes->{{3.870326367385384*^9, 3.8703265033439913`*^9}, {
  3.870326586968174*^9, 
  3.870326587487768*^9}},ExpressionUUID->"b04ea288-7eab-4c63-9364-\
fb6fe1f0beb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Harden", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"featureLayer", "[", 
    RowBox[{"Drop", "[", 
     RowBox[{
      RowBox[{"testData", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.870326511882306*^9, 3.8703265662605343`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"85430b54-526e-4074-9fb9-f03f794f1c13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", "True",
    ",", "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
   "False", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
   "False", ",", "False", ",", "False", ",", "False", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8703265286127977`*^9, 3.8703265677234697`*^9}},
 CellLabel->"Out[66]=",ExpressionUUID->"c53f68bb-e6b2-4c29-bb5a-131a1790010a"]
}, Open  ]],

Cell["\<\
The output is a vector of boolean values which can be interpreted as a \
probability distribution.
Notice that the boolean function is a combination of NOTs and ORs, which \
corresponds to the architecture of the neural-logic net.\
\>", "Text",
 CellChangeTimes->{
  3.8703265946452513`*^9},ExpressionUUID->"65a04b09-9d6f-4de8-921c-\
a74eb84216bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hnf", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8703265492193203`*^9, 3.87032655887918*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"766504ad-5222-4968-9c2e-4c45b7b36d6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "True", ",", "True", ",", "False", ",", "False", ",", 
     "True", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "True", ",", "True", ",", "True", ",", "False", ",", "False", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
     "True", ",", "False", ",", "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "True", ",", "True", ",", "False", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "True", ",", "True",
      ",", "True", ",", "True", ",", "True", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "False", ",", "False", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "True", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "True", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "False",
      ",", "True", ",", "True", ",", "False", ",", "False", ",", "False", ",",
      "False", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "False", ",", "True", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "False", ",", "True",
      ",", "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "True", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "True", ",", "False", ",", "True", ",", "False", ",", "False", ",", 
     "True", ",", "True", ",", "False", ",", "True"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8703265594051647`*^9, 3.870326569192264*^9}},
 CellLabel->"Out[67]=",ExpressionUUID->"8ff5d33e-f9e3-4eed-a522-677bd6d01593"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s evaluate this learned boolean function on the test \
data.\
\>", "Text",
 CellChangeTimes->{{3.870326623663282*^9, 
  3.870326630727413*^9}},ExpressionUUID->"552ba1f8-7603-46fa-b5d0-\
3b8592a248bf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"predictions", ",", "summary"}], "}"}], "=", 
   RowBox[{"EvaluateNeuralLogicNet", "[", 
    RowBox[{"hnf", ",", "testData"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8703166596356*^9, 3.870316677884142*^9}, {
  3.870317417326557*^9, 3.870317426035041*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"13a2ce94-b726-43e3-b6a8-a980ac53773c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"summary", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8703174300701857`*^9, 3.87031743733882*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"b42693df-e421-4294-8d63-3fe9c57e59be"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.870317432002062*^9, 3.8703174379216547`*^9}, 
   3.870322921359941*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"ad736331-6c39-4af3-bb85-443c0b051e84"]
}, Open  ]],

Cell["What do the weights look like?", "Text",
 CellChangeTimes->{{3.87032663707929*^9, 
  3.870326641607326*^9}},ExpressionUUID->"eeaad40f-5bd7-442c-b78b-\
82d046761f76"],

Cell[BoxData[
 RowBox[{
  RowBox[{"neuralLogicWeights", "=", 
   RowBox[{"GetNeuralLogicWeights", "[", 
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.870316802390691*^9, 3.8703168117703648`*^9}, 
   3.870317452732788*^9, {3.870326643939178*^9, 3.8703266487865887`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"bb0dc1a3-5cd2-4290-9ee6-f454b4fd864f"],

Cell["\<\
So the weights can be compactly represented as bit vectors. Each weight costs \
1 bit. So the total size of this classifier is very small.\
\>", "Text",
 CellChangeTimes->{{3.870326653607251*^9, 
  3.870326675303034*^9}},ExpressionUUID->"9858cc8a-2d44-4b29-aa17-\
124189cc0344"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"neuralLogicNetSize", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "neuralLogicWeights", "]"}], "/", "8"}], "/", 
      "1024"}], "//", "N"}], ",", "\"\<Kilobytes\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868965930761516*^9, 3.868965950743415*^9}, {
  3.8689659831088343`*^9, 3.868965987890936*^9}, {3.868966862559198*^9, 
  3.868966873437675*^9}, {3.87023827052466*^9, 3.870238281251335*^9}, {
  3.870238533085649*^9, 3.870238533355043*^9}, {3.870269721688321*^9, 
  3.870269739190338*^9}, {3.870316816100664*^9, 3.8703168349241323`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"30f555f6-ae5b-4dfd-bdc5-755388129f83"],

Cell[BoxData[
 TemplateBox[{"0.1953125`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.870238281865775*^9, 3.8702385339826803`*^9, 
  3.870251508739937*^9, 3.8702694588883877`*^9, 3.87026974101413*^9, 
  3.870269845185416*^9, 3.87031745442416*^9, 3.870322923920594*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"9c19d929-309f-4115-96b8-91bebc8353f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"standardNetSize", "/", "neuralLogicNetSize"}]], "Input",
 CellChangeTimes->{{3.870269848647381*^9, 3.870269852501644*^9}, {
  3.870316849612233*^9, 3.8703168560355043`*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"464382a0-3d4a-4151-bf45-6cff18de640f"],

Cell[BoxData["80.`"], "Output",
 CellChangeTimes->{3.8702698531320343`*^9, 3.8703174559221077`*^9, 
  3.870322925760591*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"319939d2-5195-49b9-b5c6-65c724630c45"]
}, Open  ]],

Cell["\<\
In fact, in this case the neural-logic classifier is 80 times smaller than \
standard net on the same problem. That\[CloseCurlyQuote]s a lot smaller.
And evaluating a boolean function can be a lot cheaper than evaluating a \
nonlinear real-valued function.
Different kinds of machine learning problems will generate different kinds of \
savings.
But neural-logic nets are always going to be smaller.
And we build boolean function analogues of all the existing kinds of neural \
network architectures.
And this kind of network is just the kind of thing we need to integrate NN \
learning with QL at a fundamental level.
That\[CloseCurlyQuote]s it for now!
Want to find out more? Visit the repo: https://github.com/github/neural-logic\
\
\>", "Text",
 CellChangeTimes->{{3.870326680718965*^9, 3.870326717670959*^9}, {
  3.8703267848706293`*^9, 3.870326928822517*^9}, {3.8703269662539463`*^9, 
  3.8703269816372623`*^9}, {3.870327353084221*^9, 3.87032738922013*^9}, {
  3.870328312548545*^9, 3.870328398356811*^9}, {3.870328534493108*^9, 
  3.8703285345382147`*^9}},ExpressionUUID->"58ab0f20-14b5-408c-8b9f-\
e564767e0125"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diagram", "=", 
  RowBox[{
  "Import", "[", "\"\</home/wright/Downloads/neural-logic-net.png\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8703281682321587`*^9, 3.870328239196637*^9}, {
  3.87032827053584*^9, 3.8703282777092648`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"251bf960-d576-492e-b02e-99402db120bf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/vvNdz1/3uN3X2WFedetRtRjnrtsvclC89911xo//9303vfsPNe4T27k1jHm
WO933v7LePXiyn8332jdcfO9uIa53k/kxhc987B52994+7lj6p542N4Tyn/r
cd76vVzUaOe/MV5dX7Mbv9MjHr7zfPlvfV31issvO+b3Ws/djjnn8l8AAGCS
es8b2vlvRFzDG2UxVzfmHKdG/hv5XCq5Wlxbusd2950vjnnk/OO/scZT87gx
dzqNk/82xxnreP4Jj5q3r8gNn3bYPiOvPuvIgY3/1mOjE8l/47XW2194y3PH
1I21pdIE8t86x4/1rqYi/40468kHzDtOff10nf/GGHOMDacyt7rr9xrXOMt/
AQCASeo9b+jKf2Mtqfqazzrq/DfmHdd50ulHj13z6Lvve9GYa1J/eM0F854f
+Wtd/sfPv3ruulZpnPw31ldu7jfWVo55x/FYzMWty+Oa03r/r3z24s1/6+8E
Ymz09zeMnZu9zX3vPfex9e65+tztay45Zd5+X3LKoWNeR6wXnSaQ/8b7Hdsx
9tpcV+vq858ysu8uW46c/LiHzL3+eFHy37iGOL6zaP5em+O/9TrT7bW+4/cY
v7NmWf27mmx+Lv8FAICh03ve0JX/Rrz06Yd25r8RMQ4YZbGecMyHjrJYAynG
i2MO7QWnHDK3LK4nrvPcyGkjh4oc8KTDHzJvv135b3vOb+Tcdf3D99tpbllc
d9tcr+vi0w6/S/nvy0597Nw1p9pRrwMV1/HWdR+221Zz7+0UaylHHlqXRx4b
df/8hdfOW3M5xs9f+9yjRq591anzcug0gfz3NWcdNa/syY/aY+64crzX9bzo
GD9v5sUTyX8jmut4pVb+G2PqURbXd3/klc+YW/aDD14wb/7zUQfsOq/urtts
Orcs/v+Jdbnq9bflvwAAwDimbf77t6+8fu5ay6kj//3qVefMGx+OnDfGDes8
N/KpX3zi4nl1H7Lz6D18IheMiOuE67HGieS/EZE/1/uJ9aY2Wm+tuePQsVZW
lD3r6Iffpfx3vIhrZet8+zH77DBuvfb9j9514QnzxsnriOtv6+upF5b/xvcE
dY7ZFbH214Je23j5b8Rj992xM//9xccvnvd7iYhrtOtrumP8PX7vdd3HP2KX
MedTz3mX/wIAAOPoPf+NvDJynmceud98j33uzWfOWwOpOfYX8fWrz507Dlqv
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
V+M9uaUc485ybKB/v8hxZY4vp7Htxh9z7NiqG3lQ5FTRRv48jbY/BzbqbFLK
oz2o27U6vpuq79wWJnLGN5Tn/KUc469ptK3tmv+8dpq/7euKj5bnRn7+mVL2
+xy3lp/j70NzvcO35fhWjg819vGM8ljkstGux3jzT8t786dU5Yy1FcpzXp7j
5ta5xHtYt5eXtB77bSnvmv98djnWPxrHjTrXp7HfMUR5jH3/uLyPdVv8tfL6
a1ek+fPfeA3x/8B/yjH+WbYfmQCA6SrGKuNv+rvS6Pf1MQ55Z1r49b/nl7Lm
WOX7c/yhdYy3pKp/EGMU9bzo6AveUerXIv+NPPP/yjlERD/xXmWf38tx31J3
pTQ6h++hjX3cVo51daq++w9HlXrXNup1zX9u57/3S1UfNsZKVi1l0W+qxx9O
azz3x6UsjlF//x9jCNEf/WqjXjv/jX+jL/idNDq2HuNBV5XXMVVz/IDJi/w3
Po/vzbFeKXtsKbu+US/GfEdKvXqMc9NUrQkY39fV46p1/hvPjzwt2t6Yi3xR
KT93Aud0Yqn7qvLcaFuPL/tc2PW/b01V29YU+d63W2WfStXfgseU7TjGMalq
p1/ZqPe2sr/4DvARqfq7cY9y7HjdX0yj71u8Lx9JVd65dSmr898498hxI/9f
qpxzfZ1yrWv+czv/rdv3OK/lS1n8e3ma/7qeOi9+SxodP35ceT3Nv09XpLH5
b4yDR7772TQ6Fyny5U+U13z/BABMR9EP+XOq8smml6apyX+jzxN9mjd3HDty
wchL65z2grK/J7bqvaCUt8dZYq7xr1M1jlyL/DfGKNpzCP83VX3Y2kTy3wem
asxny9a+1ij1LmuU1WMH7blv55a6O5Xtdv77krK9Tet5y5XXcW0C+hZtR7ST
y7fK45qH2xrbkef+tqNefJcWbd0VZbvOfz/ZqhfPi7zrfRM4p5iDEmOO7fm4
V6epyX93LM97Qcexr0hV3li3d28rdR/SqhftfuTK7XUQ43l3ptH3o85/b+o4
VsxJ+nJjeyL5b1y/E+9D+zqSrUu95zTK4nXEGHP7b0bMI/pP49yvSGPz3/iO
MvLfdVrPW6uUvz4BANNR5KrtPljYM01N/vvYUudNqRqHbcbF5bGjS906/22v
4RnjK/8q9dr7iD7g3xp1b0tjx2NqMZ/v1sb2RPLfprgOeadyDvWcw9c1Ho/8
9+Mdz9stjZ0L2M5/Y1zkzo7XFRHzIP/YsU9gsCL//UpHeeSpd5SfI4eLHPft
4+wjrq/9Yfm5zn9f0lEv2rD6e68YV9yzFZFLr5TG5tNNj09Tk/+eWp4Xa/q3
26a3pLFtZZ3/Nq/5DT9K1fcBXe1b5Jz1+1Hnv2/reD1xTt9sbE8k/22Kv0/R
DsfY+DtLvbMbj0f++6aO5x1W6tbztK9IY/PfOP9fjvPaYk77dzr2CQD0K+aX
xd/zrrUvN0tTk//Wc/QWFPU84jr/bX9n/50J7GPFUjf6jh/peD0fSWPHaSaa
/0afqXlPzJjP/MnUnf929d3q9/G8st3Of380gde2dMd+gcGJ/PfTHeXvSaPf
v8V1Gu02sinWBvx9+bnOf8/pqBd16utvj0/ztwcxprpB+fmijuc/JE1N/lu3
7wuKw0rdev5z2x8X8vzbS706/31dxz5uLFGbSP67ZCmr12GIiOtMbkjd+e8F
Hcet38d6HYYr0tj8t14LYrz4Tcc+AYD+xZy+j3WUb5emJv89utSZyHogdf57
z1Z5jLv8agLPD1OZ/z6xbEe/N9YhjXGXuP5tzVLenN8W+e8HO467U1rw+G+M
a9yy0FcF9Gki+W+sERCf7SvH2Ud8j1ffX2ii+W9cG9IeW9ytcaw3djy/XtPh
rua/zy3P236c19MU+e8/O8oj//xqR3nbVOe/Z5ft+HsUa2rX9+jbppQ/r/Hc
yH+b17LUHpMWPP4bv6fPLfBVAQDTUYxlRl64XKu8Hre9q/lv3d94Vcex4xqt
6O/U64SMl/++rpR3rSdyYY7nN7YXNf89slHWzn/jvYlr11ZMY+2e5u97Rv4b
63a1r8U7o9TdtWy3898Yy4l5jJt2nHOshfq8jnJgsCaS/4ZYuzhy3CVb9aKN
jHzzA2V7ovnvgny/RPte6/X6fHc1/92/PO/ZHceOdb4iZ6yvjR0v/63XuVqr
VR5zj16b4+llezL574MbZe38N96XuG64/Xs4vNQ7t1EW59eVo8f6XtE2zynb
V6Sx+e91qfrdt9fqjuuI47vRkzr2CQD0L+5NEX/Toy9T/13fMFX9vanIf0Nc
4xp9jP0aZZH/xX2MYn5c3X8YL/+Nseh/l/00+xp1jt4ch51o/rtzGjsvObTz
3w+W7Qc06sSapl8v5c35zvX6z821YrYox4x7ItV91Hb+G+PDscZKrCHavJ9S
fX/i5hqrQD8mmv/GPcLjcxttY517RW4X9wWKXKpeH2oq8t+Tyj6e2yiL7xv/
lKYm/43rLqJda9/jKdawjnnLt6TRNaPGy3/rHPqaNLq2crSFdY5ef7+3KPnv
IWnsvOTQzn/r+9A1193aMI220835zvX6z8c3yuK9+3s579oVaWz+e3DZjrW+
6/XO4rVdWMrP6HgtAMD0EOubxN/rGLuIez3Gei7XpanLf6Pf8cNS9xvlGHeW
4+zfqDde/hvi3knRX4v52ten0WuCY270qo16E81/7172VV+rFf2kdv4b47x/
L+cZ/aBry8+xvs0t5bXUol8VYwixxlbcp+lz5bmxRkpzbLfr/r+npCq//1N5
bTeVOrG2bHs9GWDwJpr/Rs4b6wLH5zfahPg8xzhktF1Pb9Sbivy3eaxYK+/z
qcrl6rZ7Ku5/FN/9xbUn0T5FW/uF8rxoSx/YqDde/hviO8b/ltcV70e95kG0
p3X+vCj57yblWCPl38jT2/nvIeWcI0+PNcriPk7RHsf3idGGN69ViffshlIe
16N8qTw3/sY0/xZdkcbmv6H+m/W78trq/Dr2v9Q47wcAMD3ENWWRB0f/I/oO
kR/GtWYblseXKdvNPs92pax5r4+YV9y8t2Jt2VI35rzFnN+YU9e+J0a9v/Zc
7FrkkWeV519WjtPuY0RZ1/rN+3Sc12Zlf9EHjX7OxuX467bqnF+OGfeEqu9j
tGep2xwLiP5m3O/p+aV+5LWrtI75gPK89pzquLb47PK8mCv+2DT/XGqgH9Em
7ttRvmeq1lvuKo/rF+q2bpPW4/G9VrQD7fuehVhTqqsNG8/Dc7wix6vLOd6r
7LvO3eq2fIvGc+K7vea1HyG+izyoY/9xrjE2Guve1+1aez5z1/6a4nXW7eIl
5TjNedt3K+e4c8dzDyzRFNckR7sdbWa0pVuV56/aqlP/Dl6QRu+9HPcnPqxR
L+ZTx9+euNY61uOOewQfl6q/WU27lWO055tvW/Zfv7YDOl4DAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADA9LJnjnBwH9XT85XMs0dOxgamxS6ra
kXv2cOytyrE36eHYi+JhOd6f4/ocp/Z8LmHFxs/bp+o9XL+ncwEAGJSlc4zk
uLyHY++Z4yc5lu3h2MDUOS1V7cjWPRz7iHLsfXs49kRtk+M/Of6aqvz3mT2e
yzo5PpHj4EbZU1L1Hu7ayxkBAAxOn/nva8ux5b8ws8l/F+zkVJ3jI/o+kVSd
Q5xLM/+9b46jctyjlzMCAGa6Zaa43kTFXObx5hIvN075ZPPfqXiN8l+YHdr5
70Tbh0X57I9Xd2H576IcY7x2ssuitN9npOocN1uE59zVY98tx1Id5V3578Is
yns41X/XAIDp53U53pdj7xzfSlXf4l85rs2xQatuXO96YY7fl3p35nh3jnu3
6v0ox6Udx4rjXN/YPi/HF3M8Ksefc/wjxwnlsc1zvDfHX8qxIr6d4/DG8yea
/74ix8dy7Jbjf8pz/p2qeXTt6+6ir/SiHL8p9f6e4wM5NmrUuaacbzx+S6py
YWBmqvPfaFs+X37+Z44P5pjTqht5Wcz/vSWNtkvRhu3dsd+4rjjau3+Ver9M
1XWqzbyuK/+N7wIj5/xZGm2Po63qGp+O9vLbjXOJOcrRJq/bqPOEHD9NVZv6
4VS1fVE32vt9OvbZ9I0ct5f6vyj7WSHHW8pjbaeVOvcq23uX7Z1yXJWq9jT2
9eMcj+14fvwOvt54PTem0XHnU9Jou/zbVP2dCUeUY2zX2M/KOS7OcVsabcc/
lObP4eN3F3+Hjsvxf6XuHTnemMZeYwwAzB6xpkn0JSKfizzu6ByvT1U/4CuN
etHvq/tyF+V4aKrmxUWfLvoNzbVjos7bO471pTTaZwmvzPHHVPVRom9yXY79
UtV3ij5X9P+if/fgHCelqs8Z16E9oDx/ovnv23LcmuNPqerXPDHHq8q+vtOo
F+PPHynll5ZzeWo5j3iP6vVV9i/vRRz7yTn2Wsjxgemrzn8jR7o6x8NznJ6q
9uLnOVZr1H1TqfueVI1BHpuq/DNyykc36kWbFTn0zTlOzPHIHFeU58b3gPVc
l678tz5G1I/cL9qr76Xqu8AtGvWeW+pdXfYf8eoc/83xqUa9E0q9aMeifYvr
Zc9KVZsfud46C3hvDsvxrvL8Z6dqnnHk7/F94u866r+w1K2/O92/cez4buFp
qfr+IPLYaGebOf1Jpe5ncxya43GpytHjvd0jVdchX1zqRPt9ZHle+/rf+A7z
K+V5Uf+gxjHj783mjWPG3674Hcffmxek6r3+eNnfZQt4XwCAmSvy3/hbf3Sr
/AOlfO2yfVTZflqr3v1S1c9r9hUWJf+Nfb6wVe9ZpXy3Vvm+pfzpZXtR8t+o
d2Kr/KpSvnHZPjiN9vOaNkzVWPcVjTLzn2F2qPPfq1vlde52dtl+YNl+S6ve
Kqkaf/xVGp0/e1Oq8sP2NakXlX0cWLbb+e8uZfuS1vPWSNW8m4+X7SXK8b6c
5r9uJHLTaIOXLNt1/ntVq96JpfwJacHq+c/3ax1jUfLfzzTOJxxQys8q29GO
Rm4aY8rN8fH4XvVvqfp+NHTNf27nv/XrPal1bnH+8R3Hxxtlkf9GHr5loyyO
f0t5DACYfSL/jfGC9lyv56Wx13xFvchzu64xi+/rm32FRc1/t+qou3JrO3Ld
Q0r95zTKFiX/bfdFn1nKty/bb03Ve7Fqxz4+mqpx6rqvKf+F2aHOf3fqeCzm
t3yp/Fzndtt21DurPLZ7qq6p6Mphw73KY28q2+3896Vp/lyzFu1ctK0rNcra
7WS0cdeWfdRtdZ0PPrJVd+dSfnLHsZqmIv9tH6N+H15Wth9ctk9I84trT+q/
TxPJf6Otjpy5q22OsfcYF67ft/i7dVNHvbjG5a8d5QDAzBd57R0d5XWfp55v
d2MavSarKyJvrL+3X9T89+4ddaP/FNdlRT/ku6nKvetjnVnqLEr+G+fXHid5
Wnn+A8v2FxfyGiPq3Fj+C7NDnf92tUPx3d6vy89vLfVW6KhXzx15fKqueR0v
lwsx7/iT5ed2/vuetPA2qJmHRk4bbVHMLf5Nq97ypU6d/7bvD7RdGjufZjxT
kf8e3qq3Vil/edk+umw/dCHnMpH896bUndOGF6exryXy38901ItrqO9cyLkA
ADNT5L9/6Shv579xjVtcA3vUAqKZ/76jY59fTd3570qtenGtV+Tk8f175L8X
pOp6sH3SXct/29r5b8wl/ONCXmM9piL/hdlhQflv5JX13JY6/+1aF6memxL5
bJ3/tq+3qEW7dl35uZ3/1vNxjknjt0Grl7r19Rs/SFUbGPNZdm+cZzv/3bl1
Hnc1//19R93zU3f+e2irXjv/fXKa2vz3e+M8/4I0f/57fUc9+S8AzF4TzX/j
+qtYn7mdq4ZYj2rTxna9ZnJbrIEykfw3+pwxf21Oq7zOf+trxqY6/42cPa4F
W6OjbszRvk8y/xlmmzr/3a5VHterxhjnp8v280u9HTr2cU4aXbNgo/Lzqzrq
zSmPvbFst/Pfen2nzed7ZpWzRXl8z1hfi/y2jnofSWPHqRdH/hvH6Pq7cXma
XP77kDT+mHlc73Jh+Xki+W+cW+SuXdfqxN+xmP9cf4ch/wWA4TPR/PfYsn12
q16sHRX9hC81ymI9zZ+mseuY7F6eP5H895ZUzTlsz1d+e6l/Xtme6vz3cWX7
Ja16se5zvEffapRdVuq2r78DZpY6/31Dq/zIUl6v+bdt2W6vIxXrQ0ebF/OP
6/Wvoq2I9QLWbtW9tOzjoLLdzn/3LNtXtp4XY9NxLXK0i9GuPrrUO6NVL649
viONvVZjceS/by5l922d46/T5PLfyNVjDeavpbF/N+K7yD+k6prm8LA0/3zq
dv57XNk+tXXM+FsW3+Fe1yiT/wLA8Jlo/hu5ZozLRh4Za7fEdW7Rb4p+X4z3
Nq8te0V5blzjFnlz5JMxr/iHaWL57+vSaB8w7kEUfadY0+QX5fj1WtNTnf/G
PZ6uK2VvLa8x1hD9SarmdDfv8Xl24zU+ayHHB6avOv+NfDXWdo7PfVzHGu1a
XBOxTKPuq0vdmN8S6yZHbhlzbWN9gv0b9fYoz4/vAWPtp8hz6/nKzWtDuu5/
VK/XF9d+RA5+fKru0xZt2ONKnVgXOdrtmIMc92iLe7BFmx3XqPyiPL++t/ni
yH8PLGU3l9cX94v6cXkvJpP/hieWshtSdT3wU8r+Ip+v1xx7QKnz/VTl4Muk
+fPf+m9VjPPGGHy8x9FGx3sVv+P7NI4p/wWA4RO55nc6yqNPEX23Zl8hvqOP
66eizxD9jejfxdzAdr8q5p3F2qd/KPVi/aqDynObfY3zyjHa68nE3LS4B/Gf
yvN/U/YX173FfS1vKPWWKs9/6UJeY+TjP+koP6o8f5tGWcxnjvtA3lKOHf3a
WAPnQa3nRv+tzsk/nYCZKsYLox2IduwLqfrcR24Zue4qrboxJyW+E/tBqRfX
8sbYZNfa0TFPOq6T/XupG+1s5IrN+wA9shy72b7E93CnNY4R12REHn5QGity
7K+WOpEbxxycx6QqF4591vc1ekLZfkDr+VuU8mM6zr2p/luwcav8+FIex4+8
+6zG67lXqbN32d6/9dzVS/lzW+WPStUYcOwzvnO8IceOrTrR3se1NPHda9yb
7oiyr+b89RVLvV+WfcXYcnynuUEaK9Y87FqrMX733+8oBwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
DC/9ABjl8wCzn885AAwv/QAY5fMAs5/POQAML9c7wiifB5j95L8AAAAMA/kv
AAAAw0D+CwDDy3xPGOXzALOf/BcAhldf/YDVcxyV4/4DPu7y5bjbD/i4s8US
jZ9XTNV7uW1P57I46BfD7OdzDgDDq69+wAPKsU8d8HHXKcd96YCPOxs8JcdF
je17p+q9fFE/p7NY6BfD7OdzDgDDS/7LRMS4b7xvlzfKVk3VfOEH93JGi4d+
Mcx+PucAMLz6ut5R/juzdOW/s5Hrf2H2k/8CAINW579n5Dg3x/dz/DTHO3Ns
1lF/vxzvL3UivpXjxam6BrVphbLPb5R6N5btpcrjXflvXBN8ZY7rGsd+ZY4L
cuyT4wtlX1/OcXTreAfkuD7HFjk+n+PmHM9uPP7EUh7P/2GO1+ZYv7WP1+d4
fo6H5/hSqRvHfFzH+xBzji/N8Z1S7yc53pFjm466TyrnXO8vzvW8HFe06u2U
4+3l3KPuTeX136M8ft/yGuN9+3X5eYfyePz85Nb+9s7xkTT6u3p3mv966/je
4+ocG+S4qtT7cY435Fi747UATBX5LwAwaHX+e3uOn+d4bqpywN/l+GOOzRt1
jyl1I498Tqryy+tK2Tsb9ZZNVb7371Tls89IVe4V9d5S6rTz3+VyfCLHP3I8
qrGvONb/5bgzVfnm0TmuKc89v1Hv+FJ2Y3kdkZeeVx57Y3ns0+WcX1FeW7zG
+zb28Y3y3DhWXF8bOfNHy3Of16i3bo7flOe/JFU55GU57sjxpzSar6byeDz/
k+U9e3OOf5bn39Sot2+Of6Xq+4QY+zyt8Z59uXHcc0vZ/5R6G6fu63/jGuH/
5vhuOfd4LHLbeH/3b9SL7wFuTdV7/LlS74Nlf19PAIuP/BcAhlff859/m6qc
tHa/VOWB15TtJXP8KlX51DKtfXyp1K2dUPZ5Qqte5ML/Lftu5r+R+34sx9/T
2NwsfL7Ue1qr/H2pyq83KNt1/vvZHEuXshhr3qeUv6n1/K1y/C3HDY2yb5S6
T2qUxXzja1OVN9bvT53T7tLa51NK+WFlO8aw/5OqMd2mY0u9Zv4bOW7k06u2
6r6j1K3HYrvmP7fz37XLa/tKqsbUa7HW94/LcVYoZa8tz31F67jvLOVdcwAG
wfxnmP3kvwAwvPpe/+rFHY+9J1V5X50rrZeq8camyMfeVfZR550xjvuHNDrX
uRZ52l5lf3X+e0kazS/37TiHyH9v69jXHuX5J5XtOv89ulXvdaX83h37rvPx
Oq+N/Ddy/CVb9fYt+6jnF6+WY+uO/R3Qqnd22W7XjffsF2ls/hs5633T/F5W
9rFp47kLy3/r/Prgjv2dXB47oGzX+e/9WvWeWsr37NjHIOgXw+zncw4Aw6vv
/PewjsfOK48150BvmeP0VM3j/WKq5vuOlFi21Ikxxi+nBavz33+UfyMPfWhH
vch/P9tRvmZ53qVlu85/92jV+1SqcvEuzyzP2a1sR/778Y56dX75kkZZ5MDH
lOPHNba3pNH34dhS561p7PcCTXGcm1plG6ZqrnhchxzX897W2GedG08k/63H
pzdN86u/N3hG2a7z31Va9Y4u5X2tKa1fDLOfzzkADK++89+uscLnpbH57wtT
laf+JVXXisY1r0en0etF6/z3l6nKWxekzn//nOOgVK3n9LM0fx4W+7mu4/lr
lOe/qmzX+e9OrXqRO/9+nHN4eho7xhn57zUd9dYr9S4s2w9M1TWz9fXGMVc4
vhM4KY3Nf+s5xO354iHmezfz35g7HdcFxzzymLf8+lJWj18vSv57Udme03Hc
Xctjp5ftOv9tr192dJL/AouXzzkADK++r/89peOxK1J1je3KqRr3jXqxHtTy
rXp1/rtc2f5aqnLZtli/KdbWun8azX9fVh47pGy/ofWcyH9/0LGvHUr908r2
ePlvrG0c1+Cu1rGPV6ax46SR/36zo149Znpio95fyutoenSpd3zZfmHZ3qpj
n/X6ziHGsmMcPNa0unur3qVp0fPfZ5TtvTuOe1R5rF7Terrmv67/hdlP/gsA
DFqd/8Zc5uZ1r2ulak3oT5ftOj9t58mx1vEfymMrlbIXl+1dW3Xr8dbIy7ru
fxT3VYrx5eZ1wPX6Vzu09vXqNLqWVhgv/z0yjZ3vW4t1pmIN5shDlyhl3yj7
3KJVN+Z6Rw49p2zH2lL/k+Z3dRqbJ29d9te+V2+dJ9f5745l++JWvfg+4eby
WPOcYp9XNrbb+e/mpc7Vrf3F6/xMqtaZXreUTdf8F5j95L8AwKDV+W/Mu435
urGmcdz/9n9TNSa5Y6m3UarypsjHIn+dk6o507Ee9F/LPtYrdSMnjvnMsZbU
E1KVu8a6S3F/oBtSlYd15b9RFrl03IOongdd57+xXtThqbp/bTwn8rs3N547
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
lDXHnJdO8+fvdf57TesYu5fysxtl7fnP65U657eee3iqvktYOwFMf/JfAGCm
i/z3062y+6Wqn/OGVF3L24z9y2NnLGCfG6ZqnnDUq+cGT/T63xhH/kr5OcZ2
/5iqvPYPOS4p5TuUfT26bL++bD+w43w/kKpx4TqPb+a/W5XnndVxHmek7vz3
uFa9e5TylzfK2vnvMqka64250nH/pZ1Tdb0xwEwi/wUAZrrIf69ulcX1vCML
iUsb9XdL1Vjst1J1jfBI499nlDoTzX+fV85p9Ry7ptGx5g+W/Yfzyv5XLNsf
n8D5zil1m/nvI8pjR3ecx2GpO/89pFVvzVJ+caOsa/2rvXL8rHE+kde/LVXz
pQFmAvkvADDTRa55Zatsn1T1c16RqmtYu+I+pW7M4Y3rhCO3i/HZWEsqxmd3
S5PLf7cp9Q7NcW6O36ZqnvJJqZobHeOtMUb8wcZzPpqqMd7xzjWia/y3zvNP
6DiPo1N3/tu+/9FE898Q1wHHNcYvzvG18rw471066gJMN/JfAGCm68p/56Sq
n/PGjvr3TFVuumHZjnWzbk1Vftt0cNnHqWV7Ue5/dEuq1rf6TI53lLLNy/Pj
euPIg5/YqH9peWzzjn3F2l37ptHre5v5b7yWyN0v73jeZWnq8t91cjwmVfeR
ajowzT+WDjBdyX8BgJmuK/8Nca+eWBdri1Z5zNmNPtC+ZTvWofpFGns9a6xn
/JlS7zmlbFHy38gHf5WqtZuPbZTHWsm3l3Nu3j+3XoPqvakaY63F/Yz/kqqc
t9Ze//n95TjNMdgYv74jTT7/jXw6cvTlyvZOqTvPrcvPTQDTn/wXAJjpxst/
Yx5yXKMa9+ONec1npuq+PtH/eXuj3itKWdy7N9aGinWjIsf83zQ251uU/Lee
fx2xUaP8ylL2mY7nvLI89pVyrhekau50XCe8R6NeO/+NtZl/mqrx2k/luC5V
c5K/W/a3bam3KPnvuaUsrleu13yOOdqRE8d7d3opj3w+1qdet+P1AEw38l8A
YKaLnO/McR6L3PN1Ob6fqhwx7qf7tDR2rDfmFZ+b49uNOieX8qvS6L2CV8hx
fRpdD3pB4rmxptV7W+UHlH08fpznPb68njiPuH9TrOu1TavOm1O1XnTTajme
Xc43Xm/MmY73JPp6m5U6u5VjP6j13FVL+Ymtspg7Hu/Fm0pZXH8c90j6Rjm/
uB/wa3Pce5zXAjDdyH8BAGa2yOe36yiPPDiuDV55sKcDMG3JfwEAZrYfpWo8
tnk9cdyTKK4b/mQvZwQwPcl/AQBmtriuN9a/ivWuvpjjm6m6TveHaey1xwDD
Tv4LADDzbZCqNani2uBYn+uYVF2vDMAo+S8AAADDQP4LAADAMJD/AgAAMAzk
vwAAAAwD+S8AAADDQP4LAADAMJD/AgAAMAzkvwAAAAwD+S8AAADDQP4LAADA
MJD/AgD065y+TwBgSMh/AQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0F
AOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjA
YGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6
pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBja
WwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumP
AQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYA
oF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCD
ob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAYPDWznFHqvpidfyt
lAOweMh/AQD68fIc30tVf+xXZRuAxUf+CwDQjxjr/VOq+mN/TcZ+ARY3+S8A
QH8uzvGfHK/u+0QAhoD8FwCgP/UYsLFfgMVP/gsA0K9t+j4BgCEh/wUAptqt
aey6xuc0HjvHYx6boscAFpX8FwCYavoXAExH/j4BAFNN/4LFyRgwMFn+PgEA
U01+wuKk/wpMlvYDAICZRP8VmCztBwAAM4n+KzBZ2g8AYKqZ/8zi5P8vYLLk
vwDAVNO/AGA68vcJAJhq+hcATEf+PgEAU03/gsXJ/Gdgsvx9AgCmmvyExUn/
FZgs7QcAADOJ/iswWdoPAABmEv1XYLK0HwDAVJvp85+XyzEnx0o9nsNS5RxW
6/EcpquZ/v8X0B/5LwAw1WZ6/+JBqXoNT+7xHOaUc3hBj+cAMNvM9L9PAMD0
M9P7F/JfgNlppv99AgCmn5nev5D/Tm/mPwOTNdP/PgEA089Mz0+a+e8OOV6Z
4805nptjzY76a+c4tdSJuCjHLq06e+Y4M8eqOS7M8ZpWnXj8kvL8J+XYOHXn
v3Ft8rE5Li91T8qxcqvO3jmenWPJHI8rdSOOStV1xTOd/iswWdoPAICx6vz3
Czn+m+PrOf63lP1fjrUadffJcUeO23JcX+Kvpe6JjXrnlXofKY9FnFsee3nZ
/kl5/h/KMdv57wY5fpjj3zk+n+O6HHfmuCVV+XLtxTn+nOM95Vy+kuM3ZX8f
XLS3YlrSfwUmS/sBADBWnf/+JY0do316KT+9bC+R46c5fpZjjUa9e+b4bY4f
NcrOK8+9MceGqcplo96epfzqNDo2G2PM30nz57+fTVVe+8BG2aY5fp2qHLf2
4vLcL6dqbDosk+NTpXyLBb34GUD/FZgs7QcAMNVmy/znS1vlq5Xy15ftZVM1
V3m/jn1ck6pctVbnv4e16sW+/pNG89TaI9LY/HfLsn1Bx7FOL49tV7br/Pfh
rXpHl/IDO/Yxk8z0/7+A/sh/AYCpNtP7F3X++7RW+d1K+RWt8hhb3THHkanK
PT+UqrnOdzTq1Pnv5q3nfi1VY8htq6ax+e/RZfu9qcr/mnFVGrteV53/btTa
50Gl/DEdxwMYBjP97xMAMP3M9P7FeOs/d+W/j83xu1Ie47gxbznWmop5zl35
771b+/xBjm+Pcx5x7XGd/55Snh/XIV8/ThxS6tb57/qt/R2Y5L/AcJvpf58A
gOlnpvcvJpr/3ifHP3N8M8fOqRoHrsXaVBPJf+Oa3t92nEM917rOf59Qtg+d
wPnP9vzX/Gdgsmb63ycAYPqZ6fnJRPPfY8v2E1r1ls/x+xx/b5SNl/8+v5Tv
0Co/JI3NfzdJ1XjwOzrON9bl+mqqcvAw2/Nf/VdgsrQfAABjTTT/fVgavSZ3
2VIW61h9oJRHvlqv6Txe/rtOjj/muClV48nhAam6z1J7/ed3l7LnNI4X62TF
PY5uTqPjz/JfgG7aDwCAsSaa/8b9j95VyiKHjXWs/pXj/TkuLOU7lbrj5b9h
j1TNgY7Hf1/+re8J3Mx/V0nV/XujPMaW/1x+jnsCb9aoJ/8F6Kb9AACm2kyf
/xxrL++ZqrHZtii/X6ss7hH8xBxHNR67e6m7XtmeU7aXTd1izvTBqVrnOeZC
L1Hqb9hR9/7lWHHMfdLoGHNtw3GOtUYpX2ucc5gpZvr/X0B/5L8AwFTTvwBg
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
2u2Za3PF2DPcnE72WLmtdu1aeetpuHM9NzbV1vXNhxaEuzdvUub9GjWsH76y
4dJcO+XvM044rEy7g/bb/P6Vyb/q/61TO9v/q2zlP3f3ovFh/Xp1E4+LcpDf
Vvmq8/57JbY9rOM+LuMVy7/aT+W5pNePO+uEvPdSBi/0+1o1Z2Su3ZRhvd2y
DvvsER5xUNsybZWzS5l/9T2LfT785euvHJV7z+88ssgt88cj2+v82rVxw7zv
Qn727LKwfZs9EvdZmVdZ1T6f8dL3EoXGP3/r4QXhXrs3S3ydvif4yzvrcm2V
p+336X/+rEadcRz5FwCA6uWTTP03U5+mvSFANbPd5d83brs8rFUrm0HP7HW4
mwtIczwpAwZRZlW7L95eFzZt1CDX/6nsqb44y0v1dqqb69fy84Xy7MSzT3T9
id99dFFe/lX2vXLcADd38ORzeueWXzzyFLceZZVDD2jjlu2xW9Pw3msnhC+s
mxl279zOLVMeUWZR21vnj8nLI9qPB66blLvGM6hA/tXx2Ld1C1d638DLLso2
/jzQ33tssdt3254Vs4a7benWaXOO1HZbe/UD2nton9Unrv/a78DvW07Kv8qt
/nFSX6b6nW2Z+h7VTt8h2DrVX6/fszK8HY+uB+5bJv+qOrZtFT6ybEr47OoZ
Ybu9Wua29efP3VCu/LtzvZ1yx84vv895a/PvTnXrhNdNP9t9Xkb2Oza3fNGU
wbl1qI/VtkPfU+gz6n9f8NDSyUX7f5Pyrz7XB+zbyi3T9xxzx/Z3vzd9f2Nt
dYzj+Velz++TK6a5atUi+1nSOHr1UZN/AQCoNqYH2fx7cdobAlQz213+VV+U
2jVr0jBvnOsl5/V1y/feo3lumfomN62c7vowbdk1kwbl3sv6Lv38Gx/j6udf
jYu25coYysparryiZZovydpqLKm11X2MbLlyhZZprGsQ9Qf62eLB6ydVOP8W
K7VR5rXXTB3WJ5fl1Udoy3WvH8uah3Ro45apL9vWM33EKXnvrcf2nM0TlZR/
1aeox8ce2j7v9Scdmc3V/XocmnecHr1hat7vVWN31U7blpR//THbyvK2/K3b
55Yr/xYqy+WVyb/6HsXaahy95Xv1c2vZT59Zmls2+4LTcm31HYk+U/qewPaj
0PW/SfnXb3vT7HPztll941qusQF2vyQ///rjs6+acGZuub4Lqor/FwTkXwAA
SkHzXX0RMO8VUFFVcs5bkfyrfsAg6l+16x5V/lhiuxbT8qsygPrPrH/QynKx
n391TWeh/Ov326mUtbVc763HupbX2o4+s0fe9tlYZGVEtbVt0TXC/jq17baO
8uZf9fH5961VX5+yk+XzNq2a58a7Wj/vwe33LrM+9QkGUf+prgP19yeeJ5U7
7bkbZw5LzL8a+2xzcKlf0T8e1ifuf1+h+ui++eHiqYNdTmvZvHFufRpTnpR/
/WuQdW2rLffHmhfLv/u03i1vu6y+/fDCLebfm68onn/1vN/exijos6HHT900
PddWfdjFtrci+VdZ2pbF7wmsvn17zuYFt/yrMfp+W//6gaTr3Mm/AABs1/qm
vQFANbTd5V9d82ltC5X1YWneKetfU/bQtZ7Km9busxfK5l/l3UL5V/2L/nNt
92yRl39vuOScLW6bjZW2azM1z5a/TuVUa1vZ+a+U121dGlutZXat6XGHdSjT
Xttm7TWHl/rC7bHfV6xS3rPnNF+SlsXzr8agb+l4WOZSn6fmMbPlGruuPnIb
T66xuPbeln81vtjfJo0VtteXN/9W5Prf3Zrm519/bHdS/tX3EH77xg13zsu/
+p1YWxsXUKgqkn/966j96+FVmjvMntN14Fpm+VffN/htb5l3AfkXAAAANUmV
nPNWJP8e37WDa2djdAuV+ittnZeN6ZcbU7t85uYxsknjny0TW/n5Nz6WNJ5/
lXes7Zu3X150+w7vlO3H1vWr/nLlTFtHZfOv33+na6S1zPK/so5/XbBKWVzP
KRvqOc1BbK9XtvTbanywPWc5L2n8s2W+8/sXn0NJ2+evz+Yo1uu0LGn8s65j
LrRNpcy/lg93aZDfP6rcb++XlH91/Pz28fyr64KtreZZ9tvqu5SN80fn5lbz
86+udbZ2SfnX/zx/eO9VeevVNcbxz6jtn9/HriL/AgAAoIapknNeP//qHN7u
Z+qX9ctqLh+10/Wr/lhljZfV2N5JQ09yj/1rM/2xu3Y9qSpp/LM/n7GqIvlX
c/naOGfd68ba6Zpe9Vurncb3apnf16prXrVMmc+fJ6m8+VdzJ8WPl/oTbftU
do2u7g9ky+ZPGJhbl9rbtltWVR+wzROtfljLtLpHk/XLKtP99tVVbnlS/tX1
vUGUt7U+LVMft76/UB/0shnnuGX6vamdP9eSvrOw+biTxj9XVf715zqzsQXa
BxuLH2xl/tU6bI42jUfX/YpsHfa70PXaWqbr2G29/rXJSfn34/vn55Zpfi0b
+67PhY070Bxf9v0H+RcAAABwqjz/FirlMMtkLZs1zvXH6Z6muneutdP8zGrn
X5+q++Dqmk6bc8nKxvSWKv+qdE8fa6++ao2dtdyj9hoTrHa6B45lH43j1b2b
lPWU65Vngwrk3y2VxhHba3Rdr/qc7Tnlcn/uZ/Wz+nMnKyPbc9oP3UfW9kel
PmZrm5R/lbu1f1qma7aV75V9rZ1d9+r3Veu4aR7vLh32zi3TMbE+4arOv/41
s9oHfT+g/Ogfh63Jvypd62ztmzfZJTyqy3657xw0Nvx/nrrOtdN3PdZO47D3
bNnMfe9Q6P5HNk+cSv9e9F2DXX+sbO3Pb03+BQAAAJztLv+qvnb/1a6/zH9e
/Yaak1hzLlm7OaP75d2vV+f3Oqe3vjW7p2wp86/mY9L1l/YeVuor9OdhVum+
Nsox1kZ5R/cismucK5t/NUe25iC2zG2lMd6DTuqWm5vKShnc8pZfGovrz0UV
RJnq9msuzGuXlH9V6lv27+sURFnaxmTbcdP9rPw2+j4gabxuVedffaaG982/
l6++M/DHh29t/lWm13GzbGqlebk0l5m1U1+tsrHfRpm0UP7V/OT6/MfnudZn
1s++5F8AAAAgp0rOeXXvnaQxz0njn/3SObnmsNX1kP6cz37ptepj1LWWNheQ
xilrub1G96ax9/Hzs+UIe07b6T9n64lnZpXy30s3z3Jjn5XXC+27xvgqq2ku
YBv/+ulz2fXauOJCpbl9Cx2v371W/LUqbfeL62aFTyyfFv7g8WuLttVx0Dhy
He+375ibu4+xX8WOo/Kb+oI155Nyv/qhk95H17sqx6r/XutQ2Trt+Gj8ddJn
Qjnf2vr3UEoq9b+rXfx672KlewDpWNk1tXoPez+bh1rHxZbF99He0/9uwP83
oM+Bjo8ybfzabPsd6DsAjZfXvam29H4qfeZ1vPV703qtD90v/TvQ63U/Jn+5
xqHH929bV0D+BQAAQHqq5JyXoihKFZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7U
z4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7U
z4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQCVNy5T
d2SqVgrvPTR6711TeO/twT5Bdv/7bsVrJ2dqYwXaN9+K9wC2ZJuc437vscXh
ro0bhp9sui718+3qXP/8YEN4wYDjw53q1nG5YfzgXqlvE7Xj1Z/eXBt+fP/8
KnmvgPwLAKi8u4Ls35PaKbz39dF775nCe28PDguy+z9zK177cKb+Vc62t2bq
zq14D2BLSn5++6+PNobHd+0QXnJe39TP66t73bN4vMsLOp7zxg8IX75ldurb
RO1Y9fmLK8K992geLpg8qEreLyD/AgAqj/ybnkaZ6pWpNlvx2ork3/8XZH/P
QKmV/Pz2zoVjw4Y71wt//cpNqZ/bV/e6asKZLi9848FrUt8Wases7z++2H3G
yL8AgGrEz791MtU2U0228Jr6UbsW5Vj/XlHbJMXyb4Podc3K8R5to9q5HG31
Xq3L0a5UNLa7baYaVvB19rtoUOD5eP7VWOpCv49i+bd19D51K7h9gJT8/PaQ
Dm3Ckf2OLbP8b++uD19YNzO8df6Y8OlVF4d/eGN14uu/eHtd+OqGOa7d/Usm
hj98YkmZNj/edH34u9dWuZ/fvmNueNvVY8Kv3X913nttWjndZfH/eSp5DPbf
31ufe5+Xbp7lXlOe/fv0uWXhr17OZvs3brvcvceH915VsP1f373ZrV/vo/f7
x/u35D2vMc4aJ/7nt9aGP31maXj3ovFum7WPk8/p7fLCm7dfXmYs+ecvrQgf
Wjo5vP2aCxPHrmp9es2XH24I3797nmv7m1dX5r2ffn5x3Sz3nv5x1rF9ZNmU
8L4lE1z/YNJ+6Rg8ddN0t1+PL7+ozPcdOr56H+2/frbffbFxtp+9cKNbl47p
dx9dVPB4apu1rtdvvcztQ2U/s9qXJ1dMc5+jbz60oOD7Pr/2Eve+L6+fXebz
8tWHG93+/vHNNe7nVzZcWmY/dMwfu3Gq69f/+XM35L1ex/wnTy91P+v3r9/J
s6tnuPdN2h7t93t3XxnesWCse59ix7XQ/ml7tC/6jM0Yearb/lIcz2IVkH8B
AJVn+XdIpn4b/fx/mXosU3vE2u4WZK9X/TJqp/ogU0cnrHd8pj7z2v0uU5cG
+dcZJ+VfXad6T6a+ip77b6ZezFT72PrVd7ouU3/x3kOveSDIv554UabeztRJ
mfrEa/vdTB2ZsN3+dvw02kbf9Ex9mqmxseXrM/Wh9/igTL0cbb9tm45dk1gb
rWuct0x59+Ygm231un9makG0r6967Sz/9o/WYfv1UbRe6ew99/fo517Rc8Mz
9QvvdX/L1JqgfN8hAKak57Z2Lq1zfH+58tseuzW1z6qrXRrUD9ddcX5eu7Vz
zw+bNmqQ1041rO9RLlNYuwb164VThvUOjz20fV670Wf2cDlA4zltWZ3atcP1
V47K385bZodtWjXPe+1euzdz27+lfdxv75bhWb27hT26HuBe16xJw9wY5V++
uDyvrTJ4fL/b7dUyfPeuK3NtlHW0/MpxA8Imu2T3Xceg3k51yxwHjS1Xzb7g
tDLPH9VlP5eZbb13LRznll83/eywVq1a7ueTjjwo937XTBoUtm+zR+71arP0
4qEu09p22O9J+d3PXROHnBjWrVM77/3r16sb3jhzWK7dO3de4ZZr2T6td8tr
e9rxh7hM7GflcWedkLvO2eqcU4/Ma/fE8mlhy+aN89rs32b38IN75m3V51Xf
DSj3advj26dsaO0eXjY5bNks/31btWjqvsfx86uWXzamX9ilw955bS+/sL/7
zO3WtFHe8VLWt9fPGd3PjZtYNGVwWLt2rdznavfmTcJnVs3I2259lxD//Npn
QN9x+Pt38chTyuzf6T2y+2fj6/1K+r6J/AsA2M5Y/lWmvTzI5qPZQTZbfSNT
O0XtlMu+lan/zdQ1UbsRQTYjqu0x3jovj9b5QqZOz9SpmXooWrbSaxfPv3qP
bwfZzDfHe4+fZ+o3QX6/7bOZ+o+3zad6+7Lea6csqez3RaaWZWpgpuZH2/wr
b/+SKNv/LLbsjeg9nvCW1Y3Wf2v0eP9M/TnI5v8Lou2bkal/ZOrdYHNfa9L1
v08G2f7a66PXTcjUH6Pt/ZHXTvn3v9E6F2bq5EzNy9S/M/XDIPs9gzL8qKjd
O9HP6o8/PHqPxzPVJ3qfNdG23FDkeKDmKjR+oaTntjPP7+tyVLxvVxmlU7s9
c/lM/UxHHryfyzs/e3aZW6Z+XL2273FdXB+rlqk/7IwTDnPnzOqP9POv8pdy
6HceWeT6TXt1P9C1U8a4fvpQl0XVP6v82bzJLi4L6LU/ePzasFHD+uFB++2Z
y01ah7ZHy/X8lvKvtlN51/rwHrx+UrhzvZ3CE7t3yrX76L75LncccVDb3Phl
9VEf3H5vt42/eP7GvPyr14864zjXv6i8Xqj/d/6EgW6Z5sXSPqo/+d5rJ4SN
G+4cdthnj/Av76zLy7/aJ42j1ncLylH2fjp+ykY6dt96eIF7rbZXOU+5SOvW
9xhadnSX/XP7tWTakFzOU1+nlqkfUq/XOq1v3PKvfsezRp0W/ujJJe7YDujV
1S33v/vQdgRRH6Q+OxoDoIyvZbru2d5D61LG0/baMdbnStsc/+6hPKXvAPQe
Ywf1dP3X6tNdPHWwW6bvV9RGnyHt1+Gd9s31sWpbOu+/lzs21vdv+VdtleV1
nLW/h3Xcx30Ho228Zd4FbjufW3OJ+311bNsqL//qc6XvPtTPbJ8NZWl9B2H/
drSdanNgu9a5vtzfvrrKHTu9/xVjz8it8+qJ2c+Ktke5WPunfK1lU4f1of8X
AFBdWWa8KLZ8erR8aPR4SvR4Yqzd3kG27/D96LHG4CpLK+fVibVV3lIW6xQ9
judfe89hsdd1CLJ90qujx7pe9o/eY5/6OL/jPb45Wue0WLuV0fJuCeswc6M2
HaLH6nNW/le/qfKtXTPdK2rXL3p8f9TugNj6hkXtRkaP4/n3uOjxtbHX9YiW
x/Ovlo2Ktb01Wt7OWxYf/3xp1KZz7LVqc10AlKXvmjR+Qv9meweb83BJz22V
TfZt3SJvmc65dV6vvjx/ubKgspTylx4/cN0kl2FtDKiVxu5qO5VL/PyrDOmP
DVVWU7uzT+6e93qd52u5rVdZR9uj6x79dsrcyi4ThhSfY1n5V1lVY3X95cp4
eh/LukP6dHf5KD7OVVlb7ZR3/PyrnBN/r7lj+7vn7Bhpf5Vnu3Vq6/qB/bbK
t4GXKy3/xueMtvdTLveXWy5SVvaX9z7qIPee/jYNPPHwMu+vvmO9/q3b5+bl
X/Wl+u30e9DyCwf2zH0+tP4TjjiwzP7r8zC879Hu5zN7He6Oezznfv2Bq3P9
5xX5rGr71YerfBrfF+2fbbf6SvV7tO9krNRPat/B6LHlX30P4I9VWHP5eW75
RcNPznu9Ph/6HFr/tj4Parf6spF57ZSvg6gP2Y7rKcccnMvIVvoeRNtjn39t
g7776XrgvmX2T8dS+6Wfuf4XAFANKfOozzDev6PrbpVVb48eq79VY3jrJ6zj
nqitsu/ZQXIuk95Bft6L51+NF1ZfbTw3S1JfrE/9uEcE2f7oT7zlln/bxtqP
i5afWGSdB0dtpkSPNdZY+zk5yM/ON0TbrbHDysQak/16wvrqBdlc/ED0OJ5/
r40e75/w2u8Fyfk3fq32jNi2STz/Dora6Jiqf70813FXFfXNlxlTR2039X/R
f/V5H6yfS3luqzHExx3Wocxy9R/qvTT+9qbZ57r7IxVbj87d1Xem8a4aa6vX
qi/Lnlf+9ftaVeo/Vjv1/frL1X+o5ZZ3Nea3dctdXb9XvDROV/3CxbZN+Ve5
LL5c13vqfVbOGeEeq7/vgH1bJb6PsrvGbqud5dFJQ08qs854/lU/sB4rq8bb
Wv4697RsXrT8q+tI/Xb2fupb9pdvuGq0W64x2/Gcpn7XpGOhflrlffU/Kyfr
9a9tnJPLaXocz1X63Sr3Wa61fbrhknOKHnfdT0t9vUnHU/2hPbt1rNBnVdfl
6n11jIu101jwnocnr1tjBlrs2ijx+Ftp3IKW6/fhL1efrJbr3kN6bPlX13XH
30efV403SNoGjZ9Qf/LCKWe5fmZlWy2371n8/uCkIv8CAKoh5aLPCjynMb0v
Rz9rXPKPC7SbH2T/JinPWf46PqHdvtFzN0WP4/n3x8GWz71N40zNytQzQTbv
/idq8+/Ydlr+bRzbllHR8t4F9sn8JFNPRT+vCrJji5tH7zcrWq5lj0Q/77aF
fVC9E7WN59/7osdJY7KfDsrm338ntJsWraO7tyyefzU2Wv3flmVUum5YY84b
JawT0GdEn3l95jYF2XEfbnkpz23VP3fqsV3KLFff2aCTuuVds6ox0crC8Qym
caa6/lFt9F/l0SAh/9p5vpXl3/g6bQ5ly78adxoU+fdteaZQKf+OOP2YMsu/
/fBC93r1Q2oMqV1zW6iUw/U6//rf+Drj+df6uDfOH524bTouJx/T2f1s+Vdz
KPlt7P00ftlfrnVqueaW8perP9HPvxpfrde23bNFbl903aqOi37WHF9qZ/l3
+czhZbZTv1dd062fH71hamJO90v93sWOpUrZuCKfVW2nXrfy0hEF26hvWm2G
nnJk4vMay63fs/pXLf/q+xq/je2fxsj7y9UvH8Tyb6HvGTSnnD9WWr8jZXL9
e/P338+/8e9jChX5FwBQDSkXfV7gOfXxPBP9/M0gO7Y4ieaY0t+kLsHmMcwn
JLRrHz13Y/Q4Kf/qmtxRRUrZTVn2+0E21+ka4yVBdpy28vXXg+T8G8915c2/
y4Ps+G5lUuXPNdHyjzP1nLdPI6Llln/fKrIP/aO28fx7d/Q4af7tl4Ky+Tfp
/kflyb9G11OPi9b1RfQ6Hb+k/nfUbPqsaQ62+Jx4JT23VbbUvFCFnte1nRrn
rL4vm8dI40P1nHKSHqv/WGNANY5W15fqmssgIf8qT/vrLm/+Vb+sxoTqWsek
io+/jpfNfxVfbnlv2YxsP6ayjMb0Fnofu+7Z8mh83LEqnn815jVpH1UaR6tc
afnH8m98nKy9X7zfs7z5V2ODg6ifU9cJ6xpcjb3VPFdBQv5dMat4/tUcUmoX
n6PML127rdeoj7nQ8YyPT95S2fZpDH6hNsq1GlNsY4XjpTEIyv762fJvvB+/
IvlXWTrp+lvNmaa+Zv2sebSUczXOWp81/X51TbC21c+/9u9B858VOw7kXwBA
NaRcpH6deP9o2yA/qz4StWuasI5N3jr6Ra+bmtDurOg5G08cz7/Ksrp2eJeE
1yqnWqabVOQ9lJ9/4j2ubP7tFbUbHv13ULRc18nq+wFdS6s+MZtzWvlc1wZ/
lLAu5coBmeoYPY7n31nR414Jr9Pc3KXKv3r/M2Kv09jsR6PXFpsXGzVTPPea
kp7bqo9K8/L4y3T9q8Ygqz/KX66cqfN9y5Lqv9K4YH++X5Xu26PttHmQVJXJ
v8qkyiw2d5OVxuUqE+oeMcX2UflXfZ/x5cp5eh/bz0MPaOP6kuP3ydH+XXrB
6e7eTnpckfyra479scN+WX+f9etui/yreyHp/ZPyoOaL0uuVz/S4vPlX+xYk
9JuqtJ861srXGgeg61nj949S37COZzxfbqn0XYzyYlLfrjKsxhz//vXV7veo
OZjjuVS/V83RrGux9bgU+VeP9Tn22+l3ruNlx0ffO6hdfJ42+71qvjg91rZr
/+LX3asmnn2i2z8dA60nIP8CAKoXm/9qbmz5+iA/C9ncTYtj7TSXsPLfi9Fj
XUf8pyCb1fzMqXylObF0/eu+0bJ4/h0fPV4Qew9d16t8/Xz0+Kqo3Zmxdnbt
sT+eu7L5t060PzbG2nJun+j1fwiyfbO+26Ln+sWWT4yWz48ex/OvjoPyv/qO
/fv+2nzaW5t/dcwf8h6vi9p0jb32xmh5pwAon5Ke2ypLaIyzzUGs0nxFyk/q
F/YzhF33qXmj9Fj5RvPc+vdv0bWQmi9Z7ZRxbHll8q/ul6rHmj/Z5oRWqS/N
355CZeN8/XGz6svVtc8a021zH1ke1rxH/vxDlmntGt6K5F+V5mXS8fTvSaQc
071zOzdPk91vdpvk35ey+VfXc/v7pDnKNIeVXm/36ilv/lXpOwm93uYOU+ln
fU9h34/Y/FqXnNc3b102T7R/3bfdp1cZsNjv0sbk25xdKs1TrfnC7Rpv+z3G
x4vr9xp44xdKlX/Vp2zfmejzqeOkY265WGPv1U7/fmxdaq9+Xy238e8q9dXr
M+Fnau2fcrtdP2/zkdl811a6blnH0P83UooKyL8AgMpT/lU/5l+DbG67IMje
+1d/Y/x7FWlep03RcmWvMUF23LPmetK9ifz5hs8JsllRee3iINvfq3G1/w02
9/1KPP/qvkCvRcvU33xhkJ0T6k/R9tl8xcptunZVOVd9wMqyyrm6b9Kn0X/t
HkOVzb9i45L9Pl3lU7tH8eRY+1ZBdo5o5U5dM6xjtSHa5h8Em8c3J93/SPcV
/m+0b/rdvBdkxyYrZ//Qa1eR/PuzqK3m3dJ8X5qXWvdN+nWQvWfSqGg7tX1P
BUD5lfTc1uZQivf12j17NI7zvP7Hutxh14yqT1FtbJ5czR+tOZjVb6UcYhnF
n9e5MvlXpfsMaZmuwT2//3G5+bk0xtS/72tSaZs1hlrXXiojaTs1N5NKmc/a
KQdrG7VeZXu9j8Zd67FeZ/3cFc2/ytoa+6q+PV1rrT5S9Ysq5yjbW7ttNf5Z
+6t2mutbv6d+PQ51v0vNk6Xlq+aMdO0qkn+VyXTPZh1T5V1dV6uf9VmwceLK
YXYvLH0nouOpvlk97nN057x+Yd1DS8vtPkmFSveg0rHU50vr1u9LOVz9vTZH
m/971O9P72v39x0zsEfue4BS5V8dB/070ftoTET8s/H6rZe534cyrD7H2gbd
C1jzeev7F7uuXKWxF3qs/dMxVR7W/unzYv8edNzsvsSa/83uTW3vrTnOyL8A
gO2M+hbVN3h0kJ2XSXlW9w9STq0Va6tMqaym+wArj2qcsXJTq4T19gyy18f+
NiqNbY5nTd3b9vUge82s0fzSlwXZ+baUy3Vtsu4ndGDstbqGVvdcUo77LGqj
+ZqHR+s8JGo3I3rcIPb6U6Plxe5/ZE6J2k6JLV8TLd8r4TW7B9ljo+8A7N69
etzca9M+ev3Q2Gs1d9iG6Dnd40nzQet65294bdSHHO93lsHR6zp6y3TclaP1
3cDwaJm+Q9D3HL8Mssfwu0E2C8ePE1BMSc9t1d+mPlzdSzT+nOZh0r2HNE/v
4D5HuP68+BhkzfesfKU2Gu+peW21XPf28a9j1H1b71syIe+1uv5TY6T9DKrS
eFwt9/uVVbruVPlNfY/KN7pvUHxsbaH8q7ys+zfpHj7qj1XfoN3PN17qR7P9
Vka8/ZoL8/rUlJu0fTZu2C/18eq5+P2UldF1vbSyovKn+qzj93PSfYH0WmVL
f7m9n99/rNJ1vFqufOwv1/Xa+v7CHqsPX33fel/dh0f9sZprWH2Qer3a+7+P
+HhelfKcxrX7y3QPW/WJK6cpv+p3rGV+G2VNvU7HXcdT4w2U+eN9lMr+Gt9r
feHFSvlTff/KhtofzZds38n4pfcdfWYPN4e5rl+Pf0+gcdja3/j82To2Wh7P
4k+umOaWx+9/pH5vLVc/rt7H5tP2S/3tdgxG9jvW7a+OwePLL3Kv9f9daf/0
by1v/2JzTOuzrH9vyty2nZo3S99rxMfvV7YC8i8AADsS5WHl12ax5TYGe1OV
bxFQXEnPbVUaR6m5rcqTJatjWf5NezuowqXx9+rjtL7V6lCWf7c0/1pVlfqO
1Rdd6vUG5F8AAHYkxwbZv+0rYssvi5ZPrPItAoor+fmt+kE1D7T6OdM+h98W
Rf7d/kvfwaj/OO3tqEhtb/lX/cW6/rfU6w3IvwAA7GgeD7J/33Wtr8Yx/yB6
rLmZa6e4XUCSbXLurGs+de1mqcdObg9F/t3+qzp+7ra3/LutjmFA/gUAYEej
a64HBtlri+8Istf/xu9VBGwvtsk5rq7T1DWVuvYx7fP4UpeuZ/3w3qtS3w5q
xypdd/3y+tnVMrtXpALyLwAAANKT+vkwRVE1pwLyLwAAANKT+vkwRVE1pwLy
LwAAANKT+vkwRVE1pwLyLwAAANKT+vkwRVE1pwLyLwAAANKT+vnwjlyvbZwT
zhs/IPz8xRWpb8vW1pcfbkh9G9Kurz9wtbunEsei8hWQfwEAAJCe1M+Hd+Ra
PHWwO9//xoPXpL4tFa0fPrEkPOGIA8MfPH5t6tuSdn314cbw0APahEumDUl9
W6p7BeRfAAAApCf18+Eduapz/r1m0iC37eTfbD110/SwQf167j5FaW9Lda6A
/AsAAID0pH4+vCMX+XfHqo5tW4UTh5yY+nZU5wrIvwAAAEhP6ufD1bk+vPeq
cEif7mHrlruGuzSoHx53WIdw08rpuect/76wbmZ4wYDjw5bNG4e7NW0Unnb8
IeG3Hl5QZn0PL5vs1tG0UYNw9+ZN3Lq/99jiMu2eXT3DrWOv3ZuFdWrXDtu3
2SO8cGDP8JcvLs+1eenmWWHPbh3dNg7ve3TYYtdGYasWTcOR/Y4Nf/L00qL7
dfmF/cO2e7Zw237kwfuF4846IfecXqt9adOqebhzvZ3CQzq0CZfNOKdc18Zq
HPFNs88NO++/V9i44c5h987twqdXXRzOGnWau77W2ulxvx6Hlnn9hqtGu336
xfM35q1z+czhbnyy+mfb7dXSZdRfvXxT3mu1vjWXnxfOGd0vbNakoXvvK8cN
cOv74J55Zd5r9WUj3fjv37y6MrdsweRBYcOd65VZN1X+Csi/AAAASE/q58PV
tV5ePzusX6+uy4HXXjQkXDFruMt1tWvXCp9YPs21sfyrvHV0l/3DqycODCcN
PSmst1Ndl0X/+Oaa3Pqum362a9uj6wEue10/fajLoMrCmn/J2t23ZEJYq1at
8JhD9nfvuXbu+eE5px7pXnvsoe3z2mmZMrIy9cb5o931q9oW5XU/K8fr3msn
hL26H+her1y67orz3fLvP77Y5Wht06UXnB7efMWocOCJh7t2Z/Y6PPzXRxuL
HrOJZ5/o2irX3zp/TDjz/L4us2obtd/Wru9xXcLmTXYp8/orxp7hXv+jJ5fk
ltm+n31y9/CWeRe4TLtr44buO4Hfvroq107rO7Bda/c7U+bdv83uLvfqtdou
/320H/vt3dIdN3+5tVcOT/vzV10rIP8CAAAgPamfD1fX6nrgvi4LfvbC5r5I
5a2WzRqH3Tq1dY8t/w46qZvrp7R2Nrb48eUXucc/3nR9WLdObden67dTP+Me
uzUNj++6OYdpDK4y91/eWZe3PcqfWufvX1/tHlv+1bb8/b31uXav33qZy8/T
R5xSdP+Sxj9r+5TdP7pvfl5b9deq7V0LxxVcn/qx9d2A8qq/XBk6iHK/LStv
/tXx0+PLxvTLa6ecqn7xqcP65JZpfdpv7b8eW1Y/qst+7nf2j/dvybXVvN1a
7/orR+WtV220/yNOPyb1z191rYD8CwAAgPSkfj5cHetnzy7L9Y3Gn/v4/vnh
dx5Z5H62/PvMqhl5bTQ2WcutX1Xjh/VYy+PrU4ZTbrP+2t+9tsq9v99GY49H
n9nDrePT57LPWf69Y8HYMutUdlf/ZrF9jOffP725Ntypbp1wQK+uZdoqcyu/
Jz1nZfv48i2zy2y7vkfYmvx77mlHu2OjYxJvq+8M1K9sj7W+A/ZtVaadxkRr
ndZnr9JYco1z/sMbq8u01zrs+w2q4hWQfwEAAJCe1M+Hq2O9suFSdx6vccrF
2ln+VSb2l1v/orKXHuv6Wj3es2WzcN/WLfJK45X13Bu3XZ57vdY3f8JAN+ZX
WUzXHgfZXJHLxpZ/v3b/1WW2S32w6h8tds1uPP/qemU91rXBSe113W2XDnsX
XN/kc3q71/vX7lr1PLzjVuVfXcOrPuX4MVPZMfnruze7tlrfycd0LrNOZXeN
wdax1GO11/hpZeuk/VB/8T6td0v9M1hdKyD/AgAAID2pnw9Xx3puzSV5/beF
qtD8z/H8q/mk9FjXw84bPyCxLPNpDib1eTbZpUHY5+jOrn9Y445tHfH8++2H
F5bZrq3Jv7oGWY91fW1Se11Pe9B+exZcn+ak0uv98eJWvY86qFz5V+OcAy//
HtZxH3ctcqFjprJx4lpf/56HJW6b5gdTBlZ/rx03zVmW1Fb5V9dup/0ZrK4V
kH8BAACQntTPh6tjKVMGCdedqjR31FUTzgz/9u76cudf69d8+465Zdan+Yd/
/Up2vmHNvaz+TmXFL97Ov/531BnHuXX89Jns3M6W4/z5qK2OOKitm1ur2D7G
86+ubVbuHtb3qDJt1WeqeaVOOebgguuz+b207/HnOuyzR17+Pb3HIa7/Nt7O
+skt/2pOZ12P++e31pZpq5ztzy9WLP8+vzb7fcbdi8aHg/sc4a6v9q/D9kvz
ahXL+VTxCsi/AAAASE/q58PVsTR3ksbYKgv5c0spM2kMsJ7T4/LmX+VePVY/
pN/unx9scPf10X2GlIM157Taae5lv53G8KpPMvCyoeVfG9drpbmrlGP9uaGS
auGUs9zrv/vootwyzTmt+xb9/Lkb8tqunDPCtdU1voXWZ/NfxeeOsmPh51/d
o0nLPtl0XW6ZMraOq7+Pq+aMdI+XXjw0b52fv7TC9QtrrjBbViz/6vemMc1n
nHCY61cvNMZbvw9dF6w5r9P+DFbXCsi/AAAASE/q58PVtew+RLpH7JMrprl+
VvVH6pjeuTA751R586/K7uOj6051f1/dF1f9qVqmcbxqoz5Y5U/NF6V+Zl2T
q/8e3H5vl/fU9v275+W2T4+1jWMH9QxfXDcrvO3qMe7eR5rvOJ5h46Wx3Xq9
MuPKS0e4ZboGWf2tyv33LB7v8ri2TfNiaU4t9XkXW+dFw09269T8Utoe3ZNJ
90S2Pm1rp31SO41v1s/abvVZaz6rwMu/ysS6/7Dm3tIc1NqeB66b5L6D0H4/
esPU3DqL5V+V+uD1GpU/57Vf7919pXv/G2cOS/3zV10rIP8CAAAgPamfD1fn
evD6Se661yCae0rzV+m+tva85sdSn6X6Pv3XKUdpuX+/IPUtzh3bP9ytaaPc
+nZv3sTds9d/rcbqWj+oSvdHUl+t7uuj5bofsNpZ/tU9h3VfYmuvTG3zUxcr
ZW1l0iC6f7Et1/to3ilbX6OG9d09jf2xxoVK/ebaHsvqGuOs7wg03tjPvyqN
IVfWVzuNrZ4wpJc73tpHG+Nt23l+/+Py5gBTPn9o6eS89akffczAHgW3TZla
2Td+z1+/dJ9nZXX//amKVUD+BQAAQHpSPx/eEUrXmpYyE+k63/g9juKl/tti
72n51+7ro/ZJ18lubSl3bu0+K+trbLP1FyflX7+dzeFcnnV+/uKKrdqmbz60
IPGev351ardn0T5kassVkH8BAACQntTPh6ltU/H8uz1XofxblaU+ZPVL6z7H
Sc9rzLr6h9+968rUj1d1roD8CwAAgPSkfj5MbZsi/5avdA8p9evqWC2aMrhg
u57dOrp5udI+VtW9AvIvAAAA0pP6+TC1beqdO69wfZqa7zntbdlSXTzyFHcN
cxrvrfsSa56t+RMGFrznkeb90vxeGvOd9rGq7hWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCS+vXq/j3Ino9SFEVt86pTu/YXAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAO5D/D3eS5eo=
    "], {{0, 720.}, {960., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{588.75, Automatic},
  ImageSizeRaw->{960., 720.},
  PlotRange->{{0, 960.}, {0, 720.}}]], "Output",
 CellChangeTimes->{{3.870328207376601*^9, 3.870328239913169*^9}, {
  3.870328271726125*^9, 3.870328278119659*^9}},
 CellLabel->"Out[76]=",ExpressionUUID->"f37f8e98-67b4-48d1-bcce-868b1fe99e15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.870228734654456*^9, 
  3.870228735269162*^9}},ExpressionUUID->"59eda8dc-4a92-49e4-abd9-\
aef5d515665c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedSoftNet", ",", "trainedHardNet"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\"\<TrainedNet\>\"", "->", 
         RowBox[{"NetDelete", "[", 
          RowBox[{
           RowBox[{"NetFlatten", "[", "#", "]"}], ",", "\"\<Loss/Error\>\""}],
           "]"}]}], "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
      RowBox[{"HardenNet", "[", 
       RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}]}], "}"}]}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.868441715962099*^9, 3.868441726772949*^9}, {
   3.868442062468679*^9, 3.868442075018716*^9}, {3.868442527005735*^9, 
   3.86844256484381*^9}, {3.868442825916274*^9, 3.868442879501833*^9}, {
   3.868442927862575*^9, 3.868442930140501*^9}, {3.868442994108386*^9, 
   3.868442997385559*^9}, {3.868443171305544*^9, 3.868443172008521*^9}, {
   3.868443210207801*^9, 3.86844327444496*^9}, {3.868443832176667*^9, 
   3.868443841549613*^9}, {3.868443968480337*^9, 3.86844397610231*^9}, {
   3.868445156069516*^9, 3.868445169542899*^9}, {3.86844548965233*^9, 
   3.8684454911676607`*^9}, {3.868445524601853*^9, 3.868445525318458*^9}, {
   3.8684457755379953`*^9, 3.8684457785428762`*^9}, {3.868445841953512*^9, 
   3.868445843190568*^9}, {3.868446029551764*^9, 3.8684460319907627`*^9}, {
   3.868446204633617*^9, 3.8684462159667997`*^9}, {3.868446498761023*^9, 
   3.868446502318582*^9}, 3.868446990300243*^9, {3.868447023781098*^9, 
   3.868447024311913*^9}, {3.86912103176339*^9, 3.869121111451393*^9}, 
   3.8691211481142063`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"#", ",", 
     RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"trainedSoftNet", ",", "trainedHardNet"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.868441761355565*^9, 3.86844176541033*^9}, {
   3.868442023100346*^9, 3.8684420354226837`*^9}, {3.868444107190956*^9, 
   3.868444110989802*^9}, {3.868444188263138*^9, 3.868444188997357*^9}, {
   3.8684443072021*^9, 3.868444343231183*^9}, {3.86844438017598*^9, 
   3.868444387605728*^9}, {3.868444533736438*^9, 3.868444535818205*^9}, {
   3.868444625239705*^9, 3.868444635677659*^9}, {3.8684447356698933`*^9, 
   3.8684447565897284`*^9}, 3.86844479804601*^9, {3.868445054584428*^9, 
   3.868445061735847*^9}, {3.868447028248465*^9, 3.868447028907001*^9}, {
   3.868964207787449*^9, 3.868964270803673*^9}, {3.869042816860148*^9, 
   3.869042853385454*^9}, {3.8691211223288383`*^9, 3.869121124951189*^9}, {
   3.869642753255953*^9, 3.869642753983399*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "3b4a514c-82fc-457f-b2e0-0edfac19f449"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "346"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"98.8", "0.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    98.8439306358381486461`3., 0.5755160004611363789`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"74.9", "2.3"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    74.8554913294797756862`3., 2.3357365785874173447`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.9730923752947436833`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0131859308978910517`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.94672051349896158`3.", "\", \"", 
                    "0.9994642370905257867`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 0.94672051349896158`3., 
                    ", ", 0.9994642370905257867`3., "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.0272762626645504658`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0135501291949454913`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0001760042746594831`3.", "\", \"", 
                    "0.0543765210544414485`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0001760042746594831`3., ", ", 0.0543765210544414485`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"6.86`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"1.34`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTPSsljI3d3tkfz9zJcdPlrf3Bu3VvPyi+
xFAHo01YXtQcbXhr/2Tl6ucXol7Zb+DI2VfU+xCnely0Pa/gg2myb+3faTHO
a7v8wt6p6Y5X6cHbJJsTs+Zvhrn2G3uzrGNuM9c/sW96cvac08djONU/4+9K
OPnyrf3Mc1qmS56/tu91ThBeMPUpXP5hlcg694e37GEhRmr44KIB1zVzqQ==

                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["258", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "258", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9961389961389961`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9980657640232108`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{258, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9961389961389961}], 
                    Row[{"FScore = ", 0.9980657640232108}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015151515151515152`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003861003861003861`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.015151515151515152`}], 
                    Row[{"Row fraction = ", 0.003861003861003861}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["64", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9696969696969698`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{64, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9696969696969697}], 
                    Row[{"Recall = ", 0.9696969696969697}], 
                    Row[{"FScore = ", 0.9696969696969698}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015151515151515152`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.1`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.015151515151515152`}], 
                    Row[{"Row fraction = ", 0.1}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.18181818181818182`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.030303030303030304`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.18181818181818182`}], 
                    Row[{"Row fraction = ", 0.030303030303030304`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8181818181818182`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8571428571428572`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{9, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8181818181818182}], 
                    Row[{"Recall = ", 0.9}], 
                    Row[{"FScore = ", 0.8571428571428572}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    "259", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9961389961389961`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{259, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9961389961389961}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{66, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9696969696969697}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.9}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "258", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{258, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{66, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9696969696969697}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8181818181818182`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8181818181818182}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["259", TraditionalForm]}, {2.5, 
                    FormBox["66", TraditionalForm]}, {1.5, 
                    FormBox["11", TraditionalForm]}, {0.5, 
                    FormBox["10", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["258", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["66", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "very good" -> 0.25,
              "good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"high", "low", "very high", "medium"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "medium", "high", "very high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 3, 2, 4}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 4, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {4, 
                    Interval[{5, 
                    DirectedInfinity[1]}], 2}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"large", "small", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "very good", "good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
CUb8nzFcBT1z+hCX3ez+XtcN0f8L7darVQ==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {5376}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
fVLnoMtBHfsM6vHiw2a0tWWeSXgN7fms0twy5OCGt3m+SeNRcj0i6wnaNYVy
flcveWD9JaEqzklPtlPk5w++5Hs6eCkRB96Do6+w44rTqw692ScSL8zertTf
KWS9aPzOa7slCyHjRkcF8TUzqeeYgeM9xeEipLNtZpo/SNiH5j8eOjU3ezkK
cALHkUOh6hfq/ZErnYu3XWIbSKzTArxX3c7A2ndDz3VriFhK4afxN2vUHOq8
IvAvuZ8OB0Qff14K05PmesRJ9BL6gzG95iGGe/23S7fMQqswPMnjdrzkmrgi
n/qcQwp82MHRPKjfQHvz5+gtszdJ/n0D6hcNnhw/3WtEfobd9BeYfnTXLwF9
/W37FneHgShZPmx8x/17yy8FbJKmHvLKVlQR25xHN1Olrp+U+Ek3vmBxpEhs
fZ/Vj3a9wW/Tw4Xb/4rc36Wk6wqvtCESyt+jYW59ykOReSyO5zOpns+yYgvr
JerRaWaEvFFkMZ1ekihXP+O6UB/LVn/0eTtzgsaxPyqv8uhe2v7+pXeaI49r
OylHGj4ON6tEJrl9lIXrnLhDLc9h/RUn27znjGgWvuxvWofF6mcSePtP4syI
0aNdz8AKLTvxJ+SzreIaxPLJGL//K8pRbE9/XQE4mpmJrZccG75U6354jvLC
+zBGmUnKf8HuP5bP205yf0sO+3UlEq9qwjKleb78J/Trfq/6T8jh3aiCz5P/
Byj3zpK/km/sPifjm33+mlG30WAzEb9yz+hlENusOYvThH56cfPAX8Flcndh
HeTM6/2Clu++iejvfRnrFqefnjD+eW+3/6fWj/01KiU+7IFh2b+Vt7WdHv6O
X5qd594DpV/f+jv2edb+nXWqzfTX78rlOBzx/lfs+Ycybrx9+TvnM4N7nvo3
9W22nUljpbpv5Q7oLft9xbOYVV/HyvMRf/lDiiVr+f8Fe5sbhzxvjSQBZbHN
o6U6z+Hd/3S9JaevbtJ/Aj9J8bdnwJ+/ri2cOT17dTPfCxBXz1q/7jTIyZr6
+yx8g87Bh2zhcwHmvuKdEuVIk29ONtTnqwTKm9dV+ufCMlDe+Y2hsvCzkw+J
1A+ulhzt8wz2+O1CPJhD32T/SX2ZOYYivxOZp7Qf0uL/VO85bfy9ts/4nfG5
nElCv7PmZuUjDp8fVE/Tpo07pnVXqeYRJNK01c2ax/ivUfaOb6J5/4+/2K2s
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
s6XGya0vowbZq1iK+Je8T7NzQSQWD9ln2xudbvBCTzSer9dfKIfpOSjj2Lvz
9kxMvv2Fhn5r01ZC4xLgPjMovjNjFVWvl+Uv+2eqlGD5Uc/L6D53rpGQr4tV
noi/FS5nIZ/P8vfJaYrgz9D6gM8n6RlNKfOZkU/BT0weYPr0s7yL4djJ+mDD
oEhh/LCnR9ZhcmKUPlREheO/N8F1065sYsnZySPQQYpLRyr74/pF9L6yYGPN
eux6SaiPtP4+rpr13KVQm1LvpKCcm7p4PkvitzIaNSDFhn5+ZeKEX/flx+4J
9wlhrmwndj/b36VM14N/ZD9c7s6dtL/HGJuHyTY/R8TP+cpca10P+n2RJODM
mNj+otC+7+m/v590yvphSxqNCqT2779F9cJ7HrJw4kul15/S+y/bz17cR/T5
S+Bdkff5WP3VRdan8oosjkLlRVd7ymkqFCAh3fcN0Fsocp/F7mImMu/AnuYi
dp3Sf40yq5ua/70xMl1demOL4YK/up8Td7a+5O+GAvrOoIV62mORvOe8fiv8
fc/YVfTqb+jHOxslgif77J6/Wnf/FfrNtM3okEdCvzKsPC5LFVf9a2R6/skY
6/Of+r4Ku7XK31/XnWF3rTo5LBWxMXqZtqWbIwr6P40z0ZkTthLtr3HUpXfl
MWF/kAE1Xm2L13V7GI+vIyHy040HjgM6ryZrbp9c+HsoYuQxeyYJ51lYw3MS
KPyVnF075oQcotWr+2fqPB2ZXm88cG3dNyOi/SzzC8UUfYwShzburaJ+z5Ws
R0resZ3PZfjOPIz6upSp7kz0p8ONU7G2GDn2aOXqhzeo66sk+aV7aZHKLSW+
xHEFcXnOrFGcPMadxzHi7GA96ibMY/YMMetPJOlLpiNVP26/uTGE6HfOdv1s
YZzozMTnvcj+knUcip4P/G737D+Ecn6RY9TDdhs2/LFxpKXVg28rhF4ejcLG
I+crWb/ARxd0q1Wo683E5BOndB/1vfnfjXey/uS6IWu9IesvoOR9YAq9K6H2
0lHi+TDcyNSuLd/f+psZ9Pjpq9rbTc+6okD+SXbG4CtzqfH1u/nyk3LfulPv
C2yCxibqjxLWAd7sRuF9Js+iHX6fOsvwnfq2DH9oPSPjIK4OyxgHjEFX4fvw
kMfVmrlmzqdU4Twbw76+jm5cxvgk6fcTAnWDKGdr52rk1byA3N401y+YnUBO
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
QtBt76dd0+HgVGD/qCkZCLmfhk8o50a4+6b9p/DfAYo+ffquveeC1oQM/+TR
gY+Q+clyAP9H5VQ37iXqfRT5fPcjJjs+TIF/TwR2vhNyS6e+hye6plo7fgrh
++1k+YAuij5lseFGEMVeGn7OxAy87pNxBf02Owvlxjdoo+C4tPonDuJkG9lR
x2+hfLTNjSLp5YHzHINWqkZ1ENrP7OBVT7HHvPs5h2feTyjvYUqBA+NYwGOk
1bxh005E/ZovehtWh0irX5OXWedNWS6or3ubuaNHP0JCKvpXb+Dj69RazGEr
xSXQr3cZEMWD6vkHKUtvVQUyUfPB7Med+Jg+roolFZ+mC98D5+1YXywLXrT0
Kc9Q79xRNspf1PPjrE/w55LnFLqd7tlPtI621rlKyS9JfiT3g3wE/eS8lCQf
8M9R8I0a8noTumT5+IG6/eC/Wx//SDM7XOdL2f8Pht/09hEhq5fwJfprTo7i
q2fjjonoSbw/E+Mfjl+fJ1ibEL/cy0teQeOQjJvAH27LhdcR5qaW+L4EK+pN
9z5WOUjEhfvU8A5Ff/I4ACcyXx917bcLPbyh/qDRS0hNalVTTkTA/QfDFdQx
4N+f/ewWzCoortLGHwFnzqx2ORR+Mfkv1k6BH2a0LaKMC+ID5BtMz8T97jbG
u/ehZNxuDL2SMLs3/H1LoM/KdR1SDo0Qvq/G6K5bS5s/X5dXIBucHS/fCcHn
0SXVD0k4g/hKDe2q1tZTJF/YRybR7wP06KPw9wVv9N4G5FWNh0bKiTNIQ6qO
S0vI+mgyzfyRLZGfcJzldKtEFn7enRDJ/AKcN6LU+QbjRLWTBUxPNGF5oP+n
p/DvIooZX6rjV3/ortMaw5cJN3F07XNTry9tqfVTWvlvNiA3Pt7G5y9OFuh1
79BLcv1sLi79Jw3q1cfhJd0+DhQqbv6VLH/ewLJSv0rxfmsRBN+P5fqL78Pr
CoulHh+mb4b1mw/GD7ahkvSx6vaid0PJNwEO3Jmdxe4Tw3lieLpZ+ojDDeaf
srOTTC5nUOedz/UfJx+w0goFep87O/xKqxc1Ivk3dYfkfRgBv2eW1aI8/lKU
Jn450UuFz+9Y2+ZGIIBPgNOdpUL57LTJORT/GyrKrdisZiI1DtZr6jPVu2UQ
5XDtJ+RS9JQkJ8h+7MI0bTxfyH7/dlDNQMOBT/S3WHnehtssz+l50+EiQsE4
11prTLeS4xNxEuFzst1nXB+0lc7fjO++tPOMrC9pXJnqSs6v59rcnE3498dh
+kjCQda66KRldqL1Br7E/Jd13I7m1r5jZ1K/XyWgd3fAv58srf6S8lCQBxt6
Ca/DnPOvT0mUixaHiawbOtfhfL6OD/z+I6y15j6kQzbW1ozTrotajd8vbB5r
e0HwXeJb5fsto5VC0Iy66e/Xx+PfCQouSKtpmuqJMq069D92TPr9fGThF9S7
HjPkK7RqOFB+srwvpa3yehH2KT6ye6jBuzZ4264p/v7L0SXIar+gIhWePgrs
ND108ameqifaUUk/Y/d42vXMmF8Gpqcjt15/Gr1jhzd2vqAu3TnTSNHn9MVt
/jtqQ9H/Q96Xx8XU/Y8PES2W7MkydtnalSx3FGXLGpFtoqKFkKWoTFGWknYl
1SD7VkgJ3dFCKtqoSFpJCmPf83uannPvnbvMvVN5nufz/f31fp1zz/I+7+2c
e877vM9YT51uhbZChK6gHMDj14bl8aFL9mLbI+3f29LCwbrxXVXuxZGXofDW
9zx3jhuKlAd82rxv5u7ioS6E9jD1RWnlNqdiD6lHIPjg6cUEquvfg55ERD/J
xpynUfH5tppZyhtFNL6BpPFi5zsghyA9dJ9Rof4E1M+7prsM12sb9b15AAG9
sfz0tz4N2W1bauIvHwTFbth1euynUqnGD9pZ3+s0dLnnVL+rUZHwkmVq3bem
Hob9L9uEqLXuSsALTx+metHGrp/rcA8xO8A+efUw9GjiXZ9ZB1B5x+szgNkf
VvZXPUCtt2Or7YfPySLWA+XxdAdwWPnzo8WjG/3sG/hG1j6Wn0DeHcN6aUwS
kMZ/Yr24eBdK4sV4Z+hFwJe6zApKuLKHkl7S2qEa863rtObtRejQpXp0+aEt
InsvUOc+gYKV2k2ZbE19ngz0CC+/xd5vDHNT3ZE04AuWbvNPnqXE63e/cKsd
8kKIhC4ck4ob0Ka0W7Yz/korPd+SpTYW/Q8/6fvgo89XD8Z2siXtNBaaa76c
4Ac7IvYMz3+8/JjN7ZPwdPdCAh8B3ejsxOO3zwS1npaIvv2Vz//IOkPAC/TL
+fVl7IsXTwl2EDveBjx3F8ltK5oYAZPoGylsJW+6xHd5LLYdzotnr6FFs7cs
6vyI/D+cbD3fPnfnrG2dywh2Cs8P/Hzc1tv1oOfacJiqXTwcV9VucHRgJPzu
5LeqsClNsnf/FOQbnYlhVF5zJPl6DW9XqjSI59qdPvAyfoySbt7DQY6vH/27
9f+HIbf8DnO/BTK+/M4VxV9lz/0kFveWP6/scoviG18n2k/lX350Q7yf98R4
/S0NE7SnTgxQJ74fvEo1037HYPH7CGFXqeP/aruNz8jJEJ1nc116XJLUr+DE
Y3p/NiwfStaJ7rlw5++7Kso/JY4XL9CF6GfwWTZOrZNds/SnReDcK2yh92v6
99//ByErqlUmdPCEQrHuZ6neFfgj8Pcunz7Wy/45PDyOh47ffJjcvr47agkd
Mntws+ogtXy3+pG6Rqu+UV8s3zTLnggez6Z+//tP8N2kpgRi9+422GUiI38s
1rl3RVL3c1nFe2XcGOJ9U5BfuCDzhvwl9J75w3N7e3WYawPPGjTAKbaEdH0j
+ByTCbVX3b3OeAPqtyGhPGfoAuK6TVqYY3G07+fHaPvyD9dGf8xFv7/a8WZ0
xhYe7O7TyefhTLScS92Eq7NLZ8Ejrs/k7du+n4CfQanpEicZ1L6d8Zo+ZtnQ
EHjIhLlrHW+I1q/crY8yoVd3IhTMklG/2N3yE65EYsYbX9z7U62aEAqrSHx7
/K98gMcqxfOWn7tLbz+PJh475EtCzzvK1yztlIhxXCL2t36k+B5dR24JM53o
89d478lwyjxmusB4egE477dJYeUu5nIvG2E2yv65A6H/1AGvrzSFr865wuvn
t4v+q7jQZaJ8P1Dx2XsrdzGpPvD0i6FONi8jDu9yQeid163fVHdn1F5Y5Ndn
hjkJIUCHhvyG+dLPHi71JtkPp4KAngAfvJzFaqnev1FIxBPIjTBn0rbzj0Xf
eb0OJJL1wzs2fRll/4B/VPqMkVfe495EP6aZ8v15Pk/F5ElwV78KMop1XXPk
LzlbbdXeA6sfQN/w46TTz9vhxQ7fkw/DSQlZxgcx8vuiv4Z/EIkfNR4C/SHQ
8W/9pkpTyU2ezayP59Oo34fDw7U/smNTbis3lOcb9LhGK4cYuvFqGvfLOR+T
AwnlchdkRM/Q8ifQBUCvA1Xr0se7wD1MV01LeXQfshlT4hLbVkw+uZyqm9Do
++MDormN9qRBjqnoBWCX4JLyOsw7d1R2BfAvfPE8y5lcsXa4HgVV0Eu18f3g
u3sQ/v6Vzx5RL7qPyVYoq4Hw8gPkJqD79JG+8RUInit3zt8XyIAPQG8A3d8v
i+nw9/0RQfQjdP1ctfBg2k/OXsS+GX2Jl1d/ie5DLC5a9EESfejglSj7xIvZ
xPybdWVpsIVo3cH+ZUycv4XFbV9GW1QhfAL2J9v9xISscNG8yduyqxSZN4E8
y/i6t32tgcpr7+8+JrukODexX3Rsd6824vYOzMMRYblQ4QqV/ocb42GxIxRy
obizn75+10P3lz53LamfcF+0/8CfW/GKsp+TSSEv62dT6x9TODvJbsNlDvn8
iP2vaXP9eDueK/puVQdtLyF3EVpv0UmNQR8EurDZSaVQ5x05yDjf7To3VHFd
4/u7D8qvMcYLQydR2vbEHeEXHB8a8MixswwdrCJAyoNyAI92e0flm9+Rfl1J
1p8k/CjnDesPr/YZkd7jFMGRGnEbtcTfO2UNDqfmOwYvlmopSs9N3PZzMtqV
SY0fCeRXbEfjtPDvrrjvabmPsp38BdvWKWukQoDe+O8m92e1FfSxgunoQAJ5
rkVo3K1E+Jiir6wlgb94+avqP9p9VKP9FCSeykToNbX6VukXlrZID+sERD+c
ZtBLBCflQqGyE1xhKrlZvfiSnlEGcR6kLB8TKmsTHUAYJxXcam259uF5NxjQ
6XalSmi/PeRxWxr0pudKdd3j5zYR/P8w+PBCRlcS6NtA17VT0rFpfPuCoMxC
sXGFGMci/dLplev0nXYdfaxo9XGW0yuzmv7idkuL1bhPVnOHeI4M3v9ViQwO
CuhN3O/ec73Lhd2yJgj/xlqdqslluyD0xJcH7//SjYcpv4F97am8Yd3NXNE7
quxfPqh/X1bfD/tnKOyGMPiwPZLR+wNa9a1SZ2L8i/ByA/pl2zlFOg5Ay1HJ
feh9Jd8TeR5Sj08KO8rutHebSM/nvY6Rul37T4ZrKitWE+QapB1iF5Vp7FRG
+gX252WHoNZyrmJxR9gq02Doecr14fvOTcGOlzVg0ElohJ5LrOtE8vkRb68i
27yCloxQ2qHMs0fs3b1+l3cJunDhN16OUXff7UCgqtX+Tt7mm+CQAyPrrt3e
RPgeu+n0PYuQRfCR/VMj9ozcjuSDcSa4rBn9bqwsDGCgrfJ2t43BMM8/feh5
WSEEyv+s6HHhmsduQvsmhw1+ZKih53DY9rHp/RdvPJxcYk9Zbmb8tN/aenwI
3z6AXu/7q0y/7AOfHlux4q6+6ByF/ePzS6T859vtnhTkuyDjwdffLtg/8k6b
APhpZFj6S09Twnc8XnRQVdtBNdpwM0EeqdrbOaHrpN23dGnbBXCf9+v5Ztp8
aG36uag+ccFIfqFHjYGdnpCA5wv+OdOQKcR8AHl1Q4Z1SCDKB9W413PrJxYY
HUDSavklhtBgJ/hBn07RgvNbGI+DalwgvbzLilbW6lFQWYr+PJ+4w5T1rHfZ
pDb8/2cvz96ytHQFrBfcXl5/lg/smuiws+NmP6Rcet6QxOL+UZDy7uhVM65t
Q+Qc316nVHjy2QofAl4Zu2PVJy4wox0Hnm5qe0/1XrjTB15cs2JT+UA2bb2j
Ux7sOWYSDKtkaQ50yHZD6ADKtXv7LevTIlOxethxgHYmTyw8o7o0kEhn/psT
uqfWM5ZrUK6jIMlrR2oZZXlQDtDL5XKGDdc/Ej4e+D5xhk0EbBJQ4Fpu4khJ
J6Cff+XzrbyqCfq6SGvf269zqOUYD4sXRBy7diqY8vuW7gec7OfYIfwFfAdp
PN0BXLw/7pv2ATROCSgvNyTxWvSacDi/ZPmQ0DmOBP7ECbZffM/XhbW/jXUa
2F0LrmituzvmgR9s/uTsnLRe4QR7RmU3ZnS7+2jY8IsQsMe75+qufP73vEwm
BxLskOCNcS2ShoTnak4lhcObavbU74hdBXdM/xrxoKM1XDnEunO5mRfcB/Kz
3Tt0BYKnTu8Bo8211sIeLqH3o5+FE/gK8Fnjxfu8bLA34fvsuMBHx8zdkPy6
17PU+07kQApmnJAOQTvhYv6XeXdCfeFfN27KbJA3lNqe4Pu1Cl7ucHvWEWS8
Xc9u6FY1di1cvFinr9J6c0J9Kv2hg4/uOrz4zHMg5OPlGc8Pv+dBc7qpbSfU
M7q/u5dlxDj44XGVksP2VvDr8Vu+rkhC8Sash2KHTfUJ8YXfyhpyY/n2CATf
DdVylo6c6wInnQ1b2ABBukd/ufH95Xcj7bwc+asnuxu6LgHlQTpvwV6e14SV
MP47vl0SOeQOCi0ltBe/8GfsxMuN67QVfqkQvr7CsnV2A7TC4P4Zra28lqLj
UxxxufeWgsOwycS+Dgcs6fd7UyMzTk5sJ8T2z/t25Tm0/ssFOecZNoTx4OkK
8gEeAE/wnW8XtcJtyzQCHiM+Fw86dKfxHswpr0qoNqjQy34gGn8EjMd8K1cl
8kUgvGrCOk9DHrr/AvoD6d+uW94d4wRS0huM52PXYK0VxmL7OAL1W7EQvl+S
cQt+9r3XUI41sS0xDtUcr9ftX+9YSUvvNcV7LU9j4mH7B26983Yimh4mn8Xu
qkC9/r3RfoLvqPRNCL2vRk0YVqSE/jfWOZsu66g8Fw7u8eLD7q+ifTfOIJ1i
KGb7qJqOUcRzjAb6J8gR94kKaqsLz4xHz8l8y99YG84gxqPGy4XXgQvHDtls
hrcZr+g8XjuAlh54COgP+Dewp/fCLl2J9MDrFx1e+PxslYPx0z5OIXzHyxVe
DzCQZXX3JaKXDjKrZyn/Rvl433PC+6WdRfvDXI2e6H8lLBfkLTBqjGcyXymf
gCdIA/3G6zsV3Yx9B3U/zhkDDzo63WDlITSOPF4PSOjCS11QCZkdCR8bnk8e
h61h3gJ8IaEbVzuMGFeGii4AdmtXnH4wxgfh8+nxG3/YttuCrA/I8G/Ip+Ir
FZRgd6kgO1IQgNSjqo/HA8hN7dytbwpTDiNyuT9Ld6BvBCbO1BL5wbOvEP+H
8HJG1S+gP/juGTpar64I3RfC4vU3HbmTFajj0+PHAewG1fjw9YH9mpukYxA9
EF13gXYMr70UahwNIeAH5Blvb5Xrdxc6DyyHwrNHh+ZMC4Px9pFgd08+G90r
MRhr7+j4yxvahTS+DKtXK2J8D+w8URpOvL/aQF/vxcli5RZxSO8zs/S3Ed9z
a5C3ZRG3RdB3y597J32lQVxuwlhG+yq0+lF0n/h+C3b8j1oz8h/k7Z++4I+N
F4tvR0e4OfW57VY2nmd0+Uoa34lzuvC4GJ/7TWl63PU/AVvivh0G8sdYi9Yb
nDOvxeII8kt4YvrD+Xa0SX6k/Ce3SP2xuDVaIv9e3spOSdK0x1ny9hhtOWPr
DPPM9S2iHwi+fUJbzo92jFHr3/Lk72oIsscR41xLAVkHL3hIU573+qbonJe7
RuYJ2Xf29zmicyTBqUa/T769HCN9EIzSJfo9B/T13LZ+aovyRSro8d3V1r8/
0b8ESz9j3g3G7XkeVk6utRUbj2DqTIn8Yxcty5bYbhP1m9fxFzEekp13VWb0
8H+P3pLoEH6DPi73/yDkdrokMc4bq04+npBvH701MWLdf+q+A3fyePr4ktjy
B1Wo4/j9Kfj+h8eHA5OZ0Y2pXrXw/CoVNDzZudN8Nfo4xlJAloIpo7iDBP20
WCRxXfjHII7+XBVPRvdnKMd/YK6YneFO7iz2/g9L3kPifwKA/NqFEuPNASiw
CJM4vxD05sE++vgEf0GeztZkJuXYJ27m/Gvyi4Gc/kmM6CU1P1dyRX7ynDoX
0vlDwBorcf5lleyV/r9sJ+QxwQwTT6GhH+gUI392wdkc/n+BH2WRLiK/HX7+
sEb/XSc16f3xJcldXY1U84W0UDCg4jl0ft78evXB1PsCnnVl2WkKa+Az0IVX
P3+6U5abFcEt8J+L+lWGHw26c/2n6NyCXfw4oCXw5R2ahvpVKi5KffCdi+6/
GBo43RruUU2JD4DVt149vZWyHlbQv1y6rFy0f8t19MmCWs13K5loLKTsv+vO
UVN6yVDTyadCMbjfOGfkO6DrokuV6u4l6H76Sq79wXanSkjpLmmeHHspy6tr
W+J4oqymftOyIb57godhZpb+G+u5lPRqKsSPG8Bb/dL6mqui77tuL+pfWadk
jC3HWt+e/p4Lvn18u1h96XO7BoIX+Ty5uHccLT2wemDEL4GMCwY9IpOXBrkz
XUG0f4CeVPgcbj8ldyZ/EUxFH33XRV/n9iuhjFOypi7j5UcF6nfO6PhXItyo
HRMQQtk/Vb61s1foDhk9eHJO/ur2HNQPC6tvNy7Rz++gPKBTXA1rOoV/HmuG
DDoOvF5Q4Xl6ysj8xV12I/lU+r4seaPj+siRWDoIWs/OpaUDBnLib1dA3Dq5
iJWJKD3wfJ+x/IjNVB0htj224gQxvz+Wty16jvQiYWYfv85WkujC3jOyFulH
3ca7TXbKYbi1W80Yw2fE9ZDhkHSLtrWH4bigLwptWkscDyO7grevTO0KsGMk
dGV9fJZGS3eq+ejYgK7fs5yECD3I5F+m7W2os/f2qf27rIXTHslUaZ8g3g9l
wG9G9hgD+Wc1qNdHoD//3g4cz/ek8S/EoGNkglu3eUdgjDzznbrnSG1/AeTo
WRvPKkbl60vyR+XErzOQtJl9plKPES4wyLc7e02hpx5K/8qwcXHnZC1hbqX5
2ttlzO9NgPLHpvJ7PC1YB+l/3euz4J5oH5/bx6iWgAdvfgdVBaWllO3j8WrQ
ywtd0fXWo01afbtrUM/fYJxUdAB4Aojo9Y7YM2cdw2FQH3zH0IN/60EZNPxU
0Nlb/SuQ+qA8lm4N8uR8ufXHLywhAR+m9ATpiZmrLtq2F0JOi0MTbSsWwMOP
6XnK1ZD6i3Pbb8lDxrspwkb2N5vZu7dk8o/ngwS54N1qfZmS/lQQzxd8GsC6
lPlrKx8y+s8Tg86jD9Yv7fsIkkQHAA+dpo6zT4UXHd9AeqRPb7u1EuS1Qa4e
H/ZE7R9OLhvguG/XKeV4W5fWHuz1ZZT8uaVQYjCmn1gcWVbXI4eQ8qBd0N67
itUrj/YRw5ebrBtBayfbvI9cbD3SGd63I3dP0GTR/wNn7hpqe4bHC4t/2xfo
Pk63a/ULbdpR0w9PL0w7Arf8O5T8YWo/BnbZYnbAkNg/lh9YuuDx+XT76JDU
Hr7w1Aux0wpXie5pctb1u4mUYyKfTOSNjj748mRyJgkC/jLVj0ezDiUsVk2n
xJPKTlCVN/XSvPXT+Q2CN51eYtphy+eLraP4qXXU8f7o7KC0dgLwtzhQOaFN
WyHlOOn4STfe3U8WdDH3nUxm91nLk+5CX27/yl9tI9EO/a9APmcDqf8BAv+h
fWhBp8WiOCys93qS5ye5IGq/EwxkD08m9YughK82vIbkYFt79/gW3ffmzdsi
dr7PnaNHeg4taN3j9n9BHv6vQ46c0nYRvblLROsETsdReUzknHt7oYhvApuv
NZCZxa62tZdFciI4duHfjzfDBPonSn8ulnD8qE7EX/+Pkui5R6ESm2arvxa3
Jzo77zChLy38u77ghs5jUn2P6C32XhWnvifpPo9g2hmp/CcEPd5XMinH3lzX
vLhKY0Y8gpaaOxnvleCnawDlFaTJEN8Tair0uO+0y6HxXVXe0IknmNTjH9kg
0U5xS7NOthh+xzT7HLtvFPSv60/m9ujA2ePQdzJ/x53+UnMrGFbqkpL/s8IH
gQ3y8q1zJRR1/Yapf1okNl9UD5/GQFZkWiXhOz59JEDFxybDDGnXf9DJXbMN
JpK1J4JO1/r/itTRpPyOhTPnE+O7gX7GX8675jxOD77aVUfIPk18LxQPJ9UX
Rw3fEQlfOBW6sXvONMrx5PzaONGnVw5ERVeQH3RxwGIjl3zkO1O+UdET0I2u
Pc/ZQkFV4B4CPg18ln0TI4mfZW9PFNPigSnPO3WTuD/JdLx4+cSnyWC3OWL+
Pzy5w9Tnuu1OmOWurnwAna3PaHslCm2XLVOVHdSh0X4YGojHJSx4Iha3nx3G
K0Ho2VS+tZQ+U7Vn8LHfwOub9ODP4x9PuRNAjMthUvEK//8v1h4J3QXp8+5C
t5J7vblcLTrv5LWPeknKf00r1M7NVXQqNLIog3xXvPXaKvl9VBHE//+3FP2o
6jFtP9FvV8Tz6+h9IdfOGzOO64jkhb90EbpPhKEbL3MeddwMFV8PzW4Zu2EM
XTiB21G/DEiv53s7/UY/6V/6ldDXgIlOsp2p51My/CWtU2LtXE51hcspxytz
7Z5PWBvS/jitz1RDwO6Uf4q612UlcT2GaZd3UAWlQ/ui4qTzP5LJ+mXx3tyg
tBNM+a5Q2WvIKA56X+7Du1XrZqxIlLoduvKGMUePJ1TR77MAecC0w+26Io9g
fwC8OeJqMuwuymef3J5BK5909vGz43jd1P2BMOjvsO0Gl3HfROta7v22T6HK
vInOn9QiYZ86bryNWwj8UXhEvecSHxjk00HQz+CJM+RDEoJhAMH3oQNmzXzT
TQhhyvNvF9VA+HZ6HI16f0p5Gyyft3j4nqtRcESi3oJOOmicF3x/oBxWLrvU
ovFRfReO6pn625qA76pdD03bB4jsC6fPUgeIqn38OACcGCZT33bIDLj7tQil
uxoRlPTA51/12x6cqHyAsjweYr836DFV+zctPa+VhkYR2i14lhPntXY+of1k
jtZVzVeLCPmg3qArmib6HYWU/dHJAV25A7lysbKO5YR+8fC47eYrHxS5lO2T
0aUhvUtmt9oAdSJfMOUEfsPvQMmX+v2MN9pKyW9Jei2JHwT9cxs8ucsaFwK+
TOvT4QP0FW/vmfKJqj8qfQP5328Mjdbd50pJL1CeSo+Y2l8qvEG7eP5tUzrq
+NpvLaE8HcTjuSKG336C21YyfHkpOdT/0UzH+fa0SdF7e1dKfuTNdtMsSA9G
+IoZL3vzi3RCPx5zl65WgQ7AW5XuqpooEv1RQLle7xTLvv49rzt63YDwckPF
b5CfnZ4QaHnzMMHuUPEZb/9OaE9em6oihGSd60OtyxczloOFYyxODDl/SGp7
QwfXb0+YpztT7H4C603XWkp+TtHRnsifTj2+iC8zIyu7bZMaPyr5ptNbSfLW
sTW6vwTwxtP14U5j1ghm8YRaDP4tb3zDddTvmpJATmCsaF+HP+m92L0a/oG1
1O9Mk7XTeYno/4T9xv+WaB00X1nMb5Pvv5/eL9iuMPhhWuc/F398X63hpwez
m3RPjtNJLu+P4YWBXMcBjPYTWxQGOipW7p0vJLVbf+h8hxV3L+eP0I+rlNLs
dq7uOzx7WL+W0V8p6cdZwCGVf9bSAdL7ZbQAFFi1E/mXcdfPIN5fge/tiN25
skn3HgTw2ef/yDjmKZG/x/ofg5z0GrFzEU7CFbH7pgKfCNJ7wGJQfU/2Jdtx
ZdC9tkdbhVv9N95xoJF//o0gRvLDf/SWUfx+fkm8uP/BzW8tct+LFX2f0f2b
ZsNP9U06H+EOG5z1b/Lxfw42cTzswR2aRQe+2lHSOBD/FcjS1L8q8bvvoyUi
OvDOiNlv3s3VkVBEZb71izry824m64rc/gf73llEOs/xx95u0vtI7Jkmi/5J
ORJcMfFlpK9Vdxyh3Op5/U3GMFpnczz7N30e05h9slOMXrPuJzKFnGk2f/Z+
7brpIjvMhs1u/Rv6wS1edu9PtMu2eki8b43VL3Zr+v+WsO4/t46aKxSr1/sQ
c78h6PnqXgbJ0sdRV3yT/yLMXaKfCyvzAmncBmkhz7BIzL+BdTBezJ7ytTOl
+k/jH7GtJNNjRvBU54t9clvofqJQsUX1U5C3G10P5Nv7FGw8KKaXgkHRLW8P
ynd31dDRF5J9529dIN1/2cqfEu/R8b+aNMaZUnJitC4kyGN6uVTzieDKUrF5
iZt2v0XkuaUh6+gBcf3VHE5Odzp5/x9f7/FSz0SK5T/c1qz4SHz7TU3a/2HL
nkiCvt+0kp9HEk+wORDHH5ZHlMT7/Pw1r8Xvoec4xojo5DyF9DydHymg/9/8
X4e19k8Ek9Ywmu843X6R+hVyOuZT32f5A1Bwc3TLvufZUng9f5sr8Xvw+mbF
i2IKuXqTGve/ldtI9kMcbW3RnH442Q/E7IHg+iap4r2xCzqL14dLElpi/LRw
kzH1vF97Z963GaYtF99HqDBt3J7dovZYshbM74EwoZ/VBony1lKQM3yG2DzP
XdZWOrvoIZfTkviwfM6IjZtXfoP+vCCvw5ZxPu2FlN/Hroy6cEid+ntLwA2V
/8l9WP5TuX/0XgVvU5zYPiI7Z5TIz5LtFEbt18ZELlIWN0nOeDfSmtUvXzXu
X/kPF8GNr4a+PJkkeV3XlHWssn3R+wOO4vcAztW0SLwVSj48k5f+P/J3dRvO
6aVEvQ3rmvhZayv5PQZAj6bG74PGiv1Hss/3Oftf0GM6KMiwE1sfs75taPo6
qu5hhfW3DtT3RL5rZyhlxRnAF/nyc5J0dWBX3sFjbd/rw+D7rSp+ZMV4Udx2
fruT1P+hWzfWxaS+F8WBEJTOiqPFC1NelL40Z8jweBNqP0bLmf3gXx+5pN9B
HOeCBVmU7W/aZjhTcVollOrt0n/mAHO4pHOwwwotI8r+8PDjplGenTH9J59v
NcfnBvoOF8DP/Zq9u8bZ10h5LN4NeF5V3pspHCkktEcH8eP/Ibdlb047VJ+s
rAKmn7pKfR6zsK3+pH3nFsADc1de0GhFfC9YGojVRyq+OF9Z0s6xegBMRT8q
COSQio+S5KABuo8I62bRRpyvyzteRL5P6nq8etbxHZLowMllYKcvtavoc6T9
apgKH4A3/juQG6dJFwt9p3ynjP8jrXzgoUwbjzkTFQxhyHTa1u3jvQjtYPDi
XSx6SMjH849ODvDwVHV/s4OdhdCeDka9DoeHwalxShnfbanvsw9KMThe+I4L
48eNpx9I4+UCn24Y1xWXZKjoUEQnl2sH4W0mPV8pe7MJ/c+Qr628fUuqdyCl
kvsG+31R5gqhvvF97kHWaSNKurjJPIrSMrJC5Gfg0oTfQ/OCYUCnptjJppRv
M6HtxdSJIvzY22+8RPhebnp8yYZOTxD+4uWBTn4MfVXdVNxDCd+p5B7oDR2+
dP3i6wP5YKpvy3/LucxbLJREN+7sGaj9IJFLEQT2Z+Z+/18fZYWEfkA9/Dyz
5frlbh06oPEWsO2T6aPmdqWyJ2cjKO3dz9X3q4+5WsLzbtoVGFQFIhB8P1gk
LC7Ui4Dd5liXHTbaCO8xdSve6msJF9z3UsjSaox/8DGxHLLlTTp3yREdB6hH
l8ZD42RWTHpju5xXIQ8o28OUE6UBXg30r498CJ1ZPWJnmNc+uK/C8hdrw62Q
cZnB51lLS70JdMC3D6BOG/hHksUuGP/dtrv37C+Yeyr474CuIB/gkWI+qHvK
RxMYfMfgLdZvca/X7bR2oPc8XNsUWrqNQ9sH4/kCdevGXyuEtt58xMq8JnpH
gjs5JAgC/WHaFeyzCkTwxPcLxrPPrHR8ySjiuy9U45y+wnb5XA75uyhkcsZ0
/gAQK2cN6VE7ek0KWOUDn2LDsjAsts7k3t5UANm8+8q7uH8bgV8A9gn7zFI5
EQlPa73yxMkLqJ+484COJ7ykeFf011NFpy3aEXC7pzddcrtbwHh69z4XumOK
4ACBzgCvSakHnqdmRVH2d0nz5+uRHYn75FW/zoRUu/mQyQ3v8EQ0nkSCoMvK
DmXBcE1WfuKTgcR7IN86ahx82Egfwdp56PlV/05rbmW9XEuwJ0DfwDjBOPB6
gC9vd/fu++OtyiHh1aOuDfQi0Vd2D/1KSLlr0N4dA1xgvJxg+diAD0gD/Qbl
8GkAq0Nn1OtHlCH17j4onbgLcidtH5t2iaxWmN1dgKTxeAE5JBkPI/kB7eHp
AuCmNIGXgq4rwmcwPkCnv8qxqpY/h8zHRSlt1HKDz72xvH52mAul3IN89s4P
MjNcfGDfzIr1nbtcgbJTRp51H0csD/gXeGFGTIAucX66Mjgh3/wvvLzsV1jp
TCD67+HxAHJzZvtSrdXBmxE832eWGz++icoPmZ3A2idAd6pyf0F+kHUlwo88
zQ9l3jC1nZYEsfIGILAbVOOjoiOVnFmOeLf+ROO9Tr5Pq1PofLsmLcX/2Aa4
/+c3x5zOcAn1tlU/rzfIiITXjZ1ZqrmXel2dueRFz9vJhxG8a7d8T1r4olnn
i6yLGyT7T8h+Q+93VV8fMPBTO9H4BDNUxPy12PWXxPaRWOmuUsX5Zsdnif5b
BNGnxeLccF+1Fskj77PJJbJ6XBdrYvzoeZWu4TpnSM8TuPnmYn4c/NZTxffZ
XRaS3mNgdz7ZPD/H7Y+uMy7/aFG0ba0eUU8boNvvP+JPxZ/9O5RSb5rQHrer
vchfiTvc7Z/3B84Oy7j4VL1RL1it6P295xo86LRSlZze/59CwQNdiXTjsb2a
5X/EzT/QeH59eouYneAsrJTKbhD1I0JkzzjanjmQus+kgQ57Wu5dooZxc18T
/Qy/BttMeyCln8VamBjXhEzvLse/Is3/03LQEv181TZ7u4EtRhdWzH6J/k98
i++ovwjs0G/3oRdN8rMitHtp0p+3Q3snqLl+NK+lpF+bDx/Yc7jNtzP5Mx85
c1sLoQELn9e4V98U0dVn/VtIePBdv5R2HnD6gI+XLneZC+/wD78Y9RiNczHG
psDzkVIQ8p2qffx3fBr0w2rwcx5UhXwH8Py97qWhZmL7lPxJ06oo219/69vt
MV/Q82ShcnR/xddKhP5/zPatfLNciKQ7Z3UZFfgkFiodNyqxJI9DOR4A7xbG
F1XrexDGT0YPLP/wdAX5USYf9IsmH4HB9y7urSKGtyL11xGDGPqJ9Q/ohv+O
hx2sLJ2Ocech+HTtPfnMGkU03lJJh967/Q4S16/S8pkp/lQwYUu0+/p+85By
5Xe6j3qW1gVJ91Lr47BMQhwUzd9ZrHAn8vmJs6oASh21Rru10BX2CgvZsTwH
fb938mCrHsfcVpDiR6aXruV1g48sI+5fMqUXkCsJ9bltbYjr9DH8jyvgGwcR
/rWddCiW60z087ji38OyblwZJX+2tlZa8OWsaF4SPPouWs8KuHYJSHksHxrG
H/ihyGaVPZHu9T67v64cupZsHNwy00JE3s+2aRv4eeY+mIqeDfrud/QJVP7j
y2Pu6DJa+kmQQ66/MvHeigQ55fknUPcnQX5Z+XroPAv4gZdfOoili5i+9iuH
pz3PQtplqmdMy0mrl3g4KtQz0zjoGcJfpnjUWwev+TlkATKeAXefco/vyEmi
w4fpuAD98fatqfTBlOe9r6uGitXPvxm/Ymmz+YG3P1TyLWEexbfP33Je3O+7
OuQWVP6l2HhAxCbE3mX7fNxYMGIXUn+6u6dlfFIwkt/OaUFydmM8Ku4ZNjr/
YvLp6MYN33yKrDznld1hxvLVMJ4nJq8o+1cIrj+3z0s8noFprbi9xNoZMM7M
zmcvO86wggf+TNU8EN24/7nbmPi+O4CgPIANeI2sLifgMybWRn7rcSf40afM
D71ln0E55VPNvAQ8LD05il2fQ29PsNy8+gop5xUqiO8PpK9oL+0j//kFMj7w
3WFC7qgpv1D/u1Tz2xu03ND9yoJ+x2711pJ+XUmFh4R6vLh3TlCPKT++dV0s
pteCiZ2JfiJ4+SThs8BveeO4YtxzpMafDL92P8X2pXgzDUX+rbzM09TxKZjq
AwN6CRY6Hm2ArGQniX4+vKP2xP0kPL3wckvWn1rQS0ReqfBlwAcR5D4Nfvej
1xKRfdyfhvoR4MszpdcVtYcH3n8cSVlPCjvEiF+YfH5gCPX7qXj9mvom8bGf
+L44P2N4OHR63aBpCfc3Yvvht/9I/B/9vHQJfHrjMvjygw5F5Z7EOIzSwsoj
JbW/d1iS8ZvSvj46epqSLlT8Zgqp5JKOH3g648vb900/8k78fWCm/bIfjryB
7ZdlX+mG/S540T1RrD38vZVQHXQ/trizm6eV6zpYQnlp6ci1TX8IDWtbxR75
EvVHwdPpa/Ior/iZG2n7BfDjpjsTN061gj9aRhnscxbRjXNyC7qfnWBaK7un
YjolflYsfW/n8kgY0oyZs+A3cb1CBfHlNxxPMDqrg55/gO8AWo2flvzIIZys
fd50v6uE9ux02tbGxaPneMof33Pi1ONE68i8eSWE9qnwwtLf9QbxvOBD79Pt
hmkRxy8p/T38GkJXPB4r527q9Iz3APn+8dGhnTJf5Aj4TJVdLXDy2URJP4Q/
FHTD42dQvvXito5CJB9LLzJ+MJGvhnymckEnZ0zlaGpSbqvOvan1f/Cl0NdP
QknllSvziPqeJrY8/r1c1Z7Ee/577tb5WS1B1+VUdKCSkymh7P7fP68Ww+/8
+aO09JD9oNprqFEuhOefhH75ez8T17eLji1+dTCVuL7B1ONZ+1ZCnVf59Hr6
6S1jPcDrzcAod5cGvwov8yuHfRzXI+XMte+/SzpP+u4dFT6C/LBXTPSaayNL
PIegqjfgyNjTSyqsKfEA5enkV8/vWLddA0nvXQo2zM8Rk6fWdeh5HJ4ueAj4
TKXnN2dDcM2huqRt71SG5GlKb6fxdqXKZUbCjD0lkFdyu+l3Ron8vssuHiTu
vwN8AH8b5OXDcXR96tNJ1WNOAXqeOs/63O43hfbwN//eSwMeP0LoOmDskpMu
li8QOaais7TjAnR7W73gs213tD1p22Fql2j1f/VPnW9z/cX0XXbvC8hdfUbM
S6t1hHYAnMQ+G3vUGJUr7Lzg7VpBOx7rmWnvTPwPkX3nGtUQ16Xfhpyb8G43
GtccpOt0b/640rOIzN7ws8MuEtohKc+bZURtf6ekrUtRCEuE3IVv6mRZeyXx
R3C+TzH0eEJIz8E+AUg5leue9yf8dEDS6w84n21/jP4eAgPIOfUpFHp56qHa
+2EiOgpMV5Vg06JyB1bq/95n15eA9/RBX4NO84jx1wHc+HDTJc3YzmJyMfik
2Hvq/CF+1PsTYxWG5z57xzyOIsBTAj8JUNL6Ek+Hloaxgt0+G3U3w2T94fBi
f+lBf45Cxy9JcKIJUV+oxq9VUmC84GY51GulZWXBEQ9S/K+N3C3Si5uVEu/1
sU10okTpioGPoIw96z6vTtWn5R/oB9Mfp90dMTkS6OwV2XU2ZwJKtxFe3WKE
PsR75kDfunj1n1tvTf9uCygfcnHgoP1H6P9/qMpR0Rev31T6bp3xKFFzjDks
f0B7kbej2DvZnCHquQR710CXbTeryeSe3Sa0mBIvwJeWkvvVryb/qr8eiPAP
jA9PJyAHoHyrPtxtac9E7yLzft8g3pdkYF/F+HcxLuL3jQfU775T8e3DrLGB
bbSp7RIVX+efvV0c8Y7ohzU8c3LW1/B1MFW97WZ3Tp14h8qt5h6HdcYRxH0A
BvaKs3dDNiXeDOwGd0k+ij+wX73tBqwLdB4C49u5ylLZdBxjvwE/Ab8dZtbb
Df9Mfc6AsY+CLhovxfDg7qiRBm8RvGjgEZs4kPzduE+Wjeftz9UZxX1lKQub
d4+eLh7jGFWJ8d8IfMmu8G4SHhlzxOM4JXs3yZ+Ov/68yM6yVhhIjI/K7ntU
wLjdESPDTb9MEEqDBzsxUTx+Z8ZH1G4ODusT5H6oipT+/1KcHe4sniheBV+7
O3kco2tzRft4rP3no1qiP1b1fGq7dcd9p8lQNfp3Fcd3KompqmpSHEAE9q5s
vM+501ykR5yrrSXGY2QtnE4et6CLWvP84+jkOrXXyz/ZvhhccnGAPOtWi/h3
SQWvDtKfvWITqmeDjPSunjZu0vuagrCJTaeXgZrGZf7kZsVB+E/AobqOrgu7
id9zv14vknNWgm2z4o6yhsgwjwuodXVxWYUL+XyWpkTEI2Cz/nSPl2L05ym4
0sfR7GX+9E3tPKFYvUFa1P6yyXZGR+asFTaHDpQQa8e9di89/uaMJXxu9dRz
m1yFUKkF++uexnUbN8KhHPqwIsLz7OSFsP+CD5aPrhP9VADMnPng9O05Irlm
HS2NgejKU8HtW+bMHjdIbNysPHnie9QRGQZTCm1R/6sl7TPWLobReJerrj7x
TMDc5/Lad2bq5VZr4WsFu/Yp39aFN+e06ZSo6oGUf3oz0bnCMIfQD9fbNKGA
EwTLy/DmhZah99weL04Pk7uMntOcfX0y/PhGdJ0M6Fpzxytw921G53ucqsh8
hD/JazxcvWVQOphtP73RIoa4np3qFOR9KG4HDMZH0i43/B66ful+9KVJyOlZ
MJ5eeLmggmnbNnRPvI3u2zIdH6CHNPLwqfMjqLYgQ9D2Orq/hecrHmaplmrs
GeZG+v1g+mkED0AH8L122xmjUXdI7/Oy+ukT5eLt/psXp2yppcQH5Lvk7zhY
EbifIDcnDtnt5pGccwL4Mn/7jbbuxP+uYbl669aQyDseAjmn4k+ir+ocr3FE
/8Xxd84abJkbDNc7Lty34DG67wj0zd7bcbCXPX08K1Dest0sDx+bTfCqWs82
3VM3U47XwlN3YHeDcPjmcLdCH010/YXBXzBwMXrvaETm0xK5QtRflYoPapf4
Gn0HuMBCddX9SxQnN3znvHZutFMjHJ5ASitcHaZMsaDEC0D7mUONb2D80i/N
F47akCfyF+XH+RQhfDkY9smnYiI9fQaP7iOY3EEIUdEl/LnqtGFdNsNb31g9
z94QDuvP364+/54uDOiE2N28xn55iUZyLL4lvO+63/ieJ3ZSjgdvX6nsCuCf
Ti+Ljg9mkN4v43lk3YJSslJOLtxCct8QQ4dOF1H9iVPPXR4sJ0T46sGqV6jd
QGonuIN6xCD5QG/o9B/0S6UfGHni9+2Bfu8Q4r6mj6WILtx4R7E4KmyHQ+i9
WozdYJ+qpV9XA/v1UPfI+ZSyUrJ2xMqDeROME29vpYXXPEeOVZgVTrB3TOGX
+aasu1ukeqeHCvLuGYvWO/xJayXeH+Q/8GrWfxx3cUKT1tfsfnda7j3qpkDP
N9T3BUMHRTxcX3iMcXtvF0bPcu7Ysu9A4NYHHP+NTXovnq+35595T+W/CPk6
PSbP30u+v9NJk3pfbcYsTsWkPW8h/veZFdpt/xvvpfyXoKbRnvMdpwmlqce6
taGMTK5p67Xq0iL28I9Ajfc3Ty9/R+9H8hfknbE+TlsuQ0W+bIam2H1Itn0H
ifU4Q6c+hkzqnv6G9rf8+wo8Nn/vBS9qO3h17pMineeM9mW4HcOatH9DBfkr
PRnFWxX00ac+X5Cmv+tdqM+FG/hkpEg6n3Gs5onu0fJG+RHxUK38fnDdFPRc
veBi30dL2nvB3VwMHpbqUsdNwH/HpFnTtETyyJ6Xh+6bjH+eqrEpbRPSrrTt
d9+W4PtYA/2fNLQdrm/YV0hZHsCgk2tHrfRgFB+L3WtBNJRjGHUmZYoVAb+a
jyF7q1hrCOP1fJLUOlojkxYPaeEMc+GwadO2IO0EJjpkOR5cj+B1Qun7hH7f
6eM6UOGDHw8V7CnvFZI3AaW7YvqJnQ5rxjMZH/dmex+yfJbBHnRf32ZzyNvj
MvR8xMrz57I0JK13Nvil9gb682Yq/pG1f9xLdF+2SecfVHLjrT1L/4ftn3un
i06vmOR/bOeI5AN9S+mwxX/BGCElHan0EwsZ0pFtCz+jtCsS7A1juW/A484R
nWUZSqJ7x9wL/d8wkTd291+i+ZCjcfUhk3GQwtZL5hg/7SSEBO/as3R6oPOQ
QC5SM+ZLFRTyTD7weFrjvpedeiUtXvM6PIB6r/egtaPbZpnaamPuceLtCgP+
cX6Uiq0HuKdmvyb0M93uUNsfFPFIJPFr/nOV9K32xPUVnX3ySciFdNtQ9yeh
X06SfxpZecFSX+I5E8BDAp253p/TCP1h6MnZNu8F0k7Ojlptjb/j/11aHIyU
f+pq8cncKAQGdr5B7jp8LiDgr+HsH/bYwJWSLmN8suY37DMyte8YyAuLlnh+
yd31D70zSGX3hwSK/Ka4sYuYv2dgHTD/RIkT6f8T90J6EiF/+2SV6GkdRfxh
uV6WeC7FvlVPvx+k9KabW8IkUXt8H6X/U++W8MLlxPx2WE9NpXqHhjexa4us
i3muss1/V/ffhtcnB+1vM5Boz7r/tmifV9wy7148FLTIO9ECZ4smvQPNHq3T
InGp+Bv6tui7CIIP/Yjrk0UfFSvtNxD50SBvPy6XQHL9V9v2ZJF+byrkdmqM
g8U2rW6eH8k/DNkBq4jx1bZFRhr41dPL7c+J+qrBC5jJ97or9PGkVJ5axe95
iTlP6rK27f6hYv9JnKjSf/S9as5kW9J9UxY3venryQbYHP8s1Zr0t6sLi6D1
mcM+PBeg984sbi8MUJjmAX/hvNXYuWZVQz7HZEDjPr7fBJSuPtbdfXp+X4nU
G6hocNqn8XyTu1OdGP866fWTtidSD8MAGuR3vhB/MAp+3j+/nE3yLh8oB9Lr
+ZaFngYGSPpwT6GcRmshoXzGtB8rLhmh/r34drB6v2a1mD3iXe75BOp841ak
ErQBxtcjaYez5QFxX7sugf1poZETgof6cH5eLbP9ANbvHtTnGHi64b/PbmsV
9VueuI4G9ajodWLFykOLOY35ESOo69PRs3Lt/W47lRY0WQ4b6K+Xe5xxfw3l
V1hfgyZOL784OS2SwHc8tP6ma9T9MXquiZXX1A/ifquS9IpOzqjwd4vKcUk+
RXpOzAqtoPZfyv7mw3oxrpQg73T6hf8usHjf2/zNwYZ8gdvbLEK9Xo5lrKlp
qD70WBV91+juWMb6BPSTqbzPdza8+Pw88f49Ff0w+QLHec+gy1/ObZObdYDQ
z+ZpX23T9/gg5Y+/vjvqQC16/qIdrdehxnC/WD0sv6nkCI8X4Et/1hR9Vw79
+UBRxiRXow7k9r6hf8eqTTNGGmkR7CNWTpaVPIDajH19e/zbAmhh67m9lrSz
pOQ3Fbw3dey3ZQUo3V+OunHChitE+FdRtXfTlyXjGtrjzZa9R6ALCX9ZUEoR
5DsoqyTRr4SSjpWxMc7t90HwJOed3ZNt6PGkk2cAFd37LR3uXQqtPJa0IyxR
7D+PO25YJYFvQD6ktVNM6QzK3a/SMe/H00PKA/sz5F1cbe1WVG6BHSIZL0dw
OU4aeyjR3v1TEFqgkHV8U7PiDZcd2838XlcDnU7dSoMmJL/gWjbqIW+5ol+L
j+stv74fK110jiIo4VRDanlhA0cHSv8fFH+86sTEV6L5ThClzeh99X8LCsK/
EOPT/CgdvmxV7A1GfNmz2P1P4MX5+r5J5+G8Te9ixPLrf4vPP3/PA7wtWf8o
X/hLuzOSI36lQyyUWD5GY+UwoUT6DJ7UIv7y3NM+0dDrKQdSO9kJIVgpf/+1
Fjw/Ha9fnt7zcSKj8vi4LBHyTdqHFIR9b7ofxYfNV4/VzJMs9zT/Y4JWFmLx
s1khdsl/RK7mLBPzK+LM+uBBW2+9XHv+GQlxNungWpU5Wye2Yh6/vAGv9Utb
5L1gQcXGeBFcril2LsF5HB8hlR5m17doHOiWhoLWWS33TunR1JiL+1yF0Ioa
60M9FdB79FtUW7WaHBwOU0FQ7pvd6OsVnqJ1IPt+yhOk3iWV23euxm2D8OWp
2msTd+TxvVXEewOY+iyHqQkQvlz354EVmzDvxiavyW0vp0hct3ccEtBjSSTx
/iceXzCew33CT+Wvnwrjv/fdt0T3se5qwnjAd9uyjtf15IWEcWPoRMmPKb2J
cRLw9Uy61U9SZwmhwfLZR1ZqUvv7SqCjWP6ItHyzwrxn0Iud+cvNJgih0ds/
PSezY1R8ZNA/L385o/1erkpsMmV/7+wSwjrKboFXGvp2/NTqPqF+8MeiMZ1S
IgnyiYdOH5X7BafFktGXY9chhBbPtG0dvH/ph8MAH+OEoMO9ZdH/PmfXEdff
jN8N4/kG8DoXK3P3x4IQLH5cz6CtSH33zd6qbzHxGYFcScLLX/YmhNe3fjp6
iuP3EeMaU9GnqtBqYcBI9H8ItBcxbCs706MLYRwyvTtr5fck/lcA/QR0kl+Q
83nkG7H/FJbn2FJEvuBx3ommAcR3CqnkDUNXVtlfdMfTGUMvztzZhZTjxdsR
TDmun0IVZT3Ad3x+ql7HnqaVxP9/PP9S4/fO79lRCOHpgi8H+gHjo6KT8cic
J4dbr6eUe3w+3s7h86nsMOAXqAf4S2cnmMofFQRy5je41PqB3WyknlX8lqFr
JrwWo1unlaTnf9zkvkchGc2xOlerqeMZ4KFGluuk9OkeBLqCtI6Ly3r9meNp
7S3d/IfPP31jcjwEzSHolwT7yy56JbafyEq5kQDFzVkQoIXZH1hhkD6oqBfa
3jqhct7NbnZwzk67jfpZhxAI8qngKeHVbt1GraOkY88luVm+Trvgyev3FuXd
UUbqqQ8bppC5kA/h2/uYx8/tNYMHjw34EbPWKRz5jscz+diA0z+X8qF3k9qZ
vm88l+cPGl0A3dEc/3VB7whC+bC9inl9/pqHQXqNYnv47tBD8JMemwYuEdoS
ygN88fl4uLNy4uWnhpaEfPx4AVTWidmguMuD0F73NhsqviXaE+hINf7X8f01
VxgeRuoDfoL0abuPX26t4EOgP1D/gPPnHx6uPkg5KnqRpRv0Go+3pp1c9psN
i2C6ckAOphSPVnKfv5UwThfPHNn6QwFIeaWbaS9eHSTKHx6vtsVTA3fsL0nC
f6fjW89Tk3n17YSE8ZpctqgKfFpKyMdDQF9QzkwmRtNVy1cMz/dtUf8fRWeF
CjUHfxhfj2pcTl+SYnOVt8ADe546Ftw2nCBXNZdzHj64vgHhn/ZPmQdJsqg9
A+WiR67tUbp/LfxLYfVSp5RAeJh23FzByEhK+QLyEhI+I9/3qQdskRju1/2H
K9Iv0DcquuLtf8IqfuxWtmifnbt160tCPbz8AbjnqJPXZcx7gsMjYx+G9gqi
lFMqvvtvXQCNe/0iqXz2zpReGRcJ/Xdjj667ieEHlfwCOPptF62NmHdaAd8b
7K4w8Tpifx4eOba6tUkogb9Yu9LQz9sxuhdf51rAb56vUV2vtBTG480ZFbaq
WkYIAXnICNxvt2uJEFrtYr/ulF41gme/kkEnN193hc0yC30mPwugpA/Qw8LP
em9Mf6+GX8w/+XOf5mjYf6jn1ecbQgh44vkNvtulRT4vkTeH++1MCJp23xvB
O01Y+ORhpBvlfAHka2e5cYWjIBjJ3zgOHj2/LzoflQ+Yf89aNxoOVQgZfgmO
oNRn3S0yhY5tltPOU1Sw3bXnauVJ++GUol+juy15BgF9o7Mj31IW3NdaYouk
VbrqHT9dvY1g3+nsEJ0dUD3xbtX26UT6g/SsfkO799RH0w+/XqsdoRYAVbt+
XX7NFPWnvlpVn5tyaQuC94g63VuKsmgcQv/t4UXHyw8j+VffjU9a334b8v2m
y7MVGV/D4bkbTCfNqqY+Z4g59Dxon34EoV2qNGgPQL82Jguv+8nArMKL2m5P
RX5x/DQzdP8G339d/P4vI9TF352NkUPvQ3wy/hZUqYbe6y1q93RqrHYE/Gq/
Xkd/fSF0zeVTh4oIev+RGaVKSQ3xl/H9Jz1REsqnBBPG07DuuvngITJefD23
Xj+7d80NgPH0wK+v8fmY8tw1VinQjIMDHvS82xl21uyT6O22Hgbjw9aDatF1
8IW1OheV4o8R6Cgt/LnIUjZoUTklXwAcYTfEdpViGRn+EtvHyCf3t0ktoX1E
TjDr3Fbq6P5vXlezUcGjqM+5MnqXnOLJBMKqd08Mfubvi5TDyy8dnHJypsMn
7VAYgw97lyO6n1wwcPDsjm4W8H27rC6yL9B2gdzMti1bviM9gLK/m1NfnPRy
QuPSev5wHOyYgtI9qXrEpKqRQgivz3g6YenXJTiHlm8gvzZx9OKuj4j6lr0q
zX4VZp9jc/T3CUtriH6EoDyQ92pPm/fGkdTj/W3DPrt/pgVWLwT61cUEPEEa
y68GfcHzz/Kb4/S3rYWQHBy2ym1yGeV4jV/zurp7ivvP/K1/3EAb9BwGL78k
ciiCWLppzSbdR+Ifso+DVphofp9UFImlC9fgLKr3anprx7B/eSPy1a5MZldE
0WYY0AmUu3TCUGv+8seQksmn9WvHtcHym7WGS+I/hNpXiXoJ+OekuHXKdH1n
7Hfu70OoHE5Xvrt4bQTxPhVefgDcJWe2+LdrFSU/qPABekNFd7p+ASzXsx8O
+a1Cvts5rxYMYAkhVZeANqMa7x2xYmolnpdxhxzIgLoMM3tX3oc+bgQY55EN
o6d+jkLvJeHtD378QJ5N69yN9aIckXIy8l36Zg9F7RudPX+wcpttMcuVYO8Y
QO6JPpWU8xEGcupG/Cfuc/PuLJfKT4Dl9l3i/VROrgLRj7UBXiDxU/q3oI3H
meEpOkKy77xyEwnxAqZVDwvbJpo3+VfHSYwnxvXcwei+M3eLW7POywSzp5PL
0R+OOyjQhhn5j3N7tBe7r8FSbv/n7xm8cUl7KJtdC02OT1Ea8JDoB97t3e/0
9V3F6QbmL+fzEs8xuCtXifDnh29Ll6hXEMzIv4MOsuuuiPkB8XvcSfgn9YUz
zJH0PXCJsHZ6m4BlDOQvLtPLZ+zqP3Kfh93ZrhwKfqywcNhvMb8QlnygZLsb
+o7+HAsPOa/XmenntMz9EklQbs/bJ8rGpHYLGV9pJaP3ormzU5vnX4aX93zX
ZvGR0/uumF3gBH3/78wXeJjtqVXZLRldl3g/KB0+zQK1I4IZlf2MsyNhAEE5
fDrk7sSCiHGN6dUK5cj31+sUVV1bCQnl8e3iv+Mh3XesPGjEJYjhQ1auzwwr
7x5nG99R0l/3Ats++4p5NlJf4enPcQEHDxPwOznqacBoZXRenDq2bP8uY/Qc
HtDVC7YZvrIHGpdP/Xp0qIK8kEB3SfK4aEoh5fhBO9s9TrzYaShBbxNdDt9/
IkZn9sYIRnFCJPJBpzLxYOqTbVi8WL2So6CldsPi5rih5/05mW0MtZI30Y73
zVj9bu8x7/tI4CPnkhJRrzQnDVRm+1YieI6cp7pwrxHa3l7/1FcDV5ZDq7I/
K1w/rETWDztMQew+ELv1TzE/Jq5yRQ3Svu23xJx9d6npjqUXVp8w/QkCn0hl
b1nRaWJ2kfc+gNxONvRnGeHe8bEu8T1VKnkC+TLtOoS/2+EA3wipNM+1Jfqj
gHKqVz0Xzbej/l/q2TnX29YhnFa/qewRld3AywUmzbXqQryHSzfeBrqWtU2l
7I+pvn4d8qBk6nH692WY2j0GekA1HnaUSeM9khuxl5D8mbNuqinbCWnpUvma
a1c/TlSfb2+eQ8knwF8JeAg2Xr/FiB8N8kpFZ7y9JYGC9IllCP3r2w+/VLuX
WB7f79KowYdUu5LfgyWb/4DdkJZvVHIlU+N3fHY3Ij9AvRfFeRbs8UmU+NPh
cWKgc6sLByJgvL2jgqM7DDbxGofi06OnbvwZWUt4yq+Z/tcdGs9vO1jS+9ti
y+Pn5wQV6v9NbsKOIwFc+vjWh+y0VjybhvrfFS/XmtR/OPr//9Mx/56KPnEf
uCj8rtFiJ+r3rhUyjgSp2aPy3ltjRY/BA0IQ+w3yHyfc9b/0NAym689kzYPL
7y2X0crJX5Dzy556nUjVjgQ6k0IqPP+CvPlKQZR60PA9OKmakF8dkPTNw506
jm0DrI+1wKZZ1hWNfipmr0Tn5CyrYuq4hx9vxS3sXHUEtUsW14eO3U685wXg
+ks61VclxNWlogMmzYkfJfF/WARz5/Lir60vR/Ap5+nNKrAS6Q3HYFY4JZ6A
j4tVNUZLitNydq5D8fDuovZ4YecY3QvmunVGz8u23jkzXvHQAViC/LGygonz
JL58UtajwYosIUHfmOqn0+ebi8N62BLqWS92g+oa91t5T80vQ9oJy9dmThVi
2+GZztpNKfcS+Me+NUckV5y2F+IgMxntIe42LjAJP9iHFr2GHvU17XDgFr1f
uMDc54L6OXQ+oeLv+Df2XbnfpNqv4grqxeYpTmBmIvTC6623bj8VBG8Jets4
/g6Wj/a5+kjiN/eb/ROCfaUqD/h3Mse7u3Ef6neNqPiLh3sTw+H80me0/dLZ
PwzdBb5GOdDTHfyKVlLEXZC2Xyz9/BQfQplT8yJ295TYH29Vwk2xtCDtBTRp
7HFBOsYuYe3NUmPU7gN7HjhlXciYy5vh7pu9Xk5T2N0UfEWw3HDJtHa3N9PK
Dx1cWlY1I2yUxH0WgetP0TjYVx8S/bL/IOTkKzbvnSFJUG770tjHhoz2lzjb
faR/t6LPpXfl+duZyy8G8h/HRJPywXQgo/MY7sB6sftPLPljpPvZ7GuN92DY
z7XPMsLvXI0YP3iuPo3ra4p9fMGugLxGPr4i/4+8d7sxDooqP5VR//j2uxdK
tsfNOV+oCc3MDI0S/b9zUkYyur/ErosWu5ckGKkhGjf/CJv0P4Sbe6hF4/1y
y22adR+Q/fQco33Zlobso4vp49VSwaTTc+x1pXsniylkuYctE8vvtDZHjN43
HKTbTx+8v+lxYNLLLxZ/utP8+54Tzu1MGyYnohcvupb83a0/AaN9+w5824We
T7fGC7IqFEnLsQ8+pF+/A+g7fWzJGOniNvHu1YqfG0t6H12a8f+hc06u2j3R
/MXqv+cBZGI0UffAjAg4In1p5/vd18B3Nhb9MGkb1WwI+iPJ54XC+YR8unam
XarZZeVpJ3V/dHBatrFsl6OHW2zceHhaMP3bgelCqfGSNM4GuViqwPoB3x3Q
5HZ4qcsdY36UUuI1boq5/gxTa8Z07Wu2/uQFsw2M+z+y6VnxJ51dSDrvcW3o
lEnL/hgfqGBgp+RvY3uUIeMbXKVi8Ds2Et7zvR4ylCHSna69Jb5zvvq/C24x
+QRwP7de/n6HICLdT4Xm3nLeiKSBPtPJD9X3vSu0bpw7vZkWH/UPvT99lm++
XEePW2WxMdqPkF9gon5+9rZIynqAT9hxuY95iuDzrNvnuI/9UPwa7F5+zOsW
00MCvka9tR8ZmUitxyBtKHfHe0xvlO7z2wb3if+4nbadZyf2++2tRukH7BlT
eZVkp4Pty/4YvQCsUm496oQsOu+sCz8063kflG9Uco+H7v20LikVMJ9XAMya
7VQflEWU98tHPxm0OWTNuJ2t3Z6tmHZsM2yjGvPgjcM82vKtztveuNmBuv28
AhXtKredTabrSEjOS1/VkZA/eY7QYzHfnsD//wBkJSk3zX9qVL9mvTfKXyse
94Nz+LzIL4h7gHcXMksZEdoGE0egpddtBzeOGqIiuX32vcn0/ifWCqadMhmc
w+BhUueOV2/h+t8ynRi/mwmMfyZV/5w5O/+5d2KlgOwaDUb/s/xrauLvwWdY
P4b4uSVBbwc3y/+I1bo9afxxwn+Hch3zfYBdCb3tTqo2KS4vAb89H8nPXcG5
ULIhqf8kL1VXRBfB6JR/910tCv3k9rIgxiVlCi/0Ns2eNl2kRwKeTcx/QY6p
xivwe0ruxywJvhSm7fJk8B/eoAffH4m9w877UccojjenZ/6f27fF9nPbrPH/
15j1j75fzrI6e4IR/SIvMdrvYXVylKhH/OTJ9Pu+95wOjnusK/JH438V5EJV
sM2ce3nZSL51dIJRH1n0nDdS7sKp3Z2tYQCp2j09dcDU8IpSQj1h6+rDywJb
xj9z8EGxfS2WwQtqusUPP+oy8xfx3OTbzgyvE/xwWON8mtWlu43vePT0Qfdz
hvQqOQZHo/guD4nKnv5AdF7NfvFTRF/B1PalkI1z31dpPuZI+880zIy370ff
VwR0xdCNvX1YbJPHT0V/Or78CX0abniHrH9BminRTwxPj0Mj1b4v308dNw4j
n6J0xZildc8dxd6D5J7QaHo8vpoNqUobPIhyQyUvZPBmyh3oee9jB5UHiJ+n
le8X2Vmu5fQNlPzByw12XHXJ9O+W51hEGM3fV0BGL8GhYvT+Rer9/S4f/KIo
9RYvr6wGP8I3ZZCOUpTRFK8NTOjAD5xL6q/Cc1tdAWWNghc/6iskpZMkOPdK
7N1JOmWU9KPiFx3/fhQaFOSK+xdwOdOLGOsPkF+q79lTP7WbGV4Azcq9buSV
LxZ3jLu7m9i5EN/f4RVC/27QGIs5mvT3a8D4vl1XyZ3Vk9o/Slp70Fz7QcVf
PB1iAtqGG3cQ0vZLRWcJekPVr2BFAvE/6l+wl1zrOqK9q767ZqAjj3j/DOAH
+M103FQw6uedNpfWe5PV5/3Yip43ytZsCvDsJYRaJXYeev/mPKR8aNLZu1HJ
wTCA+HyqfiWU5zl1zya0C+Bztu30+/nE+0b49iIjYlX8P1Lfeww2tFt65Yg7
0u6vIsHpV22ESDsLZ1eK4sRLGA9LNzUOenakQuCoaAn3up/5ftDr7ZTlQVo/
aUnIqII7BLzp6CVhvJyCGzlQaEmys+mrI0h9wKcX/U5/dtCrgQ68coqaP6+M
kl74/FY+lgO2NtpDVkzXk0h+wuo7vfXvUu8HSOJr6sUWuScmsT86+Pbh/sCx
W8bR0ntvnAU8XE/k18nKETyFakPL+ryUYfQupAjuCTbIy8HYMzp6N/RTPesx
kp6ZA6fsuiZx/4TtGiq9PwmBzzh9BvDCFAPBcHWiXQL1JrrFBnTMQ+030Dcq
vW2wt9+czzW0w7mhWAoVuKRmanDR+x47z+vrZAZJ5X/E7vv6DZZ+ArOxd5A0
0G+8vtPRQ4L8snXuXhazfw3/0dLKH55utHzC6DX2v73Dsmq5SH3R+wzcMAnr
ZQA/lJ9fxc17QiuHwL7mPryweo7JQyjr7pDgq12I/tB09lVavQXpeSPfyUX1
FVLiafvl54jyTkLa9pjSH2ufsqIrxfit9pj8/Q325vuEfvfGdcz0Mt8IA7sR
dHTrV+v0RZLmDxE0T6n4MDcknFLu8Pl81Yx1HTYFwG1ulYxO17SC/Y8N6yXg
mUvsh0yPAdRKu50ZqlgLvZ7Xd1GrfGK8ygaoGtG8d4ekhJy3BnGM9L8wsfF8
QEq/CIGrwZ+9V5xr9EfufbM8Fkh8P5Cztu8/6lfJvn5cuv16S03R/XSOtR+j
OL+CQIdD2DS//22x9TBr1eI/dw954dWjZbG3SiTKF0O547tpk+5jCjbZCMTG
s0yedB+MM8da+n3o5BGf1PYZEO0kWfsaMRL3DTka2US5shHm9fy5nkj/ITH9
6of3ldgv67lOy72ntmie45bxK5r0zgBvVqzID5uVu4e0PmujhsTzEUHHV8zi
WbSk31bMReNp51l/5l3VFsJTcGA/I/vd0pAn80b0/hD3WFqL/GfwdV0lnlNw
Hy9jNC/y6j6Knd+xr+8Up3NLyof5h05++53E9I/t9Krp51jbs59ut79pCt9L
V6tTGLoOjtKdUvziN6r3hdOnabp/9YbVbUsmsY/PhX91M6jdlxQMyw24VT7Y
URRPlFfCKYI6zWrtkdAefS/axdPh4+xJaHxgmZePa5UnoP/bpU+Grdt6OwQG
MH3Iq5lJatawrLfgacbf8Y18p6HnVqAcSO+4azlmJ+Y+xfbRZjXc4XORNMCH
XX7s+GmNGXCrOacVjpoegO3nCZfNNw6Gp891W/NsL7pfaBvWvjwuU/weWoXa
Syj1g8/VGpeNsIf5ZjXj0VwC/lTpiWUmaUcvzITx4yw90uNkq6tHYPD99RWz
hfIuPBjPl9qfE/z3ubtQ0u9pvuqiEb884BOvznf0lbVExieSh9RXBHzG6X8r
qks5DGcNvH7p7GgNGE8vUB7PRzx86BPyCt4lqsfuqXef0A+AK5cIr9/DvMcN
xksnj0AOQRrOLtPe2QNtv3KlYfrAcGfKdrp3Disc4bAZoffJVkHdB3ish1uF
xBuY2pVBmUr68RobI2G1S8OWKiqi94AAHZnqTeY4xTGFf8nf9Kpp7fb8BfF0
uMHZOnfB4Ai4m6HxMcjQl0Bnuv6o6BVUca2r0icDhH8rV9xvy+9FnI+PqvVW
83FbDF9SrK1Zc0kU54Krm47Gv7E67TTY32EkoX3tSYdPlzoZw5/UeWOvDEPl
A+gbndwTyv8t7/e/t61MHt94z77jhByCvubDCSEj5Szhre8veD/FvP9O1R9e
TqnkVnFd5uw3RZEEPQTfozjFgZq2Zth6HPfsNwQ64vkB+I7ny9rYhT0eM5Cj
t54qQvPJIVi6CCbEo++YP9Gs7MbZrwn3XVQxwzHVDhkvoBMod0v/qV87y25w
oWbC6AZ6v1OPlztUQX0fD2tfG9LAnlPxL2HS5wleGQcJ3wE+gL/Y+ajQoojA
NyXhySCZfvPhH96Qu9FLD4QPamHj2T83dibYTXx/T2RnmRlunYvoW9SUkzc6
+AfAIw5H1nXNQu02oD+QrysdUzdlNNKXd1kln4BXRuKuCudzNgT+ksgfL+P3
CwjYDaZ6AOzXuNhj7QU7TJDvoB2Tbz1cuUpEeQf0BXYefB9e7vf8TM0q5DvG
PnItFxPXs+MHPZtvsXoNwd41yLm5F9FfQK/H0NaTPtDfv8fDveY3lNr6N2nd
ym+jLXrvhWcgR7quZIfNymlKu/8avDxBFIeAU+zkJzaOaavE3jfjXvmZ8Z/A
FwtnrNFZHRnK6L+fc86+SfvTbJNJf+b/hqm8TZrevHfG7tU0af+HZeEl0nN2
ja7Y+QpfPlJ8X0DK/wWur6qYXyD7qrnYPhK/SoHZfoz6G9H6QODc90Jz6MPL
uEpff+zPOXOb+V/Eya+TGL8TGVfrH2J6xtERjwPIHj0wRoxey5NbNJ4cgT7P
10jmh+fiNKj02afKcuWWe1+RiRwVfpA+PmJTYdjGokHrMXFmGujiGZsJWYRZ
zI163ygXjxVFfj68M+0fQ/M/l3w4tYZRHFJKOPgRvX8NCeQvGy7RXnG/3SbG
5WQKXZ6t72zwSbr97WEXJd+DbaH9BlatlmgdwD6uKPK74wrUxewKJ3kkI/lk
Gx2W6OfJr913Txq8ODZnvQn53bfeP3yYRbpfzLPUJ93nYXsujm8KXQT2Kxnd
r+XIzhK978nTeirmvyYIftt43yB3F6O4syhfB4n7idfN4rUE/9maYYUtptfv
i57G38lrnp421455n5eOrni+qVT9c/edmcJzxu10v+5rjOs71Jd0ncyXUWFk
h7hz/UTleMvSJN774O3UbNY9f7Z9AFFPpeGjomKLnP9wfmo22rHqYKnsTFlr
C9LzAd70XS13vtHScNkXuS85N1pG/7qZic6FBCdcxO+d0JyX8ZJVWuS96X8a
sh0zXUjlZ4aV5P+Vltrfx79rXZf8j9oh9jhT0nMV7vP75OthinHz3bJJ/Sqa
C7l6MYzmKZ5PH9J3AAR1gWgc16elSwM2YPy3mguPLe74MGVDi9y3+ldhvwVr
O3fRl4oubGsDkd8/D4r8I/HP6SArUp06fuB/GPJ5FlLpCcepjVTvqdNBAWTl
RdrPg1P/qJ/Jfxp++bLCpgvm3b8/DaGx1lZtpItHw/2xMVnqfipVLfSCW0ns
h3U05yppf5zHUr2z0mT4h9/9kFpfdI5IpRfsytEie8hW9GC0/0bb/9HW5Pdt
Do6T+L4A53oIOq8/DUvU+u0VCoO03xjf+MHDI2G1HfeO3dVCIci//bqv8b5J
E5E0HoJ21Ifz82ox8UxBO/h+zO8lOl2yvAXh28H3i2mf3TunDCo4uLq4X9gB
uL7XJL6ysR+E7x8PqfCFnevSTHNXwP5TM4/npTaeC11ULaBsD+Q78Euu3r7i
REkHANuFpii8WiQk9N+gN8UOVWT5EvGnSvcYmrZXuHwhQjcV62T28uFHkHaX
LXHosGcYum5N6fns9YnUw7DTslWLw4dtpBzn/2PvzeNi+v7H8ZElEkLIPpbs
2cnaHUt2KpJkm4oiIipbxagsSSltSmWskVCpSDSXNhWJkqI9lTam7Ev8Xk2v
O3c9c+9M8Xp/vo/fX8/HvWd7nud2tud5Hrpviyg4+K72RgHrjK72zaBDpH4c
Dix+8CtEHchXrNw+61gG5FPbAz2mbBbuEEx3tnnIMhOdV7L8BIW0eI46MGnE
Wt4mIH8SWjpdv7HfjYTPRJPq39k61HzB2iFifd2W/9x/4JcPqdywDPax08ai
e3mciUeqgP0k1ovU92bju75Thp8l5WuZajhlyxbUbhP1jE7+QXQDlaOrj7ae
9Jg1BUYbafPvNvnSKiLGS+DVoWP8yAx6OUT4hfwPHVBwKTkVkhpvbH6zpCvA
/KuHzPimVoneiyyBvpk/9yTfN5DQT05SJ1QfN9qZwiXyovML+PKiYlI/j47p
VwqvOyyWh+gdFvIh+gcFCJ2I7WQZF3Z/zfcA0heRk5Ix99ptwsSbd+UJ9Pel
LQP2I65Dt/vpebNE6Stz7CCkHaJeX5iS9n5LOplu3/xdD6bnoOfX6/safVdh
C4Hyh8j9Q1bF+bjODkA+bhzk1XNTR7KdlRUi7dLx80L5kzOrO1Dad1F+3+01
DyetGi/+3np7tJHbGzK/6PQMkW//zet7PZxhSqsPIDvAvt3/ymYnW4Hh1KV+
+1ycBPXDFNct64byf8aiMBXTBHI5BOreWrBL65/01KPdPt9Nabw3sX0reT8E
k0785utZvQamI+1XLZzxtfUdkZ3nR2Rco62fCKvu9d/vuVFifl5rB3Se/Iad
oTdgA308FbuaG1npUwMExPo6vFU3MfwkOlfgZbW1E7cn7/UpcsZCoZiuILzp
6C6h/zyf4GdQdDhv+vk5mWL8GuzIoek7xPkH9vB7f/kbun+6LrXP8C0KF8X1
YOjFM3JnHi8TA+HVS7OAfEmJVq+wVraXpb+cH+vQd4lcQrJDORPQ+SqxXgxk
F7dD+dk29cn6PSufQddjs3U9/uX/yzHgfUmKfrBH18WSxn8EcjuP7/BpeqBA
Aj4S5fZV1ty7JfeWU9GDN6xTpaR+Uso7FWzAG9Q+5j88uaqc9P/RyuvBpYmy
3//CQP5By3KoR5CjeYkO9f0jSXoBshsS7I1UfEj5kDMoPhbc3v2ErcHVbYQk
vED8YUo3q7UJWS/PBgro6JJVrnKhjUohbf+Y0oFp/mWw32z+QcrzXc7rkgyx
3fnet9fV1V/J+56y8uNmZN3wNuc5wHII3UHyj9AflE7VboOeSNK3E+5kf6im
8KPAlfI8nP/4WwlQvhE41OzIytNjhVT184PryH57TPWODm7Xbd1bJemv+qOQ
7OLIQon34xDILe0t1X4YZ/amxvjyNwIoz834w675MK5vyXC36Lssqc6/eO67
cPdM+OUtROeunBATyvMoElwe70Sbr/TTBb7iBKE0eP0pyBVAsu8vH5mnxYtR
pDyPY3f2Y+S3xl/8Hv/uQYw5bnzn9R1B6VfGOnQVZwc4nx5faRa5NvY5KRMd
V+8hv6vWVDgqFjpx9993mLHznicH+PcvQ1LJD1e/rEnvQUuE7KJEp5fWonNJ
dphgR1PqY13XkegHwc9d2/Rz2OL5GRWpLf+O/s1RAvtdCFbnLDEc+fficB5W
uDJjOSzRH4FbmH+P6j97qjkj/04SP02ONun8mTe4VPQeFGuRsciO89bESNxf
55rDjMYlcb+erRb5nbETjfD+iBFLLsuCL9vFGDfecFZfZH4emjfh/bKe+eg8
484dfb9999HxaI5K6xJ+uC6uvaJoUX/hMevQOGyub/c+yExF4wl91d6fus6m
SeeyrLs16LtvdlWXB2HvS305WHTwrs0BAag8kt/UafLao76OgvTJepouy0wF
uzamv5/8FfdeHvuKHeqXL3Acdnt3Kdnfgdg+8ZtFsJcIXYl4yEqP65PaP+3p
tUlcvuvpyZGPhpPbQ75vDHr+xv6H9OOsk9/Dec6ncOf4fPMqnL87i/dNNA/k
et7iU9KBRs7Y0Q+iRHo15A79/ovP5Uqbbe9QutG1N9BKP+AkNb15xc7puH5k
vmq6XQfxF/kPkpuJmmUtE6aD90OI/JQVLxC90rao2Tx7Rq6fKGe6dyMMfiyu
FuubJDn+V/5Zlvw8qPKw18Kpde7ifG3qLB7xKmaKvw19Y+Mi9cjj4YYf52Oc
XvjQ8puJPoroqPBi+0kJdGiQixlfRPLOO2i6k4SP3OPWD9+ladC2j8AW5RFT
A+/T6905h8yQX4EvSHSh46Nu3vK3Rb3JdEPoL0k/qPaxiPxmal87Llny62MF
zk7CNUbgfUSQfjCVeyIdNKJZ9v1VqenARC+kKAeb5ssWHx3b3sPMOe+Vx69o
aJeVO0Dkx8axfRABxcdc8Z0zRoux/mLW//y2FWVU/WH5stD5z+QFezgz+wih
D4GpdWldpadXQ/8NdCugifLZDuVXrRra4Tt+Ib/DZnG3X4DG6cMN6VxIPg+6
M2nKnGWfZ4nxUtqrfHDbAPT+/HWvWJe3gWYC+O5S28+L9gkw9VPiASqPfM92
SJgRh/GbweDD6jP+qvh/q08jZuvOIMe7yru1Xv+eJpg+xHLq93+dfX76FRA/
0P+skecvHp+Ge/eVYyifCdRPinr4XwvRddXgsKB256WIT0aFp5R+NpwfKZW0
/cZA7tadV7HfPJ0frozaa8CLyGeK9li3vNC4yu++9LD7mC29/3F114elSkHM
7YIiN2LcVA8nAYieiPxN/jZ2S7u7vqR6M3dOZv1aDMZzSIhtwRCKdyK8N4Rs
sh6C/h+0JW/2ZD+yn/xlT7u7e7x4lPgB6MhZOa9K/L/1ymSLuHhUvol8oINI
fkTes3WeLB3fH/xONUJPrJxYjqog4Yl8Y/SbqO9iuYg9ehNSsgwdOOKSN5AO
tZ6h5kW9vEn1U+DJhyvyJNEPCD0UyOvHMUuunUtycKCkC1YfkXa47VvsL+5f
REUnEVwF3W4/Tf0Mtp/shAPkcWvkPPdAN8z5L6gfFPzmqg0X3XvgLeCViccD
CnsmgqZ9lr2LiBXJD/xqCfk+DqjdW/321ZUOAtthpFyHcON2wfh3eNknVtOf
Y5Lk6V/5wPLZ71m6THaUAGHbjmViOlbnz33ZL/UEKX/8ZniUE8Yf40JXd0Mr
Zy+SfCNwXyuX49Y90fkxkU8tIq3GagZh5JTQv0enndZ+7CjTPKDZYHO8l1jL
Hvg2cs5/2w8irO5/Q5r83H4Kf86PtkP9rrNFgHsbAMi7PlT2e6xSQNY1tkz9
5tvNk3iuA59f/Vfwbyrk6OTg32cZvgr8bgIW3rwDy9TuX/KjZn9Y3ix+ztJC
+OjbGmjIu7rPZqNQu9frmlaX1ZFS7cs2G3/Nukl/T6Mmb+GF9T0oz1f5+64w
ek9HTI9ueSW0fNf1eNvO8jR1ekcT0f43X7Gg+c+X7J1X3ncfIJSqPy8Xkc+1
V+rNDi+fQlkP5815/HwjqK/ovjVnWjTOT4Gr0UJ0zsXqXH+Wqh6evpH09yok
QO7+B36U7WgY4eaH8MIREvWV9dmpWd5NYnG6SBwfuOnFj6Ezuzyet+1vK0Ag
kk78JkIk/Wf6OtufI7Wh5EG+A540+tvDvgbl4vQgxz2DOgw8S6ofi2fdikJS
e3bQuWB4VGM8sZyrp0R0HKHeeF/5mzX4nmCbnnl9VP5pD4MPJb7IfzbnbHzg
9EABKB3RM1D6uOltfOWjUX/7l89Wy8VK2PcFQSK+CExJhxdtfLGGtr7Rgw+0
zr1aIJFvW2CJ5zW83H3Z2PLcVp41tHKAQOMleZGCvRLfkRN971tq9pylgY7j
TOvHwhFtBTKVo9Pf8gFo3I1l0Iuu8zHz6E7WVrMnaODX80rl+ZR4EN9nO8MG
n0MkmQ3dEKnzFqKQO96+a89x39M/5orz0ekV3X+iPGP0jY4v7MIX78X5EXmf
Pqlq3dUh0ss9yO5A7zU/lTS+T8/PmHYRR0+V8Dckeqm+YBVO37SVlg4S+sXX
yKR/zw1UnojP4t0LFvXWDCDRhYLP7KFr6eeH8tx9p52uFuHaJ8gZx8zlPQkf
ol0B8ZsIw4foH7p2FuUvNn1B97skOlQrzPW68W+cSqy9ZCoHA4YdHjBLBzxv
QPBmOi41yMkSVYl+CZytLcol1sdkXg0aP+nyyxVGTxrZaF/YyeN9KPG/uqKE
Cj922Sd0Hj5tnPeavpj7NCuuaRouvobuFw583meu02A0LuCBz4/tPXI9xd+C
b9PeGD47IVi1q23ZCy+w/1+o9pEc/3fg++9BC5cuSApG47a2L9LdFKq3WIBA
1bf+j07XbBGMOZU2YB3FvVRX/Z9rwnaeEpc/af3tVNhYfyA9kXp/u/Q48b3D
NoFm1/0+PU54i9uTwAf4ZxHZf4RY7tFIWDVdKYDUHyJdEbwRPMYUVPe4ut5T
QKR7g325ORSd58Z+WdzpnAomnvLAE9MMnNH+b7x18eC7+ej+E9I/5Btpj46O
RHluMfW+YkQvsJ4R25VUHxYeM63e7M4R3Z/ippWBz/11lJ4OfbFbSEV3zr5M
T2x7rMxUcjyv/LOsae/6HhZQ9J+v/jFHzBcJcsA++pT+/CDrpQUriHWWxF8i
3hfXhITL1aJxPxG5+Va468aNKSL54ceMILdHlI+5mgZm7wYxX8cj7YP4Q6E/
3BPwKyA/kfzEfhL1AIE7ptWe0/7kLpb3GUcmT6mOvQSUk3b58LUNiX4CIl5j
tMe1f7FCNH/mby58IMaPyD8QP806PvyuNv4kFR1YD0suQnPPL2VXL8XHt8Xa
9aNuaq/1OtPbI2nHB9XwswWqbCEEoku8Xsztp78PiPFWGhTZ+7qDqwChEzH/
jZZdJxprWwP5DYIYu8Ktt0Tnkwgf/FzCK36cdCPVVxgzV9OogxBC+EvXTm/X
tFsDwtcJHr3/2Vfw3AWLJ6dsnshfgpW5LIMk90Q5o+tf+419kuMS0HEdY0f5
K/1fkPiGyAeoXaZ6lWWfXpv40oVUHsl/OdT4nv/2gyK7FfI8Rfw/wDjBp5cD
OW4wkk60tw3jU51jNXBcwsLStz7Q90uDojf9dMDpi98UdF9H9eRCVu3PHYKP
+ZvLUmyF0IW3QY4XRlLOi1h2M0TjE7flTvJ8FKkHKO+EdOQbgWq8EY8D9MFy
RCy/XD8owKKLiG6c9UM30ea/Uq9qsOuzn8D16XdHJRMfXDtYPQ3oBc1ZMZCs
78T6gjSculmM9iL1B9Q/5P+H6JZt97XzIP2ng3TtI/2Ttp4GeUoWRpHqo7Bf
PMO55HyY+njrl4D3yyT0lz28DLyvDaIrKL/bvN4jIiso48ZxgzqL9od5Ogm4
uCZwthnz+x0IzD3aqmdqfx6QjyD+I/Trzj9UKujmwVjepYBs5aFFECLnoHoO
jXZ98jVtLBBv4n+MvonpNqO2hFJusPlL3GxmTa2xFxzY0uN4y7OulP1pkLOx
joMebRO4kfBlqlcgvId2tbjhVeMPpMO5mIJBt9Y1jn8dE5IY051BPlbbHZTr
dvhQhywo95NKwDJlISSJLth2Xiwe/Yn1o0RMJ2K+432L3v/ePqHJduUfyOcP
jBXzb3ztvKKVRrj5KdwiHF0fIfaMWO8nhdXff7RG7aiTxz1TIeb+A53eEP8j
csaE7m0KRfG9OekW5PNAYnk6+QDBtMyAvePd9Rvys46Z4vw9eXuTK0jtTbHL
Krg+jvzOC1ZvbWKfkcrRjTP1CWHztn/VBtb7fv72tko+tgLdc9H1i23I49rd
XKvnvtvR/5r95Mb1wcwvLYPT3N9MCxAgkPif4puzRadaUjrxG9b7XkhKJ0Js
eoO9MOCvTbMeTDmO83q2TQDWpzEkTPiA0ygXt29WUtbfduMT8XfdtMAB/ZLd
SP3H0InVlv8A2B7x/+xVJZDJ2VnAfoKg/YxTR4tLzUn9tT80FnpRbMq4PgSf
V9MfJw7913/i4hvwPXO6/tDxjYI/UvWbWL9HQq+l61uA9+2iPsgN+RXUmsQv
IhxtWpfvZCfyx+FdWHpPqn40wDD7dpr9MPtqZ+0t45S5InrCGT7JtPQqGn4k
YmC87P79dNB9X+jjCHkHKjqw9zxIopXX5HWH54YXoPM5or4h+bD2AstfJD8i
71j7MO8L83uBL93XC0y1HEjtSiuHFOn8K+fOQ3Ou886vG+kLrEdaubDL7fIk
ohs+PjBxHn027524XYr6eedfpkALLo3qPExxD2M8nm710ej+QJ1S7hvaR/6f
mDW534zJQiBd1vzkX3jRTQiFn7o47XG+JbC9ivlVBZNrsoD2jGivkf/rt9fH
Gaq8waZz37lSxpmGW1mh8c6J45I09KeRAxH80Nlyjok8eXwkylt64oH1+xdl
QUbPBhj615D3V+nKS8CDl/G8gpQf02+O+fsIUrl8H6vexWwHKjx461RLIJ3O
WyutB9sLMPaOEs9pP7eVdf+HjwhE/g+6PXix6RlD0n8iX/Wtp0Z4Yeo/d3Rv
t/hAdJ7ycOXd9FcX0XRie0j61D5VoZ8p1t+Y9uGhPxOhk/VmvHEWe4H9QfBZ
+au9Sn7tGQGofxjIWnsctw7lTb6eCuW9+NWJczNQcKl9F/9nbdF3wbH1GH+r
gfp9Oa1j3glddw7op7siSkEozofgUWJ7s3XxEQsg3iAIoh/xPwInRQ/bEdl5
Pek/qP/I/ziotea3neD7S8TyFPVxLUKrSeUuP/9ZeklFer98olzRwc4DjRw8
Yr3E9H70tObmWSOcPMHyoS+gktFhicKX6LmZtO2M1daL7tZ4Psd5H38JQtpj
Si8ET4r6uW3v4fxXOPGPyO8slfaarZjcUkjLT1B618CKl4al5PtdoPzph2ce
wdKVaf5N6+QedJlL3hcF3f9Tcoc/1EKicx1OqE0BkH5EftHxj6iHFPizBy95
RWqvrXeVvcY5d1K9mu/u5ripi/Bn9TKV+L4y91078rmpd+Xarkk2Ir8Pdo8M
sp/i2sypwhXJW8Tt3ot6ZhhwjuwPjsDTZ09bxE0PFLTtMmrjr9Xgc1E6u0Lk
X9bl4hqvfeR7+Eg5EH+JdGQgN9yMRbhzQU6oSwmwPrEeOJvEeZ3E3XPgdrJF
198Tv+321FmcSFUPV9mdbKca+Dlg/gvadon/Tdyemp9tvIfFD8X4ayJymaE4
0UDeCpV3xP7M6O557TTm/h5RviXZ24ZxiE7uF6ZD6jXJfgKivWugb/k4D6hk
Udc9608dFRRZDAoOri+AJm29zXbUQuMFHVzl8NHjaGP82sdaZZBPfXnP+lqy
v2TABc2s8yqngXgovpo62ibimDg9NHH8q/u+ZwU9K1eZaRofEpw60N4v5bsP
sPz6gt3Ghj7o/kkHsz2Z18Io5z0iGJPjurrdiADBzU0Prw5xcxcQ+xUUN8mc
hXlHUzgkVEFDwn2C4w/6Fg3TQ+O1PasOvVK83FMA6h9CV+Q/ggcxHdSef1HS
R1XMu67E+on9IX4T20P2n+z0djzbFEu2D0h/hqf2bvOuDyUdeNNSCqGSgeHd
fO48AOKFwOArJgevfnSV1F/OAl/R/gtHEIP6SyNySJQTuvaIsDD40roPL9Vx
7fmfzYZcT305UKoeIEAgAzvJvW5O3m9QfrM7bXPX00D+IvJ3aoTp8eOY8z2E
zh4qn/3LnXD+t/y5M9H7S3TywQTv1g8qoU45j3eU+y0l1fMpreL9GVXyfiTS
HyL/nPV4hXvXZYjlatT3ZW5nfxWR9KCh3Vk9y8X5ETu10PWk6wsTUT7YQZ/s
dxxyZKVyyk1fwfeLhUPXhGWT8EG+v6zZq2a774AAoS+R3sR6n499pjBTyUmA
qYf/5Q46D/12MqiNQTp6nw5LL+z6JmP/8lu+LgVAvEByj5W/nrboe+bC/bWL
dvYUYumCy2+ZkhF8lBsoxnv+TN3k9zPzxXRiamfpICg/wr+SL8+Ssuo2k9I5
3toXFV1x4yLfKwCNG1Ifo7TmCw+VL0RuYPnDHyyO+wpA7YLkHpEzuv4R6T8x
b08fm49onGZieUQ+mOobYjdWDBy8PP2EL6l/DXzme6Jxa4j2qwFe984T16Nf
4rs6YC9qN7zWhmyzqvQWyzPRrtsOjn/4bWG5xPqxEKkfaU/e9WcN7xo5bvWM
9Zcc3p3iCRCI/Pe13/m6p7O7oMRwtc5yw50kiOQ7OfXL0y4d0G/9OQt3H4+Y
Lf4W+Lwc2DUdMz7+Wx4pN8/mmlqmAzjeBLG9YevfjH9tg+pjVIg326qVSB75
LsPyxPggEOkX8l3Z1nJ0HAM//OOODu21FHbT9hdJz05XWH1ihxA6N9Aq6dDw
IuiT6xeFzvaeAu178OJZumS6lwXDrQ6qTCH9Pyh4FuT3/QAV/Tifvp0T88u3
1cbvJx+S+0HED+kvgieGXrj8xHL/QNZrE9F7c+zTD+9AGPngX9d/B01JYSnu
ilxCal9vpHWrN/Lg+RQIEuUTgw9fPT6VJAcN442gt2j+wIk99wziqgbX563Z
RdUPHIyKt4dv7EXfv3YZci45/Sxz//ST3auSj/9Dz84zn8gnTbAktYd8g+QG
dlH2YZ9aRdUe/+KBTGC7rVe0VJ2z4oygw7U1lz4Z2QL1GWln0OYZG8vUyPF6
QP8RfI88cog2iiKvK0D9/Ocb/mqMrptqF1dZ7TERQqoWTgvNbwT+Y8eqn0/8
jZ5T1QdNS53TFZU/De0061ftyfMsIv2IdoMKL+y4TeQDsZzDzMe2cX3QewEX
3EsudjxnT1mvJLwQvoDohoGcKYcjoU2OmRzuh9UkuiDQvIdvu7ybm4D9RaD1
hZJY88rWJPpQtMt7HILza2bdup9MlZ+dWobOj3rM8353WpGsx4q/XgeFPTwn
QPhLRx+QvdRPd8tWqhtEq3dEPu5ZyVpsNFJkl7gJrqJ4epwAzTcQQn/EvkUH
fTk99qYRkD4S7AT78YIyUv7xga2i36Q9ZlRPgxxi/9/sg66bbm3tNOT1yiIo
8thvq60DC0l0I45bDfjsS8kUp3eYNuSWfIO/LI2di4jco+9pWgqdkFPal/1v
HMbd6uB3kDVX3pl8Kwmdj27pGlPpmVYIzfP8rWc1cLLo/wcu/v3za1fJ775h
81O188RQb2yy98dY4vfJAUn1+UpkeSPmH6/pzYldJ9JTXr5KIVQ1hpd5ZLTo
/hrrVUrjuVEOS6b3nnHwd9nZpMN2JwTE9gX5tpDftokCEH4U/9kb/SXvf2Pt
luZDG+fC8Tg6cK0c0Hfr39Z2DPz4TV1w7lGdToc16wWdJhk4n+0g0m84Qg4c
B+OCfVzUd08dAYZeIHxYK37Q79cz6DeoPO/nqnOk//y8jv2NrIXAehjUi4Mz
gmbzlSj2M4j8kxXS4UMnN7JCCv5xrt8rJ7ULwq/A70Bsiip5X3rAgzFtV/4u
kKRv4vwqianA/iD5v25ue3B85Raq/rLOrD8v/v6mXZNicXgGKV9T+Y/oSRPk
lBL2X6TL52oPERD1lkF97NHuEv1g+LpmPtCBMWFd55dpk/Am0mm4Uz+NV1Wp
QDtFhCD7CuJf51rV0IQy8vr/mPehkqUKQgjEXxAe8i4hS4b2E4rT73hsS/aT
p8QH5kKo/wkiZ3T926VxM3RMwXqgfcOUZw2yewRt6Xz78KIa5u85I3hcPrwq
Nfe0aP4BFz8UxVPmaIQlANtD5JDODhDHTWK51UMWHrKVW0k77jT0T316Mgnv
kIEPl1sYGJPwBP1H5HvirTCjrBiw/4XJsJRJw/ug+wYS8rMGaRaQ0pHv3FfK
rJ3LyOdpxPx6KR2PGA0A36eU37vi4dM46d8vCfJT3yHXHZVHpJ290THyakpH
gf3zmXzw7Zpjc8XfVvO28Vd2EmLzwfWF5LiJVHK/6ww53gUI0vGFCJdZbjHQ
7cMsbhlir1KfpsnSPqeHvYBxPxramcC7QJJDbP1M/AeXvD7t9t2PPo4fhg5s
3uZymeVFWv4g3453B6uO95QqPhMlBOkt0g6mfV7GK3ReSJRXBO7f/FknKv45
VKlYu3jyeDQuAaIHU4/ytTWvVkNpmtAYg46FQP4j+Qd6pPdIbwJduy4trn/B
PyIqb7UJ9c8h8gv7XdeFvI8AwtPqSUtBYsVxqfHbX9VR7QIbtRPQzeT4DTU5
0PDCEI3NyTi+cj3cpY8jE3O/nHdTq7MYr4s7rX6UjALv+yP0xvST01NIXgeA
7CsRrnsf1at3KXncJ+ohiL9Ls85kl24DyzcVPyTpN0V+tn4heXyfqD6spSCh
CIryM9zpc5+5HEhrPzduTMs9cQrnx8W63/g+COfLpTek9jYeX+aDlVeQHUby
jzOcfzpNzkFAxHfYqddrUicYiL8rYorHpT2kfC+J5T3gPcSx1Xr9bYoQ2J5y
5v3WxkNQe9n2Q9QvQ8x6KWiQ3xZ52EuAQCZ0+t7nAZTQUvlThK4Q+59zJo08
rhHrdxqdZrSCQ/bLILa/ObT+w7rFOL3l8j+j87ghNk+hSd08xPUuqPjcXW2Z
s0BXyz+239RVgmXbbDfMWG7HWA6I7dN9I3T9sH1ST9v1LmI84oPPuwR39BYQ
6U6EXVQ1DIcfdyHVR5V/aKobhPTvn2/4nnI+pN7j17COvug+ZMjhaK/X/8jf
qCPRk76qkO/rIPitORCv6+0B1sPd2QuutZq7XVy+3PNm0IZYsv9PgcGoDV0D
7En4bwhLibf3wt/Pw+r9/lP2pglbhMB0DJ355ekpIjlXMRHZV3ZL7Qro5M1R
n+O78KjklaO9NAa60Or2Y8+7toJhdXXair9E54Rs+EkYsL8guKryXVrPBQfF
7TzakGSqnojKE1H+iPirZK0YXP1dnUQ3JvyWRl4x/cSl7xwzc5oTxbssSDki
/xB9o5N7Yn5E3h99WRtxZEWj3KxdFEdqF8nHVO8Q+hLpjeX3KiM7KCh4dO6y
L+pA+0X1HyBvuHTMf46nA7rOItKNyi4fisyC7r1+NG5ANyHk8sZt/Z5Msh8T
cm8Lacd0cBLnaIqvAESnmp6XptTvfwrkBwIR+/q23d0rEP8dLf8WTFPcbnaf
vL9PtGeS9H/kxhfi/JUe1lvXFJ8A8gMk92WPS8I/BhsLuK23jLoYDb7vRKR/
fLzNlhWvUDtIbJd91XL26rOGtPYYgRf9Wxhe+GzBWA8QqKPQovsyTJwPRC9B
5RB5ruDuVYzko/4BxHGBDn7pmTa8eOlssR2YUGrUdWtPHVL56FDf6ZVqawXj
Sp/sXqiB7i9cTrxcbLnJV4DABnuZ6BwFYb5F+WLkNNlh7VC7TUwHfb+2ufDt
sb+fgJhOhHTp34YYhyw8h84HVHbvGlq3Lhc6EVkzd9MjdUG5d+K4rrOSoKMJ
6g/lZ50R9C74nbGw4yYgfgjcom0w9vrlABJ+xG8kH/I9RmHw7g1GBeJ8CB6H
79u42Df6a7JZHVKhbmO69VpC4b+5rHRh3/QOMeLvqRsXfQrLQetH+KRssWXo
4TJ8PIzB2pnifiP/Ay7AP37vLRTj82lvn3J9gRepPymCb53vwOBxiY4OCNRe
GKu+kgOOBwWC7eEkl5zqReL6cpLrHzzajY5T5wuWj1JdBZ63IfiD8HJS+zow
43cetCok12FEKErP8nYGi5dMpowDSoT8q+PioYEqryp+GvoLEHyI9P7Yx23b
/UF8HH0axg06OaaDVvWf3b+ZHRDzb4Z1F93rJw+K6+tmf3jp55UPxXIOau+Q
YVXlbjXyuhfJXyv8qj0tG7X7dacVwlNNisRyRWEXiPhylLVzIUTeifJbNCTG
YZzBInH+5Yd1zmaFk/1/ifV3PTJiUtl2PQGi30R9J5a/eZif3D3okBhP4VQv
B8MD6P2KqYP6rW2zB71Pz1S+a92ce0dc3iUg8oVItwY9f+77HLoxYJ3LeyV0
PyVGZ9abJzU8LF04R3+mi9MnKh6PabGwAhqeUznkcd0RASKfRDpN+pYzbE0t
lxbfBjzeLiHfMyDyhQifKraqe0bxbuF7vs/pB15FEMaeSeQbIjeI3iDp01QN
b9n0kngvHlcfom+Fac+6L2vpLRC6Lc1aXonGw0Xoj+jHot7uVxU6dyfRp294
wJjbT16L5QPU7kxf1Vu1e44KEPuO2A1i/+R3ntttOwQ3n+ZrqSQC6YF8TzVb
qr5tG3ncROQZNB5T4MuzUCbfozRIM/m6+bmHgGjv/oHwxKIUqe1Pg5yWertI
tI9zCsNlqbepkL2spVRxsplC7o3OlPFpWD+mODLCK6GdxP02luK3WxLpOem0
xPcn6SCsfwG1K2oflV7EYe6hNAd8aRPTrPXRQJ5tfJPo8V9Bfu1Kifv98Pir
onGJ917g3aT2HiQUQxP79F5wffZ/+l43Y/jaqlnjrDONM8E7v6Hp/kFM9G/5
BHA88uaov7czLq483EqX2Tvpl/o0/f1LpnBcUVG98YzmtTsMITd/EaNzVwSy
gsxw/myc7jco3ythvzpKPu//m/BtP4njBiN4+bJLUO8eSwQl7vP2+I8QQkFF
dzrPXo+m9/Yr3bPN5ITgxpFZY2qqRfF7edylV0h6pi3o5tnxNTrvRepFvjek
RFZs1tgmcB6pENMyNF2cjsD987ynPHhCvX9y+QWfVB+dvhPxybTX8rzvfQq6
6n772ZSLBZDRKF1NJ3nUPj7NnWLGmkmWz6DVH7vruVsLiO3r5HULW5FVQKIj
8Xt6aMzbiP7oflUHTe/nz0q3kepjyifkW21GF56N9T0IoRvSPyo5HTe/FFgP
AnOtXb065kfQ4lH+eeJoQUYmbX1YmLuzkFE+Jv3G6nW1w1XG9dBBorzQwYdL
ephohNDfsybi/0hlz1vFigJI18RM/9ZKyn0M1rxlF5vcH60vB6ydxuLozjr4
ugiIF/E/MX3v1CcDjimQ9aP39YBlW6FYIB6IvDOgF6ds9R2gHhG/MfzieI4q
p+UfRX95vx7dpm1Pwn+W3kDy+TNTOUfoQUEXVv4M3HyBF3GtUty/FsdOXOqp
C/bHaapdaWhfKzidMr/DDdR/HbE7CH+JdphYr0Oy3paDA8H2UsJ/tkkCTLK3
CIweBn9SbZ1AW6/irc2h/cbFM6EP78JsenvZdy4/+9gjsN89XflDFn1qpngU
Qv12CyM6DxaS8iP83hU3o253GOrXu/rV6J93E0XjJOtObhm2fth6oWidymsX
jNrxlOtbzyweh97zeZnxQDf1Jo6ObM1wdN3suGcwxJF7y8TOcOw/4fYb+Jxn
zbIugxOC9zZHPX8Myhszj1/GALKP7aCMfyWGPwrB739MtFPgdh1DtsuS2qtx
l7gO5VybA47Pj4UzN4Lr8d9p4mFrIBVefxry20ZL9X4ez/uX6PwCPqUv/TmG
NHiVDCPH99kTFfqwOqIAMtvmMuVw9J99x25v27//buK2T8e356pTxmkmyWNc
rEj+4Z8Z9xjXb7j2YlJsBKP6mx0OHiraj+Y97UsZX6bZ7EbvcxVNqud2GC7O
F6y68qZEfdCyksq+89yPkPP32WQz+cdDSr7w5OWo300cmAreD/u4cVDveZnU
9ZkNLKXF86h/Z9/0a03Sb9h/7h99X5MbnNjo1zbTmXxfShL8GEY5jsNW/9K5
Yb7Wrs+Cw1/jKNfdrJwtfuJ0EETyY7+x9dqnrx28oK+Q1A6ovnXn2656PE1I
wlsCnpQQlL9mlNfcrr7kewMg/CyTBw1ZqHFaYDn22gYH1w3i9BMWm/r2v59G
VZ7P8skh9Q/JV/5737bkSnPSfxn6A9fsvA0Fq7koLI9jHreOoh72aQtyfC9s
egfl57R0Ipa7NeFE3HGVRr1cv6AaRx/OTebv/0pLp84XBgYvHO+DpS/ba9xT
sbw3VzuebX5Grdej9xvH1MvbPhImyRWSb0ZW13CXFtTnRNXV0u3jN/Sz1duO
3bSmuQHlTNr/DPLx3S6idnREjPut4LuFkNq1jK8+/e0Fm8fWaXAZvPtKrFc7
oe/jh8PQOLQgvXpw39BjtDw4HpiEfvE23XxHlY9/73MJsL0GuOEOs3kyFeS9
CdYOLHnOKL8kO714aNfWEzH76lR2oswgscn8JkLE7iD8lVAv16wbOZ4FA3y4
LeJE/nKsYbZkf1EQDPk8IgpO3Nlsek7Bf1ZClxcS5YKmvEz/Qfj3zy2x9HmN
e/+HK1cGXi+cqhe+GT0OvU/wwSB1FfvrIcHE0JDHnQVeYoikL5hvZDJesFKA
QOVvwbFqi9aIv5F8mHLsJSFvoLTPhrMf2bmT6mn4jmIVk+pdmvWkjckdsB8u
sT0JkP/A9Y0Yn+s6rdZGufmS+pdzYYzbAC1/Svyw/SmuKiivrzpK6m+XDTmH
1jxDx93OM01f9LDbRqIrUg7Bw/VaG7gdmy9Op7JHbQ/lQkn6tddZ/EZ/5gY6
OOnE2PtUGZPw2+IyTsM85YBA2Vn1vAcH9QOMvWp2yXLTCvH38X5nDGptnEj9
IPbnVul8/ouRQmh2rx/3nPvwSfQllgfVV/9tum16ILqP2X3x/o+q8xrt+BEJ
cRmI8kms/+T3SVq7UsBxuhC6EMsZhk8f8NVeAFlt/Z32Xf6sIC/qyNmo5SK/
OTjZrQS6dNYz9Vx7if6/LOtSdJ/mRKGOce4AWwGCD8JfOjyQb6KeYdvpBN+F
PgamPQrZGyiYcPOF2mU58v7PqCJ564BZQiDeoS1tp5l/2yuov2VbOePhQVI6
72mHve3tyXYbwa9FeIs3uYfJ58NIP5F8RD0AQUl86zIyDBrSNyYqebWtoLhD
tZltZuM74Y6GJUB5w9AP/uQbKqb36skp8GP3dHH9fhpPB6jAXoLpn8xP9xy8
gMSnww/lgs0nuZL4RmyPqK+Y/vDLNdF1ll17pYlJiuB4bA35V+u9gj6tqdbu
0koIpMvUCzZDMucFiuULwQuhE0l/V6dM6Mt+TaWP7HN15SR7/Nlm5O5q/7fQ
7HE+nlZryXHX3m+oHqrYTQj9/tVr24Q55HOV67M3tXw0WmSP2BOsyfpMxAOh
u7qXdvAzRw8qO8SPvVcNtIuInHmzx4WceQeOn06kP9aOUuGFyAeib6BxZ6TF
uf5KN63EdgP533dn0aBApQQII1ewuQATf5jGDhDlkSjfIHnsO3zW1hqTnYI3
tyZXKKwC+y+GbO/ZJSTuDYSxd7j0lh3rnpxYhM4fP9w7Yp0TjPLbZfbPjnr9
lwqWjXCP6qPE/N6BtPnF+ngwKjwwR7TPx8uHG/dvqNZtY17aHXWf4Cmpft6E
5zVQ6VCVtUGhNuJ8X9pfeN5LUwgtnBw2L3mgxPg28ItFMFSp1XZ0b+0lgo0q
T6/4Y+I0E/t3oih7lvZVNM7UjysDR3Q1zBPnI+KBhUz8lTqcfTVmXagZqby0
dO5bevnjLXXyO+gUkFOlTLm+4c18mU7VPr+fAjpOnUm+czf4rWz32x35V8Tf
2U7b61u8oX+Xkwgx9Gbp65HvnUpBB0rY6QxnU+tOQqr2cPkQ/ZHAL7jjIcn7
IVTyMezy3KS9qkJgOURet87dd/rZCPL9LPfkq/IzpuPkiXUr+RFJznoM1nr1
/FqSWN8kyTGVfobGuPaLxPuHwzOfUPqdcWaz0kn/ZbUjRDhi94KRvolPSXwy
WzVww/JZ4P7U8Ly3J86VfJ/PwgPd578Vc2zLD+8HtPjMGj6Ju3uiiH9wynvy
eu2e68r28i9Ruuk8apdybwL4nLCvl1rAIGiBJDsNDzC/gbWvEu2KBPvK7+ee
L6YjBX8p5ZVIdwo82Utvg88XkPyKr8ZbVRuC5V4C5I1/XwqB9AELLe1w+xXw
+OggEZ/bd74EtBvhtR7bRw4iz8sQOh4dkXFU6QV6P0hcz9HYzZvboe8iVB1+
UN317Drxt7rFwkKvsWj6pL2Lu5RogOODEqH+4edFD3baCejs3Y1T3QckULzH
0QDDsyogT7lrJxMONuoBYLxif0xH97Pkbo75ENlW9vvLRPgayhw9bV0hsP4o
xwnmdXdl8sfk9lxKtjvierNPZdgMXy0gtrdOcbvPopeieRKvt1kesL9NoANf
x5j+fsbL9tnnU7pMl1Q/x31q0+PMgCCmf2xnebSd5Vs/dFmnSe1fTHwPTXEs
eB5GpN9JhROt3utTvnfN+10o0Z+Z7TrDvTn6DYd3w7yTDsaHc2QxeT8fIzfw
1hwwXw5ZOQ9/P4Hezq3rvKl+dG/ROQvLLBqlI0I3aeXSx/ltyP06UX1snW1v
afOD+IrkN4yDg/Mp4ip3mVzNiyh+KS7nqLSrfulv8n4IU/050HPi1EndyPQK
qdgwM3V6BLCeL2qf2x7SwZ3jsK9noHTcpJu6pPgk+fxFAt/FdmVVRSSVvEsF
ie2A6ITk4/96/8B5ACSVvaHCjyndMfxl9YlHz+EXbvVp/WMKWH4p6ufEmoHj
hSF6w4DuQDtoyEkmtftA42BGB94zxvVM35e4+1p/er1kqocYyLcqrSbhh7EX
pHI7V5Qz5lPnkdDWmfV/bhz4PwRZwgDm86fCqB5Gx4ol++dJgpxstRU/2zPS
f5bNOVEcGu739pTrB67WRdE6gXMxktm5YVPpNPbbaYn5OAlSxff7n4JOV5TC
by1tfH/NeS/l+Tq7pRyYzoNcd+xagl9/w+yDATLh05Tx4W/Br32Xv0ouJtsP
277R5fG/6O/dLul6393atZyqv7CCBr2flhSQ26nqcrPUI6cAPt+PGPq1XXjj
/g9nv20MtNU6LTK+Tw50YeytuYc+0fOzAr5QelTCuoMIBxzXVfcOkuq+Hu9w
Pn7fqznlLMhw1/vhGkKZys9U+j9xfxfmf0Tnp/8D+CCQteK+6H4iL2c6/j0H
VwuRfHB3X5D+nVVp2p+xFudvyR/NrpGqfL9W9Ptj/yXfL8+ReB+Zk/qD+fxB
mnYtw0R2kH+mOB761fvgquUlf3e+1iDn0Saz05JmSaXX8C9jEd7cb/YljPRF
Sn3ibu7F3P/nb8Mr19qnppyS3s+8dviL5KFPcOV4Wo3vavD3Qnf/U/nfvyv5
P2u/x4j2UXUzpfebfxS9RqmdPiO5ZZ1ZwOg+OOdTK9S+buFMULcu/yv3CVgV
FO89M4D8eStx81Ver5E4/2925HLZ/RX/A8hfuwYcR+Yud/16pQ5S2SmJ8HHh
h91TeslUH+zNwcd7njj3hVTlI+7hy9+eJfFdFlq6vRmFt6/LfZp3vKq0bhJ+
fw3+L8zbBMabfwwbL5ofsaqO4u9LvrhGeT+DlT6N2s58PniQUn6WfQa/90NV
/8ifIjy4z+dENQd94VYXRecyrKs/cHablb0pHZd/SxT1fEaLhZd/61VSxeNl
1z/EzSdZd3Wp4/gRzx0qLvzR+RW39EZjP+RbSRV/BAdHemiZ7KK+L/Wfw3sX
wff+sTDOF9d/tsV+ynKsmEzZ6TRH5ebtYor74Vg9uQZLvOdCwie/jnJfgzdi
PjlusiQ5iN369+9XivTABv8u29mzkvcPQpRlilPE7XGTub52hy7ctce8r0LF
p8mN8xg2ZNGkOFicF+tw9/o45zs1xudf8MmZst1HvZt1ncEb1Zs+LppGgsks
q1YS6cGYD9dypI/3xds1yPrpA7A/9bWOW6fMW+chQPIRYYOcWQReh9yuHb0y
fh/qB+J1Z+mc4l6oP4TiU4Xci1NRPxNiPUj+Octfeuao2AqI5bF4NthxJB+o
PQQfYv9GGi45XftPvoPGg76YqzpR1o8tf+dML6ikt5CUjnzbho3dWHYqWvzd
9ta4FaO9U0n0RaCO21goBYM39vvf8YntavqE1D9iOQS2UfgZ3ms6+Z0OIr7q
qoH75mLxbpUUcNrMk9QfpN9EeoLqnSDXLWL0uzPYfOzJHUshuyN8e7cl6Dhs
O/+ztcUBqeymCL6/CK/J56J+QkS6EOFHY+3N9kZHxPSOq1rooa1EPh/jeT79
HXQTvS9W4nzr3vwr1O+dUMEFy/eNjsxA5ZVIF5Xa84lev4yBcvxhh+8WlcQ1
jNsL/LLwSaEPKlcg/hDb0XDdaTTnx35sPu7w9keAeo/5z918AZ0vEfuJwO61
et6z1uL8xzhbikvF+RMdwu6Vc84J7nHn7VYZgZ5jEvE39XeoCswkn+uC9A5j
b/ifRr8g2R8ExqXcmP7ofgCV3Wqszyd/4SACHRr0cNHxOTpHTUsgg7cqcrsW
keO8gOzPkPyYlWqz6Pc3g+wfxggW2ZLogkAzB6f6njw3AbG/E31KdijOQ/0R
C1oNTIPUTwomBrirtWmxkdQ/In7n9V927pSzi0TPhvFKaUo+qX9Dpqot/n4K
5x/BWX7xtdgeIfzFpLMcT10H8m3buo2OnQbsFeOZPUeheP7jObR6gORH8FLX
ShqWXI36s4fu/WKzPTAVQuhPHE9A/EfkA9Ru1Kr4MXK3NMXlAirg8Rlpi8Tf
D0yGVG1x8wLSXfX9K50CdU2y3IHkkcDvA+kmi7Ie1ZDogNCfbvwW5/vX3l2x
3hbshTm35NtPcoxSlmr+wbZ7n06bz+3AiI2t2uDrRdaLNzhnRHKU6iva52JX
Q9Tnf//F+j39ycVPG35JHKf467Mb18+pySLIzv0q0T+A46lHfa87fzo4rg8W
Ltssu/8BAwhPuSjVuguGw0T8512oxdu5JvKL46LyZ+PcNCf8rRzOcVxVCXk4
FheukOCH30CvdoMlnsdx6643S/xknmPWHz33E8G1iy7DPftS6nWz1L93i86s
uHMS9/+5fnG480bWoZWi+yJw8hNm+sQUEvrFjlsfInN9cmNNPmp+/KP7OPA7
M6n2N4DQ+Iu1xHStTJx9ZJ90bhLdWRcrJcbf4UW5vYbu9c61zjrULOcXsO5k
9J24lIryb+1ZOHnmXp3SLP4jYsiqZO5fiECFdq8Cq+/9+X2/6cN6yq+ddkow
xv7wcMOn9mKIpC9o4df2yhQ/AQIrsyLPreviLf5G8s0Y1Pdha8w7Rh21am/F
xKD3LOSr7Oqm5KHxTvb6csLOB7sILAfOXHOitYu4Pv3u5mfK25PtKbE9nXi/
uztOg/0eifgg/XK9ZLnCYBP5/iioPwvuOe/uOTOQ1N+bjq29grqg/RNkn072
xqQjdCWWI6Y3yKNX9hks/hz/awdI/cHQj79h4WNxf3YNWOs3RuugQPl4fY9z
q8Hv4rzdN2Vgnkq+uJ989xC7WZoonYn9weIzfkEFkE6Yb/7BfWA/EEx/GdsF
/stkqJ3yzIFff6D3dxH5A5V742xX/inNC0j3HTU7nWZ1EEKr9YMCLDD1YOSF
0+06tf3DjgcdoNWLW5y/LcbnkMk+686v0P4PVAnbZHdeT9C2/+gCXT5Zbnw9
hj34FQtev9+xU7q3OtxNcDAoXcdRAbx/vMgpYxzvBPndnIW5bQMreroD6TBk
oL7AJoZMR1D+q8e6KSdfRvcRkHwguSHmz2zJXtd7q+i+OGxUdonUD4OLcwdt
UtgpwPCBPa3bG6C8YfV74P4Ckr4jEOHzj3lbt15O2ixQ53S5vNsI3SdVbCmX
d+yXN6l+sTyVLdHRaiXEyi9v3+B0WjkkwsLNb19Pwrxr+fKF8p5IgZfAP3Oo
j2Y8+V3WaLaj3H1Nf7G9RfqH0ImY/9WJoEO+R08A+d0At3asgIj29dGSOqcx
GLtM5N+kEocwr4+HSelYulHN/0B4hGW/8bq1gw9MB9kJRM4Y0J2jvQR3rgpv
m/mICi/27brbYvlA9A1Tjmt8vAbi75pt8GSisWDjFK+iQyFp4vyS6IyFiP0i
5ifan4b2PtRGkOQbNB4jdCfaR5D8U7THU+3CaF7CfuwsWpexew9mNr/8j87d
ucd0ruPkQOCFi/fKk2c3X9zeqep9Xq6Vbt9E5n6FKFLGg4cFsFTndbzxPyX2
n3vFT5TOflHXJP8vbtwQRvGjmwvCB/ri/ZwPfwySpR6258UbTcKn4+ZmfU+F
vSxDpvNYzqxAZuuNf/WUVbVLqn0X9vXuT5rSL+4oFZxewlpTbzOS37DoPxqH
WVrI46nh/AM48I4KKF5HYXJRGTnehDT0HduvWda5fEdNRn6kcPsMqfjPOdqT
cr+Qu2bmH3lPiV+eTXlvhBZPN9+3jfItlMr/jWMYCd6PUw5aury2LfU6pztf
4r0sjt4dqewDq3We6J4EW/iGUdxy/pmZlH7rXKv+f++dJ0kwejzY34zdxblz
tD4zPlHJQcWc2Ivfq/97fz8GkDtuBqX/iVhOHLVzoSkT87eZnRfRg//EnpH/
EG9aBE7+WD8tUT2tU+wTt2UYo3sabO1N5PUZCM6Yvs2s0lEqf1e2SqJUcfhZ
syvuS0qH7yyj9HthhZne+Rv85F+VLi66TPDS7Vd2RYFk+ebH/Ega49Ok8eZ/
HfJLLv4VPv5Pwdr9d3dUp+L22Vlmq0qhqBLVx5zljPSNs3Y6pVyyZ8yRyc+N
X16X1Wz9W3xmf+SOqcKm1AOfS/wj97D+KvTd9fRqtlnjekl5IX4ebJaEm2ex
ilqK4tvwuZlOTWq3ietz/r5XuHUJN3Z0k9aLsHmOxPu/rDX66bj2wguSIKOp
8nvaKDVJfpobsu6USnUPkinkVegz8lOH1X/h/eCnbaD0Q2IrGks1XjcX5F94
wjzuPwjKB+t9WhcpOheD79lIXOfy+4/9o34THMNzjPjC7r9fon5wurVi5kcP
krt5XBE/uUknpFofw/eGke/xTPMffOuhbPtarO7W0vm5M7RD/LuplP44/Fg1
Ef+5q2vA7+Fh9ejIY2p5+NJH9nsHDbA9t4pJPs6rVH/xt7GS6rvXRpTnu/Cx
r+k4vB2cwevRqvzBjtVx/5v3Q+josXQ9nm+S5OHpJp2Fw0bg5JLX5SflPgk8
9AEjfpDwicltkv8/q0/df3LPQyKs2rZxchs9kXxw7uzCxWvhGoz0aIpe/m0I
9zKifh8KlF/l3v/UfiG/0xiZ5JJW7qDH1OO5vC/leQ3XZTEzungrUr4nTNKb
/UOpx3Up5YhlbiCb/xrDduCbfhLnPayqbzLN3+DwU7mQh3Dfus02/6n+89rb
SdU+p207yvfEuNYnQ4HlJg+wNqlqI7kdl9aM9kPYF3TSZZGTPwU5Zd7SxSFa
eQF/vyx7zi0o/nrhnJnxjOQIPtD50P9CvwsPGYrmp+xSO4n2iV3ygczXSdFT
1biPyPbEbMM21lI5YZP4Uf1LJIec5JupzdbflLcqyf7rRHixe14X7Zdyuz1h
tB7i6jzG7zc83cpsvlCj/Wf8ck8FU97D5+WmMlpPcLLiyPMntQ6Dlx7B7MuY
RqxfX+xEPU/4Q5BluE2qeRhrwDD6OLkyQLi1KSV94ZJ2J5utHUjoG36gI05P
eBNOGfxP2AUayJt2mZE/CK+2JfW7on/S7rc4Irwd+NkRJ+/xzszfj8Xyu3iU
6FyNpbSrSfiyVN437zlc133NEqeHn32X/rzZPv/K7AgzIem/s41DQryvJyXd
Qnajflc7oKl77RXJ5SXR67o7OP6LBMgd54CPS9kccqaROHPQne6i/rA9X72B
XvRRC3h1Er8PesNApvjjjPC7FjR656AY6e93N/D3+HLq/ZG7lRLPIZsNNvTv
4fkiwwxjSjkB4n1G2PT126anP2pnKFDHA5EG7r5jNeCKvlR+GbD8hFQSHejK
uc9OdxyXR33/jFCeo9iOOT5ed4q7FJTi6MC1S2wWewTb7qaRy6nPpKaDLHK+
3zRUUjrny57zstTL/b0mWCa8nt0PhBJHG7CH95X+3vtfhHC7Ytz9A3jk8ibt
m7MfxEUwyce68E7EL/6eOEr6cDV4kufNvO0S445w2s5idl75P7L+bCp+3DMT
G+2lN7N40yT9OeYhVdwlppAVN0GiXxhvuL/If4H3OYGZX2G7PRLPfbgpi8l2
4LRRuyEGHOH/BD+bWQ65C23+d8/B3eYY7d43swDSPVHc3nE6/XpB73Bxrgl+
34A725B8H29y0ZB7jzrh8sHLtzI6ByLJn//ZZjkP5YUNke3+ZbfLIv8muPUt
meI+/q9A3thTZP/y1Pged5Lni85JOfyqdJnkG+5D7U++rwWlfyv7bkiz+M9y
3ftT3mvlexvchUqMXjtN6S5K579nifb7+D+/i+4tc95N+KPxW3lDYNw6gz38
TGPc+SNfmN3n+Mz5M/6gzRz397+GrHNHKP3v+R27HBd/7+19c124lH4oADpw
W7gzWj9yh79rnnveiDxdnyHxXgjbZaXkeyN7rMjvRBPhwx5PH+5tR0kn9tAM
qfbdWRso3pP/fwUKH9cqW3WuhMxrOo9IMZFOrpoZcm4NljgecfquF80XWVt1
06Wuf7OJTcmbNEq/Be6wGpz95h+eQR0/BYHni5pkz+C9Hf/I/rG4P1+Fonsi
3Hgjqfa1+ZWujN554cYOalZ/LpbDBko8eeYhovGFHRxIvZ6d+pzyPJEx/EPj
A0/g1rz3sqK5zWp/mwrhFfzmiettN0kq/wRY+bgZpTxenPxH4viwDe1w83u+
8x7cfRfebmWp4pCwJyVJnm+P9v+j7xvB04YzX6+cO/LlpFf2f+LnzzKyF/nd
sDRzJZ43sDuXSOU/AS8yuSYpnS88JNnu09W/pDVuPsWdPbxZ7mnwPyczmq/w
cs826z1YWK67RHqJIdGO/vvNiTOnHE/gMXzR/i1rV73IvrPgH7f+mDyd+7nL
/ZiaUOpyp1ZMmjwzNA96KWAFT48g+91O+x5U/4XFqF7YoodU/pKw6Wj8/raZ
CuX5Otv0KbPzir+0DmKZHJB+XrC/gCO3cQQaDzHueReNrtf8BM/G9F810xUX
5xXXn9h0YZx9bGP8jYbvqphTmW/z0Xl6avfryZ5jyHEWBy3KnKuQ6iVA2sGm
yy8pBZbvmdMh+7I2ag8fD7ymqoWpNy/VceDr17h4OPCnzcHQhhmbdk1qc6Dh
P+dKC9QehOWyd1WMAu8XI3iC6FRr6cxKaIPGI8qcmNTy9nIhCe+Nlz5Fbhkr
8T1xMbTvmgXsP7F9SdDL6QGpHiK9KOrj14+qINW381LGh+lT0HxUfAXIN5xU
YkIrf9cv2ph7mOL1eHGjHLAUNryG6nsuSguhkCMEphW3Wb65Jge6+cHAQWOo
VHaGvamlaD7BGaNLf87aTefh6i0lhVh8+M6VqL4h8gfi2y3HrykhC6Xfr0T4
RuQfEU71yK62vWpKah8kr3R6StQ3CrnhrDdA7/dmba6b3H9toVje1/wwPTt4
CphvNyqn97v/DB/XxtEwiYQP8o3Rb5be9PdU+i6CZt2UQ3sOPYalA8e87XuJ
/WVin7F8b3W8TMyPtsW/5z16I3n+O9bqjZj+WLqs2k221+MujBG1g9hXDJ3g
n272pPwg/oEgJj9vnAY6fwbxmwgx9ox/8hXzeT+VHZJEd0TOELoH9Jq/dJWn
aB3K7ap3E/JS6h9bNxUtD9IPIn0Q+ZCELxVekuj8wEem9Sb8qP6teNxE5Jlo
l4cYXjq4ZiL1e8BU8IJ7tx8W0RVQwIRFl7iLhZL6xRuY1yzvynK6qEgf7/AP
Qq4BV6r1MausAu/3TqTTx0JG8Ur+CvzcpWKOCvV71JzMkbL5IxHpl/xEJj8c
9oiNjPbV2PNfS5QXllWcTH57nLhr6RLznZzfvPFimdKzvFzkV8rqMQK3j837
XCQTPnDPDU+p5JQW/qF1COv8bennNb3urIO3jaKU46ZCdpWG5POLPjFWzdEO
P/Dr1eah30/wPsU9s+LTkAt5Xv4HID/WFGc/eI7TqP2CiPZx9V1yHC2DuJrh
PRrjwbOGKTWeB/eCrzDG58HZ6e8rR4vKc2PkmmU/l6/5+M/4ZRH16qUF7hyR
kxT0R+6BySxv9TOZxWOZbP9X4rNzBrjT3/c4VjHS0GusSB7gIwclx12avv81
NPV3xp2rQVK9K8q9uYmRPxT788//nflAA7w8uvnidFDJy6lovP4NuCnVvi/3
3aG/Eh+Qa5AkU/w8xnR4Y8lIb9hdXv5vvGvwf8H/InsZu04wSEibz/Z5/wTH
Lrh8vGI/UXx+7tkOOL5w9RJx4xFn5VjJ470sdAqZ0m/vjU70eMsCE4f/nXOf
MEOp2uGNMqG0M5z9On/+/ejuN54NNmH23rO0kD3cgfLdx/8act+3apb1Cl+I
8ccdwt4zf4BtAXQ+zl0pcZMQmj3B9faMENF+MSssJAdyyLrU1StZCzJPn/Ih
dsV8AUhflBYdPZkbpCX+T5dfWryJ9T0acpu1A/OebFC0y7Grymj+ZTNbK0Ss
XARdUT4xdK+lFtSLW5mlvLIYej7jW3pclwlYvPj2imB/9zyPryV8Lrn9nBvd
vyQOj42l6y/yH8GjQW9UN4nGT94i7WfQo89ykerdyO0aV0xy3MrF61XKaPJ8
9VC0l5taohbp/0TVW72e7CL/R/DG0AvecARd35dbtIgJX9+Yf1IVed8kSGNs
7ZJ/v3ODs7D95rtFNev7mXTywpuXQG7P1dF0weN/8EfoPUvh3qsP2aJ4wLBd
UDmJDsi3m4NK36eXtZi0i4Oek718W48TQhj+SpRbYruyQqK8g9oFyWW7rubf
NcqGk/5T6AcOgvoJgorncyeMX8GoX6x8R/J4AsIf0e8Gvr7Q8cd+S6TH3t0G
NbqWzOyUNP09n7hrseW3B9CnuGlzVcbSrzNA9EfgkS6bPLzDl4n5fLx28813
Xxv3wcLvivbVOIdPZpLkgK4/YvpF3kuLf0M5znEGatPPa0cWzPCtmcWcv1g6
qseki/G813KgjiQ5BunNXa6zT6CEcghdVOAwW61BlPxmKZalS613LeU0d66Y
KUeyD+bqlU/UmMk5rj9E+ULwQ+R5xb3Jx4o2NJarrZM97jbSXo2z+kL1lkLx
/66vpm9+OrUI+jHIbXmJeoAAgUj65ozv+nflNwoC3h/oahInOp/nRf+gX78N
XCCnEq4ZBc2ZsvaL58iXUMuO/irdxliK6x0bl8UfEBwubpezJrmaNWyj4Ozb
l/WFXLJcEvGa0TlovWV/3Lv3fC9PsF8OUr7UWis/6Lh5Qz38bz/o3+nUVbGA
+1lqQ0L3qXXu7Z0byrHV25eQ8Gn4P/cHeZ+cmG/eoWLtT4rSr8+DfmQ4Xpm7
SdT+px/R4nqfDG7dWmsjOf/UK8V7TSnuWyPlPi20dPLB3IfC4Ml2NaaMe0DZ
Hwo6kOz6wRGy+9em/y5YMfF6FBUdZKqvAZ/djlaQpd1WfuRkme4LUfLlifJB
G68asr/aiQvyh8qkoxdTyA11AcfFXTp7iXHXfluw+syb1QOdP9rNnz15Xy75
3RkQfhT6xuk1lVIPKPPnRQ9vdznHHKcvizNQPfB/UdtxrjxZXlMU7OKuevNI
9Msa1k1NrvEdebYNF7xunaZ1I1l1eqCYDhGLWrdemSva1+aV5GXTyvNnXpaK
Nv7eAv/Wwgwow36be72Ftcx8vJ2ip8qL9RJ0nNOy1LKrOake1+UjXS0MjKWW
d2nlC1Q/Bb/FfLNckA0h9hpUb9Vi16cWLcj8lBVPJH9T9Z/YLiIfDMrzvvYt
lwZ/9p3tMVCLE0feGEVHQU5zk8f12ommg+wPMm7+8w1bJseT2vFy7zGx4F87
/XtVGvSBPb6N4i5wXP3ntmfCPo0qZGzvjpmv01/XH/Vz0xLu6WjuckAg98T2
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
dwpFIj4j/RPJI1vrDC1etdU/B/nMleqPOId/n6SVE6h/p47EdBkyE11HRvhB
Rxeih0C524UmtJlGf8/Uso0Ps9o/F88zBI5LKhjpG8LvFSuk/l8JDKYmQYHH
vlXwh+QwpkdkL9sfnCHpDZ2+EvWTzp6Rel14dwpFegGSD6KvxHLjY6tuWfaI
gAMnD1ri9Acvgk9We1MZtemLvi66H584xSDj5jT6+MsP2S07Wyyi1y+Rfk45
cBKIx2bEsb7Ki+v8oV9TWJqcOEdP0K87E+miwMcueHACQviGLT/fPI8kP+6Y
pMlUeeoxdIufS1stUtrXVXy/JOtEbByQvn5V7Cz/3VL5hYMIPRi/giuXRd5U
dkXBB0Z+A+QnELvJrOzRZMR69F4rxA8idMvQLnvqZ/K5uO9bf+sk/ZRpnUrQ
hM3sXBwWGvh8POE5jmwPyLjZvPV8O3NNIdZfcD2nHICMvCoNu6xB423fTlnT
3j6ach7HC772DHph3GVujSH4fkkR3sOGlOsZnCd9GnUdmXvSl3K+xT5vJl9+
AO/tf2ef63/6zz8fjsrzQ8JQ3q9flPsyvNPL/9P7qimhzqn9jz89adB1RL7B
YKn7FDw91YC/3m8QfHpIefnQT/L/H9/9PF+rWzPxOh73Q3Wj3gPAPbbuPJN6
rL4TpJ8Ho/LbCuldTvoMbND1TYHKEPpx390l69yM97L5G9MzlH6Xnxkmk33x
7qeK95+5yQ4ZIsgJtac/r7hF0Xzq6d9i+2b18/j76xMNAHmZzbz/s/ZsjHSu
r+goFMvr+ql/796MxuSzclq9ziGxlqlI3V/ifTwG/s/yZ5dOGDogEo7qO3KO
t3qEBILK6aCovb7G5HV2zHvcMwN8Ur8XtVc1uhbYzqXmeU91B3kC29td2Wne
sFURcGUXzaBHeyNJ+Hs+8YrWbCqU4LcOG75gZVcPEh7bBZoDbt/ZTkU//0di
OuP+Vt542F2r637YruWHsPLyLKp+8U5ZvMY974yvkYWf7Pu7MiHbxfsHboks
x+Jhz31UQsIjq7zk/Y7Iv21vT9wwP+LGuD29Hk2PVVuWykw/ld6IxsHE1XOW
rWUJGX8nbzmo3pcel3QGPquL87bPRPW7+1vH8GGWY0nf8bbeSOtnIISOPdfy
zIzbIbPdYtrn9j6D5h9WzLyzv73AUW75YvwAp3hPNKTuu7lZteUeWnzWXj+e
tvodhfMjIrnQ+QU6v7PzQU0Rt5UXkN7PY1pU73qwS+b+9czPsnxlC9YXrJ11
iEgl0eflPfvug54xEv07NPZTh+Sn8yX400wWVue2FWL7w02cng+9yXN5l/vn
u+En+48Z/GanxJ/ZC3Q/eOTn4PzEvZ4V0Iy1ZjpmF1B/ZL6nXUZS1A4gvxB4
oGs/eO8QIZD/rZRMDOJ0DzDWs/sa+c47VMj8IuJN1nVnXVLCt4vVAyw/9Cvy
ZfZT8vqvlRtmHxq9bTc8/mWbg68sHzeY3wTBIzqqJc+bgPkva3uja3WNTysI
SfZChFC3j0rRHcTnWlgh2tHQku9ta7sbHoK76SmMcinWA37H31s8fNmvuny4
graFkJT6/LWFF7D1id9T4vf2WBq73Bt9v33Etqfqfui9iMT2EHyHRgiLinp9
TMLOj0ozZb9vi0gfES+Ifil0iOHMQWZhVmHk/BH3xrWemjgCfI7Fv0X3AQcP
h0Hzut791sT6BTR4yKJ01ePM101A8qmssUrbyQF/d8j7eqnPniwgXxC4QC+Y
A3vQr0MS4Wxn48vCjkIg/nD/msvD7oHvtTcrqL64fGhTCb9V75u3D481F8s9
yIB6Px4A2YGm4vUpVoAbeL5NJV+Rv7J4YpTPX+0O0+kNCJocbz47bAHZXv2m
zHPoLkyTZl84uuj0kli+YrLl9bfrSkjyQ+yNSD9FfwRDDlRJ6tPZtUguxXPL
gPToxfewamqI3uub2mlic3tlaxJe0PcjuiZz4+9OgY88PGF8282S9D4vMjp4
wbEAIH0U/ePfs62SSe/XtiPnC4Rf372eunw2rX0Q5UhsF9GDIe3X7fZL8cW+
Z4d9ZLSOzU3TINcj+lcQX5jyAan/e/VbpQdH3uDGi6caXpR6UdpjC6k9taYj
Kz7f8YcPZcZ6d/Un6z/SLsg+GOijXOOB03yve1rxqkA7c16ydXSfw/j9IpfQ
l9CJj0XHP3qieonQjXx3aszcQnMrVA7ul48XntBDz63L2p8PMdmzdFWWS+rn
65cU6lWUS8ofv9/Utqqobt1Q5McejdpuHWVsAxeM+jLXpc0iyXfEZyJE3tus
NUhq8mc+V5UY56YwYbOk/uKCwdvO3rSU4GWKj+q9iM69wcYdok7Sr98mnupf
eLWPO/xZqfT87i17aPtj3eHaMJ9mQtJ7e3/hwq7vVtF+L4VvbNgbtz7LUv4A
jktOPOc9Ib59lOg7nsnRi1DfV2eTX/QrpZUDUz6+a6ewIFs5DWr7ZZi72TzK
eSL3/LDH0voj6UdCrvznUTD6yZ+wIxkiyqm+/ZT4kxYWnwxs0HXbr1fGTb+x
BLcuxzpbAo7PmHa39tORrpR8Yip/yXiyrG7dub78Qtbzubv7J0J0dtXFuIv6
1N5eQH0F8d0oowkP2i3A9oNXeRq3j8TVX5wJaZ6c4HtLiWw39ZXjwuo4jxNH
hzWYPmDKWT1Nn5LqndQ6dGfaLeb5mEfHGCRsPk3mK6jddC32wnUmOL3jffGV
P/5dCr9Zm16R440xfkWudpj6PVnfEyHib3eb7+ijdQ7Pr99maN4xOn/RAP6S
1eo5LBMekV1K8QOsbu7RwPa876g/t2kXJs1/CDwnk++jRGAqnO+TYhwJL+hZ
9us9BN53KGrmuuHGPun+rJHih3n8tfXKpy0v5GtC8vtdOqhj327VqN+y35cq
BbLnp0j1C/zz58X3gHFOnmiUOHhW9lm5zqfJ3V7Ub8r/de7wZHC+zZcHQjro
pKPnBNWKt08bmyvmh8B+iFzxzuyXd8DnSO4ezhpg9e6fiHfmLK3G74cD7JX9
qwp336Cg5r1c5/L+FmRPNZKJ34I3rRpeb414lzd4eOPi6tklXszPS0mBXJ0k
mfSUt8VXKj/4435JPzeL1PNfQ3leR7B5J/k+hTDHoT/2mzTquXN+WN+GPb/V
QOMXa5beP5U3gH0xuvHi9LzGNFt5ru1WeE4rrWPt75DjVUFQ1vrS9HvnQvJ/
mEf50LUfnNF4s7vGg5eoTOAy8gevZu6kKufYmYL1DdMf3gsr8vkKUH/p+HA0
wmB+W0y8gQyQc3xFjgT/kIT25W+2Mx/3ZeCXpD3e+CSSHQ3vkahrP2MpqX8X
rv7QvWwsV78kMI1VKY1//KALDRd3dcg2I0inI3N6Q4xv9Whpg9ZfbnT5R9Rm
sh0S6X99Ltd4lBrlPFzw8z7ze6Xo5Ie0K6te2j0blWCwWUh6T7Q3OojUTz/X
0mSf9PUbbs2mXTi5tlL1oqXTN/pp1OxrpxjTU6GaP2l1BzLfqfAXrSfHV37W
0Fyjuo0yTo3bdmUGE3vnhC9A75VA/Gp95Ux8T9W+Pw+9H1gl1DJ49mfxfwQ/
0h58zwWFvLm1C8n/mSD5UtDBPWv7mAmfSPxdkUI+vwjiC4KX7v2fZ96cmWic
aGH+Sntn/P64wFUZ719Efi/1hr6iaS/pfoJ/8pE8/ZS5PhJ37pewSRZ/x7m1
Weo9M+yLp6TeJ82xGiP1vgM6eoF4VyjWa77HbvNTvI7AumcBzsPDyXcbxh5a
v/ueGgjyJqTfZdSv6Od1859OfPF5fl6nJLEf48ayC6BstR4LjSHm45ZIr1M7
4OK7eQfa4OKluUtdpOoH3/ca9f2Pk/D5krgd1W8xkTsJ/+kqufKnSPrzjI1f
rx13QvZ4DxH9i1vg/oe4nPQ6fxjykrwO03xm8c02JxnpFbvDUNz/mCBqB/4c
RkOvs53adaVB8MS4McpbwFe7ltyo/akn5Bj7UuoXd+or3PxAMPcIZX4L1kl8
niaOfWGD/PeT6DTbSv6/1g3f3rztOmp+vsnjMca//3JNoP8Tsb4KfFRx93Xx
vC3J9/3+F3K5bELp/znTB2c0BH7uK2up/wvs8ZfE67Vcz2FSz79we1kGiZ/f
ChpVr7mzNanzp1ixmOU/7e5XDP3evE7zThXYL+2KOj/v+LAt8Nq03zklY4QQ
O//5gHlBaFx8tVPGpV8PNsMIfGuwSm+WrrPkGakX2GwsvG8UGpdQ8cu9uLeB
O7wpZ36z+exR8BnPnr+Ot7Ah4R2nlsT2HLgRfjJbdfzdfqHwmk0qnS0Wj4GJ
dBLbIz5zD0dfT3rnL3lWvzhH98kOP5iz8FiXFuaZSXbLWwYWJfvBC5ZxY1/x
yPNVBB9Cr6hcrfYNdOG95k03jxUw8b1exr25BZY/kkDfI3xFyhE6KorfDMkY
ZCh5nzPxYDfvd+Tx5Nys832njUL3RRD+rfxyeLjl5mKoprnTuaIyT/hLRELX
Tp08YKR/SH2kPaw+FW94JKHTYNjmt8M1zCX1kf60z+nk8nvRm9FS9IofrVEB
lAsL4O+R/jLxAwOrXwLxI/q3p8LdzTbEjPR9z16f31xTDZbw/ZHFwYJTa0dI
vv/sGhhXmQWR9GzG8inxma+Yxxk42CTNiFjnLrEHIr+3HXw+TbPJAniTiVr0
6WxbEp+h36O1767hAdvzHaGvNEMQAc9WcQk8/vY+hOjVofgZtzpXX4WI8hPx
rVfpI0m9clPNBNc//2VU8hHBdd/y+y4yGUGSG7E+go+ox8T+kPoxc2L8ty5L
YUTfe5QJz+gMr4tnjTR/Ag1dEmCqNavO756zzIVmCVK2dzc0hO9t+9I0fhMq
B5Ddrwi1vzP4szj+hqtw8ZnE3pF6QQp6R1V4z5Pi+QFLzDeifLgo1J5wqqYZ
FX5W/6elpPaG6ttauWWOgptVHp2z+8ckkh4y1ResXxE9N//iuKC6IBjHFyzd
E23jprZY3F+iX9/mnE9ZmrQIRviE1BeEt3MNCZkMO7hHKv4YsA4obwQieo/Q
o//GS9MpJRwo7/PHH2u6hJLjJluxhhV+nD9FIl86f43oTXhc+VKb/YPgYYna
cJ7ZYjhkcdMQlUPo9xR+guf4+rlEzxB+zPtmseyz6SL41IwPAZPmdcf6bZae
e4XEPg5c1hXGu40C6hOiH4i90fUD4R+of6DvQXh2de5wc+nPOST61t+v6KFh
4gAjfp6CHoFe6AtK/4uFJTe9bx5/sAXr7zi94mHx+9h2hdDqHkYBLtMi4dM1
Z7b1SV0igUg5CE7b+HCfCCLt7Gn5KMimZgWMwP36B0cHTULvrUC+E9lryvoX
EBHf1HfRBfdHH4A3W28aeTs3EMbUF5RursF+L8aH1EOeFU6s7mQwx5/UnsOk
j328HZdL8B2rmpo8YRj53gYifqQfoP4fbeHT9pnhJlI5ER+IjlLbexN2ndwO
L5ndPWPPAHL8DQifS/jc2VuzZ0vwXMuanXBtzhZ4wbuB9le5aDwi0p7Ivx6d
l0PCC+JXzGvFAW+vqsNaW+ZdslRxAvaHrt+5058ucbYMlOgBUq6TO2jaoIUB
QLw6sZ8sHusLSeV0fEGep2T+HPNd1xFIZwuXQcm6PH0S3h6jLbXf3lpGKgdB
pJ7KyYTfVybh6ORytGqhFhE6JwqHbIAXT7ixtnIEWC+Q8oo3U+wm/3aHlZf+
rKr4g6/ISlttn9pGUj1IuGzFbEG8RN9L5leNqvUk3xcioW/eZs2T5nX33hi8
zQLqF1E/QfZGJ3+RfwlYkyepv2mp0ZVdZTNI9Yn6h0DD9LzNC7tsBMrXOd/1
o3HaOomfAdmrr+Wcpz+HVUrmNXT69GiM5jb1RLB+a9ie7Po+tM7PdpqeCiFy
J/of1722Ful2ZH+Vkmdxc9t+dL3d/9bqJdcMI+FOiyZ4v41YA59jm8IGB9D7
hAyjr62aIrCS6APSv1o9p+93J1RK8LdebXQGNvjjP08t35/HDwPqL2KH8f1u
PfgZoyt536+vuvm7qXX34dwbha4DUvjhunHOWc06NCUQPtBz3vTBweh75+9V
IV4n9gD5h+iX/6DQosyOiyTl77Xb/cz9ukaCH+HzKwvo5mkjsN00b5l724lv
TjtO0cHoQUe2Gj3KgxB7A9kRAmc8+MB9WO4geV52a5oth8K/M/WboPpEff7z
nj+oTw10dvrOLh3mB8Kp6i/HuP9pb997ha+a2WQ7QmDW/kNdH/gHSujGvGcp
5OPWOdhbh/Bp57FM4P/+/1hKAtx5NJatFm4dgpd0/hm2vrzt8Z4Zi9dlebOt
LzP6rnztNUj5lUtEj2bCBukvAXJ29JG6DsyOXNog61lMIT9juJgetkczqfs6
TKFgjrBB43I4Nf518UvC6dRxNQD9YD0b0rhxOJ4q4nVddqsScXwcf9SARo13
YgQLOrTd66xCrbdy2hG/RUU4bb3I0boTrZQo2+Uf4OLiFngRgoaNh2TSr24r
ajIOastlz9yrRpR5srmTnI9Insf7J7zsPF6MX7DlnGx5s2S9z+X3PspzvIKa
TeJ7mLiO1PsXku8/xqyj/L6wL2UeYBw0HaU++3ZLRnwU6L//q/fHsTzWiv0a
z2gcozyqfw0i+/Q3W4vthNVuJS5vJXtLO0b3a3E7KjPaX2QdbYmL5+WO5sme
b1xErxVMuc/AjQiXut/Fe9a2Qe5vYFusudcQeGRu13DyVrn08VHrun35Ngoy
nTP/vxXyXlVlYPVboh/9px6l5E/fhbh7XNitFm9vNPqO/iprekNZCOldrmw1
klnefNZQHvwv8JWlqEW970f3XXFryrhC3o9PDXoOpdGhzuR/4l5SHHxcdSFg
3//uw22oOPLOquB4yhU+Q1LbaDLS20aBAV/1E351Y9Z+mwxcP1i99MhxTW8N
d6zrbit1/BIkU58nYM2dJB5PeCZmOVDMwJjgYOn/bdwafUbnHXBwZTOXjmVb
GiYu7D+Kd2E1Sap/XI8p5J9wzrxu3WldNXleu7+d/bnrbaPghBkva6tvb4NN
au3UP7PWw0g50l/rsdfXlVm8JH0novO2UR72GfeeCEVy7riNHH9B/P75RujU
iLngc4+X3pUZZxeUQMNTUw51e4bK9WtC3t2xoZHwMeeU015cdxI9RDxIfeL7
9vb7K0s7C6EhrvnGre/fJH2P8JVYvq3thDehiZESvv2BnHnfxPHGnLAiyvk5
bxJUDaUrFy+zHkPen8Lg47Y2Ace35Fayp8yZUQzsJwKHdD6W5zZSbF88n/7k
PKogOYrqe8eC76vC6BlnQAou7wHnePMDjO0J0T86vabrJxGq9Ulc8NQV1x77
TRE4j+ylGXO7d7cLg+nowdKxJj8O6vO5yaTv+q5wha/eacNN4v9LlvNWct6H
KXNiK3+5jKDCyw5egqNL8BqTD1wkhxinGpJ9SaGLl2kYQyq/MDd6baoh+h9B
tDc6/oY8t+aMUC+F0nveMh+g7g6D9BeBS5u+WWy3kgdj/ZE0fTt5bMqYHefR
+U72/BmBKf1QO/dvNuZk8DQh1Gmj5femYwJgPQfVFZ/TVorwCNbkJQL7AXo2
6dnOuBjzXwySO9Gv0OkFHV+QdroaTD2rriGU8ElWvcfK++RZdP3AI2X109ej
ye1T+FdBylZ0vQ3xO4h8sfasVetKqx+g90T5g/hx2GzzqakU93jT8Z/Y7gjL
avt4byd4Ab/YwUiJ7D9BdiSrf6Eb/4jlmPGUE3D+Mi0einb5ul1eQZMdtFPn
DenMmE4qPBHPpednbjmsXnnkuU0GNc59llG9GvRcM+fQkXqt/7KP1OL+d9lN
OpVCiv1Hb6yeKj43xmvZhnr/xWSV2L+zvuUz+y+cEi1ef+VOvd2o91nxHtUy
Or9AK/9Z269Rvq+aIlNcNXfNDfL5uc3fusS/82+Y+0S3vsadr+RP1JA+b5EG
4faxxxY0IfsvBHbbPWPXc8vGOadycwnl+hRfZTHu3ATrcK+/c59iDP4cBedr
3H9ynzUdFOj7N0qcv0xw0TnFn1yu9HsdZISsufvQe9KdV70eHjwLrJf/D0JW
jBZuv0VQuwv9/xyz2u9O1BrceQ9u9PS4f4FuEORzbjKyF9aQPuLzLVxPXfS/
rbZHcpu9N+v8QIX1Zahk36WT/ca5w6rtvW/v2ArOB0mESP2SrKwh392tGr3f
FmXHF10zsRb3Z5bFE0jgY9eFxSfve6QFva39bUnO24TQSaRX9b1fTnTYLWhn
os76GedsJO+ba3Y4OfvnYRw/TSrKyN/LyDcpkNtPhzyfWeBh0M6uhez51TD8
otWTrpXg/GcN0D9u4UvceU3e4NHieRYn+GgtpLTZzaXCqeH0ZGOHhDmppmT/
9lJRX9hQ9mejhJ6f6vzxbfe3dfSzfz4ro9Ib9v599OuVRL0CyQ+ph8hFsdvm
sd0mTSfL/0Tcr0RjcpxYsw+1x9JPoPFEJH2O9FgcK2XeQsLH6+jBk37fIW/n
Osr9d96mi0+p9Etwu38Cyb5B9k4Ho5r0SDm8oV73sTCCGD5yTD4lAPkPslOV
ka/nLP7jf6TYMY97K4qKX+z7+9H/ffVWgk69mwpJciXSmfbgVa9HjvT5xBnI
lwQDu1yU2W8gdlN88qTy22ZCkv4jdP/0cWz5xqoMaB9y+Cu+t1C8H8Uyj49h
1D/i908tXkB6OzazNjCIN0PoQ/R5j3Pf2Z1KyXKnspcBDozu7WJfTrgoE/1v
9sv/f+4ybs+kUd2Z+wspkOVwDJwX6yJ83MkMHxfFzRr+n97LxWo7slHjwwS/
DeXqj6BcH2fHfPUw3DqCIP4x/X1nUiC3ZCvu/1ow9hPuP5w1fPJ9EeSU6+Hi
ObhR96jz0+0YXK/4Qm7Raer1Krr8E83GMto3FEQNJduZUcyxR84M8gEzgJyA
b+D7u/8ByEteKVdeh/8URh867/aoi1gegurP/9T9fKy8IrG9cLr9Bt9fTMX3
hHxwXhMqPfo8010m+rSiyf8XFdO+t2k9Q8xH7sZSsV4KPp9o0Psh6wv5Shng
vOlM+Kq0Bjeus2aWNUy+DIJ9cAyd6rV+xBra836D8y/mm0YB6z54Hoq8J8IS
26/2fV6j8755LsLHKzDxt0S8oGciFPGpuUkh7fc3QgV7s3WFEj7PytTiLplE
nh/cHNU+z+w5Or8/1d7w5ppd7vDwnXMn+ta4ivCx+uaUY/Gzlj3eAOz/+8uh
S9Utb0JVPNtnK66K46r48zNeAvmIlDc707lfSfsCbD0ue9djqNCrMOVQURSJ
bo8QpTVTjVOB/Gy2onXf1X/+w5Dy1iN73Ul0QtdNlXK0up1wIP/3IfVB/KLT
C0w5T9u/mqoex+4kOX5LX6GX5r6aZ3X+4zr1OFtw0Rt642fh3i8DLHdZ9Vre
7+nsOeRxSf+qJmB9pyhnT5ycyaQ//JGzxHzidh0Ejn9lKj+K9lgXmzyglNtd
S9TuiHKQ6GXxz9ggi1Io0OvE0s6VvnBV8ucZs+eB85FoLtF1ye67l0TH0qC+
a89S398rVQ+p6DZvSfarWcqbZo5dXUDCs9q4TWyIRyZj/Ez1p+fOV9wsxdNY
/WX/Ooqe97vSzelXrRpZXw7k6HeNeQO+n51OzhfDkz920peqh6yhyfdJ5Zt+
VWqUK5HLEeizh7W1mx85bhSpf3daourNEC6MyJdObkQ/jLxf/LXX+rBZDuLy
ymXg/SbE3/YaGymO/xs7dcXxEk9yHjqE/+7fWGmnjMV846ZFllPZAzdsOWWc
MsfgUw6JTil6wTeOeg79OBrsYdGDvI6E0EM3/iH+hVgvKnPJyKltmY+rRLjs
s22Mzu1wuHf78eMdOguB/BX585hl+aTy376OP/ybL4J/vbt2JafVQVw7gPk/
b5rhEwip3+pEgqX2afr1f9suc3zXXmS+Dnduj9eIcQWrge8jap9H2y4W7yuz
Z3dE41NVH+sPP3Y9GNsPbtnudAihk4JewexM1F8g7+/3Gt2kJhAXL87/Mu01
6fv1B+aeVmy2DSifab5HHTJb4+TCn3OXeb5yRD4M6nOdUr2p6K4XxPSPw97q
1mB4RXzQNST/By84fo9zp0p+vFNvaXjubS4k8QGjLyS+XQ/JENPDv0Dmm6z0
SOG/wOh0HKlc6UPyNo9xGVR6SQmRep67n6VrVG0H6kXv19sTp91bh33PN3dN
h76uDH1vXeoDE/GB7O1d3IV9KZX49ZZv60Mk9UO9EodwHXF2zTHfdkIe/WLf
fIj+nxLlRXwm8qu+esNU7pXJpttV1piK6BWw41OB9Ox/l9I5UXEtST7Eenad
J25KO0S/rrhf/exMt5W2VP6G/T5fTAfbxP8mVTts66RXpHI6/0oHvV7NYnce
gubXavltsu5ozP8hQuevafamQ6jPlVLaDYjvCN0Y/tPpE7A9NcM6f89wfYs/
ypcyTpinn4jem9D3iONZv930fgAZNxF9ntZPX+0Y4LyvLBDUXsTT8/wI7j4g
Pzb2aHvEe8se2A3u2O4Dmz6uFYF09d9MbkXZDkV91pMmFVDu8yPDfX0o3wtC
BAnQmJ2vHcuG3CDh7zRrec2wKWg+28Mr1qvUKojlz2O5ybbOjNUHIl4ifQhf
kXKk/uC1LRamP5X9f5Si/4LIw4+AfFPusmb5Ego8lsF5yZdbCEn8opAL12A9
fbyhFLkw1TNWwEPw+ixRTwx3nZt8YtYK2vaI8qGDWeYphX3OMo+rGtxt6z3z
ZcPgMwn2X9cdXQsT23s9dHLCQKfXWP5wB1WWQj32Lcuzt8uG7M1XTu/lTM4z
j8A1H4rufd49HthPkPxE8GpJLVSicnnYkXu+MEg/KMrZVsue0sqTpPfr9u0O
vHSYVG9b1tMoX5ZQou+3rS57hm3fKcFb/fvNxBYOaP3Fc5smdxjnBxP1BEMP
izM4RvJM1AvMM593WRxHKxh4G2yfonqzLPOl+R0cVEnarbJvOfofzlQP6fwq
kS9Y+OutANrNOVr9IAuNz8+MC+kxSnGZ5FmwY43QoI/43BCL3QKmlF/3ujxI
fHt39L+2xC9unWkTIWP7BdoBQ38G8pdEOVL4CT7HslTyPRO+i/w0hX3w04Zm
AvubdWlIQNU35ufNsXp5IS6L5KdA/gsDeW+zyXHJyLiJfLe4spfeYsz/f/St
9Imp39B8X1Lwi2FA6LfYTybg/8mIAW1U7TpJn188eotbf2IVLBXPjzgV28nr
BTJAlt3Rv3LvX2NBbnNWDNR354OkYF2p/OTyZ/nLglcw/Kzs+23tc8JjPzQX
08G6Z8Do/lL+Ew3q8ZJmHszbVCtT/ABr3WD6PCQMIG+eImXcWINBOfe3OcHT
xP+p3NKJEfXSpzGd63du/31mLI4uTvZ/cu8Fx0Kd2bkQlTTK+3tYTpcyRJDd
oxeav+9v2LPDB+r5FVO7ZT+lXLfnr/8NPlcqi/4fXSU+3yPI1MTlA2IvPC9e
N2NvXCdXHhLBA1Op5734g67IlZ+CVm82PgSf07HPGRV/UFUolW7zTJnOe/EL
ujHKFycovc38/ucGgIKva0Pl0odObtTjvEETqfF+vO79N2CfWXPKGyYP4F+C
nB6tGM3jBNd2ZzRo+zR+ij+ijPn9abLCD+msmFe6/+n9vGJYdatNz7hiyv18
zo+UWGnfCwRxjRd3HT7sTO6aSw2TH1BZQfZ8In8gN7fDP3EvMGO/c8ee0u+z
Sofsh9LL5ox/2lsIcR7leLZvJxS/32sqfzxTa6ddnTMXkfN3BLzW2DVG+vkC
waNt1Pfy3Fek9Odsvep7kPOZs4dGXpV/PnWHd9LigJlUuv425Pef2qh58PiB
7xo+jlLH6/y4zOZS+cpXDWSuZzVX36hXr2qQ+VVjQe6B++L5BNtoA7N8tQ0J
tzorRoytO98p2DItCzpk92BMR2b50RDIi/GXKz6b/Xgjo3kUp/Vpyv0uTpMX
OH/ONZ22tMH5k2PlV97ipHz/G3Tx5T5ljM5TC4ym/NP6C9QLpyCZ/Cv71xnx
OVVBShE4j5PoffKFlZLn22E+P3/X+WHeoAHy3UNJ1w+1EXV0adlS0sXd/pUy
bkheyN40SOp/OWdaC1x8M2+Kkkz3w7PcLtTta3iobWtIfZa5XnU7cfu8Itsj
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
Qj1fP/DrBXSlh022YlAprdzooKx6gMANacUdltbdY8DRHIqLQ2G79MTdH8uL
UMDJTdDhF7p/puIc+qmZnvh/iz2ztZjPnLOTyPtZMvSTNaUGN1/gqDWlzyN+
NNdu+R1t3DyVb3ScnGcbQwd75b1yyK5rChT9uhQatGTQ0IntmPt3jF5xNzqs
xfFrfkQFqR5iVxR84Fy1u4Sli6WYlE+iF7EPBN89x3ebZmLW90r4I3Wdt5Dv
rSZC1QdfLvNaLoJrTQstHxLyCjCZ3zHRNyo8dHaIwKaQzkydlC2U+E1/1uVN
DNvI/Jw1wrdXu299WWL8mJYe2723oLZDS6nqsWGW1P93vuNv8vkWpnoP8stE
OkF8RvwOIl9Z6aivHwL1h+jX69suRX3er4CieuOxO+hurWqDzx8o4q88fAPY
ETtz0kNo/NIjN1TmRlHiE33nU/ih52s7qfcDMLLTrKaXOvKnMfJnLLdc6fvL
xPomB8j/Yb6h2ua9Med/XYKWnbLoz9yfYiDXyoX6PlKqfnf+dLGndmUG9OP4
uyurpqB+t/eA0V+1Q8njM6hcml1vLCTPr0dOKjs5frkno/7YfxLnteO+XJHH
WH5SIG+YMfiedjn6xxRypvUUj+u8WwV1+xB9CkuhlhXW75I0GPGBEsbvnbtq
Nrte+UD5z13Q+QFCz3jtHQNzqfMB8X8HgO81AcG1Pu0/PafIw9P87fovXAb3
pcqgl6yNAWi80rkf1m94U8n3KhHtjQ4S66uN+vFyZUd6uWmaGf3iDhdKo5+b
kiw1XzQlBOmNHPrLbbblFRCfVdegro8PM6ePji/EdppdTLbMkrLfje1P8Xz6
+RnIr8gqb2nw+yryeo28foOB/fO5HcH5zOrjrwrV6PdTBiSarUu480/kMZIV
cp/co457qKiSut4mK+RfqbzT4PRHl57foDSEku+82mH1u0etvpAQh8C1W90g
8d2NBXkbtKWu3/LU5lPncW3kPIXskXP++/syGqMfXQ9JzcvKs+jGaF+NNawE
nE+XARRovAiXSueIF3Hy4OWUlDBa/+cXfcLFt7I61Mqer7AhYEnwFSb1uN96
S83zK3Ab2aD7HrTy+/alQeJm5YWspim5dXpS4i7z98+nx2y800Uo1oPdTn9v
vDzJjpzhHdOgcbGs3rdw69NcDZ//dL9EJvhuQGfetSpwfo7EbQkni6MiYQQS
y0X9U59Ntlti/T+Qt9X+DRAvRX0QPn6eyxOoMG3TKQ9MvNU8aIx7ixtoHJ3F
Vec1qoalkN9Xy7KtmP+lQ2aXB7K1o+DefMumDjnidXiWfl61BP8eg7OVLzD3
j2m1aeo29rZM9OH4Siw32PX8sZmWkJbvWH3S3VYKTU+LPfgrxIdUn4Iu7rIv
5P3oiDNqX3LPnqCqL4Gfg6Tfc6J/8zHpe+wzdvz/ZMrluK12IfEDi2+dD328
IAY/G373FPIwVnjddw5XKt9EdGDp+tlRrBfsvKdXGdnvhu83SPiI9YLMj59f
eioEjs0cdd1JBRwvRsFvgenXaqhvXvGOsvNgfs+PXPOq+wLmcW5M7VYKXVK/
I9obnT30vz+35qRuKRT/eu/AlC17sPYm4bPPYhjtbw/tsU8XOMBEPUk3G3/f
MALNd67bs9D44kbcvQr85GrwOLh2viBsRf5CIB8yrwYdN5uG3neAqcc65oKu
r0+fcdVxQEe0/xi5s2IH5TPmCwInXOUs9muyg4ovPO4jNN++wu4KBUEhmmcA
4RMTvZemv5J+kf0Kb2bZQZK8QXqCyFckh76rqxjzAfSezi8ifE84k643aRCZ
PlnbdTzo1Dq8NARobyB8q1w6JeiNpV8fAdnT8xQ3TZUDuHVI/t5fhTLTT1df
r9ei7AUe4Lx6dPDL2GVdnzxeAnccU/2wyBDsj77Hl09sUZePheOc8hJC6mt4
evb3+IW7B523YZ/sceJd1aaPtcDcF+u4ZNiQ1YKdkuemI34rncSM2xh6cHi2
2lkIPWpWw8mCbV17dqHMlyMrZNlH3APaWUFfzpgOBrLlP+uzkHzuT2PntFVN
DMj7QnRykfibqa0+r7DB/VeyyldnSqODF65PuY4muLg+SWr/YlweQX4zvX1u
aqP3WB89Mbm/ehp+3WfDJUbrBYLjPuj83KHlMf6nM+B7/0Byp4Pw74ODwtqD
/R0WiuR80WvT8IDbd4D0YO3h7FV0/f/SxtoXp6xw/zs8thF5/sw3Ler0/K5M
dsKd5eUleX7z81fT7ERwfjUKubHHO96ANghuLFTP2QgT9Zlob3QQqc87P/h9
vNIi+H6E8qU55bKfowXZD1HOUuTOa3L0ikROxYtPp+7i48758SEF8PmbrO+u
B5pR7LeA5K63YU7gxi2uInp5U8PA8Vyc320yDiaD7bZil2f1kg5CSTtM9RrL
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
v/3ZufT7SkT9dJ4X9/mxNy4/qcAojTrfHTRM3A9+n9RjJLn/gZya/qchR1u/
uZy6vOb8bC80HuusdbdWlYPkv++Moj0xRPSbqDetksIGp7Wo//o9kV8ILLti
FOhl7wC0K7pyon0g9kbsp++KgVmmn8nr+YOUKz8uc6U8D8BZu/8OtPsU91My
l7yuqn0h+NL7Xeup6GQFdC+QPN89FJ/wsy4ej6ejUwKVPp1tVvY/+VXW4s4F
84smZgDtkMgHvkbpvYmnyP+X8Az24uoa9JzpoUAljaC75PyGIL8y0ca0W/sp
6P4O4ldjTM02bB0A1rsVqm/HqDmWQoqfp1tdXC1eX2bx9MHnWBnYI6P60vwr
9ruKhPkd3e/g6Oev25yLxcu2HvyKpDegdhG/SSwn+tuPQ3+VBPUm07ckps0c
6y/ke1JEfHuYWi4zf0blmQV3zT+I82ff4m9CZzUiDZKC6eM8KPxXnf7orEz6
tKEU6vmg8/NknhWJL3nvHP3e/uE/0b53VnZZk/ZlqTT/iINfzoS+m1YBnn/f
PdWp/OoM8Pxh/QH+riD1dbT99Hq89tALV6n5CbnhRvj9VKb7QP+rJ+h0A9Uz
3f69Nh14BV4/n9TEOqRVMPie1zjtIXc7eB3E9ov12jcDWJ+OT0R8SH1seer8
U4zxMaBXJijY/NZsW2UQ7PrRrYseJm9afSGILmy5SH7nuthtdlkje95tIv76
8kEKZA+5Iz2+nYqfCD3rBG3eq2PmzYj+TWJ5LJ4BbRb7wS05j6E2Zx28dB7S
z4OI+vEpa0zKlkfi8YdXtLNunu1wG3c/AKdbPDruHdrmnDurohTLL/bzDgVA
vhLLie/p7I0I1w1Tbjale6mET52zvvv1a4HTO/aNyU9I/CT2m4JO/pmNeVj7
ZgVeeQ20d6UL1fcdAveT+kOBn22QCs73w0Dv+ck5lxnr5yX7vlquWfR5aBB8
ZR2OXS/vKJTwCXnfOuOWo1oHIRVd3LO3xfrA35wPPvcMopepvIn0iOQxtWUF
LR9A72X1s/V5jx1/uuvrvXHAnO/4AwVD99TlQankk+OpRfb2fS59XBkFPZxx
L6XnERbRRTd+MfaH23emJYfi8qNwu5u8gTzXTxz/a2MkjECkXWI5U0hst0zz
fk+lTWi5rHhAzwj0jn88rM9sIake0i4If6z77lbPo4JgjfHJQzZ7gPHT0b3F
gh3boq1Q5u+Y9L8+ciDC4/pp/dcIN8Fp7XcZNutdSotXXvpF9tJjVYXM3zmd
nLzv5pB+9e4nU/pB7+n0BgQzW/d3y36xR24+isYdaFAlqd7GETmTOtocBH6n
ueZAR88uqL8Kjpw+TrjaCqVr17eY1uxlcNeHdrb9NDyZ2C37eudnMvOtoer9
vNbRY9nTA4zbF/llt/apkucgmw3VjhqoPcbvL+h6OqEGmjXOjMuKNGSiN6y+
bZnrr1vAMJuCpD9+d0frxSGFLsB6q2tDe0829yPRf9u7qmSsyX6Z9e3pYr34
kh5VUK/nRyE1lyUSf0bBH27t2brxbTmnmtafiuYJqwc/g3SavNa3Zcluxw1l
r3R6fz5/bLpepXWD00HXLgP+1cvvg/D5ufinKy5eQSlfdtsqUnsCc07O/NF2
TOxdDKd+DCotxdwft3e3da9Xmqsl7630szYaCsXnHHjWT9H73LDzPRO1y1DN
cn5FcjP0foNr/ltCFLoIqerLBY8c87qk1UK8P8tapPEUKvBTzt+rLMbPsVUm
nyfuvGnes9h88fyNm34wHvr4QP3DzQulUPSCTQd27nGQzLOYtB9y+yUUHtNz
x532defsRo5+DR3M0Rt86iC6b3lbxUNzdWadHRU+Oi/h6x3rpElXxqPni0qv
WXW6Vff/zR6YA84XsmGQ4zb1un0p7ur7GdCgjdG/dS3GSvC8zboEXT0ijmdj
Wabeg8rNHh4apyb1fnLWrBLK+2PqBYn9Q6BPjetzPQH6f0PUMxDM2N7W/a0f
eD8Y1J6In02aPoF0vE+MC2RAd+AjjdYzDMX85Te3YnRPDbtjIHpOeXa5klUT
I1S+PxJG3PiNiUft++XDII26/LECExU0rxdRb0CQAb/Y/s/I+w0IPNXZOfyE
fimQXxh9xZVPmfv77NBj9jBGfqx1yynPkbBrNKOpyvmtFND/m8UflG7O9guG
Z772OvhGZS2wP0h/NylYjc67I46X4Wu3wtHPNTJH/8+H7t2gabAYXQ+Muju0
zyEtin2I/UmcYc/8cHa4fg4aDz2384aiDoPm0OqlHHrPzVMk57GV+FXlWKi5
pjUVXwSdhmeT2lkZLLQ5vIheL6TYByUc2OxEeOfXlOvljCAiXzr7l0In2zTk
Cq3eI3ZzvdnV+SkF4DwnUtrlPdiTBD3+bf2tRxTuvCM/XA+fR7fvVepzONjx
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
JDvg1K6mxuPn0Eyi/+5hMLuhnpS/lw2vqvpVUl6AFoD5y9n8CShnedEl0bIM
KJ8bOvyEnQXoX6raa6mff7vZubVIu9gF+U/fyMk1xmJSV723/qXv16hOnOb5
aqg1/yqwvaJ8XRsC+WMcKPleUfu24HkuMmy5hc2z8zJblJ6H/9gQPevBzOd+
Le73QcHgwrOe21+WK5/f09Te/Le0F2L/6CA/1ectmfR/bR73/Tls/vgGisSV
lLjGezqW07r7pwb5Ndc52ZF480pGP+cVmYL3lfwLIS85hfEedEFUT2779j4W
X8ej2ecVOUC0ZvEHuR9TfC/9o8zH86PDlc+r4/lbe54o/hTsRXSxL/y8Colf
tvf84lvgPMWHgDle73XfH2s73teuy+anfAy8aJwrJztH6wLAc1suY7vIHJAm
VegJFvdVev4LPdOVMb4KDZ4rj7ttln8QOxe+npZFea9pjcUz8ckxZxnbM09J
/mJ5vY126u37i9HH4qsIbcPYX4iDEWy9W+R7ntpPJ03gfp+tvL7VIJXiHC/w
GcYX6joOXI/NrxmeF6jk/nIlkJ+/AtyPRYfdUs8LChcy4udvvUztd975ofC1
LWN/IDo8R+k8ouD3aO55iZns2OmHt/flLhh1hYkvdfHyJ9mmKvvOe5rwceIj
7h/eYdT+bNn1zPfBJ15vxjheEOwPV+++3U9s3wL1nq0/c/ubTgLtPCx9Tdzc
RWr5jUrw4bdN2bOOflL3zKvsV8HemF0Ic7cz7wf5h/QvumYIP3f6P60F61U=

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {65536}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {5376}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {65536}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/18" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/19" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e41e1dbf_400c_48bb_afc6_36f89af082c3", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
BoBR3gGYKA7AhM7f5gSlmwf/JWhmAVgMA8DCU2A0RxcAM1vy7NiZNADrdkej
Tfv1L0HVd5tDjf8eA2D9COzkt1dmUdaa1x87cwnA/NcA2K2ZY+oEzeNgtF5t
APvPlKB1tOcwWvIOACu6OTn0kc/GpzeCaucAbr1GAObGBLCp+2G0Ca5AwiEA
a6mE0dK3MujEdw3QHeIzFHSHOIGF7hDrEXeI2ZIJljLyDJbqArHI+KjX8qOu
Y9gBVAm2icplJKH/yZQlHBJRZPyj5ONfVED3iwWf7xf7orbfhGP/2/1i1XVd
1eN/fg/4f20k4p6wDd+a/1/uCaMLwOi7DeyiTPzar852oXYKnS4I9EGH6M5h
tKB0V80xuEKJdpSl+gSdC8eH1FkktS3JDNDHr+D2lklCnmWR2DupVTzX4rUL
BJYb/uSVvFztaBhXihUJWUwXqQ75gFNyAMWFz/D/MdlFNJlzfuG2/SbkJcfD
0s/63zI3p9hmBAm/9W/099+HZUzh0ubp6r7RsmlOlx4uoRQXMudv1ryZcXgd
62BA5sta6ibORX+txfz9YZyUuXwKurJkp7mytJOiubYyjuyUEWR5mLj7k0U5
NO7w2qSfTWhU3eeSJCyXq6u5TPMGU1/8+Xafv94W42NTM15jQlYkTXf8cwDi
Ug5j55fMYLkZOmHJX/omO3GTwziFzbptaBhMTzNMn2aYh/uEhluMT1ni95YC
3glLtLYfy3y7/wxzoFnXEl2zQZe08NtOJEPNbSc/hnfAMdFZ8in8ftQ7YYfW
XO4U4RbwpF8LJZNfkZcDjWfHIBottdQ0bjclr8kIungFp3Hz75Slpo3+xyRn
Zwln87U4dtw8dB8qZZXmPlSluWTf2v0hY/F7PFZOVeUBulvGXAnjWK621EJ3
mtao7jRlGu//zzgXc0r7iqrJJTS3ZhpVGM3i2tLVN2kku4qsSPb4vYoX0j7d
7XzPrAr9+iLhvTP0MIlerXARP1f6lX+1qaG2xWn+k2TLcv2dlHGpC9dnVrE5
1DKtm+hUNgc/M/uGrLk/oSdyKBdIpBxqiQ5tpmW1zqUs7aIpd7ESHdL0jCKr
ZOMTxH1NfVpcZidlRrm+jLSaFCVyKMwiRWpR1cd8F2ZS5pULDoqMiZO3m/3p
Py7MKrISGceUFMpc56DTlwc1N1yTHDVHWyezc0qsKBMuwhxQ/51GmaafV6Xj
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
1kh1IvzG/wEE9Npv
                    "]]|>, "orcInstance" -> 100889504, "orcModuleId" -> 
                    75651744, "targetMachineId" -> 58926576|>, 
                    139925782382400, 139925782382256, 139925782382336, 
                    139925782376448, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_5d3d2e54_f7bb_40fb_892f_fafc8c7aa5b7", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
/xQ1Cgv/DoXdwP4=
                    "]]|>, "orcInstance" -> 99876720, "orcModuleId" -> 
                    100727728, "targetMachineId" -> 102435472|>, 
                    139925782368800, 139925782368400, 139925782368480, 
                    139925782368256, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {4, 64},
                     "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "75528d63483215f8", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 736640, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 22, 18, 27, 18.287247`8.014723315057642}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|"Input" -> {{"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "low"}, {"medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 4, 4, "small", "low"}, {
          "medium", "very high", 3, 4, "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "low", 4, 2, "medium", "high"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "medium", 4, 2, "small", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 4, 4, "large", "low"}, {
          "medium", "low", 2, 2, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 4, 4, "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "low", "low", 3, 2, "medium", "low"}, {
          "very high", "high", 3, 2, "small", "medium"}, {
          "high", "low", 2, 2, "large", "medium"}, {
          "medium", "high", 3, 2, "large", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "high", 4, 2, "small", "low"}, {
          "very high", "high", 3, 4, "medium", "medium"}, {
          "high", "high", 4, 2, "large", "medium"}, {"medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "large", "medium"}, {
          "medium", "medium", 4, 4, "large", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "high", 2, 4, "large", "medium"}, {
          "medium", "low", 4, 4, "small", "low"}, {
          "very high", "high", 3, 2, "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 3, 4, "large", "high"}, {
          "low", "very high", 3, 2, "small", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "high", 4, 2, "medium", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "high", 2, 2, "large", "low"}, {"medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "medium", 4, 2, "medium", "high"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "medium", "very high", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "medium", "low", 4, 2, "large", "medium"}, {
          "very high", "high", 2, 2, "large", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 2, 2, "large", "high"}, {
          "very high", "medium", 2, 4, "small", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 3, 4, "small", "high"}, {
          "high", "very high", 4, 2, "small", "medium"}, {
          "very high", "low", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 2, "large", "low"}, {
          "medium", "high", 3, 2, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "medium", 2, 2, "large", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 2, 2, "medium", "medium"}, {
          "high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 2, 2, "large", "high"}, {
          "low", "low", 2, 2, "small", "medium"}, {"very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 4, 4, "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "very high", 4, 4, "medium", "low"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 4, 2, "small", "high"}, {
          "high", "high", 4, 4, "small", "high"}, {
          "very high", "high", 3, 4, "medium", "high"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 2, 4, "small", "high"}, {
          "high", "low", 3, 2, "large", "low"}, {
          "high", "medium", 3, 2, "medium", "medium"}, {
          "medium", "high", 4, 4, "small", "low"}, {
          "low", "low", 3, 4, "medium", "high"}, {
          "high", "high", 4, 2, "small", "medium"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "large", "medium"}, {
          "very high", "high", 2, 4, "small", "low"}, {
          "very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "very high", 4, 4, "large", "low"}, {
          "low", "medium", 3, 2, "large", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 2, "medium", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "very high", "low", 3, 4, "large", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 3, 2, "medium", "high"}, {
          "very high", "high", 2, 2, "small", "low"}, {
          "high", "very high", 3, 2, "small", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "small", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "medium", 4, 2, "large", "low"}, {
          "low", "high", 3, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "small", "low"}, {
          "medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "medium", 3, 4, "small", "low"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 4, 4, "large", "low"}, {"high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "medium", 4, 2, "small", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "very high", 4, 4, "large", "low"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 2, 2, "medium", "low"}, {
          "high", "low", 3, 2, "medium", "medium"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "low", 4, 4, "medium", "high"}, {"very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 3, 2, "large", "high"}, {
          "high", "low", 4, 2, "large", "low"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 4, "medium", "low"}, {
          "medium", "medium", 3, 2, "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "medium", "high", 4, 4, "large", "medium"}, {
          "low", "high", 2, 2, "medium", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "low", 3, 2, "medium", "high"}, {"very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "high", 3, 4, "large", "high"}, {
          "low", "medium", 2, 2, "medium", "medium"}, {
          "high", "low", 2, 2, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "low", "low", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "very high", 2, 2, "medium", "medium"}, {
          "high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "low", 2, 4, "large", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "medium", "low"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 2, "medium", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "very high", 2, 2, "medium", "high"}, {
          "low", "very high", 4, 4, "small", "medium"}, {
          "low", "very high", 3, 2, "large", "low"}, {
          "very high", "medium", 2, 4, "large", "medium"}, {
          "low", "high", 2, 4, "medium", "low"}, {
          "very high", "very high", 4, 2, "small", "medium"}, {
          "high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 2, 2, "medium", "low"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 4, 2, "small", "medium"}, {
          "low", "low", 2, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 3, 4, "small", "low"}, {
          "low", "very high", 3, 2, "small", "low"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 3, 4, "large", "medium"}, {
          "high", "high", 2, 4, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 4, 4, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 4, 2, "large", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "very high", "medium", 3, 4, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 2, 2, "medium", "medium"}, {
          "low", "medium", 4, 2, "large", "low"}, {
          "very high", "very high", 4, 4, "medium", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 2, 4, "large", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "low", "low", 4, 2, "large", "high"}, {
          "high", "low", 3, 2, "small", "low"}, {
          "low", "medium", 4, 4, "large", "low"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "low", 2, 4, "large", "low"}, {
          "low", "medium", 3, 4, "small", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 2, 2, "small", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "low", 4, 4, "medium", "low"}, {
          "medium", "very high", 3, 2, "large", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "low", 3, 2, "medium", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 4, 4, "small", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "high", 2, 2, "small", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "very high", 2, 2, "large", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 4, 4, "medium", "medium"}, {
          "high", "low", 3, 4, "medium", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 2, "large", "medium"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 2, "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "low", 4, 4, "medium", "medium"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 2, "medium", "low"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 4, "medium", "high"}, {
          "medium", "high", 3, 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 4, "small", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 2, 2, "medium", "medium"}, {
          "low", "very high", 2, 4, "large", "low"}, {
          "medium", "high", 2, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 4, 4, "large", "high"}, {
          "very high", "medium", 3, 4, "medium", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "low", "low", 2, 2, "medium", "medium"}, {
          "high", "very high", 2, 2, "small", "high"}, {
          "medium", "high", 2, 4, "medium", "low"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "very high", 4, 2, "medium", "high"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 2, "medium", "low"}, {
          "low", "low", 3, 2, "large", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 4, "small", "low"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "high", "very high", 2, 4, "large", "medium"}, {
          "very high", "medium", 2, 4, "large", "high"}, {
          "low", "high", 2, 4, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "low", 4, 4, "medium", "high"}, {
          "medium", "low", 2, 4, "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "medium", 2, 4, "small", "low"}, {
          "low", "medium", 4, 2, "large", "high"}, {
          "medium", "medium", 4, 4, "large", "high"}, {
          "very high", "high", 2, 2, "small", "medium"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "high", 3, 2, "small", "low"}, {
          "very high", "high", 4, 2, "small", "low"}, {
          "very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "medium"}, {
          "low", "very high", 2, 2, "small", "high"}, {
          "low", "high", 2, 4, "large", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "low", 3, 2, "small", "high"}, {
          "high", "medium", 2, 2, "medium", "medium"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 3, 4, "medium", "medium"}, {
          "high", "medium", 2, 2, "large", "low"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 4, "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "high", "high", 2, 4, "small", "medium"}, {
          "medium", "medium", 2, 4, "large", "high"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "medium", 3, 4, "medium", "low"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}}, 
        "Output" -> {
         "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "acceptable", "very good", "unacceptable", "unacceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable"}|>, 
      "Predictions" -> {
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", "good", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "acceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "acceptable", "very good", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "good", "unacceptable", "acceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable"}, 
      "LogProbabilities" -> CompressedData["
1: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
Unfldg70KEJ9mFJI6gth/5/8Pwv0Zt4=
       "], 
      "CountMatrix" -> {{258, 1, 0, 0, 0}, {0, 64, 0, 2, 0}, {0, 0, 11, 0, 
       0}, {0, 1, 0, 9, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwl0+lrCAAAxuHNZGxjGzY2O4yxZXNnyzbmZlhsxpj7KORK5Mx95MyZK3eE
kCvlzhU5c6TkCOUKOcIHR3jw4Xnfv+CXNGhM4ejAgICAUubfE0RpgilHCKGE
UZ4KhBNBJBWJIpqqxBBLNeKIJ4FEqlODZGqTQipppFOfBjSkEY1pQgaZNCWL
bHJoTi4taElb2tGePDrSic7k04WuFFBIN4roTg+KKaE3fehLP/ozgIEMZghD
GcZwRjCSUYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZ
wUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznB
SU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFL
XvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xm78RBAb+7yGIMgRTlhBCCaM84UQQ
SUUqUZkooqlCDLHEEU8CiVQniZokU4vapJBKHdJIpy71aERjMsikKVlkk0Mz
cmlBS1rRmja0pQN55FNAIUUU05NelPAHziVs4A==
         "], {233}, {}, {}, {}}, {{}, {5, 8, 19, 20, 23, 35, 37, 45, 52, 56, 
         67, 72, 88, 89, 98, 101, 102, 111, 112, 114, 117, 124, 135, 142, 149,
          163, 166, 170, 180, 182, 183, 197, 200, 207, 212, 214, 215, 217, 
         222, 226, 227, 237, 242, 246, 247, 260, 261, 265, 280, 283, 290, 297,
          304, 308, 309, 312, 327, 330, 331, 334, 335, 336, 339, 342}, {}, {
         42, 332}, {}}, {{}, {}, {33, 41, 46, 66, 78, 110, 155, 305, 318, 326,
          341}, {}, {}}, {{}, {174}, {}, {6, 61, 68, 106, 191, 248, 253, 270, 
         303}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "very good", "good"}, "Weights" -> 
      SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.0007459537572254334, "SingleEvaluationTime" -> 
      0.00686825, "Version" -> {13.1, 0}|>]], ",", 
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "84927d99-f12c-4f71-ba49-148fdae16204"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "346"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"99.4", "0.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    99.4219653179190743231`3., 0.4081394480165771443`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"74.9", "2.3"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    74.8554913294797756862`3., 2.3357365785874173447`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.974359812778236134`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0142607803867494942`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.9458382520047371456`3.", "\", \"", 
                    "1.0028813735517352335`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.9458382520047371456`3., ", ", 1.0028813735517352335`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.0259746259207042744`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0146355289962333442`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "0.0032964320717624139`3."}], "\", \"", 
                    "0.0552456839131709593`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", \
-0.0032964320717624139`3., ", ", 0.0552456839131709593`3., "]"}], 
                   "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"7.02`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"1.08`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNKc+TIrfiw5a19wUOV5Z/kX9vzZJs0mvQ9
JtkclYBZDyvc3trbTF+/vKXupX2D/42KewvukWzOgVbOrl7HN/ZlN2Xj3QWf
2nNsShRf/PEkTvWJwsJLeY3e2d9dwf1t+4839neVrbTfRL+Ayz+sElnn/vCW
PQMKoDzcADrcXVw=
                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["259", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "259", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{259, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["64", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9846153846153846`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{64, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9696969696969697}], 
                    Row[{"FScore = ", 0.9846153846153846}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.16666666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.030303030303030304`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.16666666666666666`}], 
                    Row[{"Row fraction = ", 0.030303030303030304`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8333333333333334`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9090909090909091`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{10, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8333333333333334}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.9090909090909091}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "259", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{259, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{66, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9696969696969697}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "259", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{259, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{64, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8333333333333334`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8333333333333334}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["259", TraditionalForm]}, {2.5, 
                    FormBox["66", TraditionalForm]}, {1.5, 
                    FormBox["11", TraditionalForm]}, {0.5, 
                    FormBox["10", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["259", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["64", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["12", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "very good" -> 0.25,
              "good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"high", "low", "very high", "medium"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "medium", "high", "very high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 3, 2, 4}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 4, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {4, 
                    Interval[{5, 
                    DirectedInfinity[1]}], 2}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"large", "small", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "very good", "good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJztWUtOAzEMHVggLsABuAIcAHGFcoIiwaoSUlkgdhydIlSpGs0kdvxsv6R9
EqidZpL4G/vl/vVj8349TdPn7eHfZvv1vN9vv19u/r68bXePD7urw8fpbprh
5+n/T4qlsZr3I1Hbl1Z2zZqMOmmxXaQcjDrLQFSMlfy/J7tf/KZvlOx3sS0/
RrRRtEzIusFr79I4XfuMWFc6X8u6iFp4/huqxvQ6/7XjUftA1DjZeWces0y1
9Ajw1BdybmkeiIZnTl5aSzKvdB+lcR59uxeW9l4bMwJKfi/RSek3T77KksM1
crWuj4ZnPeWBFr6ixS5Z8rLouQUI/x8dkrPrOEZzpvZ0Jmqw5lPZnBHS17Pt
pjmrW+YZyTe9ZRlJVxqU4imzv15au7X+tNSDjD6ByMVouWo5jKH287jvytrz
ab6y8Het+2eMi9GgOZM8fBs1t2bdXv2KkXOw1jQMHKrm3NDEiuf5x1w71ICo
t06foeM7Ih961rNLz6N0EgWv/Zxrj1ZDDzphyYkttXJvnDRDPpH2SohepBd4
98ORvWgUfxDlE9Z6gcV3Jfd0KDuyyLwEiR48143gqz2B6qXYcljrelZ/Qvem
Fi4cpWPm+J+jZj+W+tQTTByVhBdYsk2mDCje3PNuBpGLR46BGjK5TuseUO+t
8XYsZ7OFS2P3bWn8WrhZj94zCi06QNeo2rWjUbJ3pl3RNrDMw+rfEcg+Xyxj
I+2GjCOkDrTzIO+Y2OKmhVPO9KGIuTxqiNa9WOZi87U5vO5Jjs9ZOL6MedE1
i9cciLwqrcc97IXsKaLlWOtTJe954HQ/GbGL8M81f7D6SUQuz+AokDhHXn4O
Sf3fs3wMqMWkNr6tOSaiDongQJh9ky23eNrDUgPMY0N6frFwbN5g5QFq0PJK
ePl+AdHsMFc=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {5376}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJACZAoMGeAQXA
+CAaGROSx6cPnSYGYDOPVD345NHFcenF5XdseomxGxcfWS+x7ifGTGxypMYP
KeGJzyx8fsZnDz71uNTgspOYOMTnVlzmE5MG8LkTXRxbmBDKC8SaBwEAQ41N
ZA==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJztWUuuBMltHGsh+Bq+gnwAQVeQTzAG7NUAAqSF4J2Pbj8ID2oUqqv4iWAE
q18A0sz0qyKzMplkMPhv//mXP//373755Ze//ev//9+ff/37n/7611//5z9+
//Uf//Xrb//+h9/+5Zcv/OP//4n//eM//jcJtL939u78ML772+aWPUXs0fS3
3sFtPQgwY5XpbyJ+WOeNsDt9bm44W+vxt4k4RNuahPu6N60vulbVNx35Q2Ud
V5yu813qPcmsQR2TaB7IqJFZm+/iqhqjLkBxZ0W/wYR6vUxeh8yDEf7y1L18
td/leu+eO7Ph2jNUsLVHmMqbKL9s28eY3VAXne5BBIg9jeRkp31RaXDde+m0
hy7I5gXF2TtpLlvu7sa+OgJ0rDLfn/DJnpc5x8IZUPFxVTuiPdRUDax+c4e7
OMYFIhej9TyUzsWEuv9Basqvv3e+A9VLOmLDGq+QqXnutZExF3GCo+bg0Jt2
/bC+YeK+OMztOu8iOKZzj+yAp2nqX0DNKhk2ngjUvnzC/rr3JAjf6Dlrdz2v
76O0alfNSqmPMmP7eHZoDqXOPd37ol7/N7IxOqWNfcp89XVvFD25ggu4zYQy
mOLeDjoO2vemO313X9Q9OwKb9J5MnULo1QigdfOrmJw8y80x/wpHDbYC17zq
uq67513yRwQMnazSc7tyAYZewOSvipqM0ljQmFiHay7Lghk3zt/utLare5SN
M4VWsqnuVXGXu9H5220fWbO2il+FLeX84Du+WLqE27zg+53p+EKfcbUOMvrn
zH6q9B10jkHWt4nepgKXOuGiCTruucsZfUMxu1Gikle2fFsXE7NDVD3rPO+o
GznUtq5fVt+C6qfUvWmWA0bzkrIfmcDVdzp/Q+T8JmKSqTWz7TFsOsfMK1xr
AmNedPf3qRhg5pipnrvTKznqP4h3mZjSp179se2jdGx27UHeKZf4qvK+rkai
6s3e2djGa5Wa6mZ0NJltPcEP3uMJ51apd446Nfp9hK9p/WYTZ5jANM89+ka8
y5wDXvlG8OApvShje2oN0zNXZQ8+5U8JtKbC3O8Jrahra0qjUsbZphhX6ODu
OhTqjjI0i4z/SZufeN8q++OwT4r5nYM9JNg5xfnbUUDkRwddDa1vM99BoNPT
RPaqy02rPS/iHCP+or9X7CLXPMkppmconfeQdRQRe+g1uYF9L5WI5j+FzqXU
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
1q/2pTo7uHqmYjvzDiuXdWPnXV7ZprO/W/+m2YhjPlSv6S4XRNcydZ8+HShN
HOmXDWWOYWvaDvyke/fZ2Lo/bJ/veNVkD7P1bBT1yq1vvOP/qD4UZevbDouT
Z95lgGW7EhfHfNKti+o8MbkGRZ8SscOI941xwIQrV0DbYGm3LDsTGhQa0z5d
8hYLyBrm/q0ZML4lolN09Gdk3zzNuxC6O+I9lp+z5ya+rTsTekL+c+KOCL8q
dHumd3YmcpbzTCaTt12+MYK7fhntI/KsKg7Y+mM1flQxg+7D2bE1rXFNxAL6
XQQqPAStp0bhMKdCIrqPV+dzd2fUmkF0TR2OzY5HdR2N2HDvQ9Vw0J2v3mX6
6tpzr2+O+r8673beRcTiWXwj9JfJHK+KK8Y+MbkBQmN8jQ/2vjtyJjcwuHan
B71aj0tPrfYzwbUzyNaRDfx9Wpc4/g3NE9F9CNoGg7cj3432omw98sp3x1b3
GbRPBRD7OlW7mFqI6/ncwUU3RN3vq3/vYkqDj/hXroMBRA7YuBfT2tanAsmn
I1x0G1RxGLn3W/YbUUuv4hQ12+noSVuw/buiPYbz/OEsxtD3A2UXZYNh303b
Q/m++i5Hvava9z9RC1Dqu5M63pSvuzs+sd+s3Kzwye4brzjUJF/NzOs6fNEB
DppLZ96UtZH1gTjrCXT082qedNyHDN5xoomZFyLmz56t9PiKGoO0xeKHT4l7
Rm2q3p1NQNeUK61pgpNXfah1gAmtI/OsIw9A1iykrs+Eel1P1CAimO6br+6b
w5459n4TuqvD3n8BWR9coeLoEQ6M6MuVHIN1f11jcVK77WAi5itcbrL/r9pn
+LmzX9nDSO/DOqMIZ3a9w0ywtCmULQQyZ4vgFw5xVNV/p9ZRsVNdO/M8kPpA
N7+ifCOgvgNb9FzlmaPB5D4THOp4Fo57/A3ntR3hrDGere3qTk58C7vOsXPj
1Pkq4miCS0zZu8rXqlo0zUMdea9TfnSFao+y94Oha0V5llIr6uJunxUawg/i
QPXF7N4WoR1mgcodCL6n0E6UtdHxHiPOQKUBse6Gc894BGqmuJlHV99H7V3n
PYe4RwA14+jmo8lc5HgORzDyN/u738XFhv3OQN1fTMV5Vs9havloIL6t6iNb
VxxqTXbmpOi1XWMNAVQMqDWw7jMT64jaqfJDJc924GlduOkLV++z53Lbgeo/
fuAF5xyH9HX2jvMcz/3uqDgAMh+/06scc35HQ3CYpz21LkxrWQwtKXo2x5xZ
zfEZf9H3quue1oKY+QtlRzWrmJ4LqbhPlnsoedKETYf6hLa7TQeK6MJP48zT
dSBSPxFxU90HNu+N+jnzx9Dwutwt8z7jWSbOzipyfpG9mq59qJzF5PoOZ+6C
7n2r2FaiGy9u3/SurnVzwFPPP4NKfZjKt8q9zdbYyG+VZxjvvr7v1sNN9yzK
HokN9HegYo7hw1HTmPyWTl/C5EdIZPtStG52Z5dZR7Po9H0O5x7Vj46/XT1f
XUfU5t16UD1rNY8i9wIR61P63VksMWPm3RoYYO+rc194hqetkalFbtirK6jq
G0q36+rsLLzmy2zujPw9+h7LTxdV/jetG6PXodYKKpwjum/b6twVpngV+lk3
bMsvTN+OcFtrlnO5rR+J6W9zqmln9llaLJOLRG1HeNumOdCUP4f7j1gDIqdd
xUwknrL3QLn36D1X+O/g2F9m3z37dxTQsxeUDxc8Ye3b777KD1KLnDqLbr6o
cJkrnyzt5kynq9qKPquurZWYQ6x5okZ03+u+W7XJ3N/JGRrbZ8Z2t5dzq9kT
++2kgW4B695Nax8ZG6i1ZG2+q0WoGo6oUZlvY9TE6N8V+lCXF1b+3sXUPT7b
nwo/zfisPn9nw0lX3lJz0Ll1y3d/QcFRUe+gtTXFuVVyLIqHR6GKERYPm373
Bx59qTMcvwGVUxl9WjZ3bNbQVXpPBYgeEfUuyl+1F2Ct5e4ZR0S58TS3iUK1
z4p+sgKkX9V9iwLdd0z6ZvWoTrrDE+CaBz8JbprY8e5HbHW59+RsU6HJV4Co
T873VlFXsrOoLlz236WvYPpA93+oHshdH52yH/Wl2udpv6+57C7XV+rjJLdD
5tUNOlaVr0zXn0m8q81TtXpa+1fNYZ9WyzN5ykXjddG/jjG4LWdc4XjeWzTK
KCZ73uwaKnYc7oSD3hi5ix1NBYWNdSvCLVxqRMSHU45C62LbtOWJPj3zN7f7
ydRiJ3pQhu6L8KFANAdN7Gkm7h1qIrrmRPy941dO8XbHZ5/Qf51BeS6M+5f1
4XQW32DeF5fvVcUYqo4yeyCXMzqDcm3O+/IFFd9C9ezItdw9w8plbn0Hw16m
B0fVP6cZwtkaUM89AU53nW1fMdth+WRqFAg/DncIWTeidahS1zPvVJ5FxKbi
PJHrj/jpvjutqWeed7iPr3DJi5Gcp9ar0ejmeUUdncATe4SNmNyDrfuN7GWm
dK5qHq3o7Ypee6Ovyhqme8azfzrr2w7nd4coL4z8HcGBWXroNP9l9uXIXsM5
Rt10Ope9QtVpBNCzVWeo+53Ne3fEtE56hSfpwe5w0P/d0eG1zHnyE/b2FZOz
E5S2/BS48NYOl0afKXJm9Mk97RdU80o33Xqjb5SuU/G7CdV9cohxlh6j6tEm
OVv2/WitifagGX/o+oSO+cos4i52uzxiSvdSxWvVHoPzofwgbTL2d2NtQzyT
eS5qx3nmlMVkz4PEZH+DnLcwoe5fGe+66yZPnz1N67XIXK2c13Q4xMaYuuuN
0Darz09pvl17U1y3agt9v1xtTfg928tsXlTWSdWMs5IvN+lNXahne5EYRmoo
CF2qsobpPrRif5pbXEEdlxNQcREWupoYu75v0zG2aEhOPDSbZxk67pQNNdia
1yRnrOQLli7BBip+mf1GFwytYRKT8xinutjtcavPKm1OQjUPVtlVI3qPr2qp
+3wD5V/VI6PuhIpLZmx29BYmru4JQ+eJ2qn+fXJfo/t2ty/qXKEGQv/69D2c
xnQtyPS8zP71bB2TWo/jLOnq78fct/GOI/gRs39i2WbVcpeZzJR/ll61YY7R
jbcqt586O2StmboXd/vM1MAynDnzfsZPtU+r7snkHXTp0avzoElOdVxD5LlJ
bfhp+Z0J9jpQvT7a/93zV7m+o7NcPdetfY5x/7pnLjH/BSWXrvR2Ku1OFS/H
/2bndXR8dnMES3Ng9VRIKLjMBNQ5ZytU++aUD6LPINbSecf57kbr5BadbRoM
nZZxxzJ3zUVfRgO11rvfWf0dOx+68qDIuphrReqyXSD74Wz9zdSxOz9ILXBL
Dvo0Duu8tmlUZwgMnz94j4mzqPYDjF4HFX93tSL7zVlexNTCkGuufFcGjD5i
Wx6p9mToXvjde9V42sYfMvcyYuvu36Pvd3xHbaLPrmuPlfeQPB7tAwH33Mfk
j1c+3eC4Jjew92jyDJzOuzoHOLu76N6AkfeR9RzlS9FHM3uJ7jtRexWuPFHz
Ge8j0eEvW/bBQZ+4s63Q/Zm+kLGCyK1XterpiObGTf3JT6/wg3dQn1Umx7us
tcvnqnVtmxao8HP0d7XvE/ziLmbcYsGhV5nAVX7p6s5RP5lnrmwzejPnM1XO
SDoxgNLWmfyPnRO7a0H2N1249UdIjQ5po3Nf73JUJT9386YrFJyBjeyZMrFx
/1RA3XHE+84zqkkO9hO/Os7L4grbzzRbizPnx+SybBvZv03zc1fdaKI3zNiO
xndFp0IiW0O7d6tiz7mOX73jOH9BrDXTm2UQuTPb654ronng9XzVZ8H2P9nL
nNli6LsIIPs2VZ5/BboPPcuBHR9nd27qjBH+7njrT38UA5P/d9fh4kt57ncx
jcrnCn4UyXEZW6ga96OV/ROdHl7B6RSaw1QOrdY39p6g63jXjtt9Q+1/9T51
YoXJ0bL22ZqIQiu78+fUG1/Bta9E+ETrk8ff0bmcyV+Qmh4anXtSvftnPqf4
MvN9pk61NY8puOWV/ckZwV1tivy+Haq+MHrenR7MRQfqoLKfqt4lU8c38D9n
TPRNnXccfVSgXherf47aZ9tD8z9U/4JYi8oGYg2Mb4n0FXdctXK+iD7G5X5F
/TnEUQXK+6tAtNdWf5fSf3c/1HuHAntWcvasg17s7kMdX2r/HUzk8Y21IlvH
Xe6p054ydOwpHZTlN8qht9dXxzVVkNHup7Wdahw95Ww+Fc6ak1ufcvZ3B467
oX5HsG29Xaj7swwUswbG+0wOrv7ers/szM8hfqu5kYUuB0Nz9W+bqDlAFM65
7ArI3swB03xq031T2p84F5Vdl9iP4JgXO3pKdv5Z+U0900Yju0cdHy695Tvw
zvr/ACXfhPE=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {65536}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJACYa7BkwAEwM
mUZWh8yHsdHl0c1GtweXflzqiDEHG0A2n1h/EdKDSy02M/GZS6xZ2Mwm1kxC
4UGMW0hRQ6oZ2PxJrF+JjRdc6YsYd2GjiQlLbGYTaycxYURpeENoAHoUhtc=

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {5376}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {65536}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/18" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/19" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e41e1dbf_400c_48bb_afc6_36f89af082c3", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
BoBR3gGYKA7AhM7f5gSlmwf/JWhmAVgMA8DCU2A0RxcAM1vy7NiZNADrdkej
Tfv1L0HVd5tDjf8eA2D9COzkt1dmUdaa1x87cwnA/NcA2K2ZY+oEzeNgtF5t
APvPlKB1tOcwWvIOACu6OTn0kc/GpzeCaucAbr1GAObGBLCp+2G0Ca5AwiEA
a6mE0dK3MujEdw3QHeIzFHSHOIGF7hDrEXeI2ZIJljLyDJbqArHI+KjX8qOu
Y9gBVAm2icplJKH/yZQlHBJRZPyj5ONfVED3iwWf7xf7orbfhGP/2/1i1XVd
1eN/fg/4f20k4p6wDd+a/1/uCaMLwOi7DeyiTPzar852oXYKnS4I9EGH6M5h
tKB0V80xuEKJdpSl+gSdC8eH1FkktS3JDNDHr+D2lklCnmWR2DupVTzX4rUL
BJYb/uSVvFztaBhXihUJWUwXqQ75gFNyAMWFz/D/MdlFNJlzfuG2/SbkJcfD
0s/63zI3p9hmBAm/9W/099+HZUzh0ubp6r7RsmlOlx4uoRQXMudv1ryZcXgd
62BA5sta6ibORX+txfz9YZyUuXwKurJkp7mytJOiubYyjuyUEWR5mLj7k0U5
NO7w2qSfTWhU3eeSJCyXq6u5TPMGU1/8+Xafv94W42NTM15jQlYkTXf8cwDi
Ug5j55fMYLkZOmHJX/omO3GTwziFzbptaBhMTzNMn2aYh/uEhluMT1ni95YC
3glLtLYfy3y7/wxzoFnXEl2zQZe08NtOJEPNbSc/hnfAMdFZ8in8ftQ7YYfW
XO4U4RbwpF8LJZNfkZcDjWfHIBottdQ0bjclr8kIungFp3Hz75Slpo3+xyRn
Zwln87U4dtw8dB8qZZXmPlSluWTf2v0hY/F7PFZOVeUBulvGXAnjWK621EJ3
mtao7jRlGu//zzgXc0r7iqrJJTS3ZhpVGM3i2tLVN2kku4qsSPb4vYoX0j7d
7XzPrAr9+iLhvTP0MIlerXARP1f6lX+1qaG2xWn+k2TLcv2dlHGpC9dnVrE5
1DKtm+hUNgc/M/uGrLk/oSdyKBdIpBxqiQ5tpmW1zqUs7aIpd7ESHdL0jCKr
ZOMTxH1NfVpcZidlRrm+jLSaFCVyKMwiRWpR1cd8F2ZS5pULDoqMiZO3m/3p
Py7MKrISGceUFMpc56DTlwc1N1yTHDVHWyezc0qsKBMuwhxQ/51GmaafV6Xj
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
1kh1IvzG/wEE9Npv
                    "]]|>, "orcInstance" -> 100889504, "orcModuleId" -> 
                    75651744, "targetMachineId" -> 58926576|>, 
                    139925782382400, 139925782382256, 139925782382336, 
                    139925782376448, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_5d3d2e54_f7bb_40fb_892f_fafc8c7aa5b7", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
/xQ1Cgv/DoXdwP4=
                    "]]|>, "orcInstance" -> 99876720, "orcModuleId" -> 
                    100727728, "targetMachineId" -> 102435472|>, 
                    139925782368800, 139925782368400, 139925782368480, 
                    139925782368256, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {4, 64},
                     "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "75528d63483215f8", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 447360, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 22, 18, 27, 18.698522`8.024382263909242}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|"Input" -> {{"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "low"}, {"medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 4, 4, "small", "low"}, {
          "medium", "very high", 3, 4, "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "low", 4, 2, "medium", "high"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "medium", 4, 2, "small", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 4, 4, "large", "low"}, {
          "medium", "low", 2, 2, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 4, 4, "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "low", "low", 3, 2, "medium", "low"}, {
          "very high", "high", 3, 2, "small", "medium"}, {
          "high", "low", 2, 2, "large", "medium"}, {
          "medium", "high", 3, 2, "large", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "high", 4, 2, "small", "low"}, {
          "very high", "high", 3, 4, "medium", "medium"}, {
          "high", "high", 4, 2, "large", "medium"}, {"medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "large", "medium"}, {
          "medium", "medium", 4, 4, "large", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "high", 2, 4, "large", "medium"}, {
          "medium", "low", 4, 4, "small", "low"}, {
          "very high", "high", 3, 2, "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 3, 4, "large", "high"}, {
          "low", "very high", 3, 2, "small", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "high", 4, 2, "medium", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "high", 2, 2, "large", "low"}, {"medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "medium", 4, 2, "medium", "high"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "medium", "very high", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "medium", "low", 4, 2, "large", "medium"}, {
          "very high", "high", 2, 2, "large", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 2, 2, "large", "high"}, {
          "very high", "medium", 2, 4, "small", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 3, 4, "small", "high"}, {
          "high", "very high", 4, 2, "small", "medium"}, {
          "very high", "low", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 2, "large", "low"}, {
          "medium", "high", 3, 2, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "medium", 2, 2, "large", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 2, 2, "medium", "medium"}, {
          "high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 2, 2, "large", "high"}, {
          "low", "low", 2, 2, "small", "medium"}, {"very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 4, 4, "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "very high", 4, 4, "medium", "low"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 4, 2, "small", "high"}, {
          "high", "high", 4, 4, "small", "high"}, {
          "very high", "high", 3, 4, "medium", "high"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 2, 4, "small", "high"}, {
          "high", "low", 3, 2, "large", "low"}, {
          "high", "medium", 3, 2, "medium", "medium"}, {
          "medium", "high", 4, 4, "small", "low"}, {
          "low", "low", 3, 4, "medium", "high"}, {
          "high", "high", 4, 2, "small", "medium"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "large", "medium"}, {
          "very high", "high", 2, 4, "small", "low"}, {
          "very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "very high", 4, 4, "large", "low"}, {
          "low", "medium", 3, 2, "large", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 2, "medium", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "very high", "low", 3, 4, "large", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 3, 2, "medium", "high"}, {
          "very high", "high", 2, 2, "small", "low"}, {
          "high", "very high", 3, 2, "small", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "small", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "medium", 4, 2, "large", "low"}, {
          "low", "high", 3, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "small", "low"}, {
          "medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "medium", 3, 4, "small", "low"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 4, 4, "large", "low"}, {"high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "medium", 4, 2, "small", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "very high", 4, 4, "large", "low"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 2, 2, "medium", "low"}, {
          "high", "low", 3, 2, "medium", "medium"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "low", 4, 4, "medium", "high"}, {"very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 3, 2, "large", "high"}, {
          "high", "low", 4, 2, "large", "low"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 4, "medium", "low"}, {
          "medium", "medium", 3, 2, "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "medium", "high", 4, 4, "large", "medium"}, {
          "low", "high", 2, 2, "medium", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "low", 3, 2, "medium", "high"}, {"very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "high", 3, 4, "large", "high"}, {
          "low", "medium", 2, 2, "medium", "medium"}, {
          "high", "low", 2, 2, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "low", "low", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "very high", 2, 2, "medium", "medium"}, {
          "high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "low", 2, 4, "large", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "medium", "low"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 2, "medium", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "very high", 2, 2, "medium", "high"}, {
          "low", "very high", 4, 4, "small", "medium"}, {
          "low", "very high", 3, 2, "large", "low"}, {
          "very high", "medium", 2, 4, "large", "medium"}, {
          "low", "high", 2, 4, "medium", "low"}, {
          "very high", "very high", 4, 2, "small", "medium"}, {
          "high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 2, 2, "medium", "low"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 4, 2, "small", "medium"}, {
          "low", "low", 2, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 3, 4, "small", "low"}, {
          "low", "very high", 3, 2, "small", "low"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 3, 4, "large", "medium"}, {
          "high", "high", 2, 4, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 4, 4, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 4, 2, "large", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "very high", "medium", 3, 4, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 2, 2, "medium", "medium"}, {
          "low", "medium", 4, 2, "large", "low"}, {
          "very high", "very high", 4, 4, "medium", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 2, 4, "large", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "low", "low", 4, 2, "large", "high"}, {
          "high", "low", 3, 2, "small", "low"}, {
          "low", "medium", 4, 4, "large", "low"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "low", 2, 4, "large", "low"}, {
          "low", "medium", 3, 4, "small", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 2, 2, "small", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "low", 4, 4, "medium", "low"}, {
          "medium", "very high", 3, 2, "large", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "low", 3, 2, "medium", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 4, 4, "small", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "high", 2, 2, "small", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "very high", 2, 2, "large", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 4, 4, "medium", "medium"}, {
          "high", "low", 3, 4, "medium", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 2, "large", "medium"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 2, "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "low", 4, 4, "medium", "medium"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 2, "medium", "low"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 4, "medium", "high"}, {
          "medium", "high", 3, 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 4, "small", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 2, 2, "medium", "medium"}, {
          "low", "very high", 2, 4, "large", "low"}, {
          "medium", "high", 2, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 4, 4, "large", "high"}, {
          "very high", "medium", 3, 4, "medium", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "low", "low", 2, 2, "medium", "medium"}, {
          "high", "very high", 2, 2, "small", "high"}, {
          "medium", "high", 2, 4, "medium", "low"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "very high", 4, 2, "medium", "high"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 2, "medium", "low"}, {
          "low", "low", 3, 2, "large", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 4, "small", "low"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "high", "very high", 2, 4, "large", "medium"}, {
          "very high", "medium", 2, 4, "large", "high"}, {
          "low", "high", 2, 4, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "low", 4, 4, "medium", "high"}, {
          "medium", "low", 2, 4, "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "medium", 2, 4, "small", "low"}, {
          "low", "medium", 4, 2, "large", "high"}, {
          "medium", "medium", 4, 4, "large", "high"}, {
          "very high", "high", 2, 2, "small", "medium"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "high", 3, 2, "small", "low"}, {
          "very high", "high", 4, 2, "small", "low"}, {
          "very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "medium"}, {
          "low", "very high", 2, 2, "small", "high"}, {
          "low", "high", 2, 4, "large", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "low", 3, 2, "small", "high"}, {
          "high", "medium", 2, 2, "medium", "medium"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 3, 4, "medium", "medium"}, {
          "high", "medium", 2, 2, "large", "low"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 4, "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "high", "high", 2, 4, "small", "medium"}, {
          "medium", "medium", 2, 4, "large", "high"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "medium", 3, 4, "medium", "low"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}}, 
        "Output" -> {
         "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "acceptable", "very good", "unacceptable", "unacceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable"}|>, 
      "Predictions" -> {
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", "good", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "acceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "acceptable", "very good", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "good", "unacceptable", "acceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable"}, 
      "LogProbabilities" -> CompressedData["
1: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
X38lrKeanfxkv7wtoHMlSXz0cLqC9YXfrzgcJ4+h9W0Jobh4O72M5BcuHi9H
5ytDqKPs+RDWv1/ZPNBSJx9qDHXJmXMnsC5JzHAYhezCjXabIu65QTzV8/nH
UD966B8XnVB/OrpJZpVelw9zDOuL/61vZFgd8OfoscxuxUY6WLnqMcLbsHnX
QhF/JHfoPUHxn+tv/97X5p63Ib1BJFKQpbVZ/zy68xKfD2f7D6djGmJVB8vS
rex563zy+wKTd3i/R/aec574QJv+lk3wF/WW4E8ywxjnA3H9Hcc4H2UUf9XV
1z9L3HmO9tgjgevkKrcfioj/XnuKW7Igvo+x+M43Bxhn+rcIvm8lFLfsvaJN
a+0h54+xv3Pj/8sLXN5YYXPWLORPXfClx2mOlMJD5uIpXU0LH1OwM3fSbleJ
biZg8PBRqQfSmWkjjHcfgPG//FfkTa+BY8HMritVXgMNxMavCbd6RXJWTVQX
+/51YR/Bj6Qy4ZeXTodoX103VfKe8K/eg/QNPuZUYv48Hnkc6mhrMCFtFNbX
P6KLsK5O9o/3QLq7brN3WkXGdHrhCXkcX9f/Wo3tHiRViu3x+/s9WRafXD0i
Tr+Kqy/FvV/owPN3/9OfmsniV5LF727PsZKmMO6Ze/6B497JehIPH7XK4Tzv
Z6fx6t7yGHq49DPsv6KKm3xkX4me47g/U7X7WU6TrQ09ejWpHwY+rcb7uL+5
Cduv+l4/1n+JgcLLOlD/jdQucUH91c7IFKz/FvVkMTFDdel9IBLbK3vZDYyv
/sO/sD+YkFT3kwmAua/53nOFDB+M8JH1UNA2A+bFR7Qtd2iAsMNh2M9j7u9R
l7SLoLljamUz1g+/64ON7P45fSCuvymuP12B3n8l/9u/2Heb4KuZ1WGbDRZP
3frCm+kNd8TvQXZEpeD3Hh3qDwCKnzK7G2K/Q/0fwPLbWeUDfv5CVv9rzd6L
82yWw5oHvBMd9PSfg4ai70xq8mpwHraZ0yV64NNJ3Skn+J0fuxvXVStSSH9b
VbJ91sf5PrTgMum3JocQ/SW6RvRA1mCoX8bcpDxXk3xhokn6hiciSH2ms61L
pG/cSaWx+amfzUtn2PeT4t4P6fv2i6puVFCRbD7is+/vStg+m7j+dj8DH/vn
v/0DJVYfc/2DAOP6N0jfB7B6Pu0t+X5KxOr9lIamsYXaNnTvLILPvtATeF+K
d8j7S/7ts7tMLX3pkcJz2P6X1Qbi99ryeqS/Ju77BnHvVy2mCVR2Qfwf8l2X
Wg7x/8cIXvIE/lgQMOvFRIT/93oJ6iV8e6DyLR9/x/PhMb8ybetmxuJPhaEl
/HH/k/+C2fjB5b+lNzKnCGF+GxtN8pvnJpLXfiXc1kP7E9f/tt/+BvdzjmiJ
3MvbymmTyHwDdP9HyzG477Mo/0Npf+hf9CzVWzg/p30i3/e0MiZKKP4Y1yrf
D1g8g359rwTb77HNdcyT2gYlbL+7PoUf1KCdzC45Znz7qM9cPGsNj3XAnZXf
36tBe4qz78jelpUR7srMSuUmVUn4vNwY3ZEy8PetC/PgqP9/8xaX18TpQ62e
o/tDGjrogy7RfyB9KxhJvi/rCSDfl+2c8lG+CeItif3eIyGKfP/xmv0eRNz3
S36j7k7961I6U2T05dQlmL/2B55dXihpBlZPjns0f6CO2PcHuHwQVV3n9Ooh
9vwH9rxnRHP/YmUbuojt/4ax/V91to9zoKpXtO+/vj/akE/ww31/1F9YrxdW
7EPHzbTC/bpL0tIY/3JqA7D/doRen4jy3wWdLIttMP+pM0XRyTDvvQy5lPRC
wwic667BdjmstNQ4FdqlWmaeJvr+rKAiGtrHAqQveTLDwljIaJdrqaO6Jc64
EL+/1Ulagt8TzP0Gt3cyjAqex+pXNi+1snhf6L4af3c4onf1PvS9Yapa4LAS
vi24uIR8hyju+5Z8Wxe7MHlTsHGfzyOUv4Oj8uCxFchqTUjaAPfhg/PvGMqW
9V8na9cyNl87UGbUazi/3+oRA/rTNzOzA+MWrZPQBxkfi01K+Wbg1KC2iYMg
rvo3RHzIm6TNNMhMnTwI4bq3zH0QXNfE1pO4TxF2O87kSq00Y/BGAR5bgABl
VVyfqTjdFynOl6NPXCbx36qwCsfJb/VE57Wg9Tkr/4MvRzZvcfogX9ioh3B8
8IrAZPDwC3TIotWqKG8x7sqjEB/OtX5OuWQkZHbd+IS/nxm0aqoa6n9xozh8
f+h8JCEBebDHfV5Qtcp3+qLGU74E3F+IwcGt+PuowOZPQwfZ0MFs//AOi78u
tn8YL+wTjV7aSlkCgr+viSS/KDwn+cBGZ1gu+r7n4hPyfc9X/zNwXU6gPLRR
DeFF3PeT/wHOLC73
       "], 
      "CountMatrix" -> {{259, 0, 0, 0, 0}, {0, 64, 0, 2, 0}, {0, 0, 11, 0, 
       0}, {0, 0, 0, 10, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwl0/lrCAAABeANGdvYwcaYHQzL5toybcMMw7Awx5j7KORK5Mx95MyZK3eE
kCvlzhU5c6TkCOUmR/jBEb7lh++99w+8xMFjC8cEBgQElBYlXapkU4YgyhNM
CKFUoCJhhBNBJFFEU5UYqlGdWGoQRzwJ1CSJOtQlmRRSaUgjGpNGOk3IoCmZ
ZJFNM1qQQ0tyyaMt7cinAx3pRAGd6UJXCulGd3rQkyKK6UNf+tGfAQxkEEMY
yjCGM4KRjGI04xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jO
ClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte
8orXvOEt73jPBz7yic984Svf+M4PfvKL3/zhLyVHCKRU4P9flCWIcgQTQigV
CCOcCCKpRGWiiKYKMVQjlhrEEU8CidQiidrUoS7J1COFVOrTgDTSyaApmWSR
TTOak0NLcmlFa9qQR3vyKaArhXSniF70pph/R/ptyg==
         "], {}, {}, {}, {}}, {{}, {5, 8, 19, 20, 23, 35, 37, 45, 52, 56, 67, 
         72, 88, 89, 98, 101, 102, 111, 112, 114, 117, 124, 135, 142, 149, 
         163, 166, 170, 180, 182, 183, 197, 200, 207, 212, 214, 215, 217, 222,
          226, 227, 237, 242, 246, 247, 260, 261, 265, 280, 283, 290, 297, 
         304, 308, 309, 312, 327, 330, 331, 334, 335, 336, 339, 342}, {}, {42,
          332}, {}}, {{}, {}, {33, 41, 46, 66, 78, 110, 155, 305, 318, 326, 
         341}, {}, {}}, {{}, {}, {}, {6, 61, 68, 106, 174, 191, 248, 253, 270,
          303}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "very good", "good"}, "Weights" -> 
      SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.0009207803468208091, "SingleEvaluationTime" -> 
      0.00702325, "Version" -> {13.1, 0}|>]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8684443883703527`*^9, 3.868444628441779*^9, 3.8684447374621*^9, 
   3.868444798788579*^9, {3.8684450567305193`*^9, 3.8684450634502573`*^9}, 
   3.86844514160921*^9, {3.868445216184236*^9, 3.868445245788845*^9}, 
   3.86844550286349*^9, 3.868445684338311*^9, 3.868445860318709*^9, 
   3.868446035571615*^9, 3.8684462387314863`*^9, 3.868446531804*^9, 
   3.868446992824225*^9, 3.868447029560577*^9, 3.8684986039156446`*^9, 
   3.8685204529294043`*^9, 3.8685215146011333`*^9, 3.8685301612497177`*^9, 
   3.868530590591856*^9, 3.86853261496434*^9, 3.8685338436228123`*^9, {
   3.868535643570589*^9, 3.868535653266458*^9}, 3.86853620504729*^9, 
   3.868536647435892*^9, 3.8685368910591183`*^9, 3.868536956624065*^9, 
   3.868537492992119*^9, {3.8685379158969793`*^9, 3.868537942476584*^9}, 
   3.8685921415849247`*^9, 3.868599486276321*^9, 3.86860013955028*^9, 
   3.8686009455378437`*^9, 3.868601165154408*^9, 3.868602872755411*^9, 
   3.868604168888167*^9, 3.8686705600345984`*^9, 3.868672040003127*^9, 
   3.868681397928339*^9, 3.868938938636381*^9, 3.8689425626275787`*^9, 
   3.868943546605094*^9, 3.86894388526086*^9, 3.868944114037065*^9, 
   3.868944544993232*^9, 3.868945583119274*^9, 3.868945795964314*^9, 
   3.868946090455439*^9, 3.868946301277932*^9, 3.868946812077159*^9, 
   3.868947529554852*^9, 3.868948234247651*^9, 3.868949916263268*^9, 
   3.86895035411582*^9, 3.868950591820963*^9, 3.868955715946851*^9, 
   3.8689590912506847`*^9, 3.868961292873067*^9, {3.868964211642971*^9, 
   3.868964271971294*^9}, 3.8689658659417048`*^9, 3.868975187773774*^9, 
   3.868975807387333*^9, 3.869030236615261*^9, 3.869030576485284*^9, 
   3.8690318983554163`*^9, 3.8690322955085077`*^9, 3.8690328949105043`*^9, 
   3.869033235901104*^9, 3.869033495671227*^9, 3.869034576712833*^9, 
   3.869035610130576*^9, 3.8690361433581657`*^9, 3.869036324430427*^9, 
   3.869036425981944*^9, 3.8690403482379503`*^9, 3.869040564944063*^9, 
   3.869041421524418*^9, 3.869041561340787*^9, 3.869041673839971*^9, 
   3.8690421991522627`*^9, 3.869042855424157*^9, 3.86904326803651*^9, 
   3.869043554339016*^9, 3.869043746795423*^9, 3.869105420473537*^9, 
   3.869105653283306*^9, 3.869105982326734*^9, 3.869107184493881*^9, 
   3.869108234728773*^9, 3.869111749761622*^9, {3.869111919016803*^9, 
   3.8691119399060993`*^9}, 3.869112356812172*^9, 3.869112702187408*^9, {
   3.869112904171596*^9, 3.869112930067875*^9}, {3.8691133852077427`*^9, 
   3.869113414126828*^9}, {3.869121126953014*^9, 3.8691211520853*^9}, {
   3.869121847143949*^9, 3.86912185561662*^9}, 3.869203188780602*^9, {
   3.8692071057867537`*^9, 3.86920713930786*^9}, 3.869207400202592*^9, {
   3.869207739721821*^9, 3.8692077456111937`*^9}, {3.869207952002699*^9, 
   3.869207963437224*^9}, 3.8692080125106792`*^9, {3.869208714713435*^9, 
   3.869208729773431*^9}, 3.869209077756652*^9, 3.8692094954446297`*^9, {
   3.869210938078933*^9, 3.8692109446365433`*^9}, 3.869211902166511*^9, {
   3.869213234631062*^9, 3.8692133334937763`*^9}, {3.869214218655706*^9, 
   3.869214223564402*^9}, 3.869215458371559*^9, {3.869215992069166*^9, 
   3.869216010528124*^9}, 3.869216652211252*^9, 3.8692170070767508`*^9, 
   3.8692173280534887`*^9, {3.869217675130456*^9, 3.869217685513886*^9}, {
   3.8692180388130713`*^9, 3.8692180459383907`*^9}, {3.869219076882539*^9, 
   3.8692191672841787`*^9}, 3.869219428759843*^9, {3.869219704836887*^9, 
   3.869219710189546*^9}, {3.869281650336409*^9, 3.869281656282543*^9}, 
   3.869292838989414*^9, 3.8696410838252277`*^9, {3.869642408118239*^9, 
   3.8696424286143847`*^9}, 3.869642755347784*^9, 3.8696432269045877`*^9, 
   3.869643433213999*^9, 3.869643780899444*^9, 3.869645951169808*^9, 
   3.869650675377988*^9, 3.869651296119297*^9, 3.869652542480788*^9, 
   3.870170564724118*^9, 3.870170594923359*^9, 3.87017167984599*^9, 
   3.8701718638983192`*^9, 3.870172515986945*^9, 3.8701739174158583`*^9, 
   3.870175278398274*^9, 3.8701754171170807`*^9, {3.8701754851450853`*^9, 
   3.870175522278379*^9}, 3.8701766976169653`*^9, 3.870176853105291*^9, 
   3.870178039550136*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c6499215-9887-4f95-a86d-95bb186d731f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Prediction\>\"", "->", 
         RowBox[{"trainedHardNet", "[", 
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"{", "\"\<Acceptability\>\"", "}"}], "]"}], "@", "#"}], 
          "]"}]}], ",", 
        RowBox[{"\"\<Target\>\"", "->", 
         RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}]}]}], "}"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Normal", "[", "testData", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eval2", "=", 
   RowBox[{"HardNetClassifyEvaluation", "[", "hncwt2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval2", "[", "\"\<Accuracy\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.868975856473425*^9, 3.868975907241156*^9}, {
  3.8689759541160727`*^9, 3.868975992561887*^9}, {3.86897610020459*^9, 
  3.8689762477878838`*^9}, {3.86897641471817*^9, 3.8689764578527117`*^9}, {
  3.8690344006348124`*^9, 3.869034400937387*^9}, {3.86904291870931*^9, 
  3.8690429575864353`*^9}, {3.869121310826304*^9, 3.869121313255774*^9}, {
  3.869219749034794*^9, 3.869219752143724*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"431bf369-571a-4438-9ea5-687fe2d08638"],

Cell[BoxData["0.9942196531791907`"], "Output",
 CellChangeTimes->{
  3.869034589981593*^9, 3.869035628358029*^9, 3.869036154844352*^9, 
   3.869036336039586*^9, 3.8690364370454893`*^9, 3.869040359402629*^9, 
   3.869040578854313*^9, 3.869041436196286*^9, 3.8690415773217983`*^9, 
   3.869041690219269*^9, 3.86904221419751*^9, {3.869042932618347*^9, 
   3.869042959198248*^9}, 3.869043287868927*^9, 3.869043565179612*^9, 
   3.8690437567886467`*^9, 3.869104986359107*^9, 3.8691051668148937`*^9, 
   3.869105434085964*^9, 3.869105669300963*^9, 3.869105996859831*^9, 
   3.869107199042075*^9, 3.869111759364867*^9, 3.869111970506278*^9, {
   3.869121299804845*^9, 3.869121316611709*^9}, 3.8692088360902042`*^9, 
   3.86920910005622*^9, 3.869209505631686*^9, 3.869210957184381*^9, 
   3.869211922653748*^9, 3.869213358735955*^9, 3.869214238649056*^9, 
   3.8692154737290087`*^9, 3.869216025505147*^9, 3.8692166649342213`*^9, 
   3.8692170219382353`*^9, 3.869217343847763*^9, 3.8692177067848663`*^9, 
   3.869218058215096*^9, 3.869219448602796*^9, 3.869219753147689*^9, 
   3.8692817014660397`*^9, 3.8692932434109373`*^9, 3.869641124299802*^9, 
   3.8696424595787277`*^9, 3.869642789251828*^9, 3.8696432594825153`*^9, 
   3.869643480889119*^9, 3.869643823403762*^9, 3.8696460912872143`*^9, 
   3.8696509625586653`*^9, 3.869651314560199*^9, 3.869652665647365*^9, 
   3.870171463192264*^9, 3.8701717900384283`*^9, 3.870172009220956*^9, 
   3.870174022298609*^9, 3.870178162663396*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"29d759ca-6037-4c3e-8ac2-75c827e53807"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1440, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.5 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a91410a-fdc1-4cfe-a437-7a311bcf3ad2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 359, 6, 146, "Title",ExpressionUUID->"f846cc42-aa02-4854-b58f-d6a00f3f9f87"],
Cell[CellGroupData[{
Cell[964, 32, 265, 4, 103, "Chapter",ExpressionUUID->"3104f7e3-d1cf-444c-857d-f3d3d76d7c7a"],
Cell[1232, 38, 614, 11, 121, "Text",ExpressionUUID->"91644f0d-05ee-464c-b993-67d43ce3e7d3"],
Cell[CellGroupData[{
Cell[1871, 53, 465, 9, 44, "Input",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],
Cell[2339, 64, 128041, 2378, 954, "Output",ExpressionUUID->"67d52c6c-25a9-4352-b32f-d7a24e15400b"]
}, Open  ]],
Cell[130395, 2445, 510, 10, 156, "Text",ExpressionUUID->"48ea5e8f-466a-4c85-ab93-40800af9e474"],
Cell[130908, 2457, 8542, 203, 55, "Input",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139487, 2665, 300, 5, 103, "Chapter",ExpressionUUID->"5f3c722a-5b07-470f-a683-0797441c8c07"],
Cell[139790, 2672, 774, 15, 44, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[CellGroupData[{
Cell[140589, 2691, 164, 3, 81, "Subsection",ExpressionUUID->"f72c241a-1149-4a03-acba-ddb61b56d0cd"],
Cell[140756, 2696, 2756, 68, 231, "Input",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],
Cell[143515, 2766, 1227, 31, 107, "Input",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[144779, 2802, 315, 5, 81, "Subsection",ExpressionUUID->"e2cfd996-b3e0-4a6a-9a63-c7e94ed6e33b"],
Cell[145097, 2809, 2268, 55, 309, "Input",ExpressionUUID->"d45e19d8-d785-4cd3-85c0-bcb5b5c014a9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147402, 2869, 217, 4, 81, "Subsection",ExpressionUUID->"fb1d3f32-8b9a-4b63-9b09-a125030d0486"],
Cell[147622, 2875, 2817, 48, 262, "Input",ExpressionUUID->"0eb909d3-63ba-47a2-bfff-4fe73d2964b2"],
Cell[150442, 2925, 806, 18, 145, "Input",ExpressionUUID->"d6b63b82-43f7-41c2-9384-527d689efab6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151285, 2948, 268, 4, 81, "Subsection",ExpressionUUID->"2ce60129-160a-41fc-adfe-0034b0a21389"],
Cell[151556, 2954, 1329, 34, 169, "Input",ExpressionUUID->"25bf8b72-c804-410f-bb9c-0ed53d200d85"],
Cell[152888, 2990, 842, 19, 107, "Input",ExpressionUUID->"17da0be0-62bc-465d-8a91-33ed2580ae99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153767, 3014, 220, 4, 81, "Subsection",ExpressionUUID->"7c05c242-1747-4740-86f8-9b6f56cec517"],
Cell[153990, 3020, 2511, 58, 432, "Input",ExpressionUUID->"f6750e7f-a063-4c4f-888f-5be83e682770"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156538, 3083, 269, 4, 81, "Subsection",ExpressionUUID->"a8b3252c-540b-4f9d-b22d-df59ae9d30be"],
Cell[156810, 3089, 3023, 49, 262, "Input",ExpressionUUID->"d716c9c0-e25b-49fc-8778-6b0e6c9888bc"],
Cell[159836, 3140, 802, 16, 145, "Input",ExpressionUUID->"0157c297-7579-4c36-a2ea-5d4df0024196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160675, 3161, 323, 5, 81, "Subsection",ExpressionUUID->"2cfca464-a6ee-4f84-87bd-c33f3d393bed"],
Cell[161001, 3168, 1276, 32, 169, "Input",ExpressionUUID->"97dae8b9-699f-460c-9d4d-9c4fe4b770c3"],
Cell[162280, 3202, 401, 8, 44, "Input",ExpressionUUID->"90a2ce41-ec16-4f6e-bb59-22c60344c976"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[162730, 3216, 470, 7, 87, "Chapter",ExpressionUUID->"85881d34-aa2c-47a4-9cef-231d0c092462"],
Cell[163203, 3225, 235, 6, 52, "Text",ExpressionUUID->"00d95308-a694-443a-a631-9d6d99579905"],
Cell[CellGroupData[{
Cell[163463, 3235, 315, 5, 44, "Input",ExpressionUUID->"a2422372-8bb4-43f9-87d0-673e72a9d7c9"],
Cell[163781, 3242, 213381, 4281, 102, "Output",ExpressionUUID->"326ae035-14ff-443a-a4f9-e66250ca750e"]
}, Open  ]],
Cell[377177, 7526, 378, 8, 87, "Text",ExpressionUUID->"7fb122b0-11ec-4374-8553-decf50e0a6b9"],
Cell[CellGroupData[{
Cell[377580, 7538, 268, 4, 44, "Input",ExpressionUUID->"cb58b248-af71-467a-ab22-7a37ee09db45"],
Cell[377851, 7544, 268865, 5481, 102, "Output",ExpressionUUID->"bb59af57-4d84-443c-b0a2-dcd7fc41d015"]
}, Open  ]],
Cell[646731, 13028, 1009, 19, 190, "Text",ExpressionUUID->"5deaf1b9-d1e7-46d2-a8d2-ddd7b6be33d7"],
Cell[CellGroupData[{
Cell[647765, 13051, 2008, 30, 44, "Input",ExpressionUUID->"c66847a1-a2e5-4f1a-b8f1-4352838fd8f7"],
Cell[649776, 13083, 37089, 742, 748, "Output",ExpressionUUID->"3befd225-53d0-4dc8-8f83-674d7eab0042"]
}, Open  ]],
Cell[686880, 13828, 553, 11, 190, "Text",ExpressionUUID->"436dc481-493a-4854-ae98-ffc8efad6c40"],
Cell[CellGroupData[{
Cell[687458, 13843, 319, 5, 44, "Input",ExpressionUUID->"fd57ad56-2adf-4ee4-813b-767080d20188"],
Cell[687780, 13850, 179598, 3567, 102, "Output",ExpressionUUID->"4bbe10f2-0890-4e87-b925-153b2b20ef2f"]
}, Open  ]],
Cell[867393, 17420, 282, 6, 87, "Text",ExpressionUUID->"7fb2dfa2-ca03-4424-9df6-f9c13557cfa1"],
Cell[867678, 17428, 449, 10, 44, "Input",ExpressionUUID->"27c69bb5-1f2c-46f8-a9b2-dd5d0d9f09d2"],
Cell[868130, 17440, 222, 5, 52, "Text",ExpressionUUID->"5b2b8457-a087-490d-a372-95ff87d5203a"],
Cell[868355, 17447, 165, 3, 44, "Input",ExpressionUUID->"fcd58c86-cd92-4055-8e89-45d7759b0506"],
Cell[868523, 17452, 195, 3, 52, "Text",ExpressionUUID->"9fc78c6a-48b8-4010-baee-fde9b5bdd3c9"],
Cell[CellGroupData[{
Cell[868743, 17459, 220, 3, 44, "Input",ExpressionUUID->"c985cb0f-60de-4b49-b4d6-10ed744b86e8"],
Cell[868966, 17464, 203, 3, 50, "Output",ExpressionUUID->"c125fb2f-3eeb-4ab6-9cf0-2c36b1167eae"]
}, Open  ]],
Cell[869184, 17470, 217, 5, 52, "Text",ExpressionUUID->"b9c5e504-6d0c-4a32-9c35-e175a5de8e24"],
Cell[869404, 17477, 760, 13, 44, "Input",ExpressionUUID->"ea88cf34-6d1f-4d4a-88af-e09ff8e02fd4"],
Cell[870167, 17492, 287, 6, 52, "Text",ExpressionUUID->"aeeff9c0-62c9-4e41-8881-40212ba3b69e"],
Cell[CellGroupData[{
Cell[870479, 17502, 637, 13, 44, "Input",ExpressionUUID->"e8125b4a-aaf2-4efe-a7b6-a3d9bfce94e5"],
Cell[871119, 17517, 498, 8, 66, "Output",ExpressionUUID->"48e02e35-c8a1-4879-a35d-d5da5daf9b61"]
}, Open  ]],
Cell[871632, 17528, 1107, 21, 225, "Text",ExpressionUUID->"03b49d21-4bd5-4b01-a35e-56268b42b92d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[872776, 17554, 413, 6, 103, "Chapter",ExpressionUUID->"1674350a-bfdf-4c15-99d4-bba009f90f57"],
Cell[873192, 17562, 298, 6, 52, "Text",ExpressionUUID->"e5a43929-84d4-4b97-8593-77be8fbda82b"],
Cell[873493, 17570, 1249, 20, 44, "Input",ExpressionUUID->"84c57495-f98a-4ca4-922c-c5d2c5fd64e9"],
Cell[874745, 17592, 350, 7, 87, "Text",ExpressionUUID->"5ffa9b79-f5dc-428f-803a-6955dbdea24d"],
Cell[CellGroupData[{
Cell[875120, 17603, 216, 3, 44, "Input",ExpressionUUID->"b2b63338-5834-4d32-98ef-185081700ecb"],
Cell[875339, 17608, 431501, 8740, 102, "Output",ExpressionUUID->"401ba84a-fb74-40ae-bc61-eb6431e47efe"]
}, Open  ]],
Cell[1306855, 26351, 1277, 24, 432, "Text",ExpressionUUID->"7a697f04-03c9-417e-8209-cc642ea858a3"],
Cell[CellGroupData[{
Cell[1308157, 26379, 2243, 32, 44, "Input",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"],
Cell[1310403, 26413, 37859, 753, 748, "Output",ExpressionUUID->"cd6a9030-7871-4492-bcec-5b8c1da70b62"]
}, Open  ]],
Cell[1348277, 27169, 754, 14, 225, "Text",ExpressionUUID->"52a22fbd-4527-4294-80fb-729864c6e2a8"],
Cell[1349034, 27185, 339, 7, 44, "Input",ExpressionUUID->"db16a4ec-95e1-41d9-a946-025c87ea0139"],
Cell[1349376, 27194, 1234, 24, 397, "Text",ExpressionUUID->"471beace-3c54-497f-b2ed-e2d40ad7ebd0"],
Cell[CellGroupData[{
Cell[1350635, 27222, 1389, 23, 76, "Input",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],
Cell[1352027, 27247, 29613, 791, 1536, "Output",ExpressionUUID->"5ad4fcd8-23d5-4720-80bb-70c1d713a00e"]
}, Open  ]],
Cell[1381655, 28041, 347, 7, 52, "Text",ExpressionUUID->"b04ea288-7eab-4c63-9364-fb6fe1f0beb3"],
Cell[CellGroupData[{
Cell[1382027, 28052, 427, 10, 44, "Input",ExpressionUUID->"85430b54-526e-4074-9fb9-f03f794f1c13"],
Cell[1382457, 28064, 508, 9, 50, "Output",ExpressionUUID->"c53f68bb-e6b2-4c29-bb5a-131a1790010a"]
}, Open  ]],
Cell[1382980, 28076, 358, 8, 87, "Text",ExpressionUUID->"65a04b09-9d6f-4de8-921c-a74eb84216bd"],
Cell[CellGroupData[{
Cell[1383363, 28088, 202, 3, 44, "Input",ExpressionUUID->"766504ad-5222-4968-9c2e-4c45b7b36d6b"],
Cell[1383568, 28093, 4125, 65, 392, "Output",ExpressionUUID->"8ff5d33e-f9e3-4eed-a522-677bd6d01593"]
}, Open  ]],
Cell[1387708, 28161, 231, 6, 52, "Text",ExpressionUUID->"552ba1f8-7603-46fa-b5d0-3b8592a248bf"],
Cell[1387942, 28169, 408, 9, 44, "Input",ExpressionUUID->"13a2ce94-b726-43e3-b6a8-a980ac53773c"],
Cell[CellGroupData[{
Cell[1388375, 28182, 221, 3, 44, "Input",ExpressionUUID->"b42693df-e421-4294-8d63-3fe9c57e59be"],
Cell[1388599, 28187, 203, 3, 50, "Output",ExpressionUUID->"ad736331-6c39-4af3-bb85-443c0b051e84"]
}, Open  ]],
Cell[1388817, 28193, 171, 3, 52, "Text",ExpressionUUID->"eeaad40f-5bd7-442c-b78b-82d046761f76"],
Cell[1388991, 28198, 409, 8, 44, "Input",ExpressionUUID->"bb0dc1a3-5cd2-4290-9ee6-f454b4fd864f"],
Cell[1389403, 28208, 288, 6, 52, "Text",ExpressionUUID->"9858cc8a-2d44-4b29-aa17-124189cc0344"],
Cell[CellGroupData[{
Cell[1389716, 28218, 721, 14, 48, "Input",ExpressionUUID->"30f555f6-ae5b-4dfd-bdc5-755388129f83"],
Cell[1390440, 28234, 391, 6, 66, "Output",ExpressionUUID->"9c19d929-309f-4115-96b8-91bebc8353f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1390868, 28245, 276, 4, 47, "Input",ExpressionUUID->"464382a0-3d4a-4151-bf45-6cff18de640f"],
Cell[1391147, 28251, 203, 3, 50, "Output",ExpressionUUID->"319939d2-5195-49b9-b5c6-65c724630c45"]
}, Open  ]],
Cell[1391365, 28257, 1130, 21, 294, "Text",ExpressionUUID->"58ab0f20-14b5-408c-8b9f-e564767e0125"],
Cell[CellGroupData[{
Cell[1392520, 28282, 342, 7, 44, "Input",ExpressionUUID->"251bf960-d576-492e-b02e-99402db120bf"],
Cell[1392865, 28291, 46485, 766, 687, "Output",ExpressionUUID->"f37f8e98-67b4-48d1-bcce-868b1fe99e15"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1439399, 29063, 295, 5, 103, "Chapter",ExpressionUUID->"59eda8dc-4a92-49e4-abd9-aef5d515665c"],
Cell[1439697, 29070, 2095, 41, 145, "Input",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],
Cell[CellGroupData[{
Cell[1441817, 29115, 1124, 19, 44, "Input",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],
Cell[1442944, 29136, 542657, 9890, 742, "Output",ExpressionUUID->"c6499215-9887-4f95-a86d-95bb186d731f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1985638, 39031, 1293, 30, 107, "Input",ExpressionUUID->"431bf369-571a-4438-9ea5-687fe2d08638"],
Cell[1986934, 39063, 1556, 22, 50, "Output",ExpressionUUID->"29d759ca-6037-4c3e-8ac2-75c827e53807"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

