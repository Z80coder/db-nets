(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2723579,      52249]
NotebookOptionsPosition[   2717080,      52131]
NotebookOutlinePosition[   2717518,      52148]
CellTagsIndexPosition[   2717475,      52145]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learning tabular data", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 
  3.8684260746987667`*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}, {
   3.868604559041458*^9, 3.868604559653843*^9}, {3.868937073460001*^9, 
   3.868937074141531*^9}, {3.869042727278556*^9, 3.869042728153739*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["DifferentiableHardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "DifferentiableHardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardeningLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardeningLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassScores", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetClassScores", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "DifferentiableHardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "DifferentiableHardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetTransformWeights", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetTransformWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralReshapeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralReshapeLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["RandomBalancedNormalSoftBits", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "RandomBalancedNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNet", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomNormalSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "RandomNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GetNetArrays", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "GetNetArrays", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetBooleanExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetBooleanExpression", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomUniformSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "RandomUniformSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GetWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "GetWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetBooleanFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetBooleanFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralCount", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralCount", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Require", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "Require", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetClassBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralExactlyK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralExactlyK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBalanced", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "InitializeBalanced", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "SoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClassificationLoss", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassify", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetClassify", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralLTEK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralLTEK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeNearToOne", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "InitializeNearToOne", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["HardNetClassifyEvaluation", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetClassifyEvaluation", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeNearToZero", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "InitializeNearToZero", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["HardDropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardDropoutLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassPrediction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetClassPrediction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeToConstant", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "InitializeToConstant", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["HardNetClassProbabilities", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNetClassProbabilities", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-2c81913e-1316-47fd-9209-acbaa1ec1602", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.86479111604138*^9, 3.8647911657240562`*^9, 3.864791620800887*^9, 
   3.86479194597997*^9, 3.86479198092934*^9, 3.864792204697258*^9, 
   3.864792687703233*^9, 3.864793105592959*^9, 3.864793526801218*^9, 
   3.864793732850697*^9, 3.864794507927494*^9, 3.864796071752219*^9, 
   3.864825438485825*^9, 3.864825531891514*^9, 3.8648260962141314`*^9, 
   3.864830162877289*^9, 3.8648755408909893`*^9, 3.865049480919162*^9, 
   3.865050046751976*^9, 3.865051042066378*^9, 3.8650523426134*^9, 
   3.8650543558693867`*^9, 3.865058337414798*^9, 3.8650584086343327`*^9, 
   3.86505947338*^9, 3.86506885830449*^9, 3.865397062515942*^9, 
   3.86539822002991*^9, 3.865414037240362*^9, 3.865415448442546*^9, 
   3.865415610582356*^9, 3.8654172214829617`*^9, 3.865417469191354*^9, 
   3.865419590403018*^9, 3.865420075554387*^9, 3.865428054175325*^9, 
   3.8654793173710623`*^9, 3.8655665906709213`*^9, 3.865591995941038*^9, 
   3.865658579968223*^9, 3.865772215681147*^9, 3.865779562552833*^9, 
   3.8658370145359364`*^9, 3.86584060155225*^9, 3.8659992094486027`*^9, 
   3.866003652107215*^9, 3.8660161651613417`*^9, 3.8661754677644978`*^9, 
   3.866258657623454*^9, 3.866285693609187*^9, 3.86635057486532*^9, 
   3.866512485808078*^9, 3.866512816932197*^9, 3.866553529720395*^9, 
   3.8666025113336687`*^9, 3.866606144536639*^9, 3.866608546326232*^9, 
   3.866609704076623*^9, 3.8666137219288273`*^9, 3.86671285229326*^9, 
   3.866788776837541*^9, 3.866788812552528*^9, 3.866794689702251*^9, 
   3.8667979035574636`*^9, 3.8667996941084146`*^9, 3.866800686995532*^9, 
   3.866801936715271*^9, 3.866865563143631*^9, 3.8671595128431797`*^9, 
   3.867322056244096*^9, 3.8674794507502613`*^9, 3.8675828633257*^9, 
   3.867669743397482*^9, 3.867732450434094*^9, 3.867751859422694*^9, 
   3.867752571591299*^9, 3.867811509870346*^9, 3.8678117360040903`*^9, 
   3.8678203831872883`*^9, 3.867843695133718*^9, 3.867850373374954*^9, 
   3.86800725388065*^9, 3.868015027015581*^9, 3.868070609148181*^9, 
   3.8680707782820997`*^9, 3.868071504515008*^9, 3.868078566976554*^9, 
   3.868079276409031*^9, 3.8680936161674767`*^9, 3.868332595482695*^9, 
   3.868343297990016*^9, {3.868434780605877*^9, 3.86843479524651*^9}, 
   3.868445566107071*^9, 3.868519876174618*^9, 3.86853009787873*^9, 
   3.868533409155756*^9, 3.868591470469123*^9, 3.868591573510869*^9, 
   3.8686703712738132`*^9, 3.868674802626226*^9, 3.868944309055069*^9, 
   3.8690237136048*^9, 3.869041334767592*^9, 3.869042729449026*^9, 
   3.8691052086388483`*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"dcfd6397-b247-49ab-8909-553d8770bdb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get data", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 
  3.868426122274289*^9}},ExpressionUUID->"3104f7e3-d1cf-444c-857d-\
f3d3d76d7c7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8684261284499598`*^9, 3.8684261339874697`*^9}, {
   3.868426165551331*^9, 3.868426166147992*^9}, {3.868443501655848*^9, 
   3.868443511617087*^9}, {3.868445089535833*^9, 3.8684450898384523`*^9}, 
   3.8684475343091707`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          11075930622028356488125770049659704238270556926357467056696], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11075930622028356488125770049659704238270556926357467056696,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868447534840249*^9, 3.8684985354123583`*^9, 
  3.868519879764835*^9, 3.8685300999400797`*^9, 3.868533465833148*^9, 
  3.868591722379105*^9, 3.868670373439299*^9, 3.868944316441147*^9, 
  3.869023715466254*^9, 3.869041339373542*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"610e0a40-4cdd-411a-9668-518b1108f58f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.868445433613286*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create feature encoders", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 
  3.86843398679764*^9}},ExpressionUUID->"fc79f348-c5f7-48d3-80d6-\
e4dab5b13de8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "featureValues"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"encoders", "=", 
   RowBox[{"Encoders", "[", "trainData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Normal", "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"encoders", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"data", "[", 
      RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868426687511053*^9, 3.868426801572831*^9}, {
   3.8684269173036003`*^9, 3.8684269578937387`*^9}, {3.8684269966730623`*^9, 
   3.868427061846773*^9}, {3.868427135120562*^9, 3.868427173055786*^9}, {
   3.868427218784813*^9, 3.868427313389267*^9}, {3.868427822986774*^9, 
   3.8684278511841917`*^9}, {3.8684280835200367`*^9, 3.868428089883707*^9}, {
   3.868428156521447*^9, 3.8684281614416733`*^9}, {3.8684281955955667`*^9, 
   3.868428284555341*^9}, 3.868434324643379*^9, {3.868434449433856*^9, 
   3.8684344506731787`*^9}, {3.868437882742872*^9, 3.8684378847594643`*^9}, {
   3.868443521427595*^9, 3.86844353043198*^9}, {3.868445371253304*^9, 
   3.868445422686679*^9}, {3.868682465592621*^9, 3.868682467103612*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureLayer", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<Catenate\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "->", "\"\<Catenate\>\""}],
         "&"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<PurchasePrice\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<PurchasePrice\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaintenanceCost\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<MaintenanceCost\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Doors\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Doors\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Passengers\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Passengers\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Cargo\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Cargo\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Safety\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Safety\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868511402960554*^9, 3.868511420437525*^9}, {
   3.8685114920935707`*^9, 3.86851156446668*^9}, 3.868511640913454*^9, {
   3.8686824585003*^9, 3.86868246003918*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.86843932450987*^9}},ExpressionUUID->"1674350a-bfdf-4c15-99d4-\
bba009f90f57"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numClasses", "=", 
        RowBox[{"Length", "[", "classes", "]"}]}], ",", 
       "classificationLayerSize"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"128", "*", "numClasses"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralNAND", "[", 
          RowBox[{"inputSize", ",", "classificationLayerSize", ",", 
           RowBox[{
            RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}], 
           ",", 
           RowBox[{
            RowBox[{"RandomBalancedNormalSoftBits", "[", "#", "]"}], "&"}]}], 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"HardNeuralReshapeLayer", "[", 
          RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868434027583748*^9, 3.868434035787488*^9}, {
   3.8684347252717743`*^9, 3.868434739712077*^9}, {3.8684348123552837`*^9, 
   3.868434889688067*^9}, {3.868436138483499*^9, 3.8684361400155487`*^9}, {
   3.868439429843689*^9, 3.868439430063843*^9}, {3.868439981288126*^9, 
   3.86843999564869*^9}, {3.868440077141582*^9, 3.8684400780122023`*^9}, {
   3.868440461557928*^9, 3.868440463889024*^9}, {3.8684406325500402`*^9, 
   3.868440632800852*^9}, {3.8684407142457123`*^9, 3.868440714673073*^9}, 
   3.8684407820700693`*^9, {3.868441017230885*^9, 3.868441018893251*^9}, {
   3.8684411315833893`*^9, 3.868441133033833*^9}, {3.868518724134651*^9, 
   3.868518725441156*^9}, {3.868518928530555*^9, 3.868518943190036*^9}, {
   3.868519041547244*^9, 3.868519068014036*^9}, {3.868519147675601*^9, 
   3.868519154814497*^9}, {3.868519330700121*^9, 3.868519338754211*^9}, {
   3.868519481675853*^9, 3.868519515993621*^9}, {3.868519704140811*^9, 
   3.8685197412954483`*^9}, {3.8685197864581833`*^9, 3.868519804727289*^9}, {
   3.868520025904859*^9, 3.868520026662962*^9}, {3.868520165374518*^9, 
   3.868520172724663*^9}, {3.868520227657476*^9, 3.8685202280400333`*^9}, {
   3.868520278697311*^9, 3.868520283147401*^9}, {3.8685206145298347`*^9, 
   3.8685206150078983`*^9}, {3.868537004723915*^9, 3.868537005683709*^9}, {
   3.8686716248609867`*^9, 3.86867162498657*^9}, {3.8689423409409943`*^9, 
   3.868942344276237*^9}, {3.868947806296569*^9, 3.868947806625355*^9}, 
   3.868955246204385*^9, {3.868957393208212*^9, 3.8689574013451433`*^9}, {
   3.868957440249872*^9, 3.8689574443738937`*^9}, {3.8689577953130703`*^9, 
   3.868957801168947*^9}, {3.868958026730661*^9, 3.8689580269562798`*^9}, {
   3.868960876079372*^9, 3.8689608783682137`*^9}, {3.868964831153708*^9, 
   3.868964831513155*^9}, {3.868965437993729*^9, 3.868965438129128*^9}, {
   3.868975240520047*^9, 3.868975267560664*^9}, {3.8690319933178453`*^9, 
   3.8690319942928963`*^9}, {3.869034512435259*^9, 3.869034512808312*^9}, {
   3.869034610772094*^9, 3.869034611688615*^9}, {3.86903620618801*^9, 
   3.869036206373323*^9}, {3.8690363476068773`*^9, 3.869036349769408*^9}, {
   3.869036449105991*^9, 3.869036450054133*^9}, {3.8691058271725616`*^9, 
   3.86910585030811*^9}, {3.869106008681794*^9, 3.86910601769174*^9}, {
   3.869106118542383*^9, 3.869106126708026*^9}, {3.869106300198392*^9, 
   3.869106310243504*^9}, {3.869106550008959*^9, 3.8691065502511663`*^9}, {
   3.8691066023696003`*^9, 3.8691066409269953`*^9}, {3.869106728726873*^9, 
   3.869106732707152*^9}, {3.869106781369624*^9, 3.869106781690955*^9}, {
   3.869107221769636*^9, 3.869107224150084*^9}, {3.8691076647349586`*^9, 
   3.8691076791551533`*^9}, 3.869108111159465*^9, {3.869111253542173*^9, 
   3.869111266704829*^9}, 3.8691114531763678`*^9, {3.8691115014501963`*^9, 
   3.8691115024350452`*^9}, {3.8691115775921707`*^9, 
   3.8691115787758913`*^9}, {3.8691116899369087`*^9, 3.869111690538197*^9}, {
   3.8691117691600723`*^9, 3.8691117876982183`*^9}, {3.8691121802378807`*^9, 
   3.8691121836826277`*^9}, 3.869112387993538*^9, {3.8691125616997557`*^9, 
   3.8691125907168922`*^9}, {3.86911270806533*^9, 3.869112723740849*^9}, {
   3.869112956528831*^9, 3.869112966025186*^9}, {3.869113141057391*^9, 
   3.869113142033929*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<FeatureLayer\>\"", "->", "featureLayer"}], ",", 
       RowBox[{"\"\<SoftNet\>\"", "->", "softNet"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<FeatureLayer\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868436150363471*^9, 3.868436214879616*^9}, {
   3.8684363176157846`*^9, 3.868436401711966*^9}, {3.868436439018614*^9, 
   3.868436449976253*^9}, {3.868436507251442*^9, 3.868436566344318*^9}, {
   3.868436601752877*^9, 3.868436606688592*^9}, {3.8684378203450413`*^9, 
   3.868437848662979*^9}, {3.868438156495153*^9, 3.8684381757432423`*^9}, {
   3.868438230057756*^9, 3.8684382404094887`*^9}, {3.868438312361177*^9, 
   3.868438339094953*^9}, {3.8684384459605*^9, 3.868438454771668*^9}, {
   3.8684385462566147`*^9, 3.8684385862545233`*^9}, {3.8684386245588503`*^9, 
   3.868438717976014*^9}, {3.868438791131241*^9, 3.8684388742400846`*^9}, {
   3.868438957513969*^9, 3.8684389581925077`*^9}, {3.8684390163704367`*^9, 
   3.868439068705132*^9}, {3.868442351137228*^9, 3.868442398109271*^9}, 
   3.8684433338319263`*^9, {3.86844712352503*^9, 3.868447133785776*^9}, {
   3.868511573996563*^9, 3.868511634912119*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainableNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
       RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Acceptability\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684424197508583`*^9, 3.868442462956246*^9}, 
   3.8684433239111013`*^9, {3.868447095425324*^9, 3.868447102608048*^9}},
 CellLabel->
  "In[434]:=",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetFlatten", "[", "trainableNet", "]"}]], "Input",
 CellChangeTimes->{{3.869029509503131*^9, 3.869029510968685*^9}, {
  3.869033078018523*^9, 3.86903308126506*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"45322628-cc61-4057-9fa0-4c75c908c79b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss/Error\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-11.000000133974481`, -4.999999705256131}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/Featu..\"", "\"Net/FeatureLayer/Catenate\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "Net/FeatureLayer/Catenate", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-10.00000005358979, -1.999999732051029}], 
                    
                    Offset[{
                    0, -13.5}, {-10.00000005358979, -1.999999732051029}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-11.000000107179584`, -3.999999705256131}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-11.000000080384687`, -2.9999997052561316`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    Offset[{0, -7}, {-11.00000005358979, -1.999999705256132}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-11.000000026794893`, -0.9999997052561324}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Soft..\"", "\"Loss/SoftmaxLayer\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/SoftmaxLayer", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Soft..\"", "\"Loss/SoftProbs\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/SoftProbs", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/12\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/12", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.9999999732051, 1.000000241154073}], 
                    
                    Offset[{0, -13.5}, {-8.9999999732051, 
                    1.000000241154073}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/1\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/1", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}], 
                    
                    Offset[{0, -13.5}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/7\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/7", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-11.9999999732051, 
                    1.000000321538764}], 
                    
                    Offset[{0, -15.5}, {-11.9999999732051, 
                    1.000000321538764}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/10\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/10", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.999999999999997, 
                    1.875642792038249*^-7}], 
                    
                    Offset[{0, -13.5}, {-6.999999999999997, 
                    1.875642792038249*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/15\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/15", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/11\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/11", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{0, -13.5}, {-9.9999999732051, 1.00000026794897}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/13\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/13", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    Offset[{0, -13.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/14\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/14", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/16\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/16", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/17\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/17", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/2\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/2", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-12.9999999732051, 
                    1.000000348333661}], 
                    
                    Offset[{0, -13.5}, {-12.9999999732051, 
                    1.000000348333661}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/3\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/3", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-12.999999946410203`, 
                    2.0000003483336606`}], 
                    
                    Offset[{0, -13.5}, {-12.999999946410203`, 
                    2.0000003483336606`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/4\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/4", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-9.00000005358979, -1.9999997588459262`}], 
                    
                    Offset[{
                    0, -13.5}, {-9.00000005358979, -1.9999997588459262`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/8\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/8", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}], 
                    
                    Offset[{0, -15.5}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/5\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/5", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 
                    2]}, {-9.000000026794893, -0.9999997588459264}], 
                    
                    Offset[{
                    0, -13.5}, {-9.000000026794893, -0.9999997588459264}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/6\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/6", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999999999996, 
                    2.411540732620606*^-7}], 
                    
                    Offset[{0, -13.5}, {-8.999999999999996, 
                    2.411540732620606*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Net/SoftN..\"", "\"Net/SoftNet/9\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Net/SoftNet/9", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.9999999732051, 
                    1.000000294743867}], 
                    
                    Offset[{0, -13.5}, {-10.9999999732051, 
                    1.000000294743867}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.2177580926747265`, 
                    1.7392528529019002`}, {-10.479057033602842`, \
-3.437170543727375}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.948683289577223}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-10.455901777458962`, \
-2.911803118710179}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337044`}, {-10.450000065647494`, \
-2.4499997199933254`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334008,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-10.45000005358979, \
-1.9999997199933253`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183177`}, {-10.450000041532087`, \
-1.5499997199933255`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396942, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406267, 
                    2.4596746434363035`}, {-10.455901728595606`, \
-1.0881963209602008`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721357153387337`, -0.8944272029829576}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"21\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019002`}, {-9.479056953218153, \
-0.43717057052227337`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-12.449999985262803`, 
                    0.5500003335964679}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{-3.8890871923183172`, 
                    3.889087400733702}, {-6.449999985262805, 
                    0.5500001728270857}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.707106762239694}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"21\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999973205099, 
                    1.0000002532117764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"512\"", "\"21\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-8.4499999732051, 
                    1.0000002264168797`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-7.4499999732051005`, 
                    1.0000001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-12.449999973205099`, 
                    1.0000003335964678`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183177`}, {-12.449999961147395`, 
                    1.4500003335964675`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396942, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592804, 
                    2.459674907063231}, {-8.45590172386917, \
-0.9118031722999739}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.447213619466042, 
                    0.8944271790168734}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{-3.8890871923183172`, 
                    3.889087400733702}, {-8.4500000120577, \
-0.4499997735831199}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.707106762239694}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014818`*^-7, 
                    5.499999999999999}, {-8.449999999999996, 
                    2.2641687989604576`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897029117852`*^-8}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-11.449999973205099`, 
                    1.0000003068015708`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"512\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-10.449999973205099`, 
                    1.0000002800066736`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.000000133974481`, -4.999999705256131}, \
{-10.00000005358979, -1.999999732051029}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.000000107179584`, -3.999999705256131}, \
{-10.00000005358979, -1.999999732051029}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.000000080384687`, -2.9999997052561316`}, \
{-10.00000005358979, -1.999999732051029}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.00000005358979, -1.999999705256132}, \
{-10.00000005358979, -1.999999732051029}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.000000026794893`, -0.9999997052561324}, \
{-10.00000005358979, -1.999999732051029}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    
                    2.9474386732029625`*^-7}, {-10.00000005358979, \
-1.999999732051029}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.00000005358979, -1.999999732051029}, \
{-8.9999999732051, 1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-12.999999999999996`, 
                    3.4833366137853197`*^-7}, {-11.9999999732051, 
                    1.000000321538764}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999999999997, 
                    1.875642792038249*^-7}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 
                    1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
512\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 512\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.9999999732051, 
                    1.000000241154073}, {-7.9999999732051, 
                    1.000000214359176}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
512\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 512\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-12.9999999732051, 
                    1.000000348333661}, {-11.9999999732051, 
                    1.000000321538764}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-12.999999946410203`, 
                    2.0000003483336606`}, {-11.9999999732051, 
                    1.000000321538764}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.00000005358979, -1.9999997588459262`}, \
{-7.999999999999997, 2.1435917623294274`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.000000026794893, -0.9999997588459264}, \
{-7.999999999999997, 2.1435917623294274`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999999999996, 
                    2.411540732620606*^-7}, {-7.999999999999997, 
                    2.1435917623294274`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.9999999732051, 
                    1.000000321538764}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.999999999999997, 
                    2.1435917623294274`*^-7}, {-6.999999999999997, 
                    1.875642792038249*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.9999999732051, 
                    1.000000294743867}, {-9.9999999732051, 
                    1.00000026794897}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.479057033602842`, -3.437170543727375}, \
{-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.9999999732051017`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.455901777458962`, -2.911803118710179}, \
{-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.450000065647494`, -2.4499997199933254`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.45000005358979, -1.9999997199933253`}, \
{-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.450000041532087`, -1.5499997199933255`}, \
{-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.455901728595606`, -1.0881963209602008`}, \
{-0.25, 0}, 
                    Offset[8], {0.9999999464102061, -2.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.479056953218153, -0.43717057052227337`}, \
{-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-12.449999985262803`, 
                    0.5500003335964679}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.449999985262805, 
                    0.5500001728270857}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999973205099, 
                    1.0000002532117764`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
512\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 512\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.4499999732051, 
                    1.0000002264168797`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
512\[Times]21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 512\[Times]21\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999732051005`, 
                    1.0000001996219825`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-12.449999973205099`, 
                    1.0000003335964678`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-12.449999961147395`, 
                    1.4500003335964675`}, {-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.45590172386917, -0.9118031722999739}, {-0.25,
                     0}, 
                    Offset[8], {1.000000053589793, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.4500000120577, -0.4499997735831199}, {-0.25, 
                    0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999999999996, 
                    2.2641687989604576`*^-7}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999973205099`, 
                    1.0000003068015708`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999999999975`, 
                    1.9962198286692792`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 512\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999973205099`, 
                    1.0000002800066736`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"CE\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss/Error\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/Error", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.000000133974481`, -4.999999705256131}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.00000005358979, -1.999999732051029}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 
                    16], {-10.00000005358979, -1.999999732051029}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/FeatureLayer/Catenate\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/FeatureLayer/Catenate", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.000000107179584`, -3.999999705256131}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.000000080384687`, -2.9999997052561316`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.00000005358979, -1.999999705256132}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-11.000000026794893`, -0.9999997052561324}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-10.999999999999996`, 2.9474386732029625`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztWFtIk2EYdnO6zaFuc9N5SHSbp6lT2cmpqNOpOwiRUhkUoXkgCoVpSBdF
dROdLqqbLqKuuomC6EARFEGR0F1FEdVVFEQXRecDnZ5HNhiytWn/1oG98Prr
9/7/93zv+73f+72P5SNTA+PitLS0aRl+DAzPugKB4a2DSvyxcnJ648Tk2Kh3
cmZsYizQPJKOQQe0FCpJS0lKUpKS/1syMjJUpaWl4yaTaX9FRcU2rVbbl2hM
vV4/7fF4Xvv9/m/d3d1P8PzS39//w263nxeJROJEYNbU1OwjBrC+wt9Rjkkk
kmyLxXKS42VlZZuExszLy3NxbqvVetrtdj/Nzs42hWxSqbSANpvNdlZoXKfT
ec3n833Kzc21er3eD3g25eTkNFL5O3C/OxyOi0Jiwh8d58UeXtDpdCvoWyQ1
m81HhcRFjDs5L/Z3T3V19e6GhoZjGo3GvVCzsrL0QuLCxwHiVlVV7UK8r+bn
5/tCNuZVc3PzFaxpr5CYFKVSaSNua2vrTZ6hzMzMvJCtrq7uMG3FxcVrhcaF
iFpaWq5zfuKiTniKiopWMX85xvqRAMx5kclkJcA5F55HnZ2d9+HnmkRhhkt6
eroCZ7eO60gGXkr+TUHN1UEbk604Dzui1dtEKu7SIeiZZOuf3ueUJFcKCtgq
xc5Hg8EwIyQu7nQ/52UvhbvvRjTFPTgkJC7vm7a2tlvBvnSzkHPHEvQTWpfL
9Yi9eWFh4WAysdmj9fT0PGe81Wp1ezzfKBSKCvIJ9B8H+ESPa14KNvpiC/qa
t319fa9410d7D3sjR495nDyCvTX6+mfsexkvo9G4dSnY6KV6yYHIEeRy+bKF
drFYLGWeEZM5AZ+NHGe8Ojo67hF7KX4zz7DXDzlnSUnJuoX2ysrKnbTV1tYe
7O3tfRFuQ86vpg0xDywSVgTOdYrf1tfXH4m0JsT1XXt7+232sfQ7xF2o4G4b
gmd9djGg8GU7v+N84JgZC+0hfzDvFvobrcYsprcGR1jO3OC+ku9FWdf83Y1a
40VPP1deXj4Vib+Qp8eDSY6JPH6DM/SRXCHae+AKh4jLPh7xfk/OErKpVCon
+UuknIgkXFtXV9fjYB6t/9W7jC/fA/+8hNy9ExrnuWLNw7o/I68N8eCG7oVY
9bmpqekE44+z/TLIneYQ027+HwBruMuzRz4XD2Y4biwFR3nA91HLWokTZiP/
voz9sceL+TuCmq5hfcA+qZOBl5KU/E3yE7YM2js=
                    "], {{0, 29.333333333333332`}, {16., 0}}, {0, 255}, 
                    ColorFunction -> RGBColor, ImageResolution -> 135.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {16., 29.333333333333332`}, 
                    PlotRange -> {{0, 16.}, {0, 29.333333333333332`}}, 
                    ImageSize -> 16], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/SoftmaxLayer\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SoftmaxLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/SoftmaxLayer", Bold], 
                    Style[
                    SoftmaxLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Sum]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/SoftProbs\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Total", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/SoftProbs", Bold], 
                    HoldForm[
                    AggregationLayer[Total]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.9999999732051, 1.000000241154073}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-8.9999999732051, 
                    1.000000241154073}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net/SoftNet/12\"", Bold, StripOnInput -> 
                    False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/12", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-12.999999999999996`, 
                    3.4833366137853197`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/1", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-11.9999999732051, 1.000000321538764}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-11.9999999732051, 1.000000321538764}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-11.9999999732051, 
                    1.000000321538764}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/7", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-6.999999999999997, 
                    1.875642792038249*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/10", Bold], 
                    Style[ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.999999973205101, 1.0000001607693818`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-5.999999973205101, 
                    1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/15\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/15", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-9.9999999732051, 1.00000026794897}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-9.9999999732051, 1.00000026794897}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/11", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.9999999732051, 1.000000214359176}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-7.9999999732051, 
                    1.000000214359176}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/13\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/13", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.98, 0.98, 0.98]], 
                    EdgeForm[
                    GrayLevel[0.97]], 
                    DiskBox[{-6.9999999732051, 1.0000001875642788`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"C\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/14\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CompiledLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/14", Bold], 
                    Style[
                    CompiledLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.98, 0.98, 0.98]], 
                    EdgeForm[
                    GrayLevel[0.97]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"C\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/16\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CompiledLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/16", Bold], 
                    Style[
                    CompiledLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/17\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/17", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-12.9999999732051, 
                    1.000000348333661}], 
                    
                    Offset[{-10.5, -10.5}, {-12.9999999732051, 
                    1.000000348333661}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-12.9999999732051, 1.000000348333661}], 
                    
                    Offset[{10.5, 10.5}, {-12.9999999732051, 
                    1.000000348333661}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-12.9999999732051, 
                    1.000000348333661}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/2", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-12.999999946410203`, 2.0000003483336606`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-12.999999946410203`, 
                    2.0000003483336606`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/3", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-9.00000005358979, -1.9999997588459262`}], 
                    
                    Offset[{-10.5, -10.5}, {-9.00000005358979, \
-1.9999997588459262`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-9.00000005358979, -1.9999997588459262`}], 
                    
                    Offset[{10.5, 
                    10.5}, {-9.00000005358979, -1.9999997588459262`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-9.00000005358979, \
-1.9999997588459262`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/4", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-7.999999999999997, 2.1435917623294274`*^-7}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-7.999999999999997, 2.1435917623294274`*^-7}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-7.999999999999997, 
                    2.1435917623294274`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/8", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    
                    Rational[-21, 
                    2]}, {-9.000000026794893, -0.9999997588459264}], 
                    
                    Offset[{-10.5, -10.5}, {-9.000000026794893, \
-0.9999997588459264}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[
                    21, 2]}, {-9.000000026794893, -0.9999997588459264}], 
                    
                    Offset[{10.5, 
                    10.5}, {-9.000000026794893, -0.9999997588459264}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-9.000000026794893, \
-0.9999997588459264}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/5", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-8.999999999999996, 
                    2.411540732620606*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/6", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 28), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.9999999732051, 1.000000294743867}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-10.9999999732051, 
                    1.000000294743867}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Net/SoftNet/9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net/SoftNet/9", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 29), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxTTMoPSmViYGCQBWIQ/fc/GOxPSpJyDD6aYxcTNvfj///v958PMWRnYPhg
z3C1joWBQe3AwTCLN///Cx8wCj3DyMCgcuDWeqEdIH1pq2Ywg+Sb1xbc+P+f
/8CZ+k1MIH4LmM8OVa92gCv64QaQ+hlazxhAfPFthxJB9vwDW696YLHyIZuV
xyfbQdwRYwdx13t73dXnfoD0zV+ZxAdyz7TQ9D8gc/P/TRYF8VOuSgKlFQ8E
/t7tAOJDzNM88CH/6ZLghOl2EHn1A4d++oeB5CHmSh8QE/t+Y4VOp92pVcZA
LeIHHvxR10aYp3xAMeCtO4h/Eiwvf6BxWZclgi99YENgpBGID9EvfEBgxTdl
EH8q2H38BxyCj8ogzNM8MMmvMRahXvOAx/IDesCAcICEj9KB1Swu+0H+hLhP
/gAkHHrsIOGldCCCs6MOEV6KB8Kvz7vyT28C1H+qBz4tkfMHmQ8AsBAAwQ==

                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 21, 8, 8, 8, 8, 8, 8, 21, 21, 21, 21, 25, 
                    21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 25, 21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {773.0000014737192, 433.00000294743853`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/8" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {10752}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{512, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 128}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/Error" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"acceptable\"", "\"good\"", 
                    "\"very good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"high\"", "\"medium\"", "\"low\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"low\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {3, 4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"small\"", "\"large\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"low\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Error"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftmaxLayer"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftProbs"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/12"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/7"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/10"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/15"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/11"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/13"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/14"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/16"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/17"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/4"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/8"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/5"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/6"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/9"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Error"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftmaxLayer"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftProbs"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/12"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/7"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/10"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/15"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/11"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/13"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/14"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/16"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/17"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/4"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/8"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/5"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/6"], 
                    NeuralNetworks`NetPath["Nodes", "Net/SoftNet/9"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBuLEhA8Tpl1+47jDi3cpiJ523Ww7iOY85HgSRPP4Xzw+
HUiLLXe9BaJj5t7ymgGk//Hb+4PokOU7okE0V//NShD9V6SeaSaQXlMYGzUH
SHcH6eaA6CkJ6lUgerH8//UgunRPu+1cIH2EbXICiF5o69oIoqVm7ri+G2Su
+pQ3IHq6tN0vMJ/BQHAPkN7VrqgPomd1mVuD6AWaT11BtJWymQ+IXjE/thlE
V6wu3gOife4dvw6izV4p/QLRa5d+dNgHpO/+2VsDog1u+kwB0f9y3WeB6Jo5
mxeD+aXrNoLorwpf94Lon5Nj3oPoJ01XhPcD6XU345VAtOH0q0Yg2nn3ulAQ
PWOqRzqIBgDxk8vK
  "],
 CellLabel->
  "Out[435]=",ExpressionUUID->"9389ccf2-0525-450d-8941-b3f9bc4b2ab2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.868439333949903*^9}},ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-\
772879a58a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "trainableNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"BatchSize", "->", "Automatic"}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 
  3.868447037389845*^9}},ExpressionUUID->"b925ae5d-4091-4d4b-a37f-\
d801edc11fc9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{
   RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Net\>\"", ",", "\"\<SoftNet\>\"", ",", "1", ",", "1", ",", 
     "\"\<Weights\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869114275218341*^9, 3.869114326387559*^9}},
 CellLabel->
  "In[451]:=",ExpressionUUID->"078c4ec8-5e79-490c-8132-46594829ba27"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["0", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"ClipVaria..\"", "\"ClipVariates\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "ClipVariates", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Distribut..\"", "\"Distribution\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Distribution", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    
                    Rational[-27, 
                    2]}, {-3.000000026794896, -0.9999999196153085}], 
                    
                    Offset[{
                    0, -13.5}, {-3.000000026794896, -0.9999999196153085}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Variates\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Mu\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{0, -13.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Sigma\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4500000120577026`, \
-0.4499999343525021}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.889087192318317}, {-2.4499999879422956`, 
                    0.45000006564749745`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"10752\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-1.9999999999999993`, 5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4500000120577026`, -0.4499999343525021}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Random\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Random"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999999999993`, 
                    6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Mu\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Mu"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999879422956`, 
                    0.45000006564749745`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Sigma\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Sigma"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999999999993`, 
                    3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 10752\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"ClipVariates\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["ClipVariates", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAfiEWAmIWB/iC+aYtxXNtmSxAd2b3dklLzUtq3O4DMguG4tj3C5JoV07bF
NqFlkwWyeSB+aP1+HlLNSmzbah7btMke2Sw4bthqlzZzJisp5iW1bnFMaNpk
is08kLh3+2FBot3WssUqtmW7DVa3QTFIPmH+fg5izItu3e6MzywYjqzfJELI
rPiWrXaJ3TvNiTEPpC530jY+XGbF9my3SW7aZk2MWTCcVL/JJrR+FUZ8x3Rs
sUpq225JillwdwLD27LvGCfYf0B+TPdmh7hu8syCx3nvbovICbttiImf4QQA
lPXkYw==
                    "], {{0, 270.}, {360., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 4.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {360., 270.}, 
                    PlotRange -> {{0, 360.}, {0, 270.}}, ImageSize -> 20], 
                    TraditionalForm]], {-3.000000026794896, \
-0.9999999196153085}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Distribution\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "RandomArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Distribution", Bold], 
                    Style[
                    RandomArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Variates\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Variates", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999999999999, 
                    8.038469108735353*^-8}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999999999999, 
                    8.038469108735353*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Mu\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Mu", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{-10.5, -10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{10.5, 10.5}, {-2.999999973205102, 
                    1.0000000803846907`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Sigma\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Sigma", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}, {-3.000000026794896, -0.9999999196153085}, \
{-1.9999999999999993`, 5.3589794058235685`*^-8}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.999999973205102, 
                    1.0000000803846907`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{21, 8, 21, 25, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {223.0000014737193, 157.99999999999994`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{29., 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Sigma" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Variates" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {10752}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Mu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sigma", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Distribution", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Nodes", "ClipVariates"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Distribution"], 
                    NeuralNetworks`NetPath["Nodes", "Variates"], 
                    NeuralNetworks`NetPath["Nodes", "Mu"], 
                    NeuralNetworks`NetPath["Nodes", "Sigma"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Nodes", "ClipVariates"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Distribution"], 
                    NeuralNetworks`NetPath["Nodes", "Variates"], 
                    NeuralNetworks`NetPath["Nodes", "Mu"], 
                    NeuralNetworks`NetPath["Nodes", "Sigma"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8691142823113003`*^9, 3.86911432726884*^9}},
 CellLabel->
  "Out[451]=",ExpressionUUID->"8a3d8e04-1b8d-40da-b5bb-a9a5a150690c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetInsertSharedArrays", "[", 
  RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869114381443358*^9, 3.8691143818911467`*^9}, {
  3.86911443688621*^9, 3.869114441563435*^9}, {3.869114592070415*^9, 
  3.869114599772975*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"1a500de4-554f-45b9-bbe8-80975777ab7d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000053589793, -1.9999999196153082`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Net\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000026794896, -0.9999999196153085}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    Offset[{0, -7}, {-2.999999919615308, 3.00000008038469}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019}, {-2.479056953218156, \
-0.4371707580865526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.3162277914367091,
                     0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.4596749070632327`}, {-2.455901697074275, 
                    0.08819666693064376}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721361946604227`, 0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-2.4499999611473986`, 
                    1.4500000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406267, 
                    2.459674643436304}, {-2.4559016482109186`, 
                    1.911803464680622}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829576}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000053589793, -1.9999999196153082`}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999946410205, 
                    2.0000000803846905`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999919615308, 
                    3.00000008038469}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.479056953218156, -0.4371707580865526}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000803846907`, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.455901697074275, 
                    0.08819666693064376}, {-0.25, 0}, 
                    Offset[8], {1.0000000535897937`, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999611473986`, 
                    1.4500000656474974`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4559016482109186`, 
                    1.911803464680622}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102058, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000053589793, -1.9999999196153082`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 
                    1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999732051024`, 1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999946410205, 2.0000000803846905`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999919615308, 3.00000008038469}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-3.000000053589793, \
-1.9999999196153082`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-3.000000026794896, \
-0.9999999196153085}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.999999973205102, 
                    1.0000000803846907`}, {-2.999999946410205, 
                    2.0000000803846905`}, {-2.999999919615308, 
                    3.00000008038469}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {232.49999999999991`, 322.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.49999557884198, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "FeatureLayer" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"PurchasePrice" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Nodes" -> <|"Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    "SoftNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Net/SoftNet/1/1/Weights/Mu/Array"|>]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    10752}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, "Sigma" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> 
                    "Net/SoftNet/1/1/Weights/Sigma/Array"|>]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    10752}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`RealT]|>|>, "Variates" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`AtomT]|>|>|>, "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`AtomT]|>|>, "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {10752}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{512, 21}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512, 
                    21}, NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512, 21},
                     NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|"LayerFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Reshape", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "HardInclude", "Inputs", 
                    "Weights"] -> NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "HardInclude", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "And", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Harden", "Outputs", 
                    "Output"]}|>, "2" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> NetArray[<|
                    "Array" -> Automatic, "Dimensions" -> Automatic, "Name" -> 
                    "Net/SoftNet/1/2/Weights/Mu/Array"|>]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    512}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, "Sigma" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NetArray[<|"Array" -> Automatic, "Dimensions" -> 
                    Automatic, "Name" -> 
                    "Net/SoftNet/1/2/Weights/Sigma/Array"|>]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    512}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "Variates" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>|>, "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {512}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Not" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|"LayerFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", 
                    "Weights"] -> NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Harden", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Harden", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 128}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Outputs", "Output"]}|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"acceptable\"", "\"good\"", 
                    "\"very good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"high\"", "\"medium\"", "\"low\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"low\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {3, 4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"small\"", "\"large\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"low\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <|
                    "Net/SoftNet/1/1/Weights/Mu/Array" -> 
                    NeuralNetworks`Private`DummyArray[{10752}], 
                    "Net/SoftNet/1/1/Weights/Sigma/Array" -> 
                    NeuralNetworks`Private`DummyArray[{10752}], 
                    "Net/SoftNet/1/2/Weights/Mu/Array" -> 
                    NeuralNetworks`Private`DummyArray[{512}], 
                    "Net/SoftNet/1/2/Weights/Sigma/Array" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.869114382540601*^9, 3.8691144421175117`*^9, 
  3.8691146006849937`*^9},
 CellLabel->
  "Out[454]=",ExpressionUUID->"dda303dd-96f9-451f-83e0-ff8f8a2ad66a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{
   RowBox[{"NetInsertSharedArrays", "[", 
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}], ",", 
   RowBox[{"NetArray", "[", "All", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869114034755909*^9, 3.869114038282872*^9}, {
  3.869114644680725*^9, 
  3.869114673611425*^9}},ExpressionUUID->"42fd3643-5a76-47ba-8960-\
172aa64ca857"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000053589793, -1.9999999196153082`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Net\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000026794896, -0.9999999196153085}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    Offset[{0, -7}, {-2.999999919615308, 3.00000008038469}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019}, {-2.479056953218156, \
-0.4371707580865526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.3162277914367091,
                     0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.4596749070632327`}, {-2.455901697074275, 
                    0.08819666693064376}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721361946604227`, 0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-2.4499999611473986`, 
                    1.4500000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406267, 
                    2.459674643436304}, {-2.4559016482109186`, 
                    1.911803464680622}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829576}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"128\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000053589793, -1.9999999196153082`}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999946410205, 
                    2.0000000803846905`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999919615308, 
                    3.00000008038469}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.479056953218156, -0.4371707580865526}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000803846907`, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.455901697074275, 
                    0.08819666693064376}, {-0.25, 0}, 
                    Offset[8], {1.0000000535897937`, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999611473986`, 
                    1.4500000656474974`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4559016482109186`, 
                    1.911803464680622}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102058, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
4\[Times]128\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]128\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000053589793, -1.9999999196153082`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 
                    1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999732051024`, 1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999946410205, 2.0000000803846905`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999919615308, 3.00000008038469}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-3.000000053589793, \
-1.9999999196153082`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-3.000000026794896, \
-0.9999999196153085}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.999999973205102, 
                    1.0000000803846907`}, {-2.999999946410205, 
                    2.0000000803846905`}, {-2.999999919615308, 
                    3.00000008038469}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {232.49999999999991`, 322.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.49999557884198, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "FeatureLayer" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"PurchasePrice" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Nodes" -> <|"Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    "SoftNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    10752}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, "Sigma" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    10752}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>, "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`RealT]|>|>, "Variates" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`AtomT]|>|>|>, "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    10752}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{10752},
                     NeuralNetworks`AtomT]|>|>, "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {10752}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{512, 21}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512, 
                    21}, NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512, 21},
                     NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|"LayerFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJytWAtUU9ea3icJOQcM4QSjBgl4ImDRUnoSAgRBm5CAEcEGpFPaepsHSSoa
IARE8JmXJFqsUbletLaN1na8nXYW1sf1evtIAC2t2IFaq169KoqPaX1Wq7Z6
x9nnJBHGmVlrZs1krZz/7H//r/3vb/977yMy1FcYEAAAKQCgUBk4m80HIAq2
DRwyteSVL8wrHu7Vjim3l1IyIg4AP7MAGMMQAQZsj4d/1JGyQdHHms3GJXkb
ETcnLQpLSGa9abALihiFG8cU9uISvgwTzImRGLxqa68oRRXvaccVGxnGPmw3
n1AWe4mvEYnBLZiWPs0nXt41fwNxuA/aXUMAMANSyWRvNGEoBqJnUzsFojT4
SHiGs3qnT2cwzidSzU5/XBu4jMkdzjwG2Zki9wbmbJ1c0rm85rejmwxejLc3
ndHVAQpJjlLDMg6IZ+Eag/eijPtqvy81OjsFFLdwnZwGjkO+ceq7O7D4HbvI
bt2gae127GOnJKvAVZT4+nf88u7hRu4dYgyvtXxY9aU0TS/Y9XaK3bfxQ2/8
h+8dePfqhG3myVtnlyjsG6VFHeSvvb9AIfjygeEBxtjpU2W1XFDvTPhMTxzD
/kW+a2p8A4ZXHD0fO353MR5nK7PiBbjOPevDLe6poBD73um0XViAlsO5eAGO
PdF7/jH8ofK/2jHEB8bIa+VsRG2P2pVD9ILUAEOTuO0CLRDgQ/l/Az4Qc9UV
23ab4jF1MXKBhXwLqbIvZLoeUSywF9HF2CeB+AE00ZcK4nXIVR1zOw4mWayb
qf5JYB54BOzM83EgGtphj6U8EhMZVTk4F6Qm+p6hVD6KZaeC6C6Lb8fTKhjT
HwemnyRmUx0vgA/BAwSgAehOg+jB3SDb/BvVgXiZgTj7CyDVH5fDr8RZfW07
4p3glLwKsbITvW+Cb3VMR3QgAcyGOcBhDsZ65QJvtEIsIqdgh8VwohRbiIxu
1mTdW2YnzhnLvuKYwhp0y7fipWPdgS0kqzJbgX0crSBFB6awTroDjLHJywPM
/AdR+X5Xjt3TsIDZrEaX7EKXn9TFXBpgX/ej8HmLQJcAdCmJ2vxoI4HWgjib
FW2g3ylmSAC+69AmP9osR2t9XPikmgPsy3bU6kcbCLRlgH3Dji7F0eaQIt27
B0dtdrQkDuPFF7a1dwBEWti57UZwX97yPw3VNL/CXXt0vngCx7jyiKJ/71/e
QocacvBvihetOXaXj33w8V+O+DvXRW0MGj/t+OnbsyLksKiSCYAcJgUXBLhf
++IdE+E7XIj2AGirFOwOJQyzwwcQBHxrGycSgAUiP6ag4o8KFoKQlAwIyyyM
k0ZjlAk5zaHs7POVywH/iRqb3Gnz5B2ABQI2WLQYR6ceN17DBgFYEwi6EOiA
8qMD3hyghgHQ7jHK3ZrDKjYAqVSMRNjUR+v6OHYgoEyBsClTMm8iQPyjo/px
ZnI2bZceEHRtF/1+TaUFsAKA8gjCHpPWnAnpjARv+VQuB5xQVkIeD27CuHZQ
Ndrj6mlGEpXTAwqPkdit8N8qQIB8PMamak5yJz+BV+prj54y6zBLWVIMrgqo
+rcbBv4OpFmYXdg7JDTzkRlepczd015oR1tb0MbOBs5lEHcd5961c7M4hcnd
waRvtwvNZBQt5krsZ87oU85oZ87ob2lvsqLLMLRV7bFa0aVWZnOLx0p4Evp5
3Gs+7hAZV0fGXbzFvaXhZuG9SWdFwpOipG59splck/+ZK39AmbeXWfCZq8DN
zO+/xW/WocsWoLkLPDb4tHusPo9Vhzano80PoqDZJXaPFvM0CDy2Tk9rpyPj
xi3ujfPcXwLcayTT0LddOLxd2E8/z+iF34iEvY6kb/TsH3zKvD5lXif9PNAj
61DKvMz8jp7nodNHzvzvmfldPZyvajzWKo/N6mpagLboPE0CT5Pfk/DtvLgb
IO5nDXfYx70ojxsiuNfgKIj0pDPB5G5F8nci4RlH8pnzwuGhpB+RZLOgXNal
nL7Nld+vSQ0PROdZ0oK2dJaX3vXFURlIXpj8jV54VZR0Npi0EkmmAhYl3dKz
K1e7ZP09+V3KGTAhj7oLhpX5XtjsaT8UA0fqWQLjwdCl6ait0zH/Is69FuBe
0nDvkCnB7xTJw0MTTg4lnYUBqBPyu1wz9roS3T2ydmVef0/BgWBeXw8cY0G/
em8DhsKoGmACqzwJpw9zr+nirp+H9SDuEhl3iYi7p+HW4dyLJBc275xn/+t5
7rCG+4BMuXBNL+x2JJ0cmnBNlHRZlNQrSoIzeFU0yUy8k/+ZcsYBZl6HK6+/
6jM4+3CwS2Gcas8SK8yeh3sJ596io71Jcu/4uHc1XAqjrRD3r0FqS1YTSi8n
IdomURMpjvYNGwZVfjzdWCCWFL7lE73fQogY8xLnf3A+ppfxcr3FbNPXEsr6
WmuNxWQjJJnirExxJkmY621EaU3d4haiRZZDpOdInzPUNE0l0ksW15kIcU4G
ISElkqmVi01EHqFY/AbdJMTS6VLJdKlYO1ffVNNs0mrLFjfpDTWWmqZWpaW+
zqQt1mo1+upFJqPCZtO3aitMekuOVCv5r5n/H0amE2nNeptYKivT19RR/xBD
Qq1RVpDjIJVkn1rnrNBX71nUODvl2cb3E9NkP/95WXXWpjGLGnc/u+ntOcsa
E9PkFQfDLN4/zalOebhjzqJnE9PU4I9wvYugrTExtnS4jtClVdZOOHc9ELF5
Az3Oy8LD22OvKqhlfpmaXAqf46UXddwrGgj7uGEK/HFXNNy7XXYH2ppOr8oW
T0MIk1XWbT2yvUj+TteMjh7GIrjAhWeGhGcI4bCeel51JHfrhQPbhX0hICGD
sBRStQntL9jpyt8GFyNzht9VABemr4eqTXqIj3pqv2QVZVBVkzrD8dsBX5Hw
vTx6QMONKmcUlcPKeBuWPbiLgGfdq6vE5JzdIh0s0Ww0QZwOcJYrz/vPZs7R
Qg3h47neh7uoL+DXOc0c3yaNxmfmMPfSpKNDg/vG7EwUy7fhLOaPHCxl4KA4
47hSIc/0607aBQyGoA5PJwVi0g5NHo5l1G8W4U6e6wI0aD8DtqbhB8XSiUUK
eVsig8sp5nAIVtC/wSXnmBPYkwXi9HehVTV3xysMw/tWgqrSOdWVcuPp/UHB
OPzU3rrnB+QYL4gfvTtLJZIei5apsohDR3/Krr35eAWLO8hRN9xfWnbu/nuv
tZcjG8ruN++olFdeWVb70DtIqd+vTVVHqbLPPvR+kD4OP750xcWZhsnFUarF
60/HVCDln1yZaciAAvu+eOj9PQEFWm+k/APl/dxvUQXHFFJ1w53WstO/1Z8L
ZCWpXPwl7524W/v4wEs4lDQrqCCjypHBFcAjRQbvnrhsgJxjMgAQMZw3OI7X
2oZ0+zmsbktCu+uUhMD2mDRc85EAwQnvQ9QcTqbnUEnPIbWJSdtBB0jLBu40
PZVFx1qEx9G5eC4GpiDlrn8UiAmYZKZM0xaLZRJ2PdOQwtBtJjCU0qUKxzN2
fmAy74WVWvtkGeeidKWqFLWS4LtHLbUJ8d8RYxkZanap91jTXGVncUpY4Is7
o+JpG4UpdghTHXJehyL2CaZSaFkKV2waV4cgro7sLlzgHec6xk9kmJXnLbiQ
/Tk+Mc21bKoci3qCtS5pocvVLuDjmDMonP9qFhspScf7vMFBNyFQm/1yRVab
wZaers5q2+6kybAtHeuL+mGdgJiLOZHjbDfPrshtK3qf4go4ibhSDnpiGSg7
hc3mO3UDAwo5ew/HgUMXL0J5FTqQ4RhYt/1XSQxDcgZ3I4J2gUCDORUuFJnY
L+GoSIOmQISx8WTVHpZqI/JpD1tF8AILh+TZcFybXTQG15/kViAbVvw00zAd
wuTeiofed/hy46NfYlU0Ou63lp27t/5hHyLk2KWrjk5SGBjqi2MnSF5ZJ8UL
VaQq6++8cuzocMoEvAwdhLC9kl3705fXU/bTIP3z+gfeQzQqb6TMNEwrCeF0
/ckx8yAwT+RSzOdKIVS/OLEfSn5NSf5GMaUwkpx1D/ui5SNL4XqKmQr42MH1
J2MrqHUw05CupmD+0Hs7nUGUPXbP6I2lcBlL45LRsJ/Th0BIsP4qyUD3mhbg
C47cEg5sFhX6n+txy15ri4ECCRcsCbLeUxI7cmEEH6v/u5rDZ8Re0uBpGv6h
/wE2BE9jw09KRrBRWQWxUTiCDaNPRWFjYQgbS0PYWEih4EQYG/sgNlr+Jhhf
u4MgJhhJi5yDIJxcLCEy5SmoQ9AvYRWGp9wnlO9hFea2Xe6BRqxKnK0jDTo5
7FiXxDKTR0g86FXchp7lzfjRePxzvC9w5PzrMbjEImfxkQUyauxZEYycO7he
QGPk3Ewbc7AJj604s+L1Y3/6Oyw0aVF4wpcrWGuiiXUvzu9rAiiTOKq9n5MS
68Z5nMHSVSp+YdavfVGqUYUmXKdaqXl+HiJi37sQEYK1sFStuz/zQsoP3RA4
P/2yjoJJDITJOzf3XYeSZEmohK3v5FCTf3GmjYFTlfHO0rLTD1c99B6Hpe1U
082U5jCoBTRGIKinhDCChWrW/xUbZ2lsvERjA4tgI/p7eQK/cCqfGZumYUeJ
GRp+kQYbXkfpGNmzO00Ct87/VaK7DWNWc30VGrNj6+oaF4/JhPWOZL6YZ452
hosfM65mSFNWxPToSuhZIxzBDKWCBRc/7tTp2NV+2R5WsFSVzJk09e5y7NOP
Hd3lJjIzavKWNbK29fylMwXJfwh+Dtc4iQe8SLyDEOxyTMS/z+2XCIvh7AMC
Y5sH2FU5c3BNg48do/lD8ADfa5xyQTCz4uqvt7Y5EozWm12wGLNIg10FhReS
qMrD7slQOqkQABVCM87+W4ZCfkgxMd1o8o3WtweRxKf1A6g7oTdIHulKD3od
iJ0QdAYnwZD641mVwoje+VMK4RO9scHYSVONglv5EIYMBNY/xjQ4FIcIDqUr
mN6rEHByWRYAS2Dp2IEGuKEzgIK0uiqwg2JspRzls4adM6kNA8N0BxQPmGSn
yfquP5Ep8DKSqf29EGmL9YoI+xBbzw/oNiNrYd4NDLiDv6rYktYC++apMd1m
P1ywU+AGtGtcH9x2fjzctYUxidIueaI9RGkrtka0DUNvp3UeFFd9BGKoCCqf
RFAVBSPwO3W9/k45zvG/OgBn2kqAUoiLKfsLeLep3X7eqjFf8ct7Vx37ylrK
K3q0ZAWXbp4LbWk5K3C6ecX8QVj+2GzhPBXv8eeTDomL+LfP/T0q3dlDzr04
q7cpVo1kxN8+d28GEdWl7l11cYKD2iYff3KOVQHeVD3KrSfdz5cHYyn1L2u1
QUr99IMkuvmJtptuPoqmdetPNE8WxUpEAacx4JaVXZH28kL8c/fGjV7Yt9+g
d+Iv30ksGdlohQza3b261wZHHWo2rYyhwzv9+e8UTJGKpZQem8RbPVCaM2W0
weN7a557UfWI2lA63j7xs6qXlskP790NRKjmSrj4ZDfjJqsFvG7H3OzOQIs9
ZlPopg1M8ODxJqTxzA4ddTumzoUWeJh8HlIq79S5sipsj6Jjqet36GYN3oad
cZB+BGl++GwARvWDsDz1i9z3I5T+GJUKgDB8RolQio9lADANvvPACKX5qSE/
1CePCI3wX4LvCWCERuzUhetyhEb8bgehLwsRGuFfQkIx7x7lF8DzW3d4LBEa
kT8eljv+VJyXw+3LT/Hvg1DOIjTCZ0O/48AIjfATkZB+hEb4GbA9BozQCD83
LJf7lLwaCX2GidBIfsCoeWNHxhW+Z8SDERrhU7/fQcw4Qph5QOGFun/JZDV1
NU01ekvNUnipq69TwXscdRuzWJprM00tVlN1U2aNuNhmMpXNXVxrstVU09e4
isV1TTW1Jq3SZtI3mUb30Iq1ptpqa2umlayRhR41OdLZ/8GP1pCXbawW67O1
1blSqVYqk1Vr83KyZdq87DyT3ig2SXJM1VQgWuXsuub6alqJbr9s01utJptW
qbdYaEZRi9U2IjPXtEQbuTQX2Wz1tkZTU1FLtclKdc5rarWYKk2NTbNMTdqy
SlNdY70NqlUveCKh1tcZoWZoXGEJygGdgVDzDWiwyWSr01vCjCe5ssGU1DXp
LZl19XCg+sbMxup6qynTaKq2wMs7mSkmjEZ9lsyQpc/Ky5GZsrOqTYZco1Qi
I7PzcvXV2dUyY3UOac4x6uHVXgtv9tbq5yzUVf/lsiffAf5XXwEyl1gyS/9T
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Reshape", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "HardInclude", "Inputs", 
                    "Weights"] -> NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "HardInclude", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "And", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Harden", "Outputs", 
                    "Output"]}|>, "2" -> <|
                    "Type" -> "Graph", "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "Mu" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    512}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, "Sigma" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    512}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, "Distribution" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|"Distribution" -> 
                    NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, "Variates" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>|>, "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> NeuralNetworks`TensorT[{
                    512}, NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>, "ClipVariates" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {512}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath["Nodes", "Mu", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath["Nodes", "Sigma", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Variates", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath["Nodes", "Distribution", "Outputs",
                     "Output"], NeuralNetworks`NetPath[
                    "Nodes", "ClipVariates", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Variates", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "ClipVariates", "Outputs",
                     "Output"]}|>, "Not" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|"LayerFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJytWAtUU9ea3icJOQcM4QSjBgl4ImDRUnoSAgRBm5CAEcEGpFPaepsHSSoa
IARE8JmXJFqsUbletLaN1na8nXYW1sf1evtIAC2t2IFaq169KoqPaX1Wq7Z6
x9nnJBHGmVlrZs1krZz/7H//r/3vb/977yMy1FcYEAAAKQCgUBk4m80HIAq2
DRwyteSVL8wrHu7Vjim3l1IyIg4AP7MAGMMQAQZsj4d/1JGyQdHHms3GJXkb
ETcnLQpLSGa9abALihiFG8cU9uISvgwTzImRGLxqa68oRRXvaccVGxnGPmw3
n1AWe4mvEYnBLZiWPs0nXt41fwNxuA/aXUMAMANSyWRvNGEoBqJnUzsFojT4
SHiGs3qnT2cwzidSzU5/XBu4jMkdzjwG2Zki9wbmbJ1c0rm85rejmwxejLc3
ndHVAQpJjlLDMg6IZ+Eag/eijPtqvy81OjsFFLdwnZwGjkO+ceq7O7D4HbvI
bt2gae127GOnJKvAVZT4+nf88u7hRu4dYgyvtXxY9aU0TS/Y9XaK3bfxQ2/8
h+8dePfqhG3myVtnlyjsG6VFHeSvvb9AIfjygeEBxtjpU2W1XFDvTPhMTxzD
/kW+a2p8A4ZXHD0fO353MR5nK7PiBbjOPevDLe6poBD73um0XViAlsO5eAGO
PdF7/jH8ofK/2jHEB8bIa+VsRG2P2pVD9ILUAEOTuO0CLRDgQ/l/Az4Qc9UV
23ab4jF1MXKBhXwLqbIvZLoeUSywF9HF2CeB+AE00ZcK4nXIVR1zOw4mWayb
qf5JYB54BOzM83EgGtphj6U8EhMZVTk4F6Qm+p6hVD6KZaeC6C6Lb8fTKhjT
HwemnyRmUx0vgA/BAwSgAehOg+jB3SDb/BvVgXiZgTj7CyDVH5fDr8RZfW07
4p3glLwKsbITvW+Cb3VMR3QgAcyGOcBhDsZ65QJvtEIsIqdgh8VwohRbiIxu
1mTdW2YnzhnLvuKYwhp0y7fipWPdgS0kqzJbgX0crSBFB6awTroDjLHJywPM
/AdR+X5Xjt3TsIDZrEaX7EKXn9TFXBpgX/ej8HmLQJcAdCmJ2vxoI4HWgjib
FW2g3ylmSAC+69AmP9osR2t9XPikmgPsy3bU6kcbCLRlgH3Dji7F0eaQIt27
B0dtdrQkDuPFF7a1dwBEWti57UZwX97yPw3VNL/CXXt0vngCx7jyiKJ/71/e
QocacvBvihetOXaXj33w8V+O+DvXRW0MGj/t+OnbsyLksKiSCYAcJgUXBLhf
++IdE+E7XIj2AGirFOwOJQyzwwcQBHxrGycSgAUiP6ag4o8KFoKQlAwIyyyM
k0ZjlAk5zaHs7POVywH/iRqb3Gnz5B2ABQI2WLQYR6ceN17DBgFYEwi6EOiA
8qMD3hyghgHQ7jHK3ZrDKjYAqVSMRNjUR+v6OHYgoEyBsClTMm8iQPyjo/px
ZnI2bZceEHRtF/1+TaUFsAKA8gjCHpPWnAnpjARv+VQuB5xQVkIeD27CuHZQ
Ndrj6mlGEpXTAwqPkdit8N8qQIB8PMamak5yJz+BV+prj54y6zBLWVIMrgqo
+rcbBv4OpFmYXdg7JDTzkRlepczd015oR1tb0MbOBs5lEHcd5961c7M4hcnd
waRvtwvNZBQt5krsZ87oU85oZ87ob2lvsqLLMLRV7bFa0aVWZnOLx0p4Evp5
3Gs+7hAZV0fGXbzFvaXhZuG9SWdFwpOipG59splck/+ZK39AmbeXWfCZq8DN
zO+/xW/WocsWoLkLPDb4tHusPo9Vhzano80PoqDZJXaPFvM0CDy2Tk9rpyPj
xi3ujfPcXwLcayTT0LddOLxd2E8/z+iF34iEvY6kb/TsH3zKvD5lXif9PNAj
61DKvMz8jp7nodNHzvzvmfldPZyvajzWKo/N6mpagLboPE0CT5Pfk/DtvLgb
IO5nDXfYx70ojxsiuNfgKIj0pDPB5G5F8nci4RlH8pnzwuGhpB+RZLOgXNal
nL7Nld+vSQ0PROdZ0oK2dJaX3vXFURlIXpj8jV54VZR0Npi0EkmmAhYl3dKz
K1e7ZP09+V3KGTAhj7oLhpX5XtjsaT8UA0fqWQLjwdCl6ait0zH/Is69FuBe
0nDvkCnB7xTJw0MTTg4lnYUBqBPyu1wz9roS3T2ydmVef0/BgWBeXw8cY0G/
em8DhsKoGmACqzwJpw9zr+nirp+H9SDuEhl3iYi7p+HW4dyLJBc275xn/+t5
7rCG+4BMuXBNL+x2JJ0cmnBNlHRZlNQrSoIzeFU0yUy8k/+ZcsYBZl6HK6+/
6jM4+3CwS2Gcas8SK8yeh3sJ596io71Jcu/4uHc1XAqjrRD3r0FqS1YTSi8n
IdomURMpjvYNGwZVfjzdWCCWFL7lE73fQogY8xLnf3A+ppfxcr3FbNPXEsr6
WmuNxWQjJJnirExxJkmY621EaU3d4haiRZZDpOdInzPUNE0l0ksW15kIcU4G
ISElkqmVi01EHqFY/AbdJMTS6VLJdKlYO1ffVNNs0mrLFjfpDTWWmqZWpaW+
zqQt1mo1+upFJqPCZtO3aitMekuOVCv5r5n/H0amE2nNeptYKivT19RR/xBD
Qq1RVpDjIJVkn1rnrNBX71nUODvl2cb3E9NkP/95WXXWpjGLGnc/u+ntOcsa
E9PkFQfDLN4/zalOebhjzqJnE9PU4I9wvYugrTExtnS4jtClVdZOOHc9ELF5
Az3Oy8LD22OvKqhlfpmaXAqf46UXddwrGgj7uGEK/HFXNNy7XXYH2ppOr8oW
T0MIk1XWbT2yvUj+TteMjh7GIrjAhWeGhGcI4bCeel51JHfrhQPbhX0hICGD
sBRStQntL9jpyt8GFyNzht9VABemr4eqTXqIj3pqv2QVZVBVkzrD8dsBX5Hw
vTx6QMONKmcUlcPKeBuWPbiLgGfdq6vE5JzdIh0s0Ww0QZwOcJYrz/vPZs7R
Qg3h47neh7uoL+DXOc0c3yaNxmfmMPfSpKNDg/vG7EwUy7fhLOaPHCxl4KA4
47hSIc/0607aBQyGoA5PJwVi0g5NHo5l1G8W4U6e6wI0aD8DtqbhB8XSiUUK
eVsig8sp5nAIVtC/wSXnmBPYkwXi9HehVTV3xysMw/tWgqrSOdWVcuPp/UHB
OPzU3rrnB+QYL4gfvTtLJZIei5apsohDR3/Krr35eAWLO8hRN9xfWnbu/nuv
tZcjG8ruN++olFdeWVb70DtIqd+vTVVHqbLPPvR+kD4OP750xcWZhsnFUarF
60/HVCDln1yZaciAAvu+eOj9PQEFWm+k/APl/dxvUQXHFFJ1w53WstO/1Z8L
ZCWpXPwl7524W/v4wEs4lDQrqCCjypHBFcAjRQbvnrhsgJxjMgAQMZw3OI7X
2oZ0+zmsbktCu+uUhMD2mDRc85EAwQnvQ9QcTqbnUEnPIbWJSdtBB0jLBu40
PZVFx1qEx9G5eC4GpiDlrn8UiAmYZKZM0xaLZRJ2PdOQwtBtJjCU0qUKxzN2
fmAy74WVWvtkGeeidKWqFLWS4LtHLbUJ8d8RYxkZanap91jTXGVncUpY4Is7
o+JpG4UpdghTHXJehyL2CaZSaFkKV2waV4cgro7sLlzgHec6xk9kmJXnLbiQ
/Tk+Mc21bKoci3qCtS5pocvVLuDjmDMonP9qFhspScf7vMFBNyFQm/1yRVab
wZaers5q2+6kybAtHeuL+mGdgJiLOZHjbDfPrshtK3qf4go4ibhSDnpiGSg7
hc3mO3UDAwo5ew/HgUMXL0J5FTqQ4RhYt/1XSQxDcgZ3I4J2gUCDORUuFJnY
L+GoSIOmQISx8WTVHpZqI/JpD1tF8AILh+TZcFybXTQG15/kViAbVvw00zAd
wuTeiofed/hy46NfYlU0Ou63lp27t/5hHyLk2KWrjk5SGBjqi2MnSF5ZJ8UL
VaQq6++8cuzocMoEvAwdhLC9kl3705fXU/bTIP3z+gfeQzQqb6TMNEwrCeF0
/ckx8yAwT+RSzOdKIVS/OLEfSn5NSf5GMaUwkpx1D/ui5SNL4XqKmQr42MH1
J2MrqHUw05CupmD+0Hs7nUGUPXbP6I2lcBlL45LRsJ/Th0BIsP4qyUD3mhbg
C47cEg5sFhX6n+txy15ri4ECCRcsCbLeUxI7cmEEH6v/u5rDZ8Re0uBpGv6h
/wE2BE9jw09KRrBRWQWxUTiCDaNPRWFjYQgbS0PYWEih4EQYG/sgNlr+Jhhf
u4MgJhhJi5yDIJxcLCEy5SmoQ9AvYRWGp9wnlO9hFea2Xe6BRqxKnK0jDTo5
7FiXxDKTR0g86FXchp7lzfjRePxzvC9w5PzrMbjEImfxkQUyauxZEYycO7he
QGPk3Ewbc7AJj604s+L1Y3/6Oyw0aVF4wpcrWGuiiXUvzu9rAiiTOKq9n5MS
68Z5nMHSVSp+YdavfVGqUYUmXKdaqXl+HiJi37sQEYK1sFStuz/zQsoP3RA4
P/2yjoJJDITJOzf3XYeSZEmohK3v5FCTf3GmjYFTlfHO0rLTD1c99B6Hpe1U
082U5jCoBTRGIKinhDCChWrW/xUbZ2lsvERjA4tgI/p7eQK/cCqfGZumYUeJ
GRp+kQYbXkfpGNmzO00Ct87/VaK7DWNWc30VGrNj6+oaF4/JhPWOZL6YZ452
hosfM65mSFNWxPToSuhZIxzBDKWCBRc/7tTp2NV+2R5WsFSVzJk09e5y7NOP
Hd3lJjIzavKWNbK29fylMwXJfwh+Dtc4iQe8SLyDEOxyTMS/z+2XCIvh7AMC
Y5sH2FU5c3BNg48do/lD8ADfa5xyQTCz4uqvt7Y5EozWm12wGLNIg10FhReS
qMrD7slQOqkQABVCM87+W4ZCfkgxMd1o8o3WtweRxKf1A6g7oTdIHulKD3od
iJ0QdAYnwZD641mVwoje+VMK4RO9scHYSVONglv5EIYMBNY/xjQ4FIcIDqUr
mN6rEHByWRYAS2Dp2IEGuKEzgIK0uiqwg2JspRzls4adM6kNA8N0BxQPmGSn
yfquP5Ep8DKSqf29EGmL9YoI+xBbzw/oNiNrYd4NDLiDv6rYktYC++apMd1m
P1ywU+AGtGtcH9x2fjzctYUxidIueaI9RGkrtka0DUNvp3UeFFd9BGKoCCqf
RFAVBSPwO3W9/k45zvG/OgBn2kqAUoiLKfsLeLep3X7eqjFf8ct7Vx37ylrK
K3q0ZAWXbp4LbWk5K3C6ecX8QVj+2GzhPBXv8eeTDomL+LfP/T0q3dlDzr04
q7cpVo1kxN8+d28GEdWl7l11cYKD2iYff3KOVQHeVD3KrSfdz5cHYyn1L2u1
QUr99IMkuvmJtptuPoqmdetPNE8WxUpEAacx4JaVXZH28kL8c/fGjV7Yt9+g
d+Iv30ksGdlohQza3b261wZHHWo2rYyhwzv9+e8UTJGKpZQem8RbPVCaM2W0
weN7a557UfWI2lA63j7xs6qXlskP790NRKjmSrj4ZDfjJqsFvG7H3OzOQIs9
ZlPopg1M8ODxJqTxzA4ddTumzoUWeJh8HlIq79S5sipsj6Jjqet36GYN3oad
cZB+BGl++GwARvWDsDz1i9z3I5T+GJUKgDB8RolQio9lADANvvPACKX5qSE/
1CePCI3wX4LvCWCERuzUhetyhEb8bgehLwsRGuFfQkIx7x7lF8DzW3d4LBEa
kT8eljv+VJyXw+3LT/Hvg1DOIjTCZ0O/48AIjfATkZB+hEb4GbA9BozQCD83
LJf7lLwaCX2GidBIfsCoeWNHxhW+Z8SDERrhU7/fQcw4Qph5QOGFun/JZDV1
NU01ekvNUnipq69TwXscdRuzWJprM00tVlN1U2aNuNhmMpXNXVxrstVU09e4
isV1TTW1Jq3SZtI3mUb30Iq1ptpqa2umlayRhR41OdLZ/8GP1pCXbawW67O1
1blSqVYqk1Vr83KyZdq87DyT3ig2SXJM1VQgWuXsuub6alqJbr9s01utJptW
qbdYaEZRi9U2IjPXtEQbuTQX2Wz1tkZTU1FLtclKdc5rarWYKk2NTbNMTdqy
SlNdY70NqlUveCKh1tcZoWZoXGEJygGdgVDzDWiwyWSr01vCjCe5ssGU1DXp
LZl19XCg+sbMxup6qynTaKq2wMs7mSkmjEZ9lsyQpc/Ky5GZsrOqTYZco1Qi
I7PzcvXV2dUyY3UOac4x6uHVXgtv9tbq5yzUVf/lsiffAf5XXwEyl1gyS/9T
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", 
                    "Weights"] -> NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Harden", "Inputs", 
                    "Input"] -> NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Harden", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 128}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Outputs", "Output"]}|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"acceptable\"", "\"good\"", 
                    "\"very good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"high\"", "\"medium\"", "\"low\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"low\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {3, 4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"small\"", "\"large\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"low\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.869114038783066*^9},
 CellLabel->
  "Out[446]=",ExpressionUUID->"ad067368-2b21-4e49-8c06-79d636983819"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedSoftNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<TrainedNet\>\"", "->", 
       RowBox[{"NetDelete", "[", 
        RowBox[{
         RowBox[{"NetFlatten", "[", 
          RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}], ",", 
         "\"\<Loss/Error\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868441715962099*^9, 3.868441726772949*^9}, {
   3.868442062468679*^9, 3.868442075018716*^9}, {3.868442527005735*^9, 
   3.86844256484381*^9}, {3.868442825916274*^9, 3.868442879501833*^9}, {
   3.868442927862575*^9, 3.868442930140501*^9}, {3.868442994108386*^9, 
   3.868442997385559*^9}, {3.868443171305544*^9, 3.868443172008521*^9}, {
   3.868443210207801*^9, 3.86844327444496*^9}, {3.868443832176667*^9, 
   3.868443841549613*^9}, {3.868443968480337*^9, 3.86844397610231*^9}, {
   3.868445156069516*^9, 3.868445169542899*^9}, {3.86844548965233*^9, 
   3.8684454911676607`*^9}, {3.868445524601853*^9, 3.868445525318458*^9}, {
   3.8684457755379953`*^9, 3.8684457785428762`*^9}, {3.868445841953512*^9, 
   3.868445843190568*^9}, {3.868446029551764*^9, 3.8684460319907627`*^9}, {
   3.868446204633617*^9, 3.8684462159667997`*^9}, {3.868446498761023*^9, 
   3.868446502318582*^9}, 3.868446990300243*^9, {3.868447023781098*^9, 
   3.868447024311913*^9}},
 CellLabel->
  "In[437]:=",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"#", ",", 
     RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"trainedSoftNet", ",", 
    RowBox[{"HardNet", "[", "trainedSoftNet", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.868441761355565*^9, 3.86844176541033*^9}, {
   3.868442023100346*^9, 3.8684420354226837`*^9}, {3.868444107190956*^9, 
   3.868444110989802*^9}, {3.868444188263138*^9, 3.868444188997357*^9}, {
   3.8684443072021*^9, 3.868444343231183*^9}, {3.86844438017598*^9, 
   3.868444387605728*^9}, {3.868444533736438*^9, 3.868444535818205*^9}, {
   3.868444625239705*^9, 3.868444635677659*^9}, {3.8684447356698933`*^9, 
   3.8684447565897284`*^9}, 3.86844479804601*^9, {3.868445054584428*^9, 
   3.868445061735847*^9}, {3.868447028248465*^9, 3.868447028907001*^9}, {
   3.868964207787449*^9, 3.868964270803673*^9}, {3.869042816860148*^9, 
   3.869042853385454*^9}},
 CellLabel->
  "In[443]:=",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "19fccaf2-c201-406c-9504-69891bc6da98"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "346"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"97.1", "0.9"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    97.1098265895953716154`3., 0.9019531764225579007`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"72.5", "2.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    72.5433526011560729785`3., 2.4027745155265187726`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.8910814703891855038`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0282201524725662622`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.8346411654440529793`3.", "\", \"", 
                    "0.9475217753343180282`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.8346411654440529793`3., ", ", 0.9475217753343180282`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.1153194186665380816`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0316642621963389784`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0519908942738601249`3.", "\", \"", 
                    "0.1786479430592160522`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0519908942738601249`3., ", ", 0.1786479430592160522`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"4.7`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"2.94`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2BNLuwp/PSzv9s7+hvSXGf0ub+01b6x+aaj4
0r7KaenVPSJv7TWS3r6/sOaFfcCac86mmrdxmpPCPye19Plb+86Ku2o37r22
/z/9sMe+uqf2t+032/VXvrV/vLc4d4L9K3vLrzLBE9we4rQXlzmJ31uiLXXf
2F8y0L+asOOJPdvPY8uDzI4T7U90+mGVyDr3h7fsYSGGyz24xHGZCwAzwY4e

                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["249", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "249", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.9880952380952381`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9920318725099602`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9900596421471172`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{249, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9880952380952381}], 
                    Row[{"Recall = ", 0.9920318725099602}], 
                    Row[{"FScore = ", 0.9900596421471172}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.011904761904761904`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.046875`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{3, " examples of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.011904761904761904`}], 
                    Row[{"Row fraction = ", 0.046875}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015384615384615385`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00398406374501992`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.015384615384615385`}], 
                    Row[{"Row fraction = ", 0.00398406374501992}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["61", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "61", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9384615384615385`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.953125`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9457364341085271`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{61, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9384615384615385}], 
                    Row[{"Recall = ", 0.953125}], 
                    Row[{"FScore = ", 0.9457364341085271}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.046153846153846156`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.1875`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{3, " examples of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.046153846153846156`}], 
                    Row[{"Row fraction = ", 0.1875}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.07142857142857142`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00398406374501992`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.07142857142857142}], 
                    Row[{"Row fraction = ", 0.00398406374501992}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["12", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.75`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.7999999999999999`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{12, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8571428571428571}], 
                    Row[{"Recall = ", 0.75}], 
                    Row[{"FScore = ", 0.7999999999999999}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.07142857142857142`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.06666666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.07142857142857142}], 
                    Row[{"Row fraction = ", 0.06666666666666667}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.06666666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.0625`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.06666666666666667}], 
                    Row[{"Row fraction = ", 0.0625}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["14", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{14, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9333333333333333}], 
                    Row[{"Recall = ", 0.9333333333333333}], 
                    Row[{"FScore = ", 0.9333333333333333}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "251", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9920318725099602`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{251, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9920318725099602}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.953125`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{64, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.953125}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.75`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.75}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "15", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{15, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 0.9333333333333333}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "252", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9880952380952381`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{252, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 0.9880952380952381}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "65", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9384615384615385`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{65, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9384615384615385}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "14", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8571428571428571`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{14, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8571428571428571}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "15", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{15, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 0.9333333333333333}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["251", TraditionalForm]}, {2.5, 
                    FormBox["64", TraditionalForm]}, {1.5, 
                    FormBox["16", TraditionalForm]}, {0.5, 
                    FormBox["15", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["252", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["65", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["14", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["15", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "good" -> 0.25, 
             "very good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"high", "medium", "low", "very high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "low", "very high", "high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {3, 4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                   "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3, 
                   "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"small", "large", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "low", "high"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "good", "very good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
xNIjFdz0Of/8vWQKTliTTONelDBZyXUYss+dDrjW0V7+d0yv/MtuTpOjf9JD
WJmrP7PMsKb1lSdJddFVflNHBf0VWcn04Rau1mrAk0XRWKcgRntuLcGrO6VY
Q1kO3adqCHmLFZnKg2iSG1PIttRF4vxL5TS5JQbFnQJxOT+LtXRsRQddabax
6wv/nrYym1zH4ZLgSbhbYRVuWzVT8MhYB252h5NnXaU4udySFqlF04DnRqx+
VTh+fRpLrD8dYj8Sg/nplaNUL+w/pmnnQ01acthSzbcsXqKUZSXPxNBOJazv
UhfkzBBlBXkrme7eiYIVbsNw+HgnLJX7BpPWWkLhkhFQsR6FpVZJYOo62eTZ
u3J40XYKjmIfeDk/h5UbGNwzEONVWmaBsstXEKS8QY9tB8C+MgikW1dxW9K3
g6AlATKbZjBRiT/41WkMPp97Bpf/ccNkh+0sSYGi26a1OPu7Dts57ySxGLTC
PpMI2qCQgvfW/UUF8RL2o/Uvao5uIcm+W8gBrV58dvQ8esgZUtHiBLar4SvW
KH+kG//dl7PKog5Fkqzglhc7FP+ZHdssJvBojSCH3xXQ7u2laC2IwuFTKsSi
rpcJUuWYY5cHc//52qSo6hzVp+b4YWc693TqUwi4/wYsh7tglqg4Gq9uAiMW
zutQPwcOZ99zeX+ncEr748FSoxwKLgbC3cs/oPh5OPl235Lrk/0AJb9awWr+
I7DjCxG177NAfc8NKNQLg+H75aC46w9YvQ4Fb8lsMH05DL9emKGsgiN3+OVu
sm3lK64gZD30FSqQ9k2B8Gj+AGhuLYFdp+O4yy9m8Jo1QuC/46//8Wod1yIW
j8frvVHjo7DAOz2AnawlbGNlKim4PYuNSaNUfYKQYHT3azzeXYhHJU9zi908
MPVsAjaOExXIGSszn8aneCnEGI82TSTZGZlspEOV5Yq/4JadUIM9YcW8UNP9
MGH2L5pjrg95Ln8gZr4QCfdrgSXmg3DEfAu8nvuKe7FYi4vnq8LG3clk+FUf
DN6ZQJ5MOQnnXJ7BdpOT8Nh7Gpfyvgtl5nGs6/xTTJsbw4oYn2ptTEbjjPFo
nv8OJ9z5j+3vHotdjm3UVN+Wab1KIOar8ikefs0cNCJw+GMMsQmcJFgoHk5i
avNR69I4wTyrJFL2s4Lp2OsIEjK3ouIsI8yYvo+9kckkx5/a0BNiWXSFsyqb
usKQLq32ZxifSqUHt7LLe9/TY9rZuO7XfWaVtY7/8Jomfb0UMTXNDbfaTWDt
DqnkA97AXb/P0/7qhUzvtawg0TeQtNdJYYFyPr3un4w6Sj+pXmQlvSn8hKpN
m09PfKesoE6GOd1ZhiseUL7+Bz/m8nsFHXvtEiRYTSezXCYStURxkBERIz+9
I4nWsuW8O7JaxJ5uInK5byCpMhxCp2+DxujdJFGrGHLuWcA+HQIPH6TBZ7VT
JuyiNRkrEU+ylpuQ3v4BeNweSpikM4JKJ93l7E+tsiNZQNE9+iEyisgtU6XB
uzKx/b8+dm7fY9pyMAQv79yNqz8+oEfPW+C1NU10n+9j9tUnik2Lj8F5f3+y
pJXquLsuHDl7CZzgLcDYg2qCBVUyrKomHR25O/R38Gymm22EO86KCzSbYsii
G5swPNQckyv0WZy4KBHtesWsL49lctePchvWpXK/i/Lp/daTeMGhDie/OAm1
I3PIJoXL9O3qNSCjFgmvq0bgxoM4mBSQBrvvpsEXp2Fe16ypcE8+EfI2J0C4
QhBp/nQEZOclgc0lHmyfkIk/gjPhTFIK2C5/CbLvX8DJDzkwdrSOc1HMgvde
XmTJ4w7ozr4P7rLDkB7cAT5v8kD1jjYpsi0GSZc3ULdVi3j+uQ+0wgdmjimC
Na9zYfzaZdBcLQ9Jiy/gkUsRFL1v4yz3VSjh18VfV/eJLxGgim86a+nWQx+p
Urus4Mx/bVi9aSvN7H7PxOYnEtPjMsz86CsaVzyLCa/L4TfUydDY8pXU2/cB
7s+dycJTJqHOm+X4O6+TaWkXoFy4OEoZ2eFEm0RcotqEkhbldMn2d/isphLT
3rdiuHEAX/hnKMuafBaL7GLI8oa9OF03kRzs/Y0VNpU0xVQApxRmgtjOUeRW
h8KV8+fA33MRi4gsA5ssRxgz7QUn1D8KxXvXAHY+hmdza2FaixaXclYDJjg7
wYyJu6AZRyHG6g+8uucCy9gP0Fw1gT0dMmQvDpzFO7di8diXHzhkryUIdY4i
fnOXM/56Bba7FDHrdgAa5O3HlsQi3HfemV1KlmdZE6OYQW4FLw2EWbXaWTbN
aTMbPpyH9mGb2J3PImzHDC38URGMsyZOwxFJVVRwFsWM1CTsDpxC/a+20ZXf
splXeDm7+ceXtcwtYo4Nx1nLVXe2zFOeRbtfQRuvh3hYLoGclDTCg3ruLN1k
N5rurqSf//VL6S1IFY/uZgcmBuOl7xHE8e5TOvdkDq6qfk/tTCTwtYkGszSc
yvTVRFDjajD9FqWPcQc8UaLZgl7UradPXxXRvUcfss0Fk3DaegF94X4TRSRe
UPR7hWW7ZrA0w2nYJUQxfGwcWnWEs5t6moKDcrLsq/569qPSG2edCyeLBrLx
1qCKoO5XALl2QZj1fVvOTojPR//ON/ghLxc1ra4wl+9lqLRYCyVL/fBrlSc2
hQejj1gqWXtUHgsH0tAorRhPqPjSkKZJgkla7ni92wBdgqJJ7LJIIm21nbVg
If2WuYh5zeyg9b7z2Q89Iay9roR2XykmVShiXvILmptBcHZSCN51s8O35hns
xfB5dLTJInb6Okz7rBsNJvewotGP1r5TZqsyDZmP2352q9Gedo+9RRs8M5nT
9Hxm4GqOy4beYvKjIRh5OECXicmwvEUjuGLsORbx3AdXa1yiL2Ln4xjnj0z+
RTTpH/+G/5PvxXK/BJC1eZvo0tIovOsVSzStL0HoykI4JmbNpoQt4p55nIOh
yaZEq34aNFvcBvud+ZD+MAJqH5ow0Ul5MO72Vlj73hcSHhbAieYCME1bC9Me
5MHN55dAcnwhZ+93xERvsMNETN2BlzIgRo78GkvOvj5Da5VyeTcPRdKgA0Um
cFWNt3YNj3e1t4S9+kB4oouRp3t0Gf12v5RFFe5hkdtT2clsU56hhhvvkHU8
GZgzAbcdnIsrvU7wP3MZ9JmHBFJfcWp2OYEcubkPd92Lpr4aCsxfSRff+09A
jUPduOJ+IJaF+bDDEgehs70VQ4+6McuZr2HyiiNIIpejucdEVhL+DKUkAEOz
ZjDZ/f7MQ/wNO5ElwjTU76FicTU9pqoguDC1lRYuR8xnEUTbNheHlbQxsFYU
n83cTbfYnMftoM4SgzSw8kQ0ecMENGW1Ax7SFRcIvY/FlZFXqPuIA1v3uIlv
PqhA2xerYWHnHJocmkvtm50oin+gGufiCIl9z1+wcBfG4zK0/5GOt96XUzPq
iWPmM3p4ezcut4gnH7ceYMkztuCCxguYdXkSPlI9xZ4VGrMppmb4KtSMpV6x
YSdOSwvsjwKKV/6gDw8UwqhbEnP/0M62rs6CXS+K8e2SZ1haKcJdf3yXVd7/
QAduS9O7CaJsDkxH4R2azDc3iCa1TmR9vXlYvl4aF8UY0F0iO3DPm4c43TiV
Hq0yxQ0vO1mo2wVqKGSL3k96UPLfv+VW6cPm2K/AdRG2+IdfxioadDF9YwX9
oHmHp0kRdV+W0QabLSzZqJ5/Zawizrt4j9bIxpGPiruxqrgWr17WQ2VPTYzu
X4G5t5xYY8M8hNBoYno7iPWZBWGJgwY7pR5PDnslonHXeVpr2E+vhhszfyLM
5gptwICmzTjeyBzfrM6gXUpReHFOLLumWwTznsgyF74dKihdh0e+YdThTDld
aHyNW3coET7qChGvzu3c1jFC5POj6XBkRIa945+DY5uRZ2ScCS1yA7AzzhlY
hT53R12U17vnLnckJg/mTVkHovUmMDPHH8jzAe4v/oIFCaMAsq3wt1mPSGZ8
gTUGKbBotStZeCQP8HUi5+UuRI7X3ofZc9Th6DQjwJ7DELk9Hpx0/vXbT99h
8sYqsLWtR+t7yeTYUAmXkFYIrTCNbVQ9hlWaa3HB36/sqmUJmxKyAd36puDR
xwFMefkaTEuXFVxaH0lmTXiP0xr+Y1krViKvJoW1pXL4LGI+dhkGkqDIAKI3
vJDv6XuMvczfxRxu7aEmB4NpH4sl9MI5zJoWStc/E2MPxX7gfX4unXnsIRN8
d2fLux6yNevWsst9ljhvQxv2rxYmI9dCqX/+aZyuJ0JeGi7CG/KRWDp/quBJ
VzW93iDD7t4VE2y5SVim0ydqMLUV32WlY2ieBKOLb/IjjseRu2skWFFPJmb/
c+WucYGkenEKcatrZeFPKpi+33oWyTvEjgz/wqKCNeCmrA32K1fD3Z55IPci
kTi/tWPbO4Rhr+pa8Nq8Ehz+2oCM1j+PF1oLZVVpQBYkceM0GjnPbFs48DIU
JD6OoSML09iXKzawX3gqiGorCmT3TsONb0rpZ1U5KnJShz2/Esy//vMCbTq1
g2V9kKcZ9BjGvmylH5aJsn2RJmznbDUc/9CSFZ6yZKof/mNrJGewsZcksPlc
LCk+ZE/3VKkxo9ABlPKsxsn+1/nPC4xoEKeJYjPi+Kd6alF3zntq8zuZ32KS
yDbFK7CsVcrYny7NRJMraNHvyWxDQw6ymyv4Z+66M9ltGWTW7Om08TJBnYFe
un6pHg3YWMc0FwqRm5r/sTu1jE7/vA2lClewL+ZhtCj3AG7fn4/BX4cgv0YP
8/We8INuGlKlN5Yo+LqKurp+pVZ64rQwJYrciFnNnivm009XomjMzrVs4b7D
rLknH3d1rsMpRSvRztUI79fpM5OAKDaj5TCKTPTAhR0pZHdbGqYMq7CKHQbs
5sdADLwWgAv7L6Hk1zraYFTFUzmRw7svSCDPHcdwwk3tPD2jpzwlL3Fu6Rbk
ql2LeVfF//LUXEd422Est/+0J3dwdIDX3nGFTTx0n7ftiB7vknEKq6305905
+Yh39cJndsdFRBDqv5McbLZkATqTmMv191T+ZyIZcN3JTvVXoUHadqz6rMZW
nluLJ958Rf1fsoKqpFXsZbEP8006AWb/RaKPx2O6lewnz7bOogenNOJ7rUrU
Ly2i9oID7J5yLXo++kbZXxfmouzF6t5VoNadQqxOsWNlNxUET0od2S3tcXTH
Zx98x8URxRwTFDsdR7Z/vEzZkRTYvTKSP43/BrtfNIPjwSDgTjbBFLlykLr7
Ck4e2ArWtTkgfPsGdJeHwZYWcWi5NsilblYl7h6PIHavAKV4OmTuNiFicrcC
6szEYe7+UIhpGoF7//aXP5xGZi6UJZOU1MjzDgkyqVqOfN/JI+ISE0jTlXBu
aLAFhM+qkT2fR2HxkT0QHhpDKt9tgsEVs4n+cD6Y77ci21eLg8qGcNiaN5NY
zToNqR/0sWv6fVYzbxvzlTcTfGhPZpcM9Vhe1Exmt6qTij1cgja1jfi5Pp48
VJNm/Ut3oN47e9xFV7IudxFB/KrruOxoMPk7L5BkxP/H5ATrsNY8En8uyUX9
4BjSJPIDn2x4Rl8eHqEXpinh4gxR7BV+iU671Jll5hr063THazvkiI+xvMDT
vZI+jH5HR+4dw/4Dcawh142Z9QoLLAQltDCmAk5YKEDw/ruw0OcV/IxRYXuO
/+bo75dgNmYY3NrioOL1H8j7VAwv2/OgOz2aCE9NgIHyKTCjKJj7HdMJ5pX2
cG3gMqdQ/RNefG4EqXIPXDVjoqAn6R6NWI3szHSOmTlZMM3GRJJdH8Zm81vR
eE8+kx9TihYxO/H290msfN9lfERuobHcaaiQ7KOJQl4YdUeY5EpaosH248z7
6FbcqjwEooWPQOS/JlA0/QAXNJPhYlsnTKLV0LDlPBiJ64PD+RGuP/8qpChe
BqHlX+FMrRGhpn2czhsKhcpR8H10BKpnChGR43vgcYYUu6yzQHDwhx/2q/Th
3OQvmDQzlzpl2eKuUl3aUrkWd/Wep8Gn+6l66BSBWaQ27S9NJqV3LvE1m8To
kYwvuKY6k+YpiwiKM3m0aMURer1vEIp/bGD7Kke52R03eV5Ln8MM1z/02f3l
EFktCu3KQuSBqTCQjQGQmvgGog88htM+13iNFdfBee4gzF5D4faxMt74m+ug
td4YNgTPgk/2kbA4R4jkLE0FTS4OHBZFw1uPW6BkMsJ57E+FqFUbYXDDY4z6
JALpNrEgvjgCNu3xhr3OKeSex2zIsXWBPlUgdUPjyfWRWDA+LQdul9TA9YI5
yfd2ghqdEOgcE01+HN4LJZNWQvjEqTBhvTbpML4Hs/6cB+O4s6C5aAe0rZrN
ed24Ts/OCiISWxt5Xn9ywcY0BPacPAVuCZacja0s2fxwBjH4NoZMbvDiimo2
AYl9BhubJxPRiIvw5IcdZNjkcgayT8D2uxtRlUqEA5/Hw8YqCTLF+D136Npc
8rmnCJxGVMgV4kGudz0Cw9VdcPOvAdljqkGeHG6BhpVaRK3jN+w+6EfeuyVx
OkWTuMCzoqSZzIbBg13cg8NCZPXyoMWzp/87G7Oda1MNJjLlj3gpe1vAzK4f
Wl5LQlPTFvI5cgtpTFEjTxUHeOa/GkDn+XHufmoi96Dbkgh7+pIr/2p5Y6Ef
/GNxUqD4F15riJNQw3owF0wjshNawc5Cjez68ApKZslA599LnP9/xSZO94Jo
79ixePdqCZvev8g4fdZ15izXYXL+gTSN1u41eVx2kT4xumOc9Gw322zVaZJc
MMZE+R0xibKyM1nyZb1Jwtl2EyZzyaTweBS5KG/AHtzSRumLzvTNgjNl6lYP
kRMo0O7ZNRh9uIAuT6tge1OPYnfnFxo5bkvZhO819MbZ76g334B+y1qP1t+s
ceUBZf7uKaaY9cyWerhHkbmKzvyQEXP4vVEbLpzP4X0yViDK77vgis4p0JWd
x6meuAWiDkqk9soanlsPR37ePgEPD2dD7PKf+GnnAaL1RZqzN78K6pe2kzB3
CyYxcRyb/FaBVKcpE4OmDFjcpEeCwmaRgLSxZFPoOfBbnwabNJxB8kEWZKUF
wAnhPsha6UsGVkqTZXH6ZK+iNGF7Qng1S+7A1teLoCoh2mTDSksy+Y0FxOBD
lDRbjYP8mbh+6h765l0yrbW7RxseA/2vR4YW+01g9ne86fhxl9g39wnshF8d
Hm9+i8sds2gmk6atzgvZ3EEtrBvVw8s/o4jE0yL+ed5HONCWxl8wIEw2GzyB
Gq8WGGw6DLy7y8ivXTHcpuYe2LH1OJQeesQtHP8C1o4eAu/t70FKJZ7bnzGe
3Ln7BN7tRMifvpQ0zTFEK69nEErkIdQ9gZyRroBZplrcrdh3vMUjtuC+ah7J
6zQHzY0pMMJPhKWO58Aq4SuUP6+EEa1AMFn3HjaUSoGkUQVkhD6FzBUIcUJO
YGx/Hw6uO81d11sOq2zXkaOCLi58rwuZXJ0Ffg1nYExXNbckpx9OzxpPvjRG
ke8NoVBxMQIOZtyG1o715PSJk7zHkquIeU0v3Fb6yrVP0OMqDacRO+kyzGl9
TMmfybTGMZ682x2DR22CmcuyXmZeHk6ka2/R9jeOeHuJGwZFR/FzFy0QGKdJ
CXp/adOmF/6s8YGQIMRkJaaQEuzTXsx6pvjRuJfjgCS94gTxTRi/IZyc/eED
8hX9qNQbCurhJ6CmJRhEN3Sibc4opCsvYAp/JuG4hFPcfp8QWHT+Hlcv4g+/
Hv7LvIUv4Y+NKUz6FgylP5phz5bPcKjlCtjx90GB2TSoghuQHSIKB3UHQd2+
GkyXZBoH/vrErd30F65VzQapkSxuQXke5/1jAbd5giKoLHsGSmrXoUVJiBh9
vQFLT8YT8Z/S3KMCUW7IQ5qrFvnF+xqdyCS3juOUr08maoJBnoq1Fe+31Vte
yYutPNf8D7x7//hpnl0UOxmRwfPviSWxUz/y3vsL06aesZyLbw1vrzxHou3r
2dmUWbjEWwy9XYdQ+mgB1XJ9jI+1vtOeCx/YkfHy2MFJoa+SPf6nboiT129G
YdePWCgd+6++ZzLv0DtMbFwwkR82Z7ae4bhreyy5sI1hptJl/serH3FEei5d
NCaI1eVb0YrAXJxZNUBduxz46qu9MMXzEstu+UX7fOUFl9uSmccrQlQmlNNp
nCdr0wsj7SOv0cLlLTtz4y3YTYon8p+fg9yGIZgafRXsA2TA9slUiJhdDI4t
72GB1QfwHPsOsi3bQeJFLBlUb4PLmqEgu0+a+DaEg2AoDvKk0vhSUm/gsuQQ
9/XXMNdpLwZZrslMdYII3BIXBv+uYa4m+wM3WbmNu6Ojynt8ezyn9XyYa9gp
BLLFUby/0+PJxdet3PkXZzjJ9C+cddEQNy+kn3uW2svpdwuD9vwO7rnyGPIk
W4b422SRzNuDoLAwg+hpX4ecundwfqk0UT7WCd6zraB+kSap+yxDmLwkqVmk
TabukyGv5Txg0MucHNvYCMc+jCE6Y2YSUb0HNO9kIvkwM4WvxRNindcjydQA
wrbYCrHMz7b4oV2bf29BO5N1MmP3i9/hiR+WzFb2GJt45T92SmUM81dRFjz7
+5H17U4hZnwtNtL+msaYFdNH3w8TlYXX8e34bXRr+XwWpcmxfpswcua9NJMz
DGBxfcKCVPeteNv4Ll5fkk3TFZexss+d6Nd7gWYpi7K/SYvQ4Hgo3tkwH79l
x5K25RMELgb9eMRIXMAzCCRvW4zRcn0Gce9+hmMnZeGfpjQatPk8PbIPcXKA
EjseKSSwUKnHa5uWYbrTY+z6m8Jed9bizo5cTOwbg3dyA8lioRoggULkWO0I
z9pjNRGq/QgdCgvhypu7ENLxEfIOFoC+1He4Z6ZFHlY782olEsD47AyuyyeF
OxYdQgqWd0Kw/1jYpNnNvRMXhbbAj3Covw8yBp6B3tq3MNlxIuFF/Iahl0KQ
fvU9aGT8BreRudymixKQrzEIHnekSb97Bow6P4FtB8xgTOZ4CKu3h9ifjLP8
IQS7IiPJDOMBCPiYxukIf4K+nTEw2jgNlNJ1oed7I9TejOL5RmqCU/5+tnKj
GAxu/AWDjS+hKcSErEorAJKwCXa8HoKClkBS2VkDe86uJFOH+8A3eoirX2FN
Et8WwI7TgaTBV5IMtkcQqf1/4IyGAZloPZ/Iys4ljo3a5PXTp9ynwwuJSZ8c
xKhKgccla1J7ZzrRyVInR6+uI7pF/dyx1F1c6/xceFrqBsvbJsDOyhJY7iYN
9E01J+osRyx3OPOSIgNAaMSRFHyQIk4DYeASNQQJYaO8zedGoOeaFQm1/Avl
yUHQ8j4A2k1fwjzjPhCfXs3T39bD3z36gBLVB+zj6We4b1sIvRm3jb87yZm/
21dYYJ61hoVK8fGok5xgyp4RKmOdzc9eFk8MBuSo8ip79vq/3fT8/YVY0NrC
Uh4Plz2Z4kUfbRImv2bfgE0W30FHYQzxfmYJMUd54Po0DuiULbDbtAeco3O4
dEgE/z9d8PxXF0T+4+EWpwIIn6OPC1TiiZhuJ7QuliZV6z+AILOas1r4GRb0
KxG77WfA4XIzMB178rThEHFo30jqXWLIZr4CWb4rjHgfNycXFCThiGoI6F9x
hfx18STvrAWh9sehormFK+1tBbXCW1yp/BNezNIy5H+MIxNuxVPF0Y/ocyme
Nn0NIL2xQyjuOF4wpzUG/6TcRg+bcaxfeCMbs4gy/0s27NXnEuYSPhciFCJQ
NeQeLliWQBbv66ELJs5lCqenw5HOFFhdWAIpAgtYcUeINNQ+hAVrrLgSn7Ek
9XcClAzvJt3kIqx5WwkaWymsCjkERwoPkMwOVbL5zyjXt6sQFjhFcC/9ZkFq
Thhkx70y8d37h3ITtpEj48+Z7Fay5ImkRhkHzA9mkzzrWV42wT/hnvimNJAU
751u8u2aD9trtNBkMDuJDGCciTLEG038FUOmRgzBvYPTjaNDKtmXszLkoOUF
XKy1FL5f8+VW+sXCiWB5khCUBvq+SdAzpYzTGfjHZCprubkHkmHvs3SYoWgM
rgkZsPFlJOfwj6fn/KcLdmmxcNNSwMnMcICLtgtJgH4U/DimanLoz2xSmtEK
XV1jSXpENiwtViMa86TJDycNcuBYINmWKkXaDu6DcTsmkKXHcuHuPlV4ibLc
2Vf5cGStBlTK3gR5p3zIeByMFUFLcCC9jGbujyWm7wbKTrvFkuCvG7AwZipb
7xeJQ6oXMH9LLjuX5YrPEzkWHL6YaQo9p9oqOky4V5M9vh3Gn1M1gDOd7LHJ
dxno5z+Bb1sfQH+mFtGOawaNviaYu3QuObzoBkDwHljy7hm4fVHhYhNS4byM
Cli1htEgLwfyVa2Iu5ioAfMfTCcN2jvgTUw8bHM9SDbYN0GQajxEL0glZjI2
Jp9ji7jhu/OI57pY2OIfBSKN0mBU18JdFSuCZ48KQPfMVQhOvAELV1+Gedsi
oaC3EOilC7Dg4FmonDaNDL3xgcLhHBjr5guXX7znrm1LhR2S6szTvIrT/h5F
Fq/dAT7DzvBCLIwrJY5wI1cKztXJgJHxGZj3z5FKtu6Hvv27iHeNL2zv8+Pd
kUkmWxapY85NZ7i5Op5EixzhgoOFYMvaPzC68htsqo8kGyY2wfchAis0HQjs
FiYmpwPgwa3J5MSUaGgLvQw8RSEicaqEs2hw4xb/lCUlee7QtlWY1PiGw7kZ
oUQQLsOeFXjw63eIsLtSc/GYXjTaTQ6l9eFrsF8oHZfNucx0l6iwfxmG33gZ
mD9NlHlsO4VzHOMIWyCKrRbB9F8ekPYL8ixVQhcDj7cx38WyuNE6iEyfn0v/
8oNpMMSTT02jbEdzCM6o/YDv3w6yAa4bL6yaiGHly2nl23no/DeWLnNtoIkO
j/FIXjI/YuQwP3uHNk76tYd4yqzh7DymwJIZ7WDf0A+yFcnk7vADbs/SGu7L
ss9cJnHjeE05oMX7BUdqbmBiQDLp+1UJj66+5/ZLR5FW81SuN7oNTLuqIH1C
J8w1NyAV3hFQ+HYQ0vSsuWlLiuDYWwM4+fK9icakJxCxotb4Dp/CEYPPYKz4
j/+a68BwciZnu88fFLJmk7Ip64lHsTiMXewEep8Y/Al/Biv/DsKUgWXgrx9P
bi5w5epbS7nL+o1gOycLdlx/a3K35DEEJdfBos6n8MT6MaDyKJy/IUIu36uB
bRPPcAlpJZD+L+vHVFeD14gosehoxj2n4tAzaRR8Dy+HXfKBsCppFZkh/AWs
g7q5OIfD8NZgDzRdiQK9i1bwbeFFMNeo4qTWvAOfBFVovvYDiq9GEdveAfhF
ljIZn20w3+sGPLnaDto2W8F3rQDOeUWRsCRhciFHmKh0yJEdDrIwW1ia2OwQ
I2mndsOvAI5s2hgPybtiyX9fxpCJz05By69JJL01EyZtOw/b5wL5+v4WVLiX
Q3CEGQt7+wuSFetg/UUbkjpvASiuGWOyVJgPmUnHTFxmZkH+ihFOQjcfTv9e
D6u2v4DNg7uh2OAniJbpcs1kFIKeC5HehR4gumgVfM1L5vUZ5KKBmS96rYon
WJuCqj8nMiundtpZm4qWcyJJxZVVWDlFDC28rlL7OBmWeliVCWu+wnHWWZh7
z57tKXvKCqacpC9vJpMQcWFsPn4Zv+0YB1olI5BqthqsLj4A30WmsOlnm3HV
HmHQmj4M2rL6ICOhAsu7DG6VnTcFmazFYNG1ElZfliHZVYfIOZ9bvG3yxtyi
+SHkQNkCWNi7nFdwwJA+/xiE8Z8DyGHb39iYlIZG3jPYertAcm6ohoo9HcLW
4JP0qJoLTt39Cj+6z8Vs24t84bWfWWn9LfrgcBh58bsQLSQVsL4WWE1gKr9i
2TUIGa/OxUmshyhHceh4q2Uyoeou2JaGgERGNLmYMocMSRWb+NRtgGSX3+Dg
2gjn03vhQWw5Z3ybI1tdZDkp/24oVekCzaC/QC7GkYGGk1S4kdKdXta0cnk0
mbOuB598EmFBJwvo2dA4wkdrlHbAf+6sKjDbpyzQzO1nPnFKgsfpDNd5cHxX
tWa6YXQW9n46zN7P9Eb/L3zWjUEkrcAJtN02QOLmLWB52QZUDq6GaLEtsMo5
gYSnuMFnn41w2O4oP7NqE1i/MoM1+i7gONUZnroFwFLRZaDo6AQ3Vq8HNNsA
/VGW4JVjwbYzKYGNZBzOlU4j1n0D+E5zGh61fUkNvoQTKwfCHq5pw8HtiZh1
6zXVad6O/UbN1LNAWUDeb2HcgxDmfEwfndcN4YwiS9wiIkmfLjoBj98FQ739
de7W/gyuKmQh9kwKgosq8+CVYzBcOBEMyvt9QM0sGDZd3oWmWz0g0Pow9+yL
DDwaw4PKLUFw8mcQTJ2hwp18mErc9knDQdGZ5PbUYMIObCC6szvgq6MSaalx
IKVjA4jpm8F/bn2UTJY2J7d6hYnapgByrV0LOnd7ArNMgW2mjsT9vDtx0NgB
Kc3riK9SCpG5500m+WtgJ/mXWRUhbMXzXvSvNEJXmWhi6OHF1uVI/eMdCYHb
xjcofywHF0h0oYhuOgaVxLGZjmuZ3xYhFJ7ijucOb2C9DtICM7yJ+0rSCN81
gsxfSHGw/wU7Pk8SV9R4M2+9U/RJYgN2xG7COOU69l2qjvqtW4VzlknweyZ8
xIVjo2nnOTd6ICqNWHyeyeQep7H81gTyd04a/fHvnZzaYGI3/zIUVjNQKJkD
GwXuMNZSERLelEKx1CWorT8Nm1/kQ1PjQmgStwPTqVUQ8ToJ/HUP886+jifn
joeDum0RqLQUc+MytYBbXARjXmXgYmULbPwWQUbrlrDpxAjzC8aw2+KSGL91
JXf2ly9dWjwOA26ICXKEZzK9Y2vxxD3Cgu4lYb5rNEnep8Bm2qiwh5pLicbA
XuRm9mDFgiC86JtMXho6stafcdT2UysqB42i89hY5rownbywzkfFtxIos0WS
6eEkXHNNgh3MWkdvOhrRC2mz6VPlfnQ+uR4vVZ5H3OeBCx+HkKAj6Uy7IYc+
Vn/O7vOjyP6TGbi7IJQcnbIHRRUbsPOOG0oe7qBtsYvQRzUMz/Yk49EBCfy2
YjNeFd+DLc6neQfFCPLO1TN+5ic8ZXaa2or/BQleFvF96wfx9S+4RSeeQNmL
P5zwVxfQ3t8D6U05vGATIbLtWBLENJ4Ge/1RyH5lzl2TjebOnpoP6w0fglLY
d7jd1AuPJt4AW2k+XFyRBCLThUjYNSGiJ/EeKpYGQ/umPvjR8A20JvVAzLpv
cCRQFFz3hILCqTbIXfaaOzM3GFx+zIbrshJwe4opPJBbDqWXGdw+8xmuX+/8
51AfwECnB6jxZGOzVcIEpR9zd49egkXS7+CPwgQTwxNjCLczGhbOPgCq1WFw
9X8Ummk4Vl0bhs2ZUxJJFCpERQPxrHspkgaaJw0qTVRUinqTzPM8K5KkTIlo
8Ox7PUU0KkmSlDQYkyhDUXy+n3v/2OvYa9/Xtc7zOPYBGZh3owAsS68ShYq5
MOGfFj29UhsCAlXpvZ2n6BmlWi5f/RH59aaGFFV9JBoLb5FXw1nkfexnMtnw
Hbko/JSczPluVin6iNDtZUToQBOxPXIa02oayG/xz0RufzkZ2VRFbKzryYLo
OrJfKYK2/G4kS+dlg9rfNEi7fBEK3znRlEuNILxtL1hevwenH5RAtJQWLD44
DMbzhGhO3li42/GEOBdTMru1gSx/9gd2KeRBnWsTsTyRCNlWsWT/jwKuQZLH
neJfxnRLMcEceXXmHOvLj6gpwKm/jZAuWY/FfjHMuKoYr3yOpkp/ZNCqNJml
x55kvF3+dOPqJLpHxhPj8m9gxMoIPJ9ZjqvffUfzTVbQlNMEKZq3YLC/nvS+
l6PrM55CT9YvWC8cAwG7hOjur/7w604BiIE35Q3OoyZ9XnCzSJF6jpyEZZaZ
PJEllSBqEkEfZhWR0hoTiI49CWqqd2BmzwKYtzQK+hxGeVkijm6VXkirrm+g
6p+lqfwbcXrp60aqeFOGhv60IUIOz0EswoFOOLmKnrkKdKb5S8hIGEO1jfSo
49TZdN++uaR3iMHNt7+haOp13pS9AJwEwvB/L6DXMApSLC7Dfvdh+LZ9GPq0
x0H9s3iI+rIW2qIqgR5IAyexQtJ7dRMk3xXAknP1ZmmPwmmUTD3uvepFM0xa
2POYFSzsoDvu1g2kVj+FkCb5cS7dVaglX8fGeo1jPgZj2LPVRpjRNsSdPj2N
He+MRyWjIFSETtzr64IOTXdwi1QcNV8qRoNPhdDtyq9grWIdmA9nE+2aathZ
c4TTnLif9o9Vgzla1TBgfRZu61aDweIXkMEPBltDVaovVgrOzv/RixN3AF04
zCtrGGWyOcp0TNEH2Pwwm8x0eUeeW2+BN5NO8xJCGkFMUwB1ikGs0fIZgZc7
ISSwAPbEfifqi7+TeRNHczfKX/JTfvBCiuz49vYh9Cz3B3Z8HQuXtJ7B73bE
nMIU+srlKhez4z1Xv8mbLuZEBRmOOWi7fYhf9PYKnyhbMkFhLn9q5VEMmPmR
W/O3Eyet249mxsrszvvTrH7DC/zdF0i998VzB8da42PfSKj9GQmte9LBhrsG
Pd8iYP3gdVKt4QHZ2/fQ2uZQmB8UAQ/nfoKfGypgR8NXSPo4hs4TiFPXNgsw
FxTBok0v4M75hfDibB1svRJFs+7/YLJn8rBV+RFX0hlC1Tgv/np/BczaGkvX
ffrL3oSt4w/OS8MwpSTmOKGI8zqkKgh8IykQHvjENYh9Ytu7ktBv7F2m9vAI
d3msKmtY7oFMw52s7lCC7qIgeD2BwapdjdDOhfMOiapQg1uydHHnQxj7dwiC
hhNg0Og/PPYnjPp4dsIPLweoO5kJDabe9PGPaMJpXCa1nmNBeepVgKFIenlA
G46ekoaA3eVE5KoSWCZMh7vOr3G1RwTNiEK4Py2KfFmsB7VB0nBm2mayHnTB
7FwwXfpNCQr/HCLKegOkbeMN3JY3C7bI7WHiY/mgZGACEfEXIEk6ykw4+4fZ
f3ELwSj8MnFetZzWoBt9cJ6D4gp1GP4+n8af0KF1yuPpt69LqUXvTCrlNQT5
vbNo41gCsX9jYVGDPl1xRZmu9VShBekK1OPvObrC7zr5o9hIZld6gfVHWXou
8jdZkKtCdUrUabJtCdyq3Uv1NEfdYZ8UnWOnAmTPJCrWsYpq7HgMLs12kOEq
SyMlxejYE6J02xJR2vp2Aq1/PkTKZ0RDxqAIfbr5Mkkym0svj/LVnufryZE3
ovScjA8crNhHlQya4XAYpcp/VeiYOBFqNDjKlzdfkvWnxlBx/zyS4eVDzTXM
QPzrfnJ4/HKwvhICc9svQvcOSar4+gJITNAB7ZIocNl7Bk5PPAxrVhlApEkU
vRcRAWsbz0K0vyHtbJ5PdurbQRBPj3bPnQbTOy/D4XvSVPV+F6z/UwXXTB2J
Vv1ZSDOTpnOen4fLU8Ng/5jJtH+GBT032weiRR0oOxAFMR5pZissn0HUyWxI
0+yDYn95em6bEtWc4w9Li0LoVs4Z/F7PIw+uHCBT44Ih74gFxbPbIUnsBDwf
zff7LRGQ3xgDR48GQdmmxyif2cxbP+wLmhukwXaPNzhZBsCWQ0Gw7i8PZq56
hAe9ZWhETTuZLzhOszbUQ7fhcTh65QWZleIC2l8eg9hyIfa2/zKssZhOhW1+
wYIueWpyqAlmywXQdR+zyOMnbRBnvgC0NzAo6hWnP45rQIpOOjj5pIO/62n4
YjABfEk6FD2+CMp34yH3XisxEr5GhlNjoGicNsifSAWta6ep/ZQUUB7yJt2a
xeDSogpi367AtakbeTcz1SCn4RiEVvyDW93hcDM7HQ5uy8dE3zU0Sfoxv+E2
Erm9X7FysRUxnj2PxobmwK3IFaS2UwJehf+FOf/dILNlvoOUcRzM/SAAyZRN
9KPEIFy0vgx7z2fAfqGjVE6/FaxOBJvZeDZCwaUldKGnH9BrY2hefALl9SvQ
NSfToNklFXaZKNDTT+Xo2cRfMFX6A0RNkKJ2e4LppJjJMHPkAnRsDIAXcRvh
SWoi3NMQoXYndpHUykHS8kUCWhvfkjPqqjAmdTPU3NlBs6QvgE1ZEpwYGwtJ
HVvo1E+fyJ6RaKp8LxPqeBdBv/cv515rD42zEqBnw3oy5eBUemn+V56LWyLR
JRK0X1eRbtITo/3ZwSBcfgnGXemHlJti4HqlGeRGlGiI6zXYKqENI0lTaUbO
QioRbESNexdS/WMzqI+1BlYvtGB6b4zYoF8gxnTpIeR95uY7GeDS3cG4pUOE
fU+VEzR/iKIKl03Q7UEGhi8QcItFU+gLl1gaYzSN1X41xty7gdzDfW54aOYZ
LNpZW5J234t71xLMv+Twj5OecZMLdyCc2MQQpi8wYtdt5nPdUbM4x+05/E9n
DLFVrhPVnbdwN+SOcBk9C3Gy7pGSNWNFMDFPl+MZRtDSayXcqb6LGOA7nknm
/eXGNUiwEL1NWHHxKrfr+WtsXVzNyWYnolPvQ/TOHmWOs3/w5ONfeMEAOU2T
IDogHU0r2324e3+Rc3Z/wSy+e7F6V0vMf6/G+qcWcU5HKXOq8aOv8QqTOSmD
UdI+9FBuO5e+VZYt0jzLuUxrYSUfwnDZ2ddMW/UWZyKizBVOk2ZvDVazKasK
8XXLNu58azzuUzjAvuwRgOt8Iepjtwj+fb8OOW9P8yKb/kKSUiZsEl0KGWE6
EDNQTfxG82Pn3A+SsT/h/UV/mJycCbuMwuCbzRne+sF/sKBkMxke2wga7n/h
5X4plCmK5i/jvGlx3xlc+uUWZs8TYr5JXlS7v41fpyXDgjbrYVTUZbwv0sCO
6N5iAy1XMVsHuC6fZ2ix5B8WKrxE8aMy2DTl///B+FLd+bb0avJt6AxnsHCp
Bmz/8AtCgi5C534VqE2OoIdXpYHhyRWQmtgMj36KUsknZTCgUQc/RaV5dtpd
0ODpARJuAnD31IBjtrchcexxoLZx9P2O9cz18mH2KNMWr7NUVj45kF4ujOEE
vyzR1yqWO934hg3UqLHTxzexQ7r3MPGSOCrXa7ANfTosxz2L+7mslFm7f+Zs
v17FLf3xdMLbWrZ6dxBtX7sAV1vtQVXBDKrqIcT6zl/k/nh448HeVWzqnId4
QFac9S/1x2w5DTrs+RgtL2cy+1M/2Ac5MXZy7lzm5kjpE6XlbHe0E+7p54FW
43YSriBJZ0+aQn0SqolJbjoEyQnTHw1i9P3aN+RxZDFI39tG28xU6OMLinRm
ez7YH6uHnPupWJd/gNZGKIHHxhPUbq0SPJlgT3dkrIfwRgWats4M/Kc9gR+f
/5K7hyugUa3RTCGjAYrv1UJBUwLI12ykPokFkHq2EU4dewcmkTZE41w4TbHe
DL3zh8BjWhHIOYdAzDgZ+s0mA5UkpnITVq1Ca9fHXO4YaX71zIXcTeVAFppa
xH5GdGLV4hP8nJXxOHftQa47NxgNzJNpDXcVGzeZcspjRbmiqDru9gIZrHKs
ZJ5P9VnS67XozlFuztNGPBBzAGdqbsHpTxfjnW+dqOKmjRYu49iKlx2szecr
fn0Uj0umJqPeSBSt+ZXLrcoTwSMjTlwjZKHlhBGuUsYNF/UVsPdCy2jbl1Ug
6TuOprk9g7m79cFuHh/uxTnT55ra9KbPYro3zwuSrRXoUeWtNHHhBhoRbk9D
furRk/qbQOrDP3ib/x6mK9WBr84mMHozFxodg6nftq1gtMcY6sQYGR/QQpaM
vIRicX2oiRXATCslEBvaBso1VvB+3FYQ3S0JDvdXQeYrTdAakoLn+nuhX3wx
FFW/JDMc9mFbYhqdUPUbKoM/QtmqfpBJEqGvmwbh3u8/YMVGZ/jpXxj3aQCG
k76C+Zo/0Hr5D+jQv9ArMQQCdz6IvU6CtyJ/YPe0DjjYkAAJP7Tg8IJ/4PVR
Fm3nveXMk/0xuTGcThtOZMdedrHluTFU/HYGKxGE4dRKIVauuAIjQ5LYkN00
/Om4BMOP++Lu1+HMOCsTa8eOYR5N37krFXfQjh/H0egG8NX6SMblhFK92Ykg
fr4HphkF0s1DU+Bm6XfYdPgXbNwoQs9t7Ydqnc/Ar+6F1Q7FMPnWMnhx/xd5
oCZEBz7vp99Sb8D2615kxO4pPDzlz2bnGaCv4xdu6VAYXRgUSS2X5GOS9D0u
vHoKO73/Cur0JTK9qDN4bG4Jeq68g1KHLqHzHE20lpBhIZezuC9SJpjntpGF
xoYwlTHF6FT2jB1/4keXK57CuNin3L4XbVgw2rk2GlOosHIYltgV45p7O7mC
k+dxcsA1nDTtACtu241ULxJbqzU4v9NVTDr4MVsxUZMZL/fEMlkh+ntdP9zb
GgRBBzWhrimUODyUhxXvxtC77YtIuo8qPdiTCPNJNXh1zaOvrpvRI5m+JJr2
k4GDqnTt7w3wrpJSm5E+EuYSSi7hSaoZfpg+thGDoFF+tpf/CvdmD8CYZ650
64IsiE/5DsoXjcHR/wu0jwuEM0eF6KNzK+DleC16SCGB7N0oRGUPbqYStb9h
/W+EjIKJVErxAZH164FlxpK0k0bSyGx1usn8PsioLaJrtadR8+2H4blsMDj/
NaSqnRI01TkRGup16MrGVbDPVpfmpO0Ag3crYbJpPEC2MP11qYvUGd2A829i
4eEkTdKzQJxKje2B0vIJdO4GcZrJRuCtrTLEztGib+Nl6OtjV6DnbgSVeKwL
LkJj6LtjDMaoPATPlafposdriDXvOMi/TYCvBtfJdJkcUM5pIj6vw6jQpDyw
+hwHC30KIUudj7cSx9M12irMgBZDzJAI7fl1EfY6ZBI1j8XU/I4rPM+7CnNP
JEB5ZS4cdMqCk2uPkfZED2wpAFg2aIPW32WYpcdctnT02eJGbdws8Wh0172O
j/eG0uvqOTj2sjc3dbwRm5usjQlRS1j73DDug3En+zvOm4l0aOHM059Y1o42
nHjwJIr1u6G01wE650MnCT35FDymNgK1CoHT0wbJ7imn4M5GY/qsqpv8ckmG
tS2i1HabKuPbLqRKNl4wJycfpKkZ6Ol/geaSRnLkyCw2rvwFuI85Q/0Uq0Z9
/ikUXyuFpbvDIKbwKTx4XwVBGlFUx3AOQZnHJHpBGlky5RqYPnkKBiM18HRb
JRzovQbHRSOpRGcFRKtEQGP9RLpKM6lkhut2aPsYQTWXL+VErJ5wau0igl1T
o1HyfRqmtW7k/thH0lu/LmKeIo9TfmfPfXj1nY3wVuB10404sfoUM1jyhnla
nmdFbgpMIz4fdTKD8cJ/Iajq+xAW9qaQxi83ocS+HM5lPISuEQEYKD6E1b7Z
pObgA9I+NhGWqZTDfr9H8PX8Q/i65CTUGawmfv4PoeNGOfh2ZBLOrgKYZwT1
/ciBRYIdkz52ErMfBdCPajsx1GcWM00pxQOrObxd94It3xuB5wKUWV3xONT2
nSQwrvJi/DOG7Kh1JG4S9qN+xi/YzU4VlhgdSY1O+WP+8BG2t/CraTlfi7Z2
/SIsOws8IqVAv9WBnNiQB2vZVTjT0EMOrLsOXTfyYPetQihpdoSeoNGz7UA+
dGdm8DnylvwocoCnIhXwbvwN2N8YSUbeR0Jzbix0pwZCZa89/BkOh4S2GHhW
EQxpu/NQPTUKBv6owNffMTAlfjzh/qoRc6dwujK7lyxzjSIz5VYQ91Bl8BSN
B6eGaPiVEws3M6tgkr08lYwqBfmGtXA2TI2e6m8B3YJ4yJ7rBZ93Mpjud89s
50Av1MfO4BluFKU0tw88s8VpjY0BZMQ5Uq3NIzBleyQ9vPMY3GS3QIPuRsVz
j3DywQjOO0CeyU/rwJgAMRRusWBGphMFU53k2AVXReYdHUQX6r1DowRlbHeb
xEz0dWje8xhaFmqETRP7cUR6Pr7K/ccMvevRYL00m/DWh7glhbDza9y4DzP+
YvOFo7R8niuqPFcXaJSn4zKjl1i/+SRrChFntntNBdMHWvCKUQUMBgTyA01S
6RMXBUFzZBit6BFjAW4SrKFKBU5r3mPln7aC8H8TQEjnNNg4JXCPEpXgQqsy
jOINL+CtDnyf4c8r402BzFVydJPdXHgZrQWlC3TghksSNdqqB0/dR3PtZQD7
PhrAl/0ilOd+wSxf1hua/lsFBcQFimMW0S3lLhAyPhGkladTbok9eTSkTo+u
nEvvbVlBr49MpJkWq6nWSxn65AOlgsEdUJM5mabUi1PLbVKwRdkff22LRbfZ
eoJc4S3cXCdj1NQUFczK92dlFjfRvf8o8xOEY9T0SSztgi+da7EeBy/MRtuk
X8w+dTK+/CfHBoXiaHmuF5U4vIDdcUhljycJscdnf6HTzmA2j7NmybfOYl9+
ItoOteM6PX96O/cKetrXYtklFWbz2oJbHW7AFYa/Yi/8UzijCdZs8rcubkPA
C3ZtcwCb3r4Q95ct4NRyA1F503hmJ36TBbv40wFWgwX0Jb/q3ArmdTqfmxqT
j8YCQzb+jzgbkbyC+9h5ZE7LOU+rSSz+sjXn4F/J5cdl4YT662ykyJQNNWly
9YuLwe3+YqrXNAQLJKqgfZQ9RNMGYPOcQOoxwxqErtmAbvN4+sj5JzjWzQXT
j+dhypFAcF/sDPcX5UNnswntMP8D5MwIRDp2w4tP4fA8+z1u11uLzbEMmwIZ
xqQNM41n4VzAIOCK4A1sZDKP7etORjGDsYIroV50bpEFBs3awNy3ROGsZ8cw
2kSLCe2Kok2P/OnUl+ncf5kh3PH5Y2l6ch7MvJpIf3IjsNeWRx/scAZn06eQ
GjgMwr7CdLdCPrzoH4aACCHa8+wAaRp/nfTvcqb9aSPgqiYOm2dTKrnuKUin
CVET60BQ5btCw0936GnygZX5bnBTsI4Jvs4DV80s5FceAL3EEmK2xRveTzSG
P3MPgn/CCAgMToEqzxHep3hAW1o8LRprB3c9Ummqphts7TAlc8pV0Pl4FdqY
dHHSIrZs87JlOHnHZU5vkjRndr8aZVUiUVjhJk4TpKBc4DWu9/sljGiRw0Kd
BqyX96XNDiJYGVCEqit9qNM+IbbhfC/qTc+BVLPHcD3gPll2zYT+iuHR9Sm2
pOWRFnVKsqJ/C5VgfWoYtXrbCnaef+DVmmV02/AlOGkcTVb/m0J1jcRpXZkh
JTX18Dd6NdUNH0eENL6B4YsM0vt0KvWPSwKplTtAdFwkNTk4BLyls+HfpmNw
O7mC7D3cAjFS32B7dRXElmfAUekY8HrcBEkz/ECqzpd89/gLCb6zwLVXC1zL
ZGndcTG6zKEeChIyIP7EexL6Rp4qYCfp9dWm2t7t8Fe/BeKz+4nQezX6nntA
lJJl6YvQrXQa/zH57j6OzleKpqZa4nSt1EcwjrtEgnT1mF3MMFdw9QxqOUSg
TVs0Utd7uHSaKQ5PNMd1sTy2IScQNRXK8FWsO9O+4c0MhwNog94KNrExBaf4
2rFMxZk4N/0I1yrbiCqLmriuZb9h1hxh6qP0jZcilgu9j5/Az/HvwTHSE6zS
3em0B/XE6PFHUOg2oNqmnYDNX8F2zWriIcJg3L1OUOj35y0q6AbNo1cIiJXB
oaxwcuuqONW3ugefnBfBa5XfZFHAL3jxiIKy0gT67sYA/BHTop/ezqTfHMXo
5XEUTM9lweP90USq1J5e9yqE/yR58GmJDE2fdxEYiNMmO0f6p1KYyygyweF/
T7j3Q7dxb8wq/tx7R/D02ACm6BNJBV9msH8do1nfLcQw9h0qlC3nB22cx16J
fuY7RLzmrj3ai8cJ4fvsu4spq20532OinMbhLDi38QGczs+GBp1yrJe6CoYP
8yF3VzqcSP2PPhy7B27eX2x22XYMPVt3Da4W5MICl5uw+sOXRbduidHiSneY
vnMjxH8/DNf97pALqVt4H33T2aRR73PVF6LBllqYeqUEou060PhTOnopnGDR
y80533dKgvEW0wXbpwyhk8MMrqbWWMA754V87xC6+Q9yj1rk2fNHHJpeLUDj
lVF0684Aes9rGh26EMaT+3CKvtoyCNwLoBfS7/HYiTB69Uc4LbTYQK6mr6K7
BnTprbp19BsxIrL3FWGasSL1PLKJDq/dDgvcK+DR/Q9Ew+MYXe6TDbmj1yuy
ptNE52GYN6sfdIbG0KDHcSBZ9Bxu1H6Hm3KhRGr6Kbjhr0E11t2Aujl/ITMo
ksgalcEi3z/w8dZBytumSxuaGYSzTdCkM4v02XWA14gslcPfcFys/e5/a+fB
kWWTIftHGtwdsIe+DTNBRCKPSCXPoW3/3oGyuyXMsooG64cvYNs6DQoyutTo
7AzaWu5F815rU2etXXjexYBti5bg8q6EUMVwHaZw5QLHJRby93TLs3Wf67it
f37wY3a85UsYrcLU1y38a6ufcg95n9lSrYUs2dSHc/IUY7K1Jdyk6sKSsV2F
+O/pXZ5Y+n764e9ksts1njDFSLRZH0JllVp5FTsCeKvCxpF1dX7EMOE2r5jt
53n310D29TZe4ZFc9lVtCa9Dvpv3oFGLN1lzErG02cbUHi1ievbhSC6fYOPr
U+j8+bPZ6QILKr6vGB9Jp2NYkh1S/V9YveYtyk2RF5x0nYKWf0UENYeU0cTj
Khr+9xM776vQm7sW4yRQpvp/9NmDb3IszSaMvyBcjeuSicLt8ZH0q9dhPJSx
gG1eGc3Cxl5Cg3/yHG9cOb9QPRmfnJjNBqcXYK3bErw7MZQp6yxEu1tZqH1f
lLs/7ghqViQzNw8V9lo5D5L3X4Gzanmw47+LoEiuga9lEeiPzn1Nbinv3gQb
aNW/Am+sllBjn2iY5JoF2fo5YN3WD7FRQVQw2YyndygLglSWwpnQN+Rl8WZ4
9mYTrr+qzCbNk8JX6+dxV2On49HUJVTX+xDnUvmA+fA74VjoEaxN2cCMzu9l
WoF/wfGbDLsyRolZVgRgZGcvptSmUaUoWyb6ygK7i0RpiMFBlNoyhEnnT6HO
+WC6YGYZVqV6oTCVwfIphZzY5hr+kRgn9nYBwep1Mixozyl8166LBT+nYP2/
bLyk5MbiiwrYe5PUkvS5/6HDfHE8G2aJP1b7sb65c9lgeSz195Lntih85mdq
rUBby/9QMpbD2rRf3KHGFq7NJRL3PR/PVK10mfivSM7QJQO7EjsxNMQHeZle
nIpYGC7x5XF+ayugn/tOdpV0Q0FtBHz6bMt7sSgapGom0E+XWkBWtwtO1l7i
HZj8E9bv6oWxaX1QeiKS8sU6YIdkH+x+cQ/S5vSApPM7Ul3zGp613Qe5cYTN
lFBgK9WiqfksSUF3VxLXsvgME5kvwZ4Lj2ML38gKPH1morj+THbcRo/dXdWK
T85OYHa8fujierhVYzo4S5sR+ESGYHXOPDZpZBJz4bdhf9I0gdbGEPy6RYsp
lvxGUVEhejPOmKt7TFB8/njuSjJlYZwvPj46RdC2dQ17NmuMYO0nLViWoss5
GwVTzTtyCE5hdMVcW9RYKM+9kp1P5Fb5gdmBC1TFZRrv0B9rKv/RG47kHocE
50D4VDkMOy6cgf8cJGHuJl/oud2OV9O9oCx9Ai1dspvcj/tDVMY7sh7nT+TN
glLy61EyuHupCt5tdqHCrsux5IY8hnutw7SMCDqx+Cp6nq5m9XZPUSFypqCn
yowtXLqQ6TzUEBwaI47q9Vfh9/5SfDVTiMoN/EMaMwS3uFOc9FEDduZ3BGyI
Dqdc4lte23ogHoVjyffCG3TQJoj5ukdA7c/l0OgVQG8u7uZNdQ2HrbOuQ/T+
EIhL8YFLe43h3JMQ2GIrB9LkNUhkjoGu/CDImdcNC5xOwLv8b2A0dhvvq5Mi
pMtVwwezrbAjupO/5H0iKbsSSrf/d91sS8kwzFg2AE35U8wSVDfB4dT1kBqd
Ahq+RfC4aS1d/+IHKLpxcG7WC1Au5NHS34k0LUaJOm89Sel6Nzq+3YraxQdB
+UUruvubDv1XNYaurjCnzTPc6YRwWap9bzkvxOUQuKxZQI8YSdOFJ7+T8PiZ
dMlkQxpV2ooWrurYlz2R0k5ffH3rIEbya1hA2gXU+PWDHf/VzynVLKULri1n
rbGx2B/nyNKThLDgaTMvLX8zzrA7wIqioqmy+k5aOuEAHtMxYD4bwvHVpD1o
/2USU9HRYs5Wdox/9hSmHZXhom6lYEyEMBvb5IYnb4Vx7T1qbFvvDJayOZKe
mcNjIqbPsaNnNYqfBi7h0T90eHcSj7VXcvNaQtF6ixk5Hm3PSO45YjtDmEm0
hdIsu2VkW8US8pETpuadnuyW7Akyce0CorBOky7b6sg7ybMhWioW5L7oObJI
qZj4EykiMsmOmLqfoCVe9hCqr8p0xwfTDyWLYb31LGrZepnnH/AP+P1/QEar
DwxzL4CabjfMjs+HX4VroPHAv1Fvv8LTnJwKoDgELdXCdHNfNRzK+AeV8btg
/NY8lP+Wz7rXTmCdB05DYtgTYhgVSedZKZBo4yWgWfueuM00Ihe+n4HgzkiY
0OoF25IjIWvElQq3ecHAlymQaChCwpL30Bz/c3DY3h8MVXyp6FFr2B8eTHj1
DlBwdCWxHv5IKlv2Q5zPGjB8tRVEtjSSs9L20C+2F7TKd8Ou5BRicn8nWIss
hj8ij0jMMVX2cvMnnpXbA94Ft12g+dsdnFUTyE/4AUPm20Df+RPI5AngmpMJ
nPBYQ8P/6dNetTuwYS2Aib8vFF6sh5YdstQpNAEa5l4kuW6XQDDKdXvLtKh/
bTAMFw/Bzj5TVhseSCdJTGGrw9Jx36AOcx0enfH7G7Br+hIUj57P3ZOfQkO/
GeAKx93Ma9Fklj5FCU2WH8bwhxe4X8Jr0G+DMu08p0Jvq8gJDr+6g4kRQVTJ
2AHjrB6yG0Fy7LzGFLy07xd/WpcV533xPsu8LIlXds5EB8kS9HyeySqqfqKz
0lHuatsS/iXp9bj55je+mKQKmzyujXORmsh24m18c/wbU9OsYXy/Wja3pA7f
7ynHDCdgi5Ze5PK/DuHnzse40Pk8HHvfjEtcsplOzEL2a+oYPHB3Bps9yZ+u
65koEIMB7Ijz4cJ2X+REFUPp3qf2bLGMLMs8YigYY3eWuQ/3cVrXgulJE0n2
PUeOUZEd7M9ePvvqPIM2NIax1jXyqO/1H67dG8kcd/PwrbYl230qmB6Ti0CP
nHDMH9Sl7y7v5r6hHpt6ygfDLWoxUFcR6ZNLnGzaNH7QpyhaUjIHR2Z+wddb
5PCYmTfu7TcumZZjj688L6D0sat8j6MOuHLsKibrWMNVHO4vOdx1ljt8SpJq
fH0EFmNew/bj52hEWRn8GSsHjfW+1Nl4Chh4pRGV69J02x4b2mb7luw/OJMm
RBpSczMOMurDaM8vd5pSGk4bjnfA3SdKpHhiNPn5J5qOWWvNpHrEuY8junjf
9SmnUa3GX/Auij0QCLGcEH30HjHmmoUFaLzrCdq9reC6pumh0N4ivCeuxHqM
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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
uXono61iD1jzi0Y06fkx/uuHpdXrcCu7PVsKHfIVxy/eZbLpFvHIyySaBdY8
5iwkznFvSJ8oVJpy9s21XL+VnlBB50al2dVFnCO3FcuvPCrcvz+KXzhhNZKc
aUlXP05kB65lsoybfmhaQD6zpR34SVuYSHXcTUTs+qiJv6aoebgUly3awenm
v0KOdZT76Z3G3DbHClqz1iE+MFQYd1Cf84vIRiNDtHgXxQ/UK/q+qLPxvPBH
/Gu6cJsBPZlpTYV7LwumapxCWbsuc+IaG+m2u+VsllSocPTeFDaQ+4fZ/dVG
hq5CYX3SMrb2QC3atv08Dq36gNbuz2f6DxrpTc9GNBRbRz+6/EFRk/W5XxFF
yEO3la06s52bk5BPw5bZomb7JMweXkbfpEup6jlD9kTRkqklHmVnNJIhKzdS
9PD6fKR90wBd7lrPZXuqgP7qschybCW9ePAK1lEoQssSp/IN/2m9o4UN/3xk
Lk3ePx/phd6jA/4buRsPxnNFs0ehXTa3OLUpody9fYPc5Z3rkXtuKPapk2Hr
z28EJxcT/q+hIlf2UpI1bZESFk8R4+9FdqMv8kexHUG08ske0dS0Ktr4Kw0v
0CRs16XR9LGJKbfjShwHzbr8wj/9TBKnoH2FUujviFd0tcYENrjfB0/Ujcc1
08Qof+MNGlV1TRgkWEA3mkxEer3leFZtIBq5JJpz7ysG7RBFYv3Oln/75h+Z
9SAGtOIdIH3GBWQTdg8MtOtBP0Kd35spASkJYrBYqRstrVNB839ugNiBX2jb
+jT29ZkOOTZpCEmfHWAlZtPwuHJN1GO2CrUBYot31qAJeeNwQWMGH7ZEgnmu
nsedqf0vL2Zcx79eqKFGBzecMC0BvlV54x6Pmzg7x4OX+/CF1huPwct7XtLE
oi/01akw0db9ifTvTkuR/dMVIvLgA35yeYAGmIVza8NaULyCORdhd4M25pSi
RgUDNP+qKZsfpwF6hxJYiUMJ3+t2jvc2Dmdfy38LLyT9QJKq1Uil1pTlmjxl
5tbzMSovx97beFTYOx159khy6g0ycNejnZubkIWMf4fyuWPsmZpMB/d0hz1l
m+8I91zPZcHZfaLInkOc5I9YLDvhJM3RrOAiJv3GK18vQIkXau2MhAH8RMl2
gfnbBtEXzpJLlI+23XHpBB2+7EC5tcPC5muZ2C+jofLeAWN0p+0jJ+pBwrKN
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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/3" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>|>,
                     "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
7Arh/wHFM651
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/8" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {10752}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{512, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 128}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 307896, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 10, 10, 43, 33.341931`8.275565728571298}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|
       "Input" -> {{"very high", "low", 4, 2, "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "low", 2, 2, "large", "low"}, {
          "high", "low", 4, 4, "medium", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "very high", 2, 4, "medium", "medium"}, {
          "low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "high", 2, 2, "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "very high", 4, 2, "large", "medium"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "high", "low", 3, 4, "medium", "medium"}, {
          "medium", "high", 3, 2, "large", "medium"}, {
          "medium", "very high", 4, 2, "small", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "very high", 3, 2, "large", "medium"}, {
          "high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "medium", 2, 4, "medium", "low"}, {"very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "low", 4, 4, "large", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "very high", 2, 2, "large", "medium"}, {
          "low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "high", "high", 3, 2, "medium", "low"}, {
          "low", "high", 4, 4, "medium", "high"}, {
          "very high", "low", 4, 2, "small", "medium"}, {
          "very high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 4, 2, "small", "low"}, {
          "high", "very high", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "very high", "high", 2, 4, "large", "low"}, {
          "medium", "very high", 4, 2, "medium", "medium"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "medium", 3, 2, "small", "high"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 3, 4, "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "high", "very high", 3, 4, "small", "medium"}, {
          "high", "medium", 2, 2, "small", "medium"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "high", 2, 4, "small", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "very high", "high", 4, 2, "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 2, 2, "small", "low"}, {
          "low", "medium", 3, 2, "small", "medium"}, {
          "low", "very high", 4, 2, "medium", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 2, 4, "large", "high"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "medium", 4, 4, "medium", "medium"}, {
          "low", "low", 2, 4, "medium", "medium"}, {
          "very high", "low", 4, 4, "large", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 4, 4, "small", "medium"}, {
          "very high", "high", 4, 2, "large", "medium"}, {
          "high", "medium", 4, 2, "large", "medium"}, {
          "high", "high", 3, 4, "medium", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "low", 2, 2, "medium", "high"}, {
          "very high", "very high", 4, 4, "small", "medium"}, {
          "medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "high", 4, 4, "small", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "low", "medium", 2, 2, "small", "medium"}, {
          "low", "medium", 4, 4, "large", "high"}, {
          "high", "high", 4, 4, "medium", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "high", 3, 2, "small", "medium"}, {
          "medium", "very high", 4, 2, "medium", "high"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 3, 4, "medium", "low"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "medium", 3, 2, "medium", "high"}, {
          "medium", "high", 4, 2, "medium", "medium"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 2, 4, "small", "high"}, {
          "very high", "high", 3, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "medium", 3, 2, "large", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "low", 4, 4, "large", "low"}, {
          "high", "very high", 3, 2, "large", "high"}, {
          "low", "very high", 3, 2, "medium", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "medium", "very high", 3, 4, "medium", "high"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 4, 2, "large", "low"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 2, 2, "large", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 4, 2, "large", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "medium", 2, 4, "small", "high"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "high", 4, 2, "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "low", 2, 4, "small", "high"}, {
          "high", "low", 3, 2, "large", "low"}, {
          "high", "very high", 4, 4, "small", "low"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "low", 3, 4, "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "low", 3, 2, "medium", "high"}, {
          "high", "very high", 2, 2, "medium", "high"}, {
          "low", "high", 4, 2, "medium", "high"}, {
          "very high", "high", 3, 2, "large", "medium"}, {
          "very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "very high", "very high", 3, 4, "medium", "high"}, {
          "medium", "medium", 2, 2, "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "medium", "medium", 3, 2, "medium", "medium"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "low", 2, 2, "small", "high"}, {
          "very high", "high", 3, 2, "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "very high", 4, 4, "small", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "medium", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "low", "high", 3, 4, "large", "low"}, {
          "low", "high", 4, 2, "small", "high"}, {"very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "low", 2, 4, "large", "medium"}, {
          "high", "very high", 4, 2, "medium", "low"}, {
          "high", "very high", 4, 4, "large", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "high", 2, 2, "small", "medium"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 3, 4, "medium", "medium"}, {
          "medium", "medium", 3, 2, "small", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 4, 2, "medium", "medium"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "low", 4, 2, "large", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "medium", 3, 4, "small", "high"}, {
          "very high", "low", 4, 2, "large", "medium"}, {
          "very high", "high", 4, 4, "large", "medium"}, {
          "low", "medium", 3, 4, "medium", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "high", "low", 4, 2, "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 4, "small", "low"}, {
          "very high", "high", 4, 2, "large", "low"}, {
          "medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "high", 3, 4, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "medium", 3, 4, "medium", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "low", 4, 4, "small", "low"}, {
          "high", "very high", 4, 2, "medium", "medium"}, {
          "very high", "medium", 2, 4, "large", "high"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 2, 4, "small", "low"}, {
          "low", "medium", 3, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 3, 2, "small", "low"}, {
          "very high", "medium", 4, 4, "medium", "low"}, {
          "low", "low", 3, 2, "small", "low"}, {
          "very high", "medium", 4, 2, "large", "high"}, {
          "high", "medium", 3, 2, "medium", "medium"}, {
          "low", "very high", 2, 2, "small", "low"}, {
          "high", "very high", 3, 4, "large", "high"}, {"medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "high", 3, 2, "large", "high"}, {"medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "low", "very high", 2, 4, "medium", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 2, 2, "small", "medium"}, {
          "high", "high", 4, 4, "small", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "low", 3, 4, "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "very high", "very high", 3, 2, "small", "high"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "high", 2, 4, "small", "low"}, {
          "low", "medium", 3, 2, "medium", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "medium", "very high", 3, 4, "large", "low"}, {
          "very high", "medium", 4, 2, "large", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "medium", "medium", 4, 2, "medium", "medium"}, {
          "medium", "medium", 3, 2, "large", "high"}, {
          "very high", "very high", 2, 4, "medium", "medium"}, {
          "low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "very high", "low", 4, 2, "small", "low"}, {
          "medium", "medium", 4, 4, "medium", "high"}, {
          "high", "high", 2, 4, "large", "low"}, {
          "high", "medium", 4, 4, "large", "high"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 3, 2, "medium", "low"}, {
          "medium", "low", 3, 2, "small", "medium"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "high", 3, 4, "small", "low"}, {
          "very high", "very high", 3, 4, "small", "medium"}, {
          "high", "low", 4, 2, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "low", 2, 2, "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "very high", "very high", 4, 2, "medium", "medium"}, {
          "very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "medium", 4, 2, "large", "medium"}, {
          "medium", "medium", 2, 4, "large", "medium"}, {
          "medium", "high", 4, 4, "small", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "low", "high", 3, 2, "medium", "low"}, {"medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "high", 3, 4, "medium", "high"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 4, 2, "small", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "very high", "high", 4, 4, "large", "low"}, {
          "high", "high", 4, 2, "small", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "medium", 4, 2, "small", "high"}, {"high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 3, 2, "large", "low"}, {
          "very high", "very high", 4, 2, "medium", "high"}, {
          "high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "low", 3, 2, "small", "medium"}, {
          "high", "very high", 3, 2, "small", "medium"}, {
          "high", "medium", 2, 4, "medium", "high"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "high", "low", 2, 4, "small", "medium"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "high", 2, 4, "small", "medium"}, {
          "medium", "low", 4, 4, "medium", "high"}, {
          "low", "medium", 4, 4, "medium", "medium"}, {
          "high", "very high", 4, 4, "medium", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "medium", "high", 4, 2, "large", "high"}, {
          "very high", "very high", 4, 4, "large", "high"}, {
          "medium", "low", 2, 2, "small", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "medium", "low", 4, 2, "small", "medium"}, {"very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "high", "high", 2, 2, "large", "medium"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "high", 2, 2, "large", "low"}, {
          "medium", "high", 4, 2, "small", "medium"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "very high", 2, 4, "medium", "high"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "low", 4, 4, "large", "low"}, {
          "very high", "high", 2, 2, "large", "high"}, {
          "high", "high", 2, 2, "medium", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "low", 4, 4, "medium", "low"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "very high", "low", 2, 4, "medium", "high"}, {
          "high", "high", 3, 4, "large", "medium"}, {
          "medium", "medium", 4, 2, "medium", "low"}, {
          "very high", "very high", 2, 4, "small", "medium"}, {
          "high", "high", 3, 4, "small", "high"}, {
          "high", "medium", 4, 2, "medium", "medium"}, {
          "low", "medium", 3, 2, "large", "low"}, {"medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 4, 2, "large", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}}, 
        "Output" -> {
         "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "good", "very good", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "very good", "very good", "acceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "very good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "very good", "unacceptable", "unacceptable", "unacceptable",
           "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "very good", "acceptable", 
          "unacceptable", "acceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "good", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "good", "acceptable", 
          "unacceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "very good", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", "good", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "good", "unacceptable", "unacceptable",
           "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "acceptable", "acceptable"}|>, 
      "Predictions" -> {
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "good", "very good", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", "good", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", "good", 
        "very good", "acceptable", "acceptable", "acceptable", "unacceptable",
         "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "very good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "good", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "very good", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "very good", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "very good", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "acceptable"}, 
      "LogProbabilities" -> CompressedData["
1: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
zxz9Hx9zhZI=
       "], 
      "CountMatrix" -> {{249, 1, 1, 0, 0}, {3, 61, 0, 0, 0}, {0, 3, 12, 1, 
       0}, {0, 0, 1, 14, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwl0mlrCAAAgOHZYbMDM7a2mM0OtjHGzNZmm7DNTm2RoxwTcg7lPsqRKOXK
UciRUEIhSSRKCAm5z3LmKldI4pEPT+8feJMbm+qnNwsICPjJvwYSRDAhhBJG
OBFEEkVromlDDG1pRyxxxJNAIkkkk0IqaaTThQwyyaIr3cimOz3IoRe55JFP
AYUU0ZdiSiilH2WUU0ElVVRTQy11DKaeBoYzgpGMYjRjGEsj4xjPBCYyiclM
YSrTaGIGM5nFbOYwl3nMZwELWcRilrCUZSxnBStZxWrWsJZ1rGcDG9nEZraw
lW1sZwc72cVu9rCXfeznAAc5xGGOcJRjHOcEJznFac5wlnOc5wIXucRlrnCV
a1znBje5xW3ucJd73OcBD3nEY57wlGc85wUvecVr3vCWd7znAx/5xGe+8JVv
fOdHwP+Pf/GbPwSaOohgQmhOKGG0IJwIIomiJa2IJoZY4ogngfZ0IJGOJJFM
J1JIJY10OpNBJllkk0NPepFLb/LoQz4FFFJEMSWU0p8BDKSMcioYRCVVVFND
LXXU08AQhjKMv91jaGw=
         "], {183}, {300}, {}, {}}, {{69, 139, 276}, {6, 15, 29, 31, 50, 53, 
         58, 66, 68, 73, 86, 87, 88, 93, 104, 110, 115, 133, 135, 141, 148, 
         153, 154, 163, 165, 169, 176, 177, 181, 185, 187, 190, 196, 202, 206,
          208, 212, 226, 233, 239, 240, 246, 250, 254, 256, 257, 272, 274, 
         280, 283, 296, 301, 314, 321, 322, 336, 337, 340, 343, 345, 
         346}, {}, {}, {}}, {{}, {24, 195, 277}, {14, 27, 39, 67, 81, 127, 
         158, 170, 172, 192, 198, 304}, {116}, {}}, {{}, {}, {84}, {9, 28, 34,
          55, 85, 92, 100, 128, 138, 142, 225, 252, 303, 317}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "good", "very good"}, "Weights" -> 
      SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.00033993063583815026`, 
      "SingleEvaluationTime" -> 0.004701625, "Version" -> {13.1, 0}|>]], ",", 
   
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "a4706113-68e5-4823-ab44-ff10d68dff00"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "346"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"96.0", "1.1"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    95.9537572254335202615`3., 1.0608339580574888128`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"72.5", "2.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    72.5433526011560729785`3., 2.4027745155265187726`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.8993825351837356763`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.019997112278465512`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.8593883106268046523`3.", "\", \"", 
                    "0.9393767597406667003`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.8593883106268046523`3., ", ", 0.9393767597406667003`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.1060468231310036646`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.022232436393898436`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0615819503432067927`3.", "\", \"", 
                    "0.1505116959188005366`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0615819503432067927`3., ", ", 0.1505116959188005366`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"4.73`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"1.75`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTSfML/im6vbOfJrOSZYbLW3vuxzcvuCu+
xCkenvwuolb8rb1mteGdmzte2HsI3nnTFXEbw1wYvWszn2jN87f2R6r+ZH68
99p+0Q7ff//rnpJsTt8HrdbQprf2c9aote1IeGV/5Gz6jHNzHtpvZJa48Njq
jX1FoCWLypcn9nr2V1/m8pzEaQ4h+mGVyDr3h7fsGVAA8eGGSz0Av8eCsA==

                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["250", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "250", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9689922480620154`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9960159362549801`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9823182711198428`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{250, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9689922480620154}], 
                    Row[{"Recall = ", 0.9960159362549801}], 
                    Row[{"FScore = ", 0.9823182711198428}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.031007751937984496`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.125`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{8, " examples of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.031007751937984496`}], 
                    Row[{"Row fraction = ", 0.125}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["56", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "56", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.875`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"FScore = \"", "0.903225806451613`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{56, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9333333333333333}], 
                    Row[{"Recall = ", 0.875}], 
                    Row[{"FScore = ", 0.903225806451613}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["3", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "3", "\" examples of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.05`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.1875`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{3, " examples of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.05}], 
                    Row[{"Row fraction = ", 0.1875}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.016666666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.06666666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.016666666666666666`}], 
                    Row[{"Row fraction = ", 0.06666666666666667}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.06666666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00398406374501992`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.06666666666666667}], 
                    Row[{"Row fraction = ", 0.00398406374501992}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["13", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "13", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8666666666666667`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.8125`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8387096774193549`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{13, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8666666666666667}], 
                    Row[{"Recall = ", 0.8125}], 
                    Row[{"FScore = ", 0.8387096774193549}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.06666666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.06666666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.06666666666666667}], 
                    Row[{"Row fraction = ", 0.06666666666666667}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["13", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "13", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.8666666666666667`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9285714285714286`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{13, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.8666666666666667}], 
                    Row[{"FScore = ", 0.9285714285714286}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "251", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9960159362549801`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{251, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9960159362549801}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.875`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{64, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.875}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.8125`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.8125}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    "15", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.8666666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{15, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 0.8666666666666667}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "258", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9689922480620154`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{258, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 0.9689922480620154}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "60", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{60, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9333333333333333}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "15", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8666666666666667`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{15, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8666666666666667}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "13", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{13, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["251", TraditionalForm]}, {2.5, 
                    FormBox["64", TraditionalForm]}, {1.5, 
                    FormBox["16", TraditionalForm]}, {0.5, 
                    FormBox["15", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["258", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["60", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["15", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["13", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "good" -> 0.25, 
             "very good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"high", "medium", "low", "very high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "low", "very high", "high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {3, 4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                   "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3, 
                   "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"small", "large", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "low", "high"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "good", "very good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet/Net/SoftNet/1" -> <|
                 "Type" -> "NetArray", 
                  "Arrays" -> <|"Array" -> CompressedData["
1:eJzVWE2upDUMbFggrsGWJRwAcYXhBA8JViMhDQvEjqMzLEZqhdiusquSfpbe
TPeX+OdL7HK5v/v1jw+/f/14PP789vM/H97++vnTp7e/f/nmvy+/vX388YeP
X33++Pj+Qcg/P/3/+/oMWZv4VInDbsem+/xQn1+esT6r/dP1ic7zvuhzR6Z3
E51/di+ZLuNPeQ6RD+S5UxyxnLQ5EZXNU/fZxZ2dje56tmetl9txdvUY2669
zH4XTk1lcjZs/mR7VTmtiEWpe/OuT+SyWlw9XIlFGYfZff5SJ0y9TO+u8sX0
KWSvs78id8DoO3QVvBax69ZHevp7mOMqu6eFnYtfAYtZf653RGPqYJo7pmz9
dG137TvORMHZlPyzu9/5m8Pt3xpu4Lza9y3sPz2TZPqv0P86UvUaFYaoRclX
nb+hdHVUcwXrZ2fblfNqvvKcr9Hnys86Q96s904duX6PqPY7e9p742Bd/7fl
JGdgZJJb731GqH73csXiPpeTeYTkgMPuxPYJcb23GzMceM3WWabf8blbU9X4
zd8EXi3/T80iCl/uucTN027M5882lOdf1WP0F9mK4lTymyjmm7U7ne9O+cps
nHwHlf60FqsZmql9dPbO9lf1FMVe1RzqO6stpNZPzQxOm9kzNFfWu6m4RYSv
WUxTqXKCnQPY/O5KlmtZnbHv68LZ24LUKnv3jB5ib8rtETuMXVU8md1szw7r
d593OLLrH4r3cdY7WsMdm93879aEch3Vy+55lx9VjiE9bBfLqX7GnCvqO+M7
0Z7ob9Vhcq9zVqh9tpcyfnbrTr5Q6Ud4mOU+6lOVz0yeIv3SgfPsehULcm9I
79v93xE2NoUf1B4TG+ufxSXGdvd5N5aorqecSF1DDsxjZb13JKZOzXdiQexV
sTlwT3XuaptTQTji+j3Dkaq3TvHTgfNqTGfWKx30/BScUcltXOfiqplJb3bF
xcZ0IgbmXbPc7WLEikMRLlV4phQn1nXqXR0Pyxcc/RfZx5yXCv8jiWJB7qRb
48r73dUVsmeNZacf4WZVz7sYdvYqvV2c1RrDHVCcQ/dM8xPt69E9KWJR8BPU
TlVjVb5k39FYMp+IDoP/VS1msovTgYeVX3Y/GqcS513n4urTKj9qTMqwnIkh
eo7WdFWjKG5mcSDPEHFxFGQ9qr0djrI5OBVV7aA+FPYze9XZTdYZOZG7EQ4g
vI/BkIgn7vSi3M58I3fYtcfWUvZejCh7ErKGYu0UWzrnc4IPVaK4jy7uIPEo
RM3nJv28io3F2s5eBcfKbKL4sevvGUZ2Y3x+jtpT92OHrVM4g54n07+qz2q+
4eAvyLkgnGKX96xPVHY1UPndvY8rp5A93fNAeFx2Pru9HX8TYXC20u/4fH6W
ccwqZ9BzzmJmcb6bc1F/Yuyi4rLdxcFKz5HjmXTvtbN33e+8d6dN1P5JbqSy
n+Unm/Msdip7j8LHNJYqjggHs7Xn9fVzFQtyHyd4SKbD3lfEJSYxKPcouSYr
TN9m64bNpdPvXgnT99geybx391wQbhfhxAnelckr+EGxjt2juu8pL2P0lL4c
0u1pE27K7FVx+ao+VbL2SfW8tWLN6nfdG+2bzgrq93IIiwcufqaso46oZ4uu
f7VM7Ea9/Ia4eoSKg6B4EM1YiA1Fbp6ss+hs3bg4PSdVfCd76Pos+rzqIHbV
0pkJT3DESQ9A7voGfnbfhbGjmEUVeaeMWykOP47ZAslfdKaNamP3f/asG6tL
mFm7Y5d9b/bOTvHM0/0D8flK9Y70ZMe9ufq72u6Uh3f0u33MNRNXMWQ87/S8
xp5P9i7rs91fZhfpU125daZTG68SN9rble+uFASvu/0J3RPtdeHQaa7F3v9t
vHsFO7fsVz4qjO7yf2ZfFaNTun0oejclJ1TjkSuGqT11jjA+Jniutt/1zcTQ
5cmTe+voVe/C5MJOxzm7TXTQO8meI/xtIpXvaM6pZiEX70fumj3PzrMqDuUs
0OHw03637o3yIdNjvlexqYTJGXVtsT6i8+76R9dU9rNcybAl2teNA9XtcpLo
+yn+eCJPu7a6/lwYoOY5Uc4qfUd+FLZUusr7yvrsLnd22OKKsYPhTAyT/GQ4
y8SXUpznobCD2mfXXbpuUcXG2JnU0AQ3GcyfiqtnnMqljMOx+shskM0kztpE
pZNr0ay17lntR/2vg4FVHr4KD+noV/xA6WtqW8WjGZ8um6ydjo9Jzkd7O/eC
rKvPyV1Hqngn9cf6n8TsyHnH7OHkmEzsTFyqe3FwMMQvuyfq59WzrKcrerEq
l1A9B/ee2F91T/HkqVS8N8qNKNdW26oY1foncv5GDkxwtutnaquy3fHD1PW0
H1VnPuFg73k+Oml/UovuXtWx2Xkfxww2FSUv7Pn+F4R+vVc=
                    "]|>, 
                  "Parameters" -> <|
                   "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                 "TrainedNet/Net/SoftNet/2" -> <|
                 "Type" -> "NetArray", 
                  "Arrays" -> <|"Array" -> CompressedData["
1:eJzt3DsOgkAUAMDVwngNW0s9gPEKeAJMtCIxwcLYeXShsyBoAPksMwWBjn37
PkDB5nxLrssQwn1dHJL0cczz9HlalReXNNvvskVxGrYBAAAqvA5D3wEx+pZX
8m7a7B8AANAl7xjNiBsAMfmca2YcADQT+wyNfX0Ac6KnVxMX+I1amQ57RVNy
BwAAAIAx8J1qPOr2wj79l/jShLwBvtEnoJ4agXFTowDd0E8BYFhmMRAzPQ6g
Hf8DBKZAfwKgb2YPtKeOxIB5iTHfY1xTKdZ1AQDgWQ/oh15DV+QSAAAA0J03
8xkkhA==
                    "]|>, 
                  "Parameters" -> <|
                   "Dimensions" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {10752}|>, "Inputs" -> <||>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                 "TrainedNet/Net/SoftNet/3" -> <|
                 "Type" -> "RandomArray", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>|>,
                 "TrainedNet/Net/SoftNet/4" -> <|
                 "Type" -> "NetArray", 
                  "Arrays" -> <|"Array" -> CompressedData["
1:eJytU0EOgkAMLB4I3/AL+gDjF/AFayInEhM4GG8+XTgQm83OdNjYBNjS0pm2
w/H+7IeDmc3dcuvT6zpN6X1rV+eRxvNpbJajrRn2uZhtT3/2FvnIfF5ee8Pz
uOj7PXEVE3Go4efzWQxhI66sTo6pzIjNi/FHPqvD4mov/6pTshr9IYyIY46p
8EG5rGaNnkrYiFfUL4tH2mJXhMv6RjNgekN4US/KbFROJTx1d9E+Uc/M2H+F
NKhyqa2jaIHloh737FjVTrQjtkeVnxr/vfsCCDrKvQ==
                    "]|>, 
                  "Parameters" -> <|
                   "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                "TrainedNet/Net/SoftNet/5" -> <|
                 "Type" -> "NetArray", 
                  "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJAFIxCkbBKBgF
o2AUjIIRBwDWLggC
                    "]|>, 
                  "Parameters" -> <|
                   "Dimensions" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {512}|>, "Inputs" -> <||>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                "TrainedNet/Net/SoftNet/6" -> <|
                 "Type" -> "RandomArray", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Net/SoftNet/7" -> <|
                 "Type" -> "Function", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                  "Inputs" -> <|
                   "Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                 "TrainedNet/Net/SoftNet/8" -> <|
                 "Type" -> "Function", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|
                    "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>|>,
                   "Inputs" -> <|
                   "Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                "TrainedNet/Net/SoftNet/9" -> <|
                 "Type" -> "Elementwise", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {10752}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                 "TrainedNet/Net/SoftNet/10" -> <|
                 "Type" -> "Elementwise", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {512}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                "TrainedNet/Net/SoftNet/11" -> <|
                 "Type" -> "Reshape", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{512, 21}]|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                "TrainedNet/Net/FeatureLayer/Catenate" -> <|
                 "Type" -> "Catenate", "Arrays" -> <||>, 
                  "Parameters" -> <|"Level" -> 1|>, 
                  "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                "TrainedNet/Net/SoftNet/12" -> <|
                 "Type" -> "Threading", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                  "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                   "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                "TrainedNet/Net/SoftNet/13" -> <|
                 "Type" -> "Aggregation", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                   "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Net/SoftNet/14" -> <|
                 "Type" -> "Compiled", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Net/SoftNet/15" -> <|
                 "Type" -> "Threading", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Net/SoftNet/16" -> <|
                 "Type" -> "Compiled", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Net/SoftNet/17" -> <|
                 "Type" -> "Reshape", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 128}]|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Loss/SoftProbs" -> <|
                 "Type" -> "Aggregation", "Arrays" -> <||>, 
                  "Parameters" -> <|
                   "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                "TrainedNet/Loss/SoftmaxLayer" -> <|
                 "Type" -> "Softmax", "Arrays" -> <||>, 
                  "Parameters" -> <|"Level" -> -1|>, 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Inputs", 
                  "Input1"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Inputs", 
                  "Input2"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Inputs", 
                  "Input3"] -> NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Inputs", 
                  "Input4"] -> NeuralNetworks`NetPath["Inputs", "Passengers"],
                 NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Inputs", 
                  "Input5"] -> NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Inputs", 
                  "Input6"] -> NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/7", "Inputs", "Mu"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/1", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/7", "Inputs", "Sigma"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/2", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/7", "Inputs", "Random"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/3", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/8", "Inputs", "Mu"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/4", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/8", "Inputs", "Sigma"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/5", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/8", "Inputs", "Random"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/6", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/9", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/7", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/10", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/8", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/11", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/9", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/15", "Inputs", "Weights"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/10", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/12", "Inputs", "Weights"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/11", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/12", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/FeatureLayer/Catenate", "Outputs", 
                  "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/13", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/12", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/14", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/13", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/15", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/14", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/16", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/15", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/17", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/16", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Loss/SoftProbs", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Net/SoftNet/17", "Outputs", "Output"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Loss/SoftProbs", "Outputs", "Output"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet/Loss/SoftmaxLayer", "Outputs", 
                  "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 305624, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 10, 10, 43, 33.564931`8.278460738894404}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|
       "Input" -> {{"very high", "low", 4, 2, "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "low", 2, 2, "large", "low"}, {
          "high", "low", 4, 4, "medium", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "very high", 2, 4, "medium", "medium"}, {
          "low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "high", 2, 2, "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "very high", 4, 2, "large", "medium"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "high", "low", 3, 4, "medium", "medium"}, {
          "medium", "high", 3, 2, "large", "medium"}, {
          "medium", "very high", 4, 2, "small", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "very high", 3, 2, "large", "medium"}, {
          "high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "medium", 2, 4, "medium", "low"}, {"very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "low", 4, 4, "large", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "very high", 2, 2, "large", "medium"}, {
          "low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "high", "high", 3, 2, "medium", "low"}, {
          "low", "high", 4, 4, "medium", "high"}, {
          "very high", "low", 4, 2, "small", "medium"}, {
          "very high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 4, 2, "small", "low"}, {
          "high", "very high", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "very high", "high", 2, 4, "large", "low"}, {
          "medium", "very high", 4, 2, "medium", "medium"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "medium", 3, 2, "small", "high"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 3, 4, "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "high", "very high", 3, 4, "small", "medium"}, {
          "high", "medium", 2, 2, "small", "medium"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "high", 2, 4, "small", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "very high", "high", 4, 2, "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 2, 2, "small", "low"}, {
          "low", "medium", 3, 2, "small", "medium"}, {
          "low", "very high", 4, 2, "medium", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 2, 4, "large", "high"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "medium", 4, 4, "medium", "medium"}, {
          "low", "low", 2, 4, "medium", "medium"}, {
          "very high", "low", 4, 4, "large", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 4, 4, "small", "medium"}, {
          "very high", "high", 4, 2, "large", "medium"}, {
          "high", "medium", 4, 2, "large", "medium"}, {
          "high", "high", 3, 4, "medium", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "low", 2, 2, "medium", "high"}, {
          "very high", "very high", 4, 4, "small", "medium"}, {
          "medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "high", 4, 4, "small", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "low", "medium", 2, 2, "small", "medium"}, {
          "low", "medium", 4, 4, "large", "high"}, {
          "high", "high", 4, 4, "medium", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "high", 3, 2, "small", "medium"}, {
          "medium", "very high", 4, 2, "medium", "high"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 3, 4, "medium", "low"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "medium", 3, 2, "medium", "high"}, {
          "medium", "high", 4, 2, "medium", "medium"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 2, 4, "small", "high"}, {
          "very high", "high", 3, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "medium", 3, 2, "large", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "low", 4, 4, "large", "low"}, {
          "high", "very high", 3, 2, "large", "high"}, {
          "low", "very high", 3, 2, "medium", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "medium", "very high", 3, 4, "medium", "high"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 4, 2, "large", "low"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 2, 2, "large", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 4, 2, "large", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "medium", 2, 4, "small", "high"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "high", 4, 2, "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "low", 2, 4, "small", "high"}, {
          "high", "low", 3, 2, "large", "low"}, {
          "high", "very high", 4, 4, "small", "low"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "low", 3, 4, "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "low", 3, 2, "medium", "high"}, {
          "high", "very high", 2, 2, "medium", "high"}, {
          "low", "high", 4, 2, "medium", "high"}, {
          "very high", "high", 3, 2, "large", "medium"}, {
          "very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "very high", "very high", 3, 4, "medium", "high"}, {
          "medium", "medium", 2, 2, "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "medium", "medium", 3, 2, "medium", "medium"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "low", 2, 2, "small", "high"}, {
          "very high", "high", 3, 2, "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "very high", 4, 4, "small", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "medium", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "low", "high", 3, 4, "large", "low"}, {
          "low", "high", 4, 2, "small", "high"}, {"very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "low", 2, 4, "large", "medium"}, {
          "high", "very high", 4, 2, "medium", "low"}, {
          "high", "very high", 4, 4, "large", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "high", 2, 2, "small", "medium"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 3, 4, "medium", "medium"}, {
          "medium", "medium", 3, 2, "small", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 4, 2, "medium", "medium"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "low", 4, 2, "large", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "medium", 3, 4, "small", "high"}, {
          "very high", "low", 4, 2, "large", "medium"}, {
          "very high", "high", 4, 4, "large", "medium"}, {
          "low", "medium", 3, 4, "medium", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "high", "low", 4, 2, "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 4, "small", "low"}, {
          "very high", "high", 4, 2, "large", "low"}, {
          "medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "high", 3, 4, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "medium", 3, 4, "medium", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "low", 4, 4, "small", "low"}, {
          "high", "very high", 4, 2, "medium", "medium"}, {
          "very high", "medium", 2, 4, "large", "high"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 2, 4, "small", "low"}, {
          "low", "medium", 3, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 3, 2, "small", "low"}, {
          "very high", "medium", 4, 4, "medium", "low"}, {
          "low", "low", 3, 2, "small", "low"}, {
          "very high", "medium", 4, 2, "large", "high"}, {
          "high", "medium", 3, 2, "medium", "medium"}, {
          "low", "very high", 2, 2, "small", "low"}, {
          "high", "very high", 3, 4, "large", "high"}, {"medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "high", 3, 2, "large", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "low", "very high", 2, 4, "medium", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 2, 2, "small", "medium"}, {
          "high", "high", 4, 4, "small", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "low", 3, 4, "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "very high", "very high", 3, 2, "small", "high"}, {
          "very high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "high", 2, 4, "small", "low"}, {
          "low", "medium", 3, 2, "medium", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "medium", "very high", 3, 4, "large", "low"}, {
          "very high", "medium", 4, 2, "large", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "medium", "medium", 4, 2, "medium", "medium"}, {
          "medium", "medium", 3, 2, "large", "high"}, {
          "very high", "very high", 2, 4, "medium", "medium"}, {
          "low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "very high", "low", 4, 2, "small", "low"}, {
          "medium", "medium", 4, 4, "medium", "high"}, {
          "high", "high", 2, 4, "large", "low"}, {
          "high", "medium", 4, 4, "large", "high"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 3, 2, "medium", "low"}, {
          "medium", "low", 3, 2, "small", "medium"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "high", 3, 4, "small", "low"}, {
          "very high", "very high", 3, 4, "small", "medium"}, {
          "high", "low", 4, 2, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "low", 2, 2, "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "very high", "very high", 4, 2, "medium", "medium"}, {
          "very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "medium", 4, 2, "large", "medium"}, {
          "medium", "medium", 2, 4, "large", "medium"}, {
          "medium", "high", 4, 4, "small", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "low", "high", 3, 2, "medium", "low"}, {"medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "high", 3, 4, "medium", "high"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 4, 2, "small", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "very high", "high", 4, 4, "large", "low"}, {
          "high", "high", 4, 2, "small", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "medium", 4, 2, "small", "high"}, {"high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 3, 2, "large", "low"}, {
          "very high", "very high", 4, 2, "medium", "high"}, {
          "high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "low", 3, 2, "small", "medium"}, {
          "high", "very high", 3, 2, "small", "medium"}, {
          "high", "medium", 2, 4, "medium", "high"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "high", "low", 2, 4, "small", "medium"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "high", 2, 4, "small", "medium"}, {
          "medium", "low", 4, 4, "medium", "high"}, {
          "low", "medium", 4, 4, "medium", "medium"}, {
          "high", "very high", 4, 4, "medium", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "medium", "high", 4, 2, "large", "high"}, {
          "very high", "very high", 4, 4, "large", "high"}, {
          "medium", "low", 2, 2, "small", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "medium", "low", 4, 2, "small", "medium"}, {"very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "high", "high", 2, 2, "large", "medium"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "high", 2, 2, "large", "low"}, {
          "medium", "high", 4, 2, "small", "medium"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "very high", 2, 4, "medium", "high"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "low", 4, 4, "large", "low"}, {
          "very high", "high", 2, 2, "large", "high"}, {
          "high", "high", 2, 2, "medium", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "low", 4, 4, "medium", "low"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "very high", "low", 2, 4, "medium", "high"}, {
          "high", "high", 3, 4, "large", "medium"}, {
          "medium", "medium", 4, 2, "medium", "low"}, {
          "very high", "very high", 2, 4, "small", "medium"}, {
          "high", "high", 3, 4, "small", "high"}, {
          "high", "medium", 4, 2, "medium", "medium"}, {
          "low", "medium", 3, 2, "large", "low"}, {"medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 4, 2, "large", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}}, 
        "Output" -> {
         "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "good", "very good", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "very good", "very good", "acceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "very good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "very good", "unacceptable", "unacceptable", "unacceptable",
           "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "very good", "acceptable", 
          "unacceptable", "acceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "good", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "good", "acceptable", 
          "unacceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "very good", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", "good", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "good", "unacceptable", "unacceptable",
           "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "acceptable", "acceptable"}|>, 
      "Predictions" -> {
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "good", "very good", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", "very good", 
        "very good", "acceptable", "acceptable", "acceptable", "unacceptable",
         "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "very good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", 
        "acceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "good", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "good", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable"}, "LogProbabilities" -> CompressedData["
1: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
z89SVfOr0PnZnMgb7w3cjIFn17EPSN85Hlydiux3Yh1lv+crraDduMAg/ijm
1/Zw9Ws+CacJ3eZkWbR+ZpQVLRFH+nIE+//hL33F4IjRa79bXzQdh3GwPo1O
vlRRRNenr8KouokZ1cwdBcIzUshnOYdDM2AdVVl3vcJFTAMckNJoR30Cft3C
6BlGv/Djm6mPGBwhNPNI+QoHul5jRkOa32JHiKnfUqqI1Zsf4LqQNMzAdeKq
pnOaCM/BCj03MyG/F9P9Gzu6b2MdSPE8v35ieJqpj/+r//xf/ZdzwmP9g6aq
ZHpZkakkXN/dm/umisL7tS8kuEhPnb3/nadl0lrxOZ3C16Zyyg63L9L5wlLu
HTp/vqm2D58/E+0jK9H5XFaN0zFfN/Nf62fimZ8f1nlE8RLh319Q3CTxUr6J
VDxWKVAN9TzX1FiAKzJEXsor9k/4P/qzvnR/Tb7jn3IzqI9mnDLkfG6PJJvE
LvfVw/1rb83qyBZU/e35ShH9frutimXo+aA5Edrv4fN2FuXt6LnKJVP662Ed
S5b7XUR1Z1juxpWoDjUtc8X1Z1lYFqw/Df/VP5qeR/mFvEvtl9k/kzf265No
Qb/063+dfxzbZrmV6zudjErm+qJ+rv42Zz/U7w1ULtQTg/j5XX3C5G/+9fFk
KR5UfkjFN3//kOkbMn1ETfNi0h2oEbtTKfsPFyzD8+zjApzPZBVFlpXL3iGS
ePG43n1YLKWB5rlU2c/B7+OLH2ZdDH47h5Nj3pqHEGczg9mIH5mxLO81rj9/
57/1dBzy84M4Eyf0/I/WJ3Z+HxElU/YW24jA9Q10acNRHdhcfz9NENZZPvMP
TJOF103l56pbVTjkuBd+yrLQvie0tk8cD/VrU1shF/UVR0724j5jdtkfYQVC
xkDo4xM42oLq+uOvET+6fr9SFgFx8tk3qm11ri5YL5nzycDN5he/8fMH468v
BlmhKH6DB7dYdsD4TY8ysEJxazxbTqWUbfZLxzL6ltG7jM7Nna1LHp74ghDa
O/MfpD+n/lm+AenuQMnqZ4hvsgpij+tDfn4Rroz5mWPUjvvXr9fnjopD/de5
z9UpHuavhW6nOhd1FpKExgL3TqjbfH27FqHvIC4fORshd6+FuNcwgOuLzLrL
AWh+t7WPjZD+vKO/fespr2uEnu0CDnqfY+AeXAcoBp2bgnBw3LWz/zXcn/IR
svRRagQpqZe7axusX3RL5CO2CXJ+9b+YflcWzftMP4w/fzN9JyZ//66/z4w2
s3pKVkN8t9D6uVyU0pUitH7+3fmsT87/3f9k5i3cReHsd/qCwTc/fkdo/I/S
fFiw2FmqBeqryzaUvpJRo/pOGccpnRXAc7Z7ZR5AsOjzrSPrPTCOyqSzMf+V
+UQUR5pEES8qqf7NH3T/JsOW6lMy62PyKaPvmTp6QWfyN4RruUonf3R+3RSf
8AOdX0/fTOxGOOeps+ReHUwjjsU1Y/1xZpDq7zKjUfV3Xii3tWKMzg8TJSl9
l/EPFY+Pj3hi/Nyl8ZNB40f34hYjxG9faq6ah7gOkd5ecod9PSeD1P2+ai0m
zeT7ReXJvp4y4OfWnDF0Lnjl8+xylblrSLu8nXb5cJ/PpRfZo3NCfn5r2kH5
paKQ8kPISKpI5fapsI6YMF3o4SgpFnTTS/Tkh1/ju4DtJfkOCuDt+yX1B8WH
yF0qnDVamk1ksou+t3ueJvj7xaq7qL8w8o3qL3Dp77eY8QbMT/+//vTYcxvj
QEpvDvYvPz8z348wPO23NCoe6cNDtD58EZOD/XqZ1oeqbyNr18R9Jh4uGML9
paf5R+XZ0M7fIk7Io/7U787XdtfOx+//gF4fLVDBnB8wIxNvBTrvFFD9pUjX
X2d1qLgwoOuwMp13VUbwvgJ9X5/+/dijdrxPRRtQeQDaLdwzfIAD7RZiK23m
nqcNvPqig5Fd+fHP4J6Jg5nZEfmov15L99erp2XgvPdqJvWdxwXB6cFf2PpA
940/QH0QbqpgJep7ZF2XBkJm0WTjodYgdH789PR9fH78op1lkw/xv3bpSTha
/It/mfzD+ON35xvM+aB6YWy3IawDOy+KnewxTCdba9buzBSfDkKennllCOtG
ux2y+Lup4LKx2+i7Kc/d8/D3VNfV462DJSxA5gu/htfd54mg79T3L+e56Psk
czB0hTMOraeW1bh6Zu8Xwm+nMj4/tUn5EIH8vL3rhDUb4uER9p90hQGtJz/T
67en/cfEN1M3MfzI6MQn06yTVntmEFvalkqg+H2faCSMcKYfViuE+nv/9f3A
7/iN4RP+9/Pft52h6ri6qoUQ1+nF8V97PTQQ8cQ+V6pPxd9fJ+j8eJNe/9HT
YVnjnC8QJkqnsP0WbiqfiHDOjE/KZiYj/4+41mP/BzgegH43BQvcF6i4QxzH
x+f+cQ/av+s5ZX9LuUoRhO8YJ+44xM+VJ/Q1EH69Pws1qkP8Rn6InItwO+Pg
wdRCN31w5dHRBuTf9/szxLdC/xaIKZoHSxgBo+tJ5qjOY87PGDwxOpepZ/n3
5073/6/RflKoDGpB59t3/F4s0IH1R+yNtuVRqiZgZddSOJr/K38xeYvJY8js
vBt2Fa40PpjxGx1vXa9FulH/ea+HugXqPz9epon7z5GXCr1R/8S9xtBrwvvz
xGe1P7B9NPVK8fdzNhvnTED4YHQno0P59edKTrmvk243yYyD1+IXv16lBQbl
KjW3FVuA/wcNKZ+6
       "], 
      "CountMatrix" -> {{250, 0, 1, 0, 0}, {8, 56, 0, 0, 0}, {0, 3, 13, 0, 
       0}, {0, 1, 1, 13, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwV0mlrCAAAgOHZzGYHZmxtMZsd2Bizma3NNmGbndoiRzkm5BzKfZQjUcqV
o5AjoYRCSCRKCAm5z3LmKleuxOPD0/sH3qSGxrppTQICAn7xv4EE0ZRgQggl
jHAiiKQVUbQmmja0JYZY4ogngUSSSCaFVNLoTBfSyaAr3cikOz3IIpsccskj
nwIK6UMRxZTQl1LKKKeCSqqopoZaBlFHPcMYzghGMorRjKGBsYxjPBOYyCQm
M4WpNDKdGcxkFrOZw1zmMZ8FLGQRi1nCUpaxnBWsZBWrWcNa1rGeDWxkE5vZ
wla2sZ0d7GQXu9nDXvaxnwMc5BCHOcJRjnGcE5zkFKc5w1nOcZ4LXOQSl7nC
Va5xnRvc5Ba3ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW97xng985BOf+cJX
vvGdH/zkN3/4S6Cxg2hKMM0IIZTmhBFOBJG0oCVRRBNDLHHE0472JNCBRJLo
SDIppJJGJ7qQTgaZZNGTbHLoRS69ySOfAgopopgS+tGfAZRSRjkDqaCSKqqp
oZY66hnMEIbyD/o9aSQ=
         "], {}, {300}, {}, {}}, {{6, 31, 68, 69, 212, 239, 250, 257}, {15, 
         29, 50, 53, 58, 66, 73, 86, 87, 88, 93, 104, 110, 115, 133, 135, 139,
          141, 148, 153, 154, 163, 165, 169, 176, 177, 181, 185, 187, 190, 
         196, 202, 206, 208, 226, 233, 240, 246, 254, 256, 272, 274, 276, 280,
          283, 296, 301, 314, 321, 322, 336, 337, 340, 343, 345, 
         346}, {}, {}, {}}, {{}, {116, 198, 277}, {14, 24, 27, 39, 67, 81, 
         127, 158, 170, 172, 192, 195, 304}, {}, {}}, {{}, {252}, {303}, {9, 
         28, 34, 55, 84, 85, 92, 100, 128, 138, 142, 225, 317}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "good", "very good"}, "Weights" -> 
      SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.0005702023121387283, "SingleEvaluationTime" -> 
      0.00473975, "Version" -> {13.1, 0}|>]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8684443883703527`*^9, 3.868444628441779*^9, 3.8684447374621*^9, 
   3.868444798788579*^9, {3.8684450567305193`*^9, 3.8684450634502573`*^9}, 
   3.86844514160921*^9, {3.868445216184236*^9, 3.868445245788845*^9}, 
   3.86844550286349*^9, 3.868445684338311*^9, 3.868445860318709*^9, 
   3.868446035571615*^9, 3.8684462387314863`*^9, 3.868446531804*^9, 
   3.868446992824225*^9, 3.868447029560577*^9, 3.8684986039156446`*^9, 
   3.8685204529294043`*^9, 3.8685215146011333`*^9, 3.8685301612497177`*^9, 
   3.868530590591856*^9, 3.86853261496434*^9, 3.8685338436228123`*^9, {
   3.868535643570589*^9, 3.868535653266458*^9}, 3.86853620504729*^9, 
   3.868536647435892*^9, 3.8685368910591183`*^9, 3.868536956624065*^9, 
   3.868537492992119*^9, {3.8685379158969793`*^9, 3.868537942476584*^9}, 
   3.8685921415849247`*^9, 3.868599486276321*^9, 3.86860013955028*^9, 
   3.8686009455378437`*^9, 3.868601165154408*^9, 3.868602872755411*^9, 
   3.868604168888167*^9, 3.8686705600345984`*^9, 3.868672040003127*^9, 
   3.868681397928339*^9, 3.868938938636381*^9, 3.8689425626275787`*^9, 
   3.868943546605094*^9, 3.86894388526086*^9, 3.868944114037065*^9, 
   3.868944544993232*^9, 3.868945583119274*^9, 3.868945795964314*^9, 
   3.868946090455439*^9, 3.868946301277932*^9, 3.868946812077159*^9, 
   3.868947529554852*^9, 3.868948234247651*^9, 3.868949916263268*^9, 
   3.86895035411582*^9, 3.868950591820963*^9, 3.868955715946851*^9, 
   3.8689590912506847`*^9, 3.868961292873067*^9, {3.868964211642971*^9, 
   3.868964271971294*^9}, 3.8689658659417048`*^9, 3.868975187773774*^9, 
   3.868975807387333*^9, 3.869030236615261*^9, 3.869030576485284*^9, 
   3.8690318983554163`*^9, 3.8690322955085077`*^9, 3.8690328949105043`*^9, 
   3.869033235901104*^9, 3.869033495671227*^9, 3.869034576712833*^9, 
   3.869035610130576*^9, 3.8690361433581657`*^9, 3.869036324430427*^9, 
   3.869036425981944*^9, 3.8690403482379503`*^9, 3.869040564944063*^9, 
   3.869041421524418*^9, 3.869041561340787*^9, 3.869041673839971*^9, 
   3.8690421991522627`*^9, 3.869042855424157*^9, 3.86904326803651*^9, 
   3.869043554339016*^9, 3.869043746795423*^9, 3.869105420473537*^9, 
   3.869105653283306*^9, 3.869105982326734*^9, 3.869107184493881*^9, 
   3.869108234728773*^9, 3.869111749761622*^9, {3.869111919016803*^9, 
   3.8691119399060993`*^9}, 3.869112356812172*^9, 3.869112702187408*^9, {
   3.869112904171596*^9, 3.869112930067875*^9}, {3.8691133852077427`*^9, 
   3.869113414126828*^9}},
 CellLabel->
  "Out[443]=",ExpressionUUID->"6b9db6b7-aa82-457e-bc9f-95b378af287a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["trainedSoftNet"], "Input",
 CellChangeTimes->{{3.8691136997880087`*^9, 3.869113703177609*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"cc642641-389a-452b-ba6a-31dc0fd4a3b1"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"TrainedNet\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{0, -15.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999464102052`, 
                    2.0000000535897935`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999998928204112`, 
                    4.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999998660255143`, 
                    5.000000053589792}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Output\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {8.038469108735353*^-8, 
                    2.999999999999999}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019002`}, {-1.479056899628362, 
                    1.5628292151185497`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-1.4559016434844814`, 
                    2.088196640135746}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999931673012, 
                    2.5500000388526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-1.4499999196153084`, 
                    3.0000000388525994`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318316}, {-1.4499999075576047`, 
                    3.4500000388525995`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396938, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406268, 
                    2.459674643436304}, {-1.4559015946211251`, 
                    3.911803437885724}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829577}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-0.44999991961530866`, 
                    3.000000012057703}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999464102052`, 
                    2.0000000535897935`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998928204112`, 
                    4.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998660255143`, 
                    5.000000053589792}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, ImagePadding -> 
                    {{7., 7.}, {10., 5.}}, ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999196153085, 3.000000026794896}, {
                    8.038469108735353*^-8, 2.999999999999999}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.479056899628362, 
                    1.5628292151185497`}, {-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4559016434844814`, 
                    2.088196640135746}, {-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999931673012, 
                    2.5500000388526}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999196153084`, 
                    3.0000000388525994`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999075576047`, 
                    3.4500000388525995`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051027, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4559015946211251`, 
                    3.911803437885724}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102057, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999991961530866`, 
                    3.000000012057703}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999196153085, 
                    3.000000026794896}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999196153085, 
                    3.000000026794896}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999196153085, 3.000000026794896}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"TrainedNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["TrainedNet", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999464102052`, 2.0000000535897935`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999196153082`, 3.000000053589793}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998928204112`, 4.000000053589793}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998660255143`, 5.000000053589792}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{8.038469108735353*^-8, 2.999999999999999}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-1.9999999464102052`, 
                    2.0000000535897935`}, {-1.9999999196153082`, 
                    3.000000053589793}, {-1.9999998928204112`, 
                    4.000000053589793}, {-1.9999998660255143`, 
                    5.000000053589792}, {8.038469108735353*^-8, 
                    2.999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {177.49999999999994`, 322.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.499995578841975`, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "TrainedNet" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {10752}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{10752}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {10752}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/3" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>|>,
                     "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {512}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{512}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {512}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "RandomArray", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Distribution" -> NeuralNetworks`ValidatedParameter[
                    NormalDistribution[0, 1]]|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/8" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Slot["Mu"] + 
                    Slot["Sigma"] Slot["Random"]& ), 
                    "Net" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[# + #2 #3& ], 
                    "Broadcasting" -> NeuralNetworks`ValidatedParameter[-1]|>,
                     "Inputs" -> <|"Mu" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Sigma" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Random" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>|>,
                     "Inputs" -> <|"Mu" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT], 
                    "Sigma" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT], "Random" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {10752}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{10752}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/10" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {512}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{512, 
                    21}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{10752}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT], 
                    "Weights" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_572ddd96_70fe_4417_8084_83b93f8bf9df", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
kepE+I3/A8SM2ak=
                    "]]|>, "orcInstance" -> 94815920, "orcModuleId" -> 
                    95299456, "targetMachineId" -> 75835344|>, 
                    139782730577728, 139782730577584, 139782730577664, 
                    139782730571776, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b95dc1a5_c744_488c_9658_959ead1e26ec", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
1igs/Duzqb/z
                    "]]|>, "orcInstance" -> 94179472, "orcModuleId" -> 
                    76310064, "targetMachineId" -> 96070272|>, 
                    139782730564128, 139782730563728, 139782730563808, 
                    139782730563584, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {512}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0d3040909256d940", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{512}, NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 
                    128}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{512}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 128}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 128}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Mu"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Sigma"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Random"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"high\"", "\"medium\"", "\"low\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"low\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {3, 4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4,
                     "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 2, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"small\"", "\"large\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"low\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Output" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"acceptable\"", "\"good\"", 
                    "\"very good\""}, "InputDepth" -> 1, "Multilabel" -> 
                    False, "Dimensions" -> 4, "$Rank" -> 0, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "TrainedNet"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "TrainedNet"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.869113703803846*^9},
 CellLabel->
  "Out[445]=",ExpressionUUID->"928f45ed-9ea8-4d22-ac0e-5fdc45c895b4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ConvertRandomWeightsToDeterministicWeights", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8691136795070877`*^9, 
  3.869113694945509*^9}},ExpressionUUID->"2a6819e4-9a46-4a3b-83f3-\
d44623582bb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GetNetArrays", "[", "trainedSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.869113633000244*^9, 3.8691136446014853`*^9}},
 CellLabel->
  "In[444]:=",ExpressionUUID->"ba6844d1-752a-4d40-a39b-d6c1360536e5"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"TrainedNet/Net/SoftNet/1\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{
       RowBox[{
         StyleBox[
          TagBox["NetArrayLayer", "SummaryHead"], "NonInterpretableSummary"], 
         
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
                  Automatic, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Dimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Dimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Dimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Dimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Dimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Array\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Array\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Array"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Array\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Array"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                  BaselinePosition -> {2, 1}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 3}]}, 
            Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
           Baseline, 
           BaseStyle -> {
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("NetArrayLayer[<>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"TrainedNet/Net/SoftNet/2\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{
       RowBox[{
         StyleBox[
          TagBox["NetArrayLayer", "SummaryHead"], "NonInterpretableSummary"], 
         
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
                  Automatic, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Dimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Dimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Dimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Dimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Dimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Array\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Array\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Array"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Array\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Array"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 10752\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                  BaselinePosition -> {2, 1}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 3}]}, 
            Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
           Baseline, 
           BaseStyle -> {
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("NetArrayLayer[<>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"TrainedNet/Net/SoftNet/4\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{
       RowBox[{
         StyleBox[
          TagBox["NetArrayLayer", "SummaryHead"], "NonInterpretableSummary"], 
         
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
                  Automatic, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Dimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Dimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Dimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Dimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Dimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Array\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Array\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Array"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Array\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Array"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                  BaselinePosition -> {2, 1}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 3}]}, 
            Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
           Baseline, 
           BaseStyle -> {
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("NetArrayLayer[<>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"TrainedNet/Net/SoftNet/5\"\>", "\[Rule]", 
    TagBox[
     TemplateBox[{
       RowBox[{
         StyleBox[
          TagBox["NetArrayLayer", "SummaryHead"], "NonInterpretableSummary"], 
         
         StyleBox["[", "NonInterpretableSummary"], 
         DynamicModuleBox[{Typeset`open = False}, 
          PanelBox[
           PaneSelectorBox[{False -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = True), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
                  Automatic, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 1}], True -> GridBox[{{
                 PaneBox[
                  ButtonBox[
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                   ButtonFunction :> (Typeset`open = False), Appearance -> 
                   None, Evaluator -> Automatic, Method -> "Preemptive"], 
                  Alignment -> {Center, Center}, 
                  ImageSize -> {Automatic, 24}], 
                 StyleBox[
                  GraphicsBox[
                   
                   GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {
                    1.5, 1}, {1, 0}}, {{
                    Opacity[0.3], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
                  CacheGraphics -> False], 
                 GridBox[{{
                    ItemBox[
                    StyleBox["Parameters", Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Dimensions\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Dimensions\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Dimensions"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Dimensions\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Dimensions"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Arrays", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Array\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Array\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Array"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Array\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Array"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 512\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                  BaselinePosition -> {2, 1}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
               GridBoxAlignment -> {"Rows" -> {{Top}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridFrameMargins -> {{0, 0}, {0, 0}}, 
               BaselinePosition -> {1, 3}]}, 
            Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
           Baseline, 
           BaseStyle -> {
            ShowStringCharacters -> False, NumberMarks -> False, 
             PrintPrecision -> 3, ShowSyntaxStyles -> False}]], 
         StyleBox["]", "NonInterpretableSummary"]}]},
      "CopyTag",
      DisplayFunction->(#& ),
      InterpretationFunction->("NetArrayLayer[<>]"& )],
     False,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.869113645138493*^9},
 CellLabel->
  "Out[444]=",ExpressionUUID->"ed6f76dd-2698-43ab-bb53-516aef41e94e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 3.868447049013842*^9}, {
  3.8684475100383997`*^9, 
  3.868447512030362*^9}},ExpressionUUID->"161daabc-615f-418f-a171-\
832b4a2218d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}, {
   3.8684988741865396`*^9, 3.868498874592616*^9}, {3.868499185605513*^9, 
   3.8684992093586597`*^9}, 3.868501716401897*^9, {3.868514975845937*^9, 
   3.868514978733061*^9}, {3.868533857047714*^9, 3.8685338619606743`*^9}, {
   3.868592161602441*^9, 3.8685921624093037`*^9}, {3.868937316229151*^9, 
   3.8689373167579613`*^9}, {3.868937496012*^9, 3.86893752144172*^9}, {
   3.868937596537734*^9, 3.868937603616037*^9}, 3.868937747599498*^9, 
   3.868938118528597*^9, {3.868939027026972*^9, 3.8689390465517597`*^9}, {
   3.868976302381322*^9, 3.868976307139587*^9}},
 CellLabel->
  "In[379]:=",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt", "=", 
   RowBox[{"HardNetClassify", "[", 
    RowBox[{"hnf", ",", "featureLayer", ",", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}], ",", 
     "testData", ",", "\"\<Acceptability\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval", "=", 
  RowBox[{"HardNetClassifyEvaluation", "[", "hncwt", "]"}]}]}], "Input",
 CellChangeTimes->{{3.868518101019845*^9, 3.8685181135715637`*^9}, {
   3.868530047989657*^9, 3.868530063111247*^9}, {3.868530190826717*^9, 
   3.868530196600292*^9}, {3.86853144384466*^9, 3.868531451560924*^9}, {
   3.868532766824644*^9, 3.8685327949413958`*^9}, 3.868532945602283*^9, {
   3.868533874444491*^9, 3.8685338747929583`*^9}, {3.868604441984084*^9, 
   3.8686044511364*^9}, {3.8689602387396393`*^9, 3.8689602481032057`*^9}, {
   3.868960681250607*^9, 3.8689606824317408`*^9}, {3.868963143100669*^9, 
   3.868963145210929*^9}, 3.86896321844506*^9, {3.868976255892177*^9, 
   3.868976256410039*^9}, 3.8689764091880903`*^9, {3.869034393625832*^9, 
   3.86903439400725*^9}, {3.869043275878063*^9, 3.8690432774187603`*^9}},
 CellLabel->
  "In[380]:=",ExpressionUUID->"f5f447dd-5588-4178-92cf-69aee019ae5a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", 
          RowBox[{"First", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "251"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", 
          RowBox[{"First", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "64"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", 
          RowBox[{"First", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"good\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "16"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", 
          RowBox[{"First", "[", "$Failed", "]"}]}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"very good\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "15"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8690345877152042`*^9, 3.869035626521063*^9, 3.869036152783195*^9, 
   3.8690363341385193`*^9, 3.869036436421172*^9, 3.869040357729239*^9, 
   3.869040576634907*^9, 3.869041433742779*^9, 3.8690415722677*^9, 
   3.8690416867128763`*^9, 3.86904220858243*^9, 3.8690432824600554`*^9, 
   3.869043562445753*^9, 3.869043754721044*^9, {3.869047065454893*^9, 
   3.869047090738934*^9}, 3.8690471518063593`*^9, 3.869047184930591*^9, 
   3.8690472207124777`*^9, 3.8690472595671577`*^9, 3.8690473069192467`*^9, 
   3.869047356173808*^9, 3.869104541974283*^9, 3.8691049803090754`*^9, 
   3.869105042273468*^9, 3.869105162486998*^9, 3.8691054315005198`*^9, 
   3.8691056671929417`*^9, 3.869105994037698*^9, 3.869107195753681*^9, 
   3.8691117585270443`*^9, 3.8691119669156637`*^9},
 CellLabel->
  "Out[381]=",ExpressionUUID->"d7aa101a-e2ba-4d02-b03b-db53113b6343"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt2", "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"trainedHardNet", "=", 
       RowBox[{"HardNet", "[", "trainedSoftNet", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Association", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Prediction\>\"", "->", 
           RowBox[{"trainedHardNet", "[", 
            RowBox[{
             RowBox[{"KeyDrop", "[", 
              RowBox[{"{", "\"\<Acceptability\>\"", "}"}], "]"}], "@", "#"}], 
            "]"}]}], ",", 
          RowBox[{"\"\<Target\>\"", "->", 
           RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}]}]}], "}"}], "]"}],
        "&"}], "/@", 
      RowBox[{"Normal", "[", "testData", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval2", "=", 
  RowBox[{"HardNetClassifyEvaluation", "[", "hncwt2", "]"}]}]}], "Input",
 CellChangeTimes->{{3.868975856473425*^9, 3.868975907241156*^9}, {
  3.8689759541160727`*^9, 3.868975992561887*^9}, {3.86897610020459*^9, 
  3.8689762477878838`*^9}, {3.86897641471817*^9, 3.8689764578527117`*^9}, {
  3.8690344006348124`*^9, 3.869034400937387*^9}, {3.86904291870931*^9, 
  3.8690429575864353`*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"431bf369-571a-4438-9ea5-687fe2d08638"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.9653179190751445`"}], ",", 
   RowBox[{"\<\"Results\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"unacceptable\"\>"}], 
         ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "247"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "59"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"good\"\>"}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"good\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "16"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"very good\"\>"}], ",", 
         
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"very good\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "12"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"good\"\>"}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"very good\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "3"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"good\"\>"}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "3"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "3"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"good\"\>"}], ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"very good\"\>"}], ",", 
         
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "1"}], ",", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{
         RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"unacceptable\"\>"}], 
         ",", 
         RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
        "\[RightAssociation]"}], "\[Rule]", "1"}]}], 
     "\[RightAssociation]"}]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.869034589981593*^9, 3.869035628358029*^9, 3.869036154844352*^9, 
   3.869036336039586*^9, 3.8690364370454893`*^9, 3.869040359402629*^9, 
   3.869040578854313*^9, 3.869041436196286*^9, 3.8690415773217983`*^9, 
   3.869041690219269*^9, 3.86904221419751*^9, {3.869042932618347*^9, 
   3.869042959198248*^9}, 3.869043287868927*^9, 3.869043565179612*^9, 
   3.8690437567886467`*^9, 3.869104986359107*^9, 3.8691051668148937`*^9, 
   3.869105434085964*^9, 3.869105669300963*^9, 3.869105996859831*^9, 
   3.869107199042075*^9, 3.869111759364867*^9, 3.869111970506278*^9},
 CellLabel->
  "Out[383]=",ExpressionUUID->"85ac24af-18c0-4d25-8e8b-2011592717c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ExtractWeights", "[", "trainedSoftNet", "]"}], "]"}], "]"}], 
      "/", "8"}], "/", "1024"}], "//", "N"}], ",", "\"\<Kilobytes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868965930761516*^9, 3.868965950743415*^9}, {
  3.8689659831088343`*^9, 3.868965987890936*^9}, {3.868966862559198*^9, 
  3.868966873437675*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"30f555f6-ae5b-4dfd-bdc5-755388129f83"],

Cell[BoxData[
 TemplateBox[{"1.3125`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.868965937053772*^9, 3.868965951415412*^9}, {
   3.86896598435365*^9, 3.868965988537725*^9}, 3.8689668742972393`*^9, 
   3.868975214076693*^9, 3.8690319344803658`*^9, 3.869042968544685*^9, 
   3.869105674742872*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"9d180d6e-7b59-47c2-af46-16217911e963"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HardNetBooleanExpression", "[", 
   RowBox[{"hnf", ",", "inputSize"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.868966922827866*^9, 3.8689669876550913`*^9}, {
  3.869031937904567*^9, 3.869031943129614*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"e6885692-13f6-4974-9b2c-afe8fa234cc6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train standard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868966010330719*^9, 
  3.8689660115546227`*^9}},ExpressionUUID->"85881d34-aa2c-47a4-9cef-\
231d0c092462"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"trainData", "->", "\"\<Acceptability\>\""}], ",", 
    RowBox[{"Method", "->", "\"\<NeuralNetwork\>\""}], ",", 
    RowBox[{"PerformanceGoal", "->", "\"\<Memory\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868966042398858*^9, 3.868966127319048*^9}, {
  3.8689661632395573`*^9, 3.8689661961414433`*^9}, {3.868966341118702*^9, 
  3.868966368883732*^9}, {3.8689667784326067`*^9, 3.868966778957925*^9}},
 CellLabel->
  "In[431]:=",ExpressionUUID->"0aed3bad-4fce-478f-b2bd-61ab2c146048"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"acceptable\"", "\"good\"", 
                    "\"unacceptable\"", "\"very good\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "6", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Nominal"}, 10], "Tooltip"]& ], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   ",", "\",\"", "\"acceptable\"", "\"good\"", 
                    "\"unacceptable\"", "\"very good\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["1382", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 1382, "ClassNumber" -> 4, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "PurchasePrice" -> <|"Type" -> "Nominal"|>, 
           "MaintenanceCost" -> <|"Type" -> "Nominal"|>, 
           "Doors" -> <|"Type" -> "Nominal"|>, 
           "Passengers" -> <|"Type" -> "Nominal"|>, 
           "Cargo" -> <|"Type" -> "Nominal"|>, 
           "Safety" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["FromDataset"], 
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|
               "FeatureNames" -> {
                 "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
                  "Cargo", "Safety"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 6|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {
                 "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal"}, 
                "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         False, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
           "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6)" -> <|
            "Weight" -> 6, "Type" -> "NumericalVector"|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 1382, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>, 
                    "f4" -> <|"Type" -> "Nominal"|>, 
                    "f5" -> <|"Type" -> "Nominal"|>, 
                    "f6" -> <|"Type" -> "Nominal"|>|>, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Sequence", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                   "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 2890808244938110393|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6|>|>, 
                    "Index" -> {<|
                    "high" -> 1, "low" -> 2, "medium" -> 3, "very high" -> 
                    4|>, <|"high" -> 1, "low" -> 2, "medium" -> 3, 
                    "very high" -> 4|>, <|2 -> 1, 3 -> 2, 4 -> 3, Interval[{5, 
                    DirectedInfinity[1]}] -> 4|>, <|
                    2 -> 1, 4 -> 2, Interval[{5, 
                    DirectedInfinity[1]}] -> 3|>, <|
                    "large" -> 1, "medium" -> 2, "small" -> 3|>, <|
                    "high" -> 1, "low" -> 2, "medium" -> 3|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {13.1, 0}, "ID" -> 
                    4504524607625751657, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6, 
                    "SetSize" -> {4, 4, 4, 3, 3, 3}|>|>, 
                    "Boundaries" -> {{-0.5, -0.25, 0., 0.25, 
                    0.5}, {-0.5, -0.25, 0., 0.25, 0.5}, {-0.5, -0.25, 0., 
                    0.25, 0.5}, {-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}}, "Version" -> {13.1, 0}, "ID" -> 
                    4511035240401077812, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>|>]}, 
                   "Invertibility" -> "Approximate", "StructurePreserving" -> 
                   True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                "DirectTraining", "BatchProcessing" -> Automatic, 
                "Model" -> <|
                 "RotationMatrix" -> {{-0.18180837299497768`, \
-0.5191050362589946, -0.3841046152539792, -0.5681753733658641, 
                   0.12529108395561656`, 0.45980236054401374`}, {
                   0.19483230814806896`, -0.11552149012629362`, \
-0.48399667557469317`, 
                   0.007741300812005421, -0.8143737955228835, \
-0.2262250394645403}, {
                   0.7017573541803983, -0.271578659323676, \
-0.2844896353147054, 0.0327006634878128, 
                   0.47461172003755725`, -0.3556988569880933}, \
{-0.534781449622502, -0.5935508055542879, -0.03841883279524632, 
                   0.43350591164949265`, 
                   0.09542916373943802, -0.4039754137631351}, \
{-0.24962449527823052`, 0.1995437550139275, 
                   0.05318131991869604, -0.6664425700794839, 
                   0.05982277373001385, -0.6688177516579797}, \
{-0.2970170290759208, 0.5013077991716276, -0.7300494849461234, 
                   0.20970076137332036`, 0.2883672850742781, 
                   0.01920999835638125}}, 
                  "Precisions" -> {11.409050313849102`, 11.728549767205461`, 
                   11.838648803211964`, 12.353703996888086`, 
                   12.493974299485144`, 12.642220694332103`}, 
                  "NoisePrecision" -> None, "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Mean" -> {-0.00019167622420712677`, 
                    0.0011546407584220714`, -0.0003624914148932479, 
                    0.0034011567571950794`, 0.006626869711687391, 
                    0.003842044757913067}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 264445836056681300|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 6|>, 
                    "Key" -> "(f1f2f3f4f5f6)", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 6, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Mean" -> {-0.00019167622420712688`, 
                    0.0011546407584220608`, -0.00036249141489325126`, 
                    0.0034011567571950794`, 0.006626869711687402, 
                    0.0038420447579130953`}, 
                    "StandardDeviation" -> {0.28713471191451057`, 
                    0.28528422466560827`, 0.29053889066604566`, 
                    0.28996498664931164`, 0.28410768089150235`, 
                    0.29055755494461777`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 6, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    7052420854593502203|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                   "Mean" -> {-0.00019167622420712688`, 
                    0.0011546407584220608`, -0.00036249141489325126`, 
                    0.0034011567571950794`, 0.006626869711687402, 
                    0.0038420447579130953`}, 
                   "StandardDeviation" -> {0.28713471191451057`, 
                    0.28528422466560827`, 0.29053889066604566`, 
                    0.28996498664931164`, 0.28410768089150235`, 
                    0.29055755494461777`}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 6, 
                   "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, "Type" -> 
                   "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                   7052420854593502203|>], "InputDimension" -> 0, 
                "OutputDimension" -> 6, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"medium"}, "ID" -> 6764183123436243866|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"high"}, 
                    "ID" -> 4447561113692615259|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, "Values" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "ID" -> 7022495553851366910|>, 
                    "f4" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {4}, "ID" -> 
                    242701326774276309|>, 
                    "f5" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"small"},
                     "ID" -> 8626706888326227617|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"medium"}, "ID" -> 7793782657492670706|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.227775, "MaxTrainingMemory" -> 1301552, 
                  "DataMemory" -> 445472, "FunctionMemory" -> 62320, 
                  "LanguageVersion" -> {13.1, 0}, "Date" -> 
                  DateObject[{
                    2022, 8, 8, 17, 59, 39.745929`8.351867630926963}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-1.4650241955255132`, -1.4650241955255132`, \
-1.430755802766193, -1.4042067830875913`, -1.3018866229987, \
-1.2507800118207644`, -1.2364530874740836`, -1.2255722141636205`, \
-1.2228520173189021`, -1.0894952762761034`, -1.0894015666714374`}, 
                   "LeftBoundary" -> -1.430755802766193, "LeftScale" -> 
                   0.01713419637966007, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[7.629856546861745, 0.2480059748492769], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
             "ID" -> 5495059474424677337|>], 
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
               "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "(f1f2f3f4f5f6)" -> <|
                "Type" -> "NominalVector", "Weight" -> 6|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 4205694865483692036|>], 
           MachineLearning`MLProcessor[
           "EmbedNominalVector", <|
            "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6)" -> <|
                "Type" -> "NominalVector", "Weight" -> 6|>|>, 
             "Index" -> {<|
               "high" -> 1, "low" -> 2, "medium" -> 3, "very high" -> 4|>, <|
               "high" -> 1, "low" -> 2, "medium" -> 3, "very high" -> 4|>, <|
               2 -> 1, 3 -> 2, 4 -> 3, Interval[{5, 
                   DirectedInfinity[1]}] -> 4|>, <|
               2 -> 1, 4 -> 2, Interval[{5, 
                   DirectedInfinity[1]}] -> 3|>, <|
               "large" -> 1, "medium" -> 2, "small" -> 3|>, <|
               "high" -> 1, "low" -> 2, "medium" -> 3|>}, 
             "Output" -> <|
              "(f1f2f3f4f5f6)" -> <|
                "Weight" -> 6, "Type" -> "NumericalVector"|>|>, 
             "EmbeddingVectors" -> {
              RawArray["Real32",{{0., 0., 
                0.}, {-0.12314196676015854`, -0.861851692199707, 
                0.10532767325639725`}, {
                0.8298183679580688, -0.28949323296546936`, 
                0.03427627682685852}, {-0.21032746136188507`, \
-0.9608260989189148, 0.23128949105739594`}, {
                0.38437455892562866`, -0.8375512361526489, 
                0.1422276645898819}}], 
               RawArray["Real32",{{0., 0., 
                0.}, {-0.7579416036605835, -0.09459903836250305, \
-0.3054908514022827}, {
                0.24499356746673584`, -0.543777346611023, \
-0.2311936318874359}, {-0.10140641778707504`, -0.3524824380874634, 
                0.4795919358730316}, {
                0.015052562579512596`, -0.48196539282798767`, \
-0.9609097242355347}}], 
               RawArray["Real32",{{0., 0., 0.}, {
                0.6297598481178284, -0.11219660192728043`, \
-0.935377836227417}, {-0.4175759255886078, 
                0.2534555494785309, -0.4526385962963104}, {
                0.3543681204319, -0.37547722458839417`, 
                0.5876661539077759}, {-1.1276206970214844`, 
                0.17602579295635223`, -1.0098364353179932`}}], 
               RawArray["Real32",{{0., 0., 0.}, {
                0.24657385051250458`, -0.8256815671920776, 
                0.8846340179443359}, {0.6182233691215515, 
                0.3115577697753906, -0.14296697080135345`}, \
{-0.5634363889694214, -0.1850573867559433, 0.1582949459552765}}], 
               RawArray["Real32",{{0., 0., 0.}, {
                0.34666627645492554`, -0.5679200291633606, 
                0.10750995576381683`}, {
                0.6412044167518616, -0.1759643256664276, 
                0.6604856848716736}, {-0.8092290163040161, 
                0.12987354397773743`, -1.1753407716751099`}}], 
               RawArray["Real32",{{0., 0., 0.}, {0.05746559798717499, 
                0.12715618312358856`, 0.1291729062795639}, {
                0.21379514038562775`, -0.6005780100822449, 
                0.36645910143852234`}, {-0.02309783734381199, \
-0.22358153760433197`, 0.6648218631744385}}]}, "Version" -> {13.1, 0}, "ID" -> 
             272386066020895428|>]}, "Invertibility" -> "Impossible", 
         "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 8893333862155911631|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|
               "acceptable" -> 1, "good" -> 2, "unacceptable" -> 3, 
                "very good" -> 4|>}, "MissingCode" -> 0, 
             "Version" -> {13.1, 0}, "ID" -> 3368851722935717418, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {4}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 6942004589393111231|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 4|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       "acceptable" -> 0.227994227994228, "good" -> 0.04329004329004329, 
        "unacceptable" -> 0.6926406926406926, "very good" -> 
        0.03607503607503607|>|>, "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> 
       MachineLearning`MLProcessor[
        "KeyIndexSplit", <|
         "Index" -> "Acceptability", 
          "Order" -> {
           "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", "Cargo",
             "Safety", "Acceptability"}|>], "PreferLabeled" -> True, 
       "KeepLabelsFormat" -> False|>], "RecalibrationFunction" -> None, 
    "ImputationStrategy" -> Automatic, "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {4, 5}, 0., {
      1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    "Memory", "BatchProcessing" -> Automatic, 
    "Model" -> <|
     "Method" -> "NeuralNetwork", "Network" -> 
      NetChain[<|
        "Type" -> "Chain", 
         "Nodes" -> <|
          "1" -> <|"Type" -> "Linear", 
             "Arrays" -> <|"Weights" -> CompressedData["
1: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
cFUh/T9EFu3/
                "], "Biases" -> 
               RawArray["Real32",{-0.14151161909103394`, 
                 0.181189626455307, -0.10466769337654114`, \
-0.2077053189277649, 
                 0.0883769765496254, -0.21449072659015656`, \
-0.20492692291736603`, 0.11879973113536835`, 
                 0.19001705944538116`, -0.1973552703857422, 
                 0.14196911454200745`, 
                 0.06061756610870361, -0.1630895882844925, 
                 0.0015528978547081351`, -0.019544236361980438`, \
-0.19362524151802063`, -0.08886230736970901, -0.3445886969566345, 
                 0.2028679996728897, -0.1229017823934555, \
-0.12420354783535004`, -0.1491868793964386, -0.04626939445734024, 
                 0.10800476372241974`, -0.13900579512119293`, \
-0.16450759768486023`, -0.24966943264007568`, 
                 0.17121048271656036`, -0.14999428391456604`, \
-0.1330750733613968, 0.2752665579319, 
                 0.058282747864723206`, -0.1502441167831421, \
-0.24120116233825684`, -0.22375954687595367`, -0.2754586637020111, \
-0.17372222244739532`, 0.20720116794109344`, 
                 0.1669532060623169, -0.11877211928367615`, 
                 0.1377328783273697, 
                 0.14382711052894592`, -0.16925354301929474`, 
                 0.1921849101781845, 0.15992730855941772`, -0.196363165974617,
                  0.0778680145740509, 0.2140202522277832, 
                 0.16157454252243042`, 0.1905343234539032}]|>, 
             "Parameters" -> <|
              "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
               18, "$InputDimensions" -> {18}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{18}, NeuralNetworks`AtomT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
             "Parameters" -> <|
              "Function" -> 
               NeuralNetworks`ValidatedParameter[
                "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "3" -> <|"Type" -> "Linear", 
             "Arrays" -> <|"Weights" -> CompressedData["
1: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
98dz/HdDMto3mi7TRvw/7v8MHA==
                "], "Biases" -> 
               RawArray["Real32",{0.11058614403009415`, 0.1459028422832489, 
                 0.09743592888116837, -0.13298943638801575`, \
-0.16004578769207, 0.036182701587677, 0.12315712869167328`, 
                 0.05935421213507652, -0.004007590934634209, \
-0.13807764649391174`, -0.15822666883468628`, -0.10480120778083801`, 
                 0.04406538978219032, -0.14523708820343018`, \
-0.19434992969036102`, -0.09664028882980347, 0.16884662210941315`, 
                 0.039723534137010574`, -0.12681405246257782`, \
-0.10558248311281204`, 
                 0.008313377387821674, -0.16909171640872955`, \
-0.14977721869945526`, 
                 0.15547481179237366`, -0.1264285296201706, \
-0.081388458609581, 0.14261552691459656`, 0.06620728224515915, 
                 0.14516647160053253`, 
                 0.05168995261192322, -0.12877553701400757`, \
-0.07333686947822571, 0.1208353340625763, -0.11832599341869354`, 
                 0.10357934981584549`, -0.11235950142145157`, 
                 0.09922627359628677, 
                 0.08616095781326294, -0.13851280510425568`, 
                 0.083940789103508, 0.049086518585681915`, 
                 0.04191446676850319, -0.1144600659608841, \
-0.03270066902041435, -0.17829328775405884`, 0.056076716631650925`, 
                 0.13940095901489258`, 0.0495423823595047, 
                 0.13049697875976562`, 0.16978049278259277`}]|>, 
             "Parameters" -> <|
              "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
               50, "$InputDimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
             "Parameters" -> <|
              "Function" -> 
               NeuralNetworks`ValidatedParameter[
                "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "5" -> <|"Type" -> "Linear", 
             "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXtMU2ccQGvl2RZEmSgVV1CIrGosFIjC/X4XNEgdgihzEmYz6KDhOQ2o
MHkYJa6tgAqCAplCYTAeEZybgnC/32WwFeW5YGKXCYwNRKNzaeThfOCGf5yT
nBwPzZEDWqFAIMi0W9KB+KyQjIz4r6Jt3kdifJrSN+39tFrCd4mzrA1sSVPi
zzFa1Lj50df7vboUxliU9zkgpLjgmdkn0D3mjNd9g7BS5khFpkz8lR8i+d21
NCEqFP4VCfHKKzEfelBGT7Q+JX99XUsKaRK8DLGD0LhOUK6Z4PwnpaRtpRN4
FvTRpA3l5MWkPVt2qwSnB3+B5CvLwCHgKbDD1WidaEOVH3aS/u16vOFsoeOP
ctHwXynR2e3DbIUf2XarEoMHbDB3dR/1uVMKXqI6rPYsBp3JD3qlczTqgpz+
pGnEf3ryIEd7F9TkGpnIDocseQnTOyxi7heXQ+WyEfJQJgZLRB3RC/sgorMD
ts0xsEKYzM0kLDIqSonGPAyHX7xmTD7jMO+tQocH55h9bXrOOzAaV0dY8xUe
RV0tWWacs1SQDd+Pgm+gnukM9eQNEYskvTEZA789RM7KbqIKfSA4TMKW5k0z
0pRs1M0cx9qTJvLk9+PQ61gHKbwZg9s5erRgEzbJ44g49wcsOkXp1RoJO+V0
EQTnpaQpsgLfvpkg44pAmHy1Bi4OvaQN+V/ixo9KsGdBwI/9KIf65A94//oT
KLhqxQ8FnAb13jA4/dyMzt8p+WcKM80uV+O7aVs81HsdWtbXYkirK7pJdFBm
/gwabuggTyvGraPtuGdgMyasc2cbMgmGb3ZhxZEi/mC4AUYST4FqVMiLVZdg
12MD0belQr3VTn6iuYub3SpA+z9a4V6eJ1TXfAI1bvNcrKUEeJ9iXC6bxWIP
Ca5KWAGFXhbYrd5ItIrzWO4qhe6/T9L6nTpiHnsOC7uOAbjf46IvV0JOli3r
Pj3AnatKxUXNZVJ2ezn7hbYZJA8u4O4AW/ZPWwOsDGrBqaYOptC/kav4OCYo
pyydiXXZg+2/pWOBMQ7GrCGoaCofLTlGCKuK3uG4ah3bPDIIXvfrSNTAO+j5
/BtiiYwBvwVHMG7vB8Nabxwx2rPzHTdBPM/hpx3OqI7agab+u/g/mbaE8A==

                "], "Biases" -> 
               RawArray["Real32",{-0.007236030418425798, -0.09619268029928207,
                  0.09597259759902954, -0.13553404808044434`}]|>, 
             "Parameters" -> <|
              "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
               50, "$InputDimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"]}, 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{18}, NeuralNetworks`AtomT]|>, 
         "Outputs" -> <|
          "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
        "Version" -> "13.1.3", "Unstable" -> False|>], 
      "Training" -> <|
       "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
        TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
        "TotalTrainingTime" -> 3.277165, "MeanInputsPerSecond" -> 
        29293.61200916036|>, "InputType" -> "NumericalVector", "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|
          "(f1f2f3f4f5f6)" -> <|
            "Weight" -> 6, "Type" -> "NumericalVector"|>|>, 
         "Output" -> <|
          "(f1f2f3f4f5f6)" -> <|
            "Type" -> "NumericalVector", "Weight" -> 6|>|>, "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "(f1f2f3f4f5f6)" -> <|
                "Weight" -> 6, "Type" -> "NumericalVector"|>|>, 
             "Mean" -> {0.22846340109655627`, -0.7331524952465475, 
              0.12857418486134847`, -0.1470174637574805, -0.3693960287360927, \
-0.25297157897734485`, -0.1381125864186497, -0.013550857960233805`, \
-0.4477105686514862, 0.10026117855035539`, -0.22988884392409223`, 
              0.29694375132721407`, 
              0.05750394298490419, -0.1986286429254379, -0.13614149543094045`,
               0.08288515091555626, -0.23331746818281004`, 
              0.3872654421790709}, 
             "StandardDeviation" -> {0.4217841444635364, 0.26610671534521446`,
               0.0719824374461276, 0.3714420548858829, 0.17188502945715212`, 
              0.5106448641794368, 0.682620419657301, 0.2497243771479237, 
              0.6360414783504174, 0.49439015269206665`, 0.4649285469405732, 
              0.4304973939924269, 0.6297890981361854, 0.2834486698239679, 
              0.7746989060734015, 0.09846349258259571, 0.2971065188725669, 
              0.21897662978258314`}, 
             "Output" -> <|
              "(f1f2f3f4f5f6)" -> <|
                "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 7167940750356708679|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 6|>, "Key" -> 
             "(f1f2f3f4f5f6)", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "FeatureNumber" -> 18, "Calibrator" -> 
      None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>, 
        "NetworkDepth" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "NumberOfParameters" -> <|"Value" -> 3600, "Options" -> <||>|>, 
        "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
        "Dropout" -> <|"Value" -> None, "Options" -> <||>|>, 
        "NetInitializationMethod" -> <|
         "Value" -> Automatic, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|
         "Value" -> {"ADAM", "L2Regularization" -> None}, "Options" -> <||>|>,
         MaxTrainingRounds -> <|"Value" -> 100, "Options" -> <||>|>, 
        ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
        TrainingProgressReporting -> <|"Value" -> None, "Options" -> <||>|>, 
        "NetTrainOptions" -> <|
         "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"}, 
          "Options" -> <||>|>, 
        "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "ValidationSetRatio" -> <|
         "Value" -> 0.15009041591320071`, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.401929`6.055694336054277, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.09102929754751289, 0.023607494088640154`], "Accuracy" -> 
         Around[0.9761613127009874, 0.012949449812749267`], "EvaluationTime" -> 
         0.0006881501464423077, "TestSize" -> 276, "ModelMemory" -> 58320, 
         "ModelUtility" -> 0.2778097519618762, "TrainingSize" -> 1106, 
         "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 956544, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.09102929754751289, 0.016693019156898786`]}, 
         "AccuracyHistory" -> {
           Around[0.9761613127009874, 0.009156643775229874]}, 
         "Configuration" -> {
          "NeuralNetwork", "NetworkType" -> "FullyConnected", "NetworkDepth" -> 
           2, "NumberOfParameters" -> 3600, "ActivationFunction" -> "SELU", 
           "L2Regularization" -> None, "Dropout" -> None, 
           "NetInitializationMethod" -> Automatic, 
           "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
           MaxTrainingRounds -> 100, ValidationSet -> Automatic, 
           "EarlyStopping" -> False, TrainingProgressReporting -> None, 
           "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType}]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 8600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[4.5722078573533445`, 0.27210027194614067`], "Accuracy" -> 
              Around[0.6211574386771406, 0.01848102720571032], 
              "EvaluationTime" -> 0.00006727785530077912, "TestSize" -> 1372, 
              "ModelMemory" -> 101904, "ModelUtility" -> -3.6582194587192123`,
               "TrainingSize" -> 10, "TrainingTime" -> 3.981071705534973, 
              "TrainingMemory" -> 480808, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.5722078573533445`, 0.19240394745581973`]}, 
              "AccuracyHistory" -> {
                Around[0.6211574386771406, 0.01306805966045084]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00006727785530077912, "MeanCrossEntropy" -> 
             Around[4.5722078573533445`, 0.27210027194614067`], "ModelMemory" -> 
             101904, "TrainingMemory" -> 480808, "TrainingTime" -> 
             58.99948267602831|>, "Index" -> 1|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 10|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.146953849088694, 0.06512858825223299], "Accuracy" -> 
              Around[0.5636622679613927, 0.04946899254797612], 
              "EvaluationTime" -> 0.00020483898119853466`, "TestSize" -> 200, 
              "ModelMemory" -> 62416, "ModelUtility" -> -2.2227347999526073`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.15848931924611134`, 
              "TrainingMemory" -> 309176, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.146953849088694, 0.04605286640226046]}, 
              "AccuracyHistory" -> {
                Around[0.5636622679613927, 0.034979860089140696`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.6860334428196505, 0.060102721049976764`], "Accuracy" -> 
              Around[0.8161029716258141, 0.031470751638048605`], 
              "EvaluationTime" -> 0.0003330981347269232, "TestSize" -> 300, 
              "ModelMemory" -> 62416, "ModelUtility" -> -1.7148737042326025`, 
              "TrainingSize" -> 250, "TrainingTime" -> 0.31622776601683794`, 
              "TrainingMemory" -> 377728, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.6860334428196505, 0.04249904162220202]}, 
              "AccuracyHistory" -> {
                Around[0.8161029716258141, 0.022253181892301816`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.8053747043406867`, 0.05642796703407158], "Accuracy" -> 
              Around[0.4158072905455017, 0.020925576627904317`], 
              "EvaluationTime" -> 0.0005779874435747101, "TestSize" -> 1100, 
              "ModelMemory" -> 62416, "ModelUtility" -> -2.6713325971918254`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.25118864315095796`, 
              "TrainingMemory" -> 297016, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8053747043406867`, 0.03990059813836297]}, 
              "AccuracyHistory" -> {
                Around[0.4158072905455017, 0.014796617133829869`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.35134608706131215`, 0.03978009020685576], "Accuracy" -> 
              Around[0.8678411635281399, 0.028749297744619536`], 
              "EvaluationTime" -> 0.00022915055508466515`, "TestSize" -> 276, 
              "ModelMemory" -> 62416, "ModelUtility" -> -1.0507407082010345`, 
              "TrainingSize" -> 1106, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 948456, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.35134608706131215`, 0.028128771541480278`]}, 
              "AccuracyHistory" -> {
                Around[0.8678411635281399, 0.02032882338957159]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00022915055508466515`, "MeanCrossEntropy" -> 
             Around[0.35134608706131215`, 0.03978009020685576], "ModelMemory" -> 
             62416, "TrainingMemory" -> 948456, "TrainingTime" -> 
             0.7847467847731369|>, "Index" -> 2|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.09102929754751289, 0.023607494088640154`], "Accuracy" -> 
              Around[0.9761613127009874, 0.012949449812749267`], 
              "EvaluationTime" -> 0.0006881501464423077, "TestSize" -> 276, 
              "ModelMemory" -> 58320, "ModelUtility" -> 0.2778097519618762, 
              "TrainingSize" -> 1106, "TrainingTime" -> 3.1622776601683795`, 
              "TrainingMemory" -> 956544, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.09102929754751289, 0.016693019156898786`]}, 
              "AccuracyHistory" -> {
                Around[0.9761613127009874, 0.009156643775229874]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8964811821115559, 0.05631576825786373], "Accuracy" -> 
              Around[0.7133756368331798, 0.017387908807273374`], 
              "EvaluationTime" -> 0.00034673664508861804`, "TestSize" -> 1332,
               "ModelMemory" -> 58320, "ModelUtility" -> -1.9714037318786193`,
               "TrainingSize" -> 50, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 285536, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.8964811821115559, 0.03982126162286557]}, 
              "AccuracyHistory" -> {
                Around[0.7133756368331798, 0.012295108228276294`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.3429807556245192`, 0.13818489531614622`], "Accuracy" -> 
              Around[0.6158817888808668, 0.01850340875462363], 
              "EvaluationTime" -> 0.00020305462724692585`, "TestSize" -> 1372,
               "ModelMemory" -> 58320, "ModelUtility" -> -2.9313466655000626`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 285712, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.3429807556245192`, 0.09771147653560017]}, 
              "AccuracyHistory" -> {
                Around[0.6158817888808668, 0.013083885805460898`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.28191119077631227`, 0.0268670654279549], "Accuracy" -> 
              Around[0.8990167017961164, 0.012596838847921973`], 
              "EvaluationTime" -> 0.0002202740115369196, "TestSize" -> 1132, 
              "ModelMemory" -> 58320, "ModelUtility" -> -0.8209142104906325, 
              "TrainingSize" -> 250, "TrainingTime" -> 1.2589254117941673`, 
              "TrainingMemory" -> 373776, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.28191119077631227`, 0.01899788415468956]}, 
              "AccuracyHistory" -> {
                Around[0.8990167017961164, 0.008907310170879763]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0002202740115369196, "MeanCrossEntropy" -> 
             Around[0.28191119077631227`, 0.0268670654279549], "ModelMemory" -> 
             58320, "TrainingMemory" -> 373776, "TrainingTime" -> 
             10.121617336566537`|>, "Index" -> 3|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 18600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.08963151751650107, 0.04221312431395196], "Accuracy" -> 
              Around[0.9791357409747539, 0.012137549581765668`], 
              "EvaluationTime" -> 0.0003240319691030005, "TestSize" -> 276, 
              "ModelMemory" -> 187664, "ModelUtility" -> 0.11165932133847212`,
               "TrainingSize" -> 1106, "TrainingTime" -> 6.309573444801933, 
              "TrainingMemory" -> 1169256, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.08963151751650107, 0.029849186457466155`]}, 
              "AccuracyHistory" -> {
                Around[0.9791357409747539, 0.008582543616254447]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.2240863679594245`, 0.14357091710562775`], "Accuracy" -> 
              Around[0.7906775734525874, 0.02161228989770136], 
              "EvaluationTime" -> 0.0007772944109511788, "TestSize" -> 700, 
              "ModelMemory" -> 187664, "ModelUtility" -> -2.435754149761074, 
              "TrainingSize" -> 50, "TrainingTime" -> 1., "TrainingMemory" -> 
              780096, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.2240863679594245`, 0.10151996906656106`]}, 
              "AccuracyHistory" -> {
                Around[0.7906775734525874, 0.015282196743634147`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.4340717995649587, 0.04616762742632497], "Accuracy" -> 
              Around[0.8493098429585471, 0.01492641153241974], 
              "EvaluationTime" -> 0.0003877717060035205, "TestSize" -> 1132, 
              "ModelMemory" -> 187664, "ModelUtility" -> -1.3968757488568753`,
               "TrainingSize" -> 250, "TrainingTime" -> 1.9952623149688797`, 
              "TrainingMemory" -> 840352, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.4340717995649587, 0.03264544242444842]}, 
              "AccuracyHistory" -> {
                Around[0.8493098429585471, 0.010554566813355084`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0003877717060035205, "MeanCrossEntropy" -> 
             Around[0.4340717995649587, 0.04616762742632497], "ModelMemory" -> 
             187664, "TrainingMemory" -> 840352, "TrainingTime" -> 
             17.3393835219499|>, "Index" -> 4|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 18600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.37168744234195067`, 0.06138078981133629], "Accuracy" -> 
              Around[0.8929724590325544, 0.017756003513421006`], 
              "EvaluationTime" -> 0.0005729130857749843, "TestSize" -> 600, 
              "ModelMemory" -> 164368, "ModelUtility" -> -1.2331962386303115`,
               "TrainingSize" -> 250, "TrainingTime" -> 1.9952623149688797`, 
              "TrainingMemory" -> 683920, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.37168744234195067`, 0.04340277271018203]}, 
              "AccuracyHistory" -> {
                Around[0.8929724590325544, 0.012555390491112156`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.7690385100499966`, 0.1667625598149496], "Accuracy" -> 
              Around[0.6062976552481879, 0.020601568145856446`], 
              "EvaluationTime" -> 0.0005071606602769552, "TestSize" -> 1100, 
              "ModelMemory" -> 164368, "ModelUtility" -> -3.220876683857752, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.6309573444801932, 
              "TrainingMemory" -> 587920, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.7690385100499966`, 0.1179189368931781]}, 
              "AccuracyHistory" -> {
                Around[0.6062976552481879, 0.014567508539011861`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0005071606602769552, "MeanCrossEntropy" -> 
             Around[2.7690385100499966`, 0.1667625598149496], "ModelMemory" -> 
             164368, "TrainingMemory" -> 587920, "TrainingTime" -> 
             10.715092815685152`|>, "Index" -> 5|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 8600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 300|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[3.194583785496335, 0.19343446926971108`], "Accuracy" -> 
              Around[0.6168133280093175, 0.018368536511584353`], 
              "EvaluationTime" -> 0.00040456834306917757`, "TestSize" -> 1372,
               "ModelMemory" -> 93800, "ModelUtility" -> -3.2901150116252373`,
               "TrainingSize" -> 10, "TrainingTime" -> 1.5848931924611136`, 
              "TrainingMemory" -> 384328, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.194583785496335, 0.13677882493583354`]}, 
              "AccuracyHistory" -> {
                Around[0.6168133280093175, 0.012988516727813985`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00040456834306917757`, "MeanCrossEntropy" -> 
             Around[3.194583785496335, 0.19343446926971108`], "ModelMemory" -> 
             93800, "TrainingMemory" -> 384328, "TrainingTime" -> 
             23.488117112273706`|>, "Index" -> 6|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 18600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.8197448601870514`, 0.15407278573948416`], "Accuracy" -> 
              Around[0.7681197493442067, 0.016233908383616182`], 
              "EvaluationTime" -> 0.0005168685314425036, "TestSize" -> 1332, 
              "ModelMemory" -> 164368, "ModelUtility" -> -2.805891685476432, 
              "TrainingSize" -> 50, "TrainingTime" -> 5.011872336272724, 
              "TrainingMemory" -> 617752, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.8197448601870514`, 0.10894591159269124`]}, 
              "AccuracyHistory" -> {
                Around[0.7681197493442067, 0.011479106703216146`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0005168685314425036, "MeanCrossEntropy" -> 
             Around[1.8197448601870514`, 0.15407278573948416`], "ModelMemory" -> 
             164368, "TrainingMemory" -> 617752, "TrainingTime" -> 
             74.27594802356177|>, "Index" -> 7|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.29403327569319443`, 0.03932904399651967], "Accuracy" -> 
              Around[0.9098419509282913, 0.011996499990282437`], 
              "EvaluationTime" -> 0.00008681470201758184, "TestSize" -> 1132, 
              "ModelMemory" -> 58320, "ModelUtility" -> -0.8705335057683248, 
              "TrainingSize" -> 250, "TrainingTime" -> 10., "TrainingMemory" -> 
              351080, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.29403327569319443`, 0.027809833707523133`]}, 
              "AccuracyHistory" -> {
                Around[0.9098419509282913, 0.008482806493633062]}|>, <|
             "MeanCrossEntropy" -> 
              Around[3.5876025435917676`, 0.22692353204588206`], "Accuracy" -> 
              Around[0.6246522534683608, 0.018394245585487717`], 
              "EvaluationTime" -> 0.00031189803436950574`, "TestSize" -> 1372,
               "ModelMemory" -> 58320, "ModelUtility" -> -3.3582514493484092`,
               "TrainingSize" -> 10, "TrainingTime" -> 3.1622776601683795`, 
              "TrainingMemory" -> 273672, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.5876025435917676`, 0.16045916832044602`]}, 
              "AccuracyHistory" -> {
                Around[0.6246522534683608, 0.01300669578830908]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.00031189803436950574`, "MeanCrossEntropy" -> 
             Around[3.5876025435917676`, 0.22692353204588206`], "ModelMemory" -> 
             58320, "TrainingMemory" -> 273672, "TrainingTime" -> 
             53.70267726352701|>, "Index" -> 8|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.10590330154399025`, 0.028414184949045067`], "Accuracy" -> 
              Around[0.9710001978599868, 0.014256985156258202`], 
              "EvaluationTime" -> 0.00041019731090850185`, "TestSize" -> 276, 
              "ModelMemory" -> 62416, "ModelUtility" -> 0.11862582820774348`, 
              "TrainingSize" -> 1106, "TrainingTime" -> 3.981071705534973, 
              "TrainingMemory" -> 986160, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.10590330154399025`, 0.0200918628593585]}, 
              "AccuracyHistory" -> {
                Around[0.9710001978599868, 0.010081210883266124`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.2470665473441196`, 0.13307038058297638`], "Accuracy" -> 
              Around[0.6176776136790039, 0.01842307108792603], 
              "EvaluationTime" -> 0.000405204733288256, "TestSize" -> 1372, 
              "ModelMemory" -> 62416, "ModelUtility" -> -2.895732548673068, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.6309573444801932, 
              "TrainingMemory" -> 296888, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.2470665473441196`, 0.09409496848529728]}, 
              "AccuracyHistory" -> {
                Around[0.6176776136790039, 0.013027078496554321`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.000405204733288256, "MeanCrossEntropy" -> 
             Around[2.2470665473441196`, 0.13307038058297638`], "ModelMemory" -> 
             62416, "TrainingMemory" -> 296888, "TrainingTime" -> 
             12.700902206251245`|>, "Index" -> 9|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 8600|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 10|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[0.2626592930291636, 0.03549734171705872], "Accuracy" -> 
              Around[0.8904866053987731, 0.026502625634261496`], 
              "EvaluationTime" -> 0.000995521083966344, "TestSize" -> 276, 
              "ModelMemory" -> 101904, "ModelUtility" -> -0.8161649012419092, 
              "TrainingSize" -> 1106, "TrainingTime" -> 0.6309573444801932, 
              "TrainingMemory" -> 1012984, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.2626592930291636, 0.025100411042228342`]}, 
              "AccuracyHistory" -> {
                Around[0.8904866053987731, 0.01874018630523473]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.622240942702334, 0.0474324350170228], "Accuracy" -> 
              Around[0.4223703251465125, 0.01863988008159035], 
              "EvaluationTime" -> 0.00022897192394878054`, "TestSize" -> 1372,
               "ModelMemory" -> 101904, "ModelUtility" -> -2.616030556943823, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.31622776601683794`, 
              "TrainingMemory" -> 447496, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.622240942702334, 0.03353979644872707]}, 
              "AccuracyHistory" -> {
                Around[0.4223703251465125, 0.013180385606196592`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.5079075602598763, 0.031736742733066994`], "Accuracy" -> 
              Around[0.8151969662775643, 0.016267526734640162`], 
              "EvaluationTime" -> 0.0002366474107429308, "TestSize" -> 1132, 
              "ModelMemory" -> 101904, "ModelUtility" -> -1.461355133207583, 
              "TrainingSize" -> 250, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 527464, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.5079075602598763, 0.022441265999324552`]}, 
              "AccuracyHistory" -> {
                Around[0.8151969662775643, 0.011502878467197513`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0002366474107429308, "MeanCrossEntropy" -> 
             Around[0.5079075602598763, 0.031736742733066994`], "ModelMemory" -> 
             101904, "TrainingMemory" -> 527464, "TrainingTime" -> 
             3.401520371971754|>, "Index" -> 10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["NeuralNetwork"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 1382, 
      "PreprocessorEvaluationTime" -> 4.21875*^-6, "PreprocessorMemory" -> 
      94088, "InputDimension" -> 18, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.8472130263720676, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.868970440615246`16.340170400833458*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 10, "TimeBudgets" -> 5.861760790364184, 
          "ElapsedTimes" -> 16.465788, "ExperimentCounts" -> 8|>, <|
         "TrainingSizes" -> 50, "TimeBudgets" -> 8.373943986234558, 
          "ElapsedTimes" -> 9.178283, "ExperimentCounts" -> 4|>, <|
         "TrainingSizes" -> 250, "TimeBudgets" -> 11.962777123192216`, 
          "ElapsedTimes" -> 18.246313, "ExperimentCounts" -> 6|>, <|
         "TrainingSizes" -> 1106, "TimeBudgets" -> 17.0896816045603, 
          "ElapsedTimes" -> 16.763523, "ExperimentCounts" -> 5|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"medium"}, "ID" -> 
           2846111867015398573|>, 
         "f2" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"high"}, "ID" -> 
           41728420326286313|>, 
         "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, "Values" -> {
             Interval[{5, 
               DirectedInfinity[1]}]}, "ID" -> 1436697572522429983|>, 
         "f4" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {4}, "ID" -> 
           536027689597629633|>, 
         "f5" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"small"}, "ID" -> 
           5753609278033805624|>, 
         "f6" -> <|
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"medium"}, "ID" -> 
           8080186329754682489|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 61.169972, 
      "MaxTrainingMemory" -> 2033248, "DataMemory" -> 1781648, 
      "FunctionMemory" -> 352848, "LanguageVersion" -> {13.1, 0}, "Date" -> 
      DateObject[{2022, 8, 8, 18, 0, 40.649076`8.361625656281715}, "Instant", 
        "Gregorian", 1.], "ProcessorCount" -> 6, "ProcessorType" -> "x86-64", 
      "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.868966100693174*^9, 3.8689661308462877`*^9}, 
   3.8689661675114813`*^9, 3.8689663082865877`*^9, 3.868966775410522*^9, 
   3.868966840697682*^9},
 CellLabel->
  "Out[431]=",ExpressionUUID->"6871e97c-7114-4129-908c-f7164b0eb2dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"classifier", ",", 
    RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8689661711004057`*^9, 3.868966172114195*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"210cf671-ac61-409b-9991-3376e561b207"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classifier method"], 
                   TextCell["Classifier method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "NeuralNetwork",ExpressionUUID->
                 "d093bf74-15a1-43b9-a987-7be67ffd0c89"],
                TextCell["NeuralNetwork"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "346"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"98.0", "0.8"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    97.9768786127167601308`3., 0.7579895578429771685`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"72.5", "2.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    72.5433526011560729785`3., 2.4027745155265187726`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Geometric mean of probabilities"], 
                   TextCell["Geometric mean of probabilities"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.9311011902438047771`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0168655123198805934`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.8973701656040435903`3.", "\", \"", 
                   "0.964832214883565964`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.8973701656040435903`3., 
                   ", ", 0.964832214883565964`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.0713873177684133248`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0181125213588456818`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0351622750507219611`3.", "\", \"", 
                   "0.1076123604861046884`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0351622750507219611`3., 
                   ", ", 0.1076123604861046884`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"5.82`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"1.47`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNKlyT/3KjF/9ZeZZO3Q8mUF/arBTqnJZ+8
ZW9dPrdm5su39loKgnbvn722T9eeEXdy8lN781glR2m3d/b9k3R661ze2q+9
KDWZVfEl3LyHVSLr3B/esoe5kJB6dNrs/o5Z8k1v7TNinE69iX9lf88pf9We
WQ9xqsflTrVpdWcqJN/YV2/Xv/c/8Yn9uXvHym/0HSHofmJpAO2ufDY=
                  "], {{0, 0}, {4, 4}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["68", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "68", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9714285714285714`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9855072463768116`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9784172661870503`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{68, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9714285714285714}], 
                    Row[{"Recall = ", 0.9855072463768116}], 
                    Row[{"FScore = ", 0.9784172661870503}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.02857142857142857`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00796812749003984`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.02857142857142857}], 
                    Row[{"Row fraction = ", 0.00796812749003984}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.1`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.014492753623188406`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.1}], 
                    Row[{"Row fraction = ", 0.014492753623188406`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["8", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "8", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.8`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.8`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8000000000000002`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{8, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8}], 
                    Row[{"Recall = ", 0.8}], 
                    Row[{"FScore = ", 0.8000000000000002}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.1`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00398406374501992`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.1}], 
                    Row[{"Row fraction = ", 0.00398406374501992}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["247", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "247", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9840637450199203`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9919678714859439`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{247, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9840637450199203}], 
                    Row[{"FScore = ", 0.9919678714859439}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.10526315789473684`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.2`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.10526315789473684`}], 
                    Row[{"Row fraction = ", 0.2}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.05263157894736842`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.00398406374501992`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.05263157894736842}], 
                    Row[{"Row fraction = ", 0.00398406374501992}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8421052631578947`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9142857142857141`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{16, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8421052631578947}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.9142857142857141}]}], "Tooltip"]& ]}, 
                   
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "69", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9855072463768116`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{69, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9855072463768116}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.8`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.8}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "251", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9840637450199203`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{251, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9840637450199203}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "70", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9714285714285714`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{70, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9714285714285714}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.8`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "247", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{247, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "19", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8421052631578947`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{19, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 0.8421052631578947}]}], 
                    "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["69", TraditionalForm]}, {2.5, 
                    FormBox["10", TraditionalForm]}, {1.5, 
                    FormBox["251", TraditionalForm]}, {0.5, 
                    FormBox["16", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["70", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["10", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["247", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["19", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->212.4,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[<|
   "Model" -> ClassifierFunction[<|
      "ExampleNumber" -> 1382, "ClassNumber" -> 4, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "PurchasePrice" -> <|"Type" -> "Nominal"|>, 
              "MaintenanceCost" -> <|"Type" -> "Nominal"|>, 
              "Doors" -> <|"Type" -> "Nominal"|>, 
              "Passengers" -> <|"Type" -> "Nominal"|>, 
              "Cargo" -> <|"Type" -> "Nominal"|>, 
              "Safety" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["FromDataset"], 
                 MachineLearning`MLProcessor[
                 "FromNamedFeatures", <|
                  "FeatureNames" -> {
                    "PurchasePrice", "MaintenanceCost", "Doors", "Passengers",
                     "Cargo", "Safety"}|>], 
                 MachineLearning`MLProcessor[
                 "Transpose", <|"FeatureNumber" -> 6|>], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal"}, 
                   "FeatureKeys" -> {"f1", "f2", "f3", "f4", "f5", "f6"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
              "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|
             "(f1f2f3f4f5f6)" -> <|
               "Weight" -> 6, "Type" -> "NumericalVector"|>|>, "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 1382, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal"|>, 
                    "f2" -> <|"Type" -> "Nominal"|>, 
                    "f3" -> <|"Type" -> "Nominal"|>, 
                    "f4" -> <|"Type" -> "Nominal"|>, 
                    "f5" -> <|"Type" -> "Nominal"|>, 
                    "f6" -> <|"Type" -> "Nominal"|>|>, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> False, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Sequence", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Processors" -> {
                    MachineLearning`MLProcessor[
                    "ToVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                    "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 2890808244938110393|>], 
                    MachineLearning`MLProcessor[
                    "IntegerEncodeNominalVector", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6|>|>, 
                    "Index" -> {<|
                    "high" -> 1, "low" -> 2, "medium" -> 3, "very high" -> 
                    4|>, <|"high" -> 1, "low" -> 2, "medium" -> 3, 
                    "very high" -> 4|>, <|2 -> 1, 3 -> 2, 4 -> 3, Interval[{5, 
                    DirectedInfinity[1]}] -> 4|>, <|
                    2 -> 1, 4 -> 2, Interval[{5, 
                    DirectedInfinity[1]}] -> 3|>, <|
                    "large" -> 1, "medium" -> 2, "small" -> 3|>, <|
                    "high" -> 1, "low" -> 2, "medium" -> 3|>}, "MissingCode" -> 
                    Indeterminate, "Version" -> {13.1, 0}, "ID" -> 
                    4504524607625751657, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6|>|>|>], 
                    MachineLearning`MLProcessor[
                    "NumericalizeNominalVector", <|
                    "Invertibility" -> "Approximate", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NominalVector", "Weight" -> 6, 
                    "SetSize" -> {4, 4, 4, 3, 3, 3}|>|>, 
                    "Boundaries" -> {{-0.5, -0.25, 0., 0.25, 
                    0.5}, {-0.5, -0.25, 0., 0.25, 0.5}, {-0.5, -0.25, 0., 
                    0.25, 0.5}, {-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}, {-0.5, -0.16666666666666669`, 
                    0.16666666666666663`, 0.5}}, "Version" -> {13.1, 0}, "ID" -> 
                    4511035240401077812, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>|>]}, 
                    "Invertibility" -> "Approximate", "StructurePreserving" -> 
                    True, "Missing" -> "Allowed"|>], "PerformanceGoal" -> 
                   "DirectTraining", "BatchProcessing" -> Automatic, 
                   "Model" -> <|
                    "RotationMatrix" -> {{-0.18180837299497768`, \
-0.5191050362589946, -0.3841046152539792, -0.5681753733658641, 
                    0.12529108395561656`, 0.45980236054401374`}, {
                    0.19483230814806896`, -0.11552149012629362`, \
-0.48399667557469317`, 
                    0.007741300812005421, -0.8143737955228835, \
-0.2262250394645403}, {
                    0.7017573541803983, -0.271578659323676, \
-0.2844896353147054, 0.0327006634878128, 
                    0.47461172003755725`, -0.3556988569880933}, \
{-0.534781449622502, -0.5935508055542879, -0.03841883279524632, 
                    0.43350591164949265`, 
                    0.09542916373943802, -0.4039754137631351}, \
{-0.24962449527823052`, 0.1995437550139275, 
                    0.05318131991869604, -0.6664425700794839, 
                    0.05982277373001385, -0.6688177516579797}, \
{-0.2970170290759208, 0.5013077991716276, -0.7300494849461234, 
                    0.20970076137332036`, 0.2883672850742781, 
                    0.01920999835638125}}, 
                    "Precisions" -> {11.409050313849102`, 11.728549767205461`,
                     11.838648803211964`, 12.353703996888086`, 
                    12.493974299485144`, 12.642220694332103`}, 
                    "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Mean" -> {-0.00019167622420712677`, 
                    0.0011546407584220714`, -0.0003624914148932479, 
                    0.0034011567571950794`, 0.006626869711687391, 
                    0.003842044757913067}, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 264445836056681300|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 6|>, 
                    "Key" -> "(f1f2f3f4f5f6)", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 6, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Mean" -> {-0.00019167622420712688`, 
                    0.0011546407584220608`, -0.00036249141489325126`, 
                    0.0034011567571950794`, 0.006626869711687402, 
                    0.0038420447579130953`}, 
                    "StandardDeviation" -> {0.28713471191451057`, 
                    0.28528422466560827`, 0.29053889066604566`, 
                    0.28996498664931164`, 0.28410768089150235`, 
                    0.29055755494461777`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 6, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    7052420854593502203|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                    "Mean" -> {-0.00019167622420712688`, 
                    0.0011546407584220608`, -0.00036249141489325126`, 
                    0.0034011567571950794`, 0.006626869711687402, 
                    0.0038420447579130953`}, 
                    "StandardDeviation" -> {0.28713471191451057`, 
                    0.28528422466560827`, 0.29053889066604566`, 
                    0.28996498664931164`, 0.28410768089150235`, 
                    0.29055755494461777`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 6, 
                    "Output" -> <|
                    "(f1f2f3f4f5f6)" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 6|>|>, "Type" -> 
                    "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    7052420854593502203|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 6, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"medium"}, "ID" -> 6764183123436243866|>, 
                    "f2" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"high"}, 
                    "ID" -> 4447561113692615259|>, 
                    "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, "Values" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "ID" -> 7022495553851366910|>, 
                    "f4" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {4}, "ID" -> 
                    242701326774276309|>, 
                    "f5" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"small"},
                     "ID" -> 8626706888326227617|>, 
                    "f6" -> <|
                    "Type" -> "Nominal", "Weight" -> 1, 
                    "Values" -> {"medium"}, "ID" -> 7793782657492670706|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.227775, "MaxTrainingMemory" -> 
                    1301552, "DataMemory" -> 445472, "FunctionMemory" -> 
                    62320, "LanguageVersion" -> {13.1, 0}, "Date" -> 
                    DateObject[{
                    2022, 8, 8, 17, 59, 39.745929`8.351867630926963}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                   "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-1.4650241955255132`, \
-1.4650241955255132`, -1.430755802766193, -1.4042067830875913`, \
-1.3018866229987, -1.2507800118207644`, -1.2364530874740836`, \
-1.2255722141636205`, -1.2228520173189021`, -1.0894952762761034`, \
-1.0894015666714374`}, "LeftBoundary" -> -1.430755802766193, "LeftScale" -> 
                    0.01713419637966007, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[7.629856546861745, 0.2480059748492769], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0},
                 "ID" -> 5495059474424677337|>], 
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f2" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f3" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f4" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f5" -> <|"Type" -> "Nominal", "Weight" -> 1|>, 
                  "f6" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Output" -> <|
                 "(f1f2f3f4f5f6)" -> <|
                   "Type" -> "NominalVector", "Weight" -> 6|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 4205694865483692036|>], 
              MachineLearning`MLProcessor[
              "EmbedNominalVector", <|
               "Invertibility" -> "Impossible", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "(f1f2f3f4f5f6)" -> <|
                   "Type" -> "NominalVector", "Weight" -> 6|>|>, 
                "Index" -> {<|
                  "high" -> 1, "low" -> 2, "medium" -> 3, "very high" -> 
                   4|>, <|"high" -> 1, "low" -> 2, "medium" -> 3, "very high" -> 
                   4|>, <|2 -> 1, 3 -> 2, 4 -> 3, Interval[{5, 
                    DirectedInfinity[1]}] -> 4|>, <|
                  2 -> 1, 4 -> 2, Interval[{5, 
                    DirectedInfinity[1]}] -> 3|>, <|
                  "large" -> 1, "medium" -> 2, "small" -> 3|>, <|
                  "high" -> 1, "low" -> 2, "medium" -> 3|>}, 
                "Output" -> <|
                 "(f1f2f3f4f5f6)" -> <|
                   "Weight" -> 6, "Type" -> "NumericalVector"|>|>, 
                "EmbeddingVectors" -> {
                 RawArray["Real32",{{0., 0., 
                   0.}, {-0.12314196676015854`, -0.861851692199707, 
                   0.10532767325639725`}, {
                   0.8298183679580688, -0.28949323296546936`, 
                   0.03427627682685852}, {-0.21032746136188507`, \
-0.9608260989189148, 0.23128949105739594`}, {
                   0.38437455892562866`, -0.8375512361526489, 
                   0.1422276645898819}}], 
                  RawArray["Real32",{{0., 0., 
                   0.}, {-0.7579416036605835, -0.09459903836250305, \
-0.3054908514022827}, {
                   0.24499356746673584`, -0.543777346611023, \
-0.2311936318874359}, {-0.10140641778707504`, -0.3524824380874634, 
                   0.4795919358730316}, {
                   0.015052562579512596`, -0.48196539282798767`, \
-0.9609097242355347}}], 
                  RawArray["Real32",{{0., 0., 0.}, {
                   0.6297598481178284, -0.11219660192728043`, \
-0.935377836227417}, {-0.4175759255886078, 
                   0.2534555494785309, -0.4526385962963104}, {
                   0.3543681204319, -0.37547722458839417`, 
                   0.5876661539077759}, {-1.1276206970214844`, 
                   0.17602579295635223`, -1.0098364353179932`}}], 
                  RawArray["Real32",{{0., 0., 0.}, {
                   0.24657385051250458`, -0.8256815671920776, 
                   0.8846340179443359}, {0.6182233691215515, 
                   0.3115577697753906, -0.14296697080135345`}, \
{-0.5634363889694214, -0.1850573867559433, 0.1582949459552765}}], 
                  RawArray["Real32",{{0., 0., 0.}, {
                   0.34666627645492554`, -0.5679200291633606, 
                   0.10750995576381683`}, {
                   0.6412044167518616, -0.1759643256664276, 
                   0.6604856848716736}, {-0.8092290163040161, 
                   0.12987354397773743`, -1.1753407716751099`}}], 
                  RawArray["Real32",{{0., 0., 0.}, {0.05746559798717499, 
                   0.12715618312358856`, 0.1291729062795639}, {
                   0.21379514038562775`, -0.6005780100822449, 
                   0.36645910143852234`}, {-0.02309783734381199, \
-0.22358153760433197`, 0.6648218631744385}}]}, "Version" -> {13.1, 0}, "ID" -> 
                272386066020895428|>]}, "Invertibility" -> "Impossible", 
            "StructurePreserving" -> True, "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                 "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 8893333862155911631|>], 
              MachineLearning`MLProcessor[
              "IntegerEncodeNominalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Index" -> {<|
                  "acceptable" -> 1, "good" -> 2, "unacceptable" -> 3, 
                   "very good" -> 4|>}, "MissingCode" -> 0, 
                "Version" -> {13.1, 0}, "ID" -> 3368851722935717418, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {4}|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 6942004589393111231|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 4|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", 
         "Marginal" -> <|
          "acceptable" -> 0.227994227994228, "good" -> 0.04329004329004329, 
           "unacceptable" -> 0.6926406926406926, "very good" -> 
           0.03607503607503607|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> 
          MachineLearning`MLProcessor[
           "KeyIndexSplit", <|
            "Index" -> "Acceptability", 
             "Order" -> {
              "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
               "Cargo", "Safety", "Acceptability"}|>], "PreferLabeled" -> 
          True, "KeepLabelsFormat" -> False|>], "RecalibrationFunction" -> 
       None, "ImputationStrategy" -> Automatic, "Prior" -> Automatic, 
       "Utility" -> 
       SparseArray[
        Automatic, {4, 5}, 0., {
         1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       "Memory", "BatchProcessing" -> Automatic, 
       "Model" -> <|
        "Method" -> "NeuralNetwork", "Network" -> 
         NetChain[<|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
cFUh/T9EFu3/
                   "], "Biases" -> 
                  RawArray["Real32",{-0.14151161909103394`, 
                    0.181189626455307, -0.10466769337654114`, \
-0.2077053189277649, 
                    0.0883769765496254, -0.21449072659015656`, \
-0.20492692291736603`, 0.11879973113536835`, 
                    0.19001705944538116`, -0.1973552703857422, 
                    0.14196911454200745`, 
                    0.06061756610870361, -0.1630895882844925, 
                    0.0015528978547081351`, -0.019544236361980438`, \
-0.19362524151802063`, -0.08886230736970901, -0.3445886969566345, 
                    0.2028679996728897, -0.1229017823934555, \
-0.12420354783535004`, -0.1491868793964386, -0.04626939445734024, 
                    0.10800476372241974`, -0.13900579512119293`, \
-0.16450759768486023`, -0.24966943264007568`, 
                    0.17121048271656036`, -0.14999428391456604`, \
-0.1330750733613968, 0.2752665579319, 
                    0.058282747864723206`, -0.1502441167831421, \
-0.24120116233825684`, -0.22375954687595367`, -0.2754586637020111, \
-0.17372222244739532`, 0.20720116794109344`, 
                    0.1669532060623169, -0.11877211928367615`, 
                    0.1377328783273697, 
                    0.14382711052894592`, -0.16925354301929474`, 
                    0.1921849101781845, 
                    0.15992730855941772`, -0.196363165974617, 
                    0.0778680145740509, 0.2140202522277832, 
                    0.16157454252243042`, 0.1905343234539032}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                  "$InputSize" -> 18, "$InputDimensions" -> {18}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{18}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[
                   "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "3" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
98dz/HdDMto3mi7TRvw/7v8MHA==
                   "], "Biases" -> 
                  RawArray["Real32",{0.11058614403009415`, 0.1459028422832489,
                     0.09743592888116837, -0.13298943638801575`, \
-0.16004578769207, 0.036182701587677, 0.12315712869167328`, 
                    0.05935421213507652, -0.004007590934634209, \
-0.13807764649391174`, -0.15822666883468628`, -0.10480120778083801`, 
                    0.04406538978219032, -0.14523708820343018`, \
-0.19434992969036102`, -0.09664028882980347, 0.16884662210941315`, 
                    
                    0.039723534137010574`, -0.12681405246257782`, \
-0.10558248311281204`, 
                    0.008313377387821674, -0.16909171640872955`, \
-0.14977721869945526`, 
                    0.15547481179237366`, -0.1264285296201706, \
-0.081388458609581, 0.14261552691459656`, 0.06620728224515915, 
                    0.14516647160053253`, 
                    0.05168995261192322, -0.12877553701400757`, \
-0.07333686947822571, 0.1208353340625763, -0.11832599341869354`, 
                    0.10357934981584549`, -0.11235950142145157`, 
                    0.09922627359628677, 
                    0.08616095781326294, -0.13851280510425568`, 
                    0.083940789103508, 0.049086518585681915`, 
                    0.04191446676850319, -0.1144600659608841, \
-0.03270066902041435, -0.17829328775405884`, 0.056076716631650925`, 
                    0.13940095901489258`, 0.0495423823595047, 
                    0.13049697875976562`, 0.16978049278259277`}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                  "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "4" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[
                   "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "5" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1:eJwViXtMU2ccQGvl2RZEmSgVV1CIrGosFIjC/X4XNEgdgihzEmYz6KDhOQ2o
MHkYJa6tgAqCAplCYTAeEZybgnC/32WwFeW5YGKXCYwNRKNzaeThfOCGf5yT
nBwPzZEDWqFAIMi0W9KB+KyQjIz4r6Jt3kdifJrSN+39tFrCd4mzrA1sSVPi
zzFa1Lj50df7vboUxliU9zkgpLjgmdkn0D3mjNd9g7BS5khFpkz8lR8i+d21
NCEqFP4VCfHKKzEfelBGT7Q+JX99XUsKaRK8DLGD0LhOUK6Z4PwnpaRtpRN4
FvTRpA3l5MWkPVt2qwSnB3+B5CvLwCHgKbDD1WidaEOVH3aS/u16vOFsoeOP
ctHwXynR2e3DbIUf2XarEoMHbDB3dR/1uVMKXqI6rPYsBp3JD3qlczTqgpz+
pGnEf3ryIEd7F9TkGpnIDocseQnTOyxi7heXQ+WyEfJQJgZLRB3RC/sgorMD
ts0xsEKYzM0kLDIqSonGPAyHX7xmTD7jMO+tQocH55h9bXrOOzAaV0dY8xUe
RV0tWWacs1SQDd+Pgm+gnukM9eQNEYskvTEZA789RM7KbqIKfSA4TMKW5k0z
0pRs1M0cx9qTJvLk9+PQ61gHKbwZg9s5erRgEzbJ44g49wcsOkXp1RoJO+V0
EQTnpaQpsgLfvpkg44pAmHy1Bi4OvaQN+V/ixo9KsGdBwI/9KIf65A94//oT
KLhqxQ8FnAb13jA4/dyMzt8p+WcKM80uV+O7aVs81HsdWtbXYkirK7pJdFBm
/gwabuggTyvGraPtuGdgMyasc2cbMgmGb3ZhxZEi/mC4AUYST4FqVMiLVZdg
12MD0belQr3VTn6iuYub3SpA+z9a4V6eJ1TXfAI1bvNcrKUEeJ9iXC6bxWIP
Ca5KWAGFXhbYrd5ItIrzWO4qhe6/T9L6nTpiHnsOC7uOAbjf46IvV0JOli3r
Pj3AnatKxUXNZVJ2ezn7hbYZJA8u4O4AW/ZPWwOsDGrBqaYOptC/kav4OCYo
pyydiXXZg+2/pWOBMQ7GrCGoaCofLTlGCKuK3uG4ah3bPDIIXvfrSNTAO+j5
/BtiiYwBvwVHMG7vB8Nabxwx2rPzHTdBPM/hpx3OqI7agab+u/g/mbaE8A==

                   "], "Biases" -> 
                  RawArray[
                    "Real32",{-0.007236030418425798, -0.09619268029928207, 
                    0.09597259759902954, -0.13553404808044434`}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {4}, "$OutputSize" -> 4, "$InputSize" -> 
                  50, "$InputDimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"]}, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{18}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "13.1.3", "Unstable" -> False|>], 
         "Training" -> <|
          "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
           TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
           "TotalTrainingTime" -> 3.277165, "MeanInputsPerSecond" -> 
           29293.61200916036|>, "InputType" -> "NumericalVector", "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "(f1f2f3f4f5f6)" -> <|
               "Weight" -> 6, "Type" -> "NumericalVector"|>|>, 
            "Output" -> <|
             "(f1f2f3f4f5f6)" -> <|
               "Type" -> "NumericalVector", "Weight" -> 6|>|>, "Processors" -> {
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "(f1f2f3f4f5f6)" -> <|
                   "Weight" -> 6, "Type" -> "NumericalVector"|>|>, 
                "Mean" -> {0.22846340109655627`, -0.7331524952465475, 
                 0.12857418486134847`, -0.1470174637574805, \
-0.3693960287360927, -0.25297157897734485`, -0.1381125864186497, \
-0.013550857960233805`, -0.4477105686514862, 
                 0.10026117855035539`, -0.22988884392409223`, 
                 0.29694375132721407`, 
                 0.05750394298490419, -0.1986286429254379, \
-0.13614149543094045`, 0.08288515091555626, -0.23331746818281004`, 
                 0.3872654421790709}, 
                "StandardDeviation" -> {0.4217841444635364, 
                 0.26610671534521446`, 0.0719824374461276, 0.3714420548858829,
                  0.17188502945715212`, 0.5106448641794368, 0.682620419657301,
                  0.2497243771479237, 0.6360414783504174, 
                 0.49439015269206665`, 0.4649285469405732, 0.4304973939924269,
                  0.6297890981361854, 0.2834486698239679, 0.7746989060734015, 
                 0.09846349258259571, 0.2971065188725669, 
                 0.21897662978258314`}, 
                "Output" -> <|
                 "(f1f2f3f4f5f6)" -> <|
                   "Type" -> "NumericalVector", "Weight" -> 6|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 7167940750356708679|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 6|>, 
                "Key" -> "(f1f2f3f4f5f6)", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "FeatureNumber" -> 18, "Calibrator" -> 
         None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>,
            "NetworkDepth" -> <|"Value" -> 2, "Options" -> <||>|>, 
           "NumberOfParameters" -> <|"Value" -> 3600, "Options" -> <||>|>, 
           "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
           "Dropout" -> <|"Value" -> None, "Options" -> <||>|>, 
           "NetInitializationMethod" -> <|
            "Value" -> Automatic, "Options" -> <||>|>, 
           "OptimizationMethod" -> <|
            "Value" -> {"ADAM", "L2Regularization" -> None}, 
             "Options" -> <||>|>, 
           MaxTrainingRounds -> <|"Value" -> 100, "Options" -> <||>|>, 
           ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
           TrainingProgressReporting -> <|
            "Value" -> None, "Options" -> <||>|>, 
           "NetTrainOptions" -> <|
            "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"},
              "Options" -> <||>|>, 
           "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "ValidationSetRatio" -> <|
            "Value" -> 0.15009041591320071`, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
         "PreprocessingTime" -> 0.401929`6.055694336054277, "LossName" -> 
         "MeanCrossEntropy", "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[0.09102929754751289, 0.023607494088640154`], "Accuracy" -> 
            Around[0.9761613127009874, 0.012949449812749267`], 
            "EvaluationTime" -> 0.0006881501464423077, "TestSize" -> 276, 
            "ModelMemory" -> 58320, "ModelUtility" -> 0.2778097519618762, 
            "TrainingSize" -> 1106, "TrainingTime" -> 3.1622776601683795`, 
            "TrainingMemory" -> 956544, "ExperimentCount" -> 1, 
            "MeanCrossEntropyHistory" -> {
              Around[0.09102929754751289, 0.016693019156898786`]}, 
            "AccuracyHistory" -> {
              Around[0.9761613127009874, 0.009156643775229874]}, 
            "Configuration" -> {
             "NeuralNetwork", "NetworkType" -> "FullyConnected", 
              "NetworkDepth" -> 2, "NumberOfParameters" -> 3600, 
              "ActivationFunction" -> "SELU", "L2Regularization" -> None, 
              "Dropout" -> None, "NetInitializationMethod" -> Automatic, 
              "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
              MaxTrainingRounds -> 100, ValidationSet -> Automatic, 
              "EarlyStopping" -> False, TrainingProgressReporting -> None, 
              "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}|>, 
           
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
             "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
             "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
             "AccuracyHistory", "Configuration"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType}]}], <||>], "Configurations" -> 
         Dataset[<|<|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 8600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[4.5722078573533445`, 0.27210027194614067`], 
                 "Accuracy" -> 
                 Around[0.6211574386771406, 0.01848102720571032], 
                 "EvaluationTime" -> 0.00006727785530077912, "TestSize" -> 
                 1372, "ModelMemory" -> 101904, 
                 "ModelUtility" -> -3.6582194587192123`, "TrainingSize" -> 10,
                  "TrainingTime" -> 3.981071705534973, "TrainingMemory" -> 
                 480808, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[4.5722078573533445`, 0.19240394745581973`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6211574386771406, 0.01306805966045084]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00006727785530077912, "MeanCrossEntropy" -> 
                Around[4.5722078573533445`, 0.27210027194614067`], 
                "ModelMemory" -> 101904, "TrainingMemory" -> 480808, 
                "TrainingTime" -> 58.99948267602831|>, "Index" -> 1|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 10|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.146953849088694, 0.06512858825223299], "Accuracy" -> 
                 Around[0.5636622679613927, 0.04946899254797612], 
                 "EvaluationTime" -> 0.00020483898119853466`, "TestSize" -> 
                 200, "ModelMemory" -> 62416, 
                 "ModelUtility" -> -2.2227347999526073`, "TrainingSize" -> 50,
                  "TrainingTime" -> 0.15848931924611134`, "TrainingMemory" -> 
                 309176, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.146953849088694, 0.04605286640226046]}, 
                 "AccuracyHistory" -> {
                   Around[0.5636622679613927, 0.034979860089140696`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.6860334428196505, 0.060102721049976764`], 
                 "Accuracy" -> 
                 Around[0.8161029716258141, 0.031470751638048605`], 
                 "EvaluationTime" -> 0.0003330981347269232, "TestSize" -> 300,
                  "ModelMemory" -> 62416, 
                 "ModelUtility" -> -1.7148737042326025`, "TrainingSize" -> 
                 250, "TrainingTime" -> 0.31622776601683794`, 
                 "TrainingMemory" -> 377728, "ExperimentCount" -> 1, 
                 "MeanCrossEntropyHistory" -> {
                   Around[0.6860334428196505, 0.04249904162220202]}, 
                 "AccuracyHistory" -> {
                   Around[0.8161029716258141, 0.022253181892301816`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.8053747043406867`, 0.05642796703407158], "Accuracy" -> 
                 Around[0.4158072905455017, 0.020925576627904317`], 
                 "EvaluationTime" -> 0.0005779874435747101, "TestSize" -> 
                 1100, "ModelMemory" -> 62416, 
                 "ModelUtility" -> -2.6713325971918254`, "TrainingSize" -> 10,
                  "TrainingTime" -> 0.25118864315095796`, "TrainingMemory" -> 
                 297016, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.8053747043406867`, 0.03990059813836297]}, 
                 "AccuracyHistory" -> {
                   Around[0.4158072905455017, 0.014796617133829869`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.35134608706131215`, 0.03978009020685576], 
                 "Accuracy" -> 
                 Around[0.8678411635281399, 0.028749297744619536`], 
                 "EvaluationTime" -> 0.00022915055508466515`, "TestSize" -> 
                 276, "ModelMemory" -> 62416, 
                 "ModelUtility" -> -1.0507407082010345`, "TrainingSize" -> 
                 1106, "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                 948456, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.35134608706131215`, 0.028128771541480278`]}, 
                 "AccuracyHistory" -> {
                   Around[0.8678411635281399, 0.02032882338957159]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00022915055508466515`, 
                "MeanCrossEntropy" -> 
                Around[0.35134608706131215`, 0.03978009020685576], 
                "ModelMemory" -> 62416, "TrainingMemory" -> 948456, 
                "TrainingTime" -> 0.7847467847731369|>, "Index" -> 2|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.09102929754751289, 0.023607494088640154`], 
                 "Accuracy" -> 
                 Around[0.9761613127009874, 0.012949449812749267`], 
                 "EvaluationTime" -> 0.0006881501464423077, "TestSize" -> 276,
                  "ModelMemory" -> 58320, "ModelUtility" -> 
                 0.2778097519618762, "TrainingSize" -> 1106, "TrainingTime" -> 
                 3.1622776601683795`, "TrainingMemory" -> 956544, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.09102929754751289, 0.016693019156898786`]}, 
                 "AccuracyHistory" -> {
                   Around[0.9761613127009874, 0.009156643775229874]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.8964811821115559, 0.05631576825786373], "Accuracy" -> 
                 Around[0.7133756368331798, 0.017387908807273374`], 
                 "EvaluationTime" -> 0.00034673664508861804`, "TestSize" -> 
                 1332, "ModelMemory" -> 58320, 
                 "ModelUtility" -> -1.9714037318786193`, "TrainingSize" -> 50,
                  "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                 285536, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.8964811821115559, 0.03982126162286557]}, 
                 "AccuracyHistory" -> {
                   Around[0.7133756368331798, 0.012295108228276294`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.3429807556245192`, 0.13818489531614622`], 
                 "Accuracy" -> 
                 Around[0.6158817888808668, 0.01850340875462363], 
                 "EvaluationTime" -> 0.00020305462724692585`, "TestSize" -> 
                 1372, "ModelMemory" -> 58320, 
                 "ModelUtility" -> -2.9313466655000626`, "TrainingSize" -> 10,
                  "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                 285712, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.3429807556245192`, 0.09771147653560017]}, 
                 "AccuracyHistory" -> {
                   Around[0.6158817888808668, 0.013083885805460898`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.28191119077631227`, 0.0268670654279549], "Accuracy" -> 
                 Around[0.8990167017961164, 0.012596838847921973`], 
                 "EvaluationTime" -> 0.0002202740115369196, "TestSize" -> 
                 1132, "ModelMemory" -> 58320, 
                 "ModelUtility" -> -0.8209142104906325, "TrainingSize" -> 250,
                  "TrainingTime" -> 1.2589254117941673`, "TrainingMemory" -> 
                 373776, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.28191119077631227`, 0.01899788415468956]}, 
                 "AccuracyHistory" -> {
                   Around[0.8990167017961164, 0.008907310170879763]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0002202740115369196, "MeanCrossEntropy" -> 
                Around[0.28191119077631227`, 0.0268670654279549], 
                "ModelMemory" -> 58320, "TrainingMemory" -> 373776, 
                "TrainingTime" -> 10.121617336566537`|>, "Index" -> 3|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 18600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.08963151751650107, 0.04221312431395196], "Accuracy" -> 
                 Around[0.9791357409747539, 0.012137549581765668`], 
                 "EvaluationTime" -> 0.0003240319691030005, "TestSize" -> 276,
                  "ModelMemory" -> 187664, "ModelUtility" -> 
                 0.11165932133847212`, "TrainingSize" -> 1106, "TrainingTime" -> 
                 6.309573444801933, "TrainingMemory" -> 1169256, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.08963151751650107, 0.029849186457466155`]}, 
                 "AccuracyHistory" -> {
                   Around[0.9791357409747539, 0.008582543616254447]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.2240863679594245`, 0.14357091710562775`], 
                 "Accuracy" -> 
                 Around[0.7906775734525874, 0.02161228989770136], 
                 "EvaluationTime" -> 0.0007772944109511788, "TestSize" -> 700,
                  "ModelMemory" -> 187664, 
                 "ModelUtility" -> -2.435754149761074, "TrainingSize" -> 50, 
                 "TrainingTime" -> 1., "TrainingMemory" -> 780096, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.2240863679594245`, 0.10151996906656106`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7906775734525874, 0.015282196743634147`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.4340717995649587, 0.04616762742632497], "Accuracy" -> 
                 Around[0.8493098429585471, 0.01492641153241974], 
                 "EvaluationTime" -> 0.0003877717060035205, "TestSize" -> 
                 1132, "ModelMemory" -> 187664, 
                 "ModelUtility" -> -1.3968757488568753`, "TrainingSize" -> 
                 250, "TrainingTime" -> 1.9952623149688797`, "TrainingMemory" -> 
                 840352, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.4340717995649587, 0.03264544242444842]}, 
                 "AccuracyHistory" -> {
                   Around[0.8493098429585471, 0.010554566813355084`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0003877717060035205, "MeanCrossEntropy" -> 
                Around[0.4340717995649587, 0.04616762742632497], 
                "ModelMemory" -> 187664, "TrainingMemory" -> 840352, 
                "TrainingTime" -> 17.3393835219499|>, "Index" -> 4|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 18600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.37168744234195067`, 0.06138078981133629], 
                 "Accuracy" -> 
                 Around[0.8929724590325544, 0.017756003513421006`], 
                 "EvaluationTime" -> 0.0005729130857749843, "TestSize" -> 600,
                  "ModelMemory" -> 164368, 
                 "ModelUtility" -> -1.2331962386303115`, "TrainingSize" -> 
                 250, "TrainingTime" -> 1.9952623149688797`, "TrainingMemory" -> 
                 683920, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.37168744234195067`, 0.04340277271018203]}, 
                 "AccuracyHistory" -> {
                   Around[0.8929724590325544, 0.012555390491112156`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.7690385100499966`, 0.1667625598149496], "Accuracy" -> 
                 Around[0.6062976552481879, 0.020601568145856446`], 
                 "EvaluationTime" -> 0.0005071606602769552, "TestSize" -> 
                 1100, "ModelMemory" -> 164368, 
                 "ModelUtility" -> -3.220876683857752, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                 587920, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.7690385100499966`, 0.1179189368931781]}, 
                 "AccuracyHistory" -> {
                   Around[0.6062976552481879, 0.014567508539011861`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0005071606602769552, "MeanCrossEntropy" -> 
                Around[2.7690385100499966`, 0.1667625598149496], 
                "ModelMemory" -> 164368, "TrainingMemory" -> 587920, 
                "TrainingTime" -> 10.715092815685152`|>, "Index" -> 5|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 8600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 300|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.194583785496335, 0.19343446926971108`], "Accuracy" -> 
                 Around[0.6168133280093175, 0.018368536511584353`], 
                 "EvaluationTime" -> 0.00040456834306917757`, "TestSize" -> 
                 1372, "ModelMemory" -> 93800, 
                 "ModelUtility" -> -3.2901150116252373`, "TrainingSize" -> 10,
                  "TrainingTime" -> 1.5848931924611136`, "TrainingMemory" -> 
                 384328, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.194583785496335, 0.13677882493583354`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6168133280093175, 0.012988516727813985`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00040456834306917757`, 
                "MeanCrossEntropy" -> 
                Around[3.194583785496335, 0.19343446926971108`], 
                "ModelMemory" -> 93800, "TrainingMemory" -> 384328, 
                "TrainingTime" -> 23.488117112273706`|>, "Index" -> 6|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 18600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.8197448601870514`, 0.15407278573948416`], 
                 "Accuracy" -> 
                 Around[0.7681197493442067, 0.016233908383616182`], 
                 "EvaluationTime" -> 0.0005168685314425036, "TestSize" -> 
                 1332, "ModelMemory" -> 164368, 
                 "ModelUtility" -> -2.805891685476432, "TrainingSize" -> 50, 
                 "TrainingTime" -> 5.011872336272724, "TrainingMemory" -> 
                 617752, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.8197448601870514`, 0.10894591159269124`]}, 
                 "AccuracyHistory" -> {
                   Around[0.7681197493442067, 0.011479106703216146`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0005168685314425036, "MeanCrossEntropy" -> 
                Around[1.8197448601870514`, 0.15407278573948416`], 
                "ModelMemory" -> 164368, "TrainingMemory" -> 617752, 
                "TrainingTime" -> 74.27594802356177|>, "Index" -> 7|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.29403327569319443`, 0.03932904399651967], 
                 "Accuracy" -> 
                 Around[0.9098419509282913, 0.011996499990282437`], 
                 "EvaluationTime" -> 0.00008681470201758184, "TestSize" -> 
                 1132, "ModelMemory" -> 58320, 
                 "ModelUtility" -> -0.8705335057683248, "TrainingSize" -> 250,
                  "TrainingTime" -> 10., "TrainingMemory" -> 351080, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.29403327569319443`, 0.027809833707523133`]}, 
                 "AccuracyHistory" -> {
                   Around[0.9098419509282913, 0.008482806493633062]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.5876025435917676`, 0.22692353204588206`], 
                 "Accuracy" -> 
                 Around[0.6246522534683608, 0.018394245585487717`], 
                 "EvaluationTime" -> 0.00031189803436950574`, "TestSize" -> 
                 1372, "ModelMemory" -> 58320, 
                 "ModelUtility" -> -3.3582514493484092`, "TrainingSize" -> 10,
                  "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
                 273672, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.5876025435917676`, 0.16045916832044602`]}, 
                 "AccuracyHistory" -> {
                   Around[0.6246522534683608, 0.01300669578830908]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.00031189803436950574`, 
                "MeanCrossEntropy" -> 
                Around[3.5876025435917676`, 0.22692353204588206`], 
                "ModelMemory" -> 58320, "TrainingMemory" -> 273672, 
                "TrainingTime" -> 53.70267726352701|>, "Index" -> 8|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.10590330154399025`, 0.028414184949045067`], 
                 "Accuracy" -> 
                 Around[0.9710001978599868, 0.014256985156258202`], 
                 "EvaluationTime" -> 0.00041019731090850185`, "TestSize" -> 
                 276, "ModelMemory" -> 62416, "ModelUtility" -> 
                 0.11862582820774348`, "TrainingSize" -> 1106, "TrainingTime" -> 
                 3.981071705534973, "TrainingMemory" -> 986160, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.10590330154399025`, 0.0200918628593585]}, 
                 "AccuracyHistory" -> {
                   Around[0.9710001978599868, 0.010081210883266124`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.2470665473441196`, 0.13307038058297638`], 
                 "Accuracy" -> 
                 Around[0.6176776136790039, 0.01842307108792603], 
                 "EvaluationTime" -> 0.000405204733288256, "TestSize" -> 1372,
                  "ModelMemory" -> 62416, 
                 "ModelUtility" -> -2.895732548673068, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                 296888, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.2470665473441196`, 0.09409496848529728]}, 
                 "AccuracyHistory" -> {
                   Around[0.6176776136790039, 0.013027078496554321`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.000405204733288256, "MeanCrossEntropy" -> 
                Around[2.2470665473441196`, 0.13307038058297638`], 
                "ModelMemory" -> 62416, "TrainingMemory" -> 296888, 
                "TrainingTime" -> 12.700902206251245`|>, "Index" -> 9|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 8600|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 10|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[0.2626592930291636, 0.03549734171705872], "Accuracy" -> 
                 Around[0.8904866053987731, 0.026502625634261496`], 
                 "EvaluationTime" -> 0.000995521083966344, "TestSize" -> 276, 
                 "ModelMemory" -> 101904, 
                 "ModelUtility" -> -0.8161649012419092, "TrainingSize" -> 
                 1106, "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                 1012984, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.2626592930291636, 0.025100411042228342`]}, 
                 "AccuracyHistory" -> {
                   Around[0.8904866053987731, 0.01874018630523473]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.622240942702334, 0.0474324350170228], "Accuracy" -> 
                 Around[0.4223703251465125, 0.01863988008159035], 
                 "EvaluationTime" -> 0.00022897192394878054`, "TestSize" -> 
                 1372, "ModelMemory" -> 101904, 
                 "ModelUtility" -> -2.616030556943823, "TrainingSize" -> 10, 
                 "TrainingTime" -> 0.31622776601683794`, "TrainingMemory" -> 
                 447496, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.622240942702334, 0.03353979644872707]}, 
                 "AccuracyHistory" -> {
                   Around[0.4223703251465125, 0.013180385606196592`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.5079075602598763, 0.031736742733066994`], 
                 "Accuracy" -> 
                 Around[0.8151969662775643, 0.016267526734640162`], 
                 "EvaluationTime" -> 0.0002366474107429308, "TestSize" -> 
                 1132, "ModelMemory" -> 101904, 
                 "ModelUtility" -> -1.461355133207583, "TrainingSize" -> 250, 
                 "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                 527464, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.5079075602598763, 0.022441265999324552`]}, 
                 "AccuracyHistory" -> {
                   Around[0.8151969662775643, 0.011502878467197513`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0002366474107429308, "MeanCrossEntropy" -> 
                Around[0.5079075602598763, 0.031736742733066994`], 
                "ModelMemory" -> 101904, "TrainingMemory" -> 527464, 
                "TrainingTime" -> 3.401520371971754|>, "Index" -> 10|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["NeuralNetwork"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                 "ModelMemory", "ModelUtility", "TrainingSize", 
                 "TrainingTime", "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "AccuracyHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 
         1382, "PreprocessorEvaluationTime" -> 4.21875*^-6, 
         "PreprocessorMemory" -> 94088, "InputDimension" -> 18, 
         "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -0.8472130263720676, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.868970440615246`16.340170400833458*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 10, "TimeBudgets" -> 5.861760790364184, 
             "ElapsedTimes" -> 16.465788, "ExperimentCounts" -> 8|>, <|
            "TrainingSizes" -> 50, "TimeBudgets" -> 8.373943986234558, 
             "ElapsedTimes" -> 9.178283, "ExperimentCounts" -> 4|>, <|
            "TrainingSizes" -> 250, "TimeBudgets" -> 11.962777123192216`, 
             "ElapsedTimes" -> 18.246313, "ExperimentCounts" -> 6|>, <|
            "TrainingSizes" -> 1106, "TimeBudgets" -> 17.0896816045603, 
             "ElapsedTimes" -> 16.763523, "ExperimentCounts" -> 5|>}, 
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 4], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"medium"}, "ID" -> 
              2846111867015398573|>, 
            "f2" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"high"}, "ID" -> 
              41728420326286313|>, 
            "f3" -> <|"Type" -> "Nominal", "Weight" -> 1, "Values" -> {
                Interval[{5, 
                  DirectedInfinity[1]}]}, "ID" -> 1436697572522429983|>, 
            "f4" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {4}, "ID" -> 
              536027689597629633|>, 
            "f5" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"small"}, "ID" -> 
              5753609278033805624|>, 
            "f6" -> <|
             "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"medium"}, "ID" -> 
              8080186329754682489|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 61.169972, 
         "MaxTrainingMemory" -> 2033248, "DataMemory" -> 1781648, 
         "FunctionMemory" -> 352848, "LanguageVersion" -> {13.1, 0}, "Date" -> 
         DateObject[{2022, 8, 8, 18, 0, 40.649076`8.361625656281715}, 
           "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|
     "Input" -> {{"medium", "high", 3, 4, "large", "medium"}, {
        "medium", "low", 4, 2, "medium", "high"}, {
        "low", "medium", 3, 4, "large", "high"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "low", "high", 4, 2, "small", "high"}, {
        "very high", "low", 2, 4, "medium", "high"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "very high", "very high", 2, 4, "medium", "high"}, {
        "very high", "medium", 2, 2, "medium", "high"}, {
        "low", "medium", 4, 2, "large", "low"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "very high", 2, 2, "small", "low"}, {
        "medium", "low", 2, 4, "medium", "medium"}, {
        "medium", "high", 4, 4, "small", "medium"}, {
        "very high", "low", 4, 4, "small", "medium"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "high", 4, 4, "large", "high"}, {
        "low", "very high", 3, 2, "large", "medium"}, {"low", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "very high", "medium", 4, 2, "small", "low"}, {
        "very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "very high", "low", 3, 2, "medium", "medium"}, {"very high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "low", "medium", 3, 2, "medium", "low"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "very high", "very high", 3, 2, "medium", "low"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "high", "high", 3, 4, "small", "high"}, {
        "very high", "very high", 2, 2, "small", "low"}, {
        "high", "low", 4, 2, "medium", "medium"}, {"very high", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "low", 4, 2, "large", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {
        "medium", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "very high", "very high", 2, 2, "large", "low"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 2, 4, "large", "high"}, {
        "high", "very high", 4, 2, "large", "high"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "medium", "medium", 4, 2, "medium", "high"}, {"low", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "medium", "very high", 3, 4, "small", "low"}, {
        "high", "low", 2, 4, "large", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {
        "very high", "high", 3, 4, "medium", "high"}, {"high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "high", 2, 2, "medium", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "high", "very high", 3, 4, "large", "medium"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "high", 3, 4, "medium", "low"}, {
        "very high", "low", 4, 2, "large", "medium"}, {
        "very high", "high", 4, 4, "small", "high"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "medium", "high", 3, 4, "small", "high"}, {
        "high", "medium", 3, 4, "medium", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "very high", "high", 2, 2, "small", "low"}, {
        "medium", "low", 4, 2, "medium", "medium"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "medium", "high", 4, 2, "large", "medium"}, {
        "high", "low", 2, 4, "medium", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "medium", "low", 4, 4, "large", "medium"}, {
        "very high", "high", 3, 4, "medium", "medium"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "very high", 3, 2, "large", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "low", 3, 4, "medium", "low"}, {
        "very high", "high", 4, 4, "large", "low"}, {
        "high", "low", 2, 2, "large", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "high", "high", 2, 2, "large", "medium"}, {
        "medium", "high", 2, 4, "small", "high"}, {
        "medium", "medium", 2, 2, "large", "high"}, {
        "low", "medium", 2, 2, "medium", "low"}, {
        "high", "medium", 3, 2, "large", "medium"}, {"very high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "very high", 2, 4, "large", "medium"}, {
        "medium", "medium", 2, 4, "large", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "low", "low", 3, 4, "medium", "high"}, {"low", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "high", "high", 3, 4, "small", "low"}, {
        "medium", "medium", 3, 2, "large", "high"}, {
        "high", "low", 4, 2, "small", "low"}, {"medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "high", 3, 2, "medium", "high"}, {"very high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "high", "high", 4, 2, "large", "low"}, {"medium", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "high", 3, 2, "small", "low"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "medium", 2, 2, "large", "high"}, {
        "high", "low", 2, 2, "large", "low"}, {
        "low", "medium", 2, 4, "medium", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "very high", "high", 4, 2, "large", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "high", "low", 4, 2, "medium", "low"}, {
        "medium", "medium", 4, 4, "large", "high"}, {
        "medium", "medium", 3, 4, "small", "high"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "high", "low", 2, 4, "medium", "low"}, {
        "very high", "medium", 4, 4, "small", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "very high", 2, 2, "small", "high"}, {
        "very high", "medium", 4, 2, "small", "medium"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "high", "low", 2, 2, "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {
        "low", "high", 3, 4, "small", "high"}, {
        "very high", "high", 4, 4, "large", "medium"}, {
        "low", "high", 3, 2, "medium", "low"}, {"medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "low", 4, 4, "large", "low"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "low", "high", 4, 4, "small", "low"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "low", 4, 4, "large", "high"}, {"low", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 2, 2, "large", "low"}, {
        "medium", "very high", 2, 4, "small", "low"}, {
        "very high", "very high", 4, 4, "large", "medium"}, {
        "very high", "low", 2, 2, "small", "low"}, {
        "very high", "low", 2, 4, "large", "high"}, {"low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "low", 3, 4, "large", "medium"}, {
        "very high", "high", 3, 2, "medium", "low"}, {
        "low", "very high", 2, 2, "medium", "medium"}, {
        "high", "low", 2, 4, "small", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "very high", 3, 2, "small", "low"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "medium", 2, 4, "large", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "very high", 4, 2, "large", "low"}, {
        "very high", "medium", 3, 2, "small", "high"}, {
        "very high", "very high", 2, 4, "large", "low"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "high", 2, 2, "small", "high"}, {
        "medium", "medium", 4, 2, "small", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "very high", "low", 4, 4, "medium", "low"}, {
        "very high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "medium", 3, 2, "large", "high"}, {
        "low", "medium", 2, 4, "medium", "high"}, {
        "low", "low", 2, 2, "small", "medium"}, {"low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "low", 3, 2, "medium", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {
        "very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "medium", 2, 2, "small", "high"}, {
        "medium", "low", 4, 2, "small", "high"}, {
        "low", "high", 4, 4, "large", "high"}, {"very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "medium", "medium", 2, 2, "large", "low"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "very high", "medium", 4, 4, "medium", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {"low", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "very high", "medium", 3, 2, "small", "low"}, {
        "high", "medium", 4, 4, "large", "medium"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "medium", 3, 2, "large", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "high", "low", 3, 4, "large", "high"}, {
        "very high", "low", 2, 2, "large", "low"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "high", "medium", 2, 4, "medium", "high"}, {"low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "low", "very high", 2, 4, "medium", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "medium", "medium", 4, 2, "large", "medium"}, {
        "very high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "low", 3, 4, "medium", "high"}, {
        "low", "medium", 2, 2, "large", "medium"}, {
        "medium", "low", 3, 4, "large", "high"}, {
        "medium", "high", 3, 2, "large", "medium"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "high", 3, 2, "medium", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "high", "very high", 3, 2, "small", "high"}, {"low", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "high", 2, 2, "large", "low"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "very high", "low", 4, 2, "medium", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "low", 4, 4, "small", "low"}, {
        "medium", "very high", 4, 4, "large", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "low", 2, 2, "large", "high"}, {"very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {
        "very high", "low", 2, 2, "small", "high"}, {"medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "high", 3, 4, "large", "high"}, {"very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {
        "low", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "very high", 2, 4, "large", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "medium", "high", 2, 2, "medium", "high"}, {
        "low", "medium", 3, 4, "small", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {
        "high", "high", 3, 2, "large", "medium"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "high", 2, 4, "large", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "very high", "very high", 2, 2, "medium", "medium"}, {
        "medium", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "low", "high", 3, 2, "small", "medium"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {
        "medium", "very high", 3, 4, "small", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "low"}, {
        "very high", "low", 2, 4, "small", "low"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "medium", "very high", 2, 2, "medium", "medium"}, {
        "high", "low", 3, 4, "small", "high"}, {
        "very high", "low", 4, 2, "large", "low"}, {
        "low", "high", 2, 2, "small", "low"}, {
        "high", "very high", 2, 4, "small", "high"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "high", "very high", 3, 4, "large", "low"}, {
        "medium", "medium", 2, 2, "medium", "medium"}, {
        "low", "low", 3, 2, "medium", "high"}, {
        "low", "very high", 4, 4, "medium", "low"}, {"very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "low", 3, 4, "large", "low"}, {
        "high", "low", 4, 4, "medium", "low"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 4, 4, "medium", "medium"}, {"low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "medium", 3, 4, "medium", "low"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "high", "high", 4, 4, "small", "medium"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "high", "low", 2, 4, "small", "low"}, {
        "medium", "low", 2, 4, "large", "high"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "medium", "very high", 2, 2, "small", "low"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "medium", "very high", 3, 2, "large", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {
        "very high", "high", 2, 2, "medium", "low"}, {
        "high", "high", 2, 4, "medium", "low"}, {
        "high", "low", 4, 4, "medium", "high"}, {"high", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "high", "low", 3, 2, "large", "medium"}, {
        "very high", "high", 3, 4, "large", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "very high", "low", 3, 4, "large", "medium"}, {
        "medium", "low", 2, 2, "medium", "high"}, {
        "high", "medium", 2, 4, "medium", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {
        "low", "medium", 4, 2, "large", "high"}, {
        "very high", "high", 2, 4, "large", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 4, 4, "medium", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "low", "medium", 2, 4, "large", "high"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "high", "very high", 3, 2, "medium", "low"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "very high", "low", 3, 4, "medium", "medium"}, {
        "low", "high", 2, 2, "medium", "medium"}, {"very high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}}, 
      "Output" -> {
       "acceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "good", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", "good", 
        "good", "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "very good", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "very good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "good", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "very good", "unacceptable", "good", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "very good", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "acceptable", "acceptable", "acceptable", "very good", "unacceptable",
         "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable"}|>, 
    "Predictions" -> {
     "acceptable", "unacceptable", "very good", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", "good", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "good", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "good", "unacceptable", "good", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "very good", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "very good", "good", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "very good", "unacceptable", "very good", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", "very good",
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "good", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "very good", "unacceptable", 
      "unacceptable", "acceptable", "good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "acceptable", "very good", "unacceptable", "good", 
      "unacceptable", "very good", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "unacceptable", "very good", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "unacceptable", "very good",
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", "good",
       "unacceptable", "acceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "very good", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "very good", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "very good", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "very good", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "acceptable", "acceptable", "acceptable", "very good", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable"}, "LogProbabilities" -> CompressedData["
1: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
Whs8JdQbFiVawP8B5ipgMQ==
     "], "CountMatrix" -> {{68, 1, 0, 0, 0}, {0, 8, 0, 2, 0}, {2, 1, 247, 1, 
     0}, {0, 0, 0, 16, 0}}, 
    "IndicesMatrix" -> {{{1, 7, 8, 15, 23, 29, 36, 42, 43, 44, 47, 49, 54, 60,
        64, 67, 73, 75, 79, 81, 82, 92, 101, 107, 112, 127, 135, 143, 146, 
       151, 152, 155, 163, 164, 170, 189, 190, 198, 202, 207, 213, 221, 222, 
       228, 233, 235, 243, 246, 248, 257, 259, 266, 278, 292, 305, 306, 315, 
       320, 323, 328, 331, 334, 335, 336, 337, 338, 342, 346}, {
       17}, {}, {}, {}}, {{}, {84, 86, 111, 172, 200, 214, 225, 255}, {}, {
       110, 239}, {}}, {{182, 301}, {52}, CompressedData["
1:eJwl0ulrDwAAANCftWFsMzvYbHa2zRyzzGzDtrZ2sDYJaxsJI1eO3OTIWe7I
USThgyO5yVnuJEdEOT9IORKSSHLklQ/vP3ipzdOHTGsRCAR+EEQwIbQklDa0
JYxwIogkimhiiKUDccTTiQQSSSKZFFJJI50MMsmiC9n0IIdcepFHPgUUUkRf
+lFMCaWUUU4FlVRRzQBqqKWOQQxmKPU00EgTwxnBSEYxmjE0M5ZxjGcCE5nE
ZKYwlRnMZBazmcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJW
trGdHexkF7vZw172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWu
cZ0b3OQWt7nDXe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nCV77x
PfD/709+8Zs//CUgdxDBhNCK1oTSljDCiaAdkbQnimhiiKUjccSTQCKdSSKZ
FFJJI50MMskim650ozs59CSXPHqTTx8KKKSI/hRTQilllFNBJVVUM5Aaaqlj
GPU00EgT/wB2QWZ+
       "], {227}, {}}, {{}, {}, {}, {3, 94, 122, 134, 157, 159, 165, 210, 223,
        241, 250, 262, 282, 296, 314, 339}, {}}}, 
    "ExtendedClasses" -> {"acceptable", "good", "unacceptable", "very good"}, 
    "Weights" -> SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0006794450867052022, "SingleEvaluationTime" -> 
    0.005826, "Version" -> {13.1, 0}|>]]], "Output",
 CellChangeTimes->{3.86896617348654*^9, 3.868966311492532*^9, 
  3.8689668453138514`*^9},
 CellLabel->
  "Out[432]=",ExpressionUUID->"525816a6-016d-40b3-a104-dcb961fcbf59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"classifier", ",", "\"\<FunctionMemory\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.868966450981901*^9, 3.868966454228724*^9}, {
  3.8689665175597897`*^9, 3.8689665219168673`*^9}, {3.868966557967691*^9, 
  3.868966625165139*^9}},
 CellLabel->
  "In[433]:=",ExpressionUUID->"b9f96706-1adc-45ac-abbd-80f2fee1da04"],

Cell[BoxData[
 TemplateBox[{"357.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.868966455151699*^9, 3.868966522419289*^9, {3.868966572943582*^9, 
   3.868966625736467*^9}, 3.868966851157722*^9},
 CellLabel->
  "Out[433]=",ExpressionUUID->"35e9f6e1-cd90-4de0-adc7-055c46b337ed"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 3.868447049013842*^9}, {
  3.8684475100383997`*^9, 3.868447512030362*^9}, {3.868964810263049*^9, 
  3.868964810772952*^9}},ExpressionUUID->"d293971e-29a8-48c6-9378-\
634a3d38a3fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"softWeights", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ExtractWeights", "[", "trainedSoftNet", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.868598558993527*^9, 3.8685985805202436`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"3b63cdad-d22a-47bf-85a7-a8a2628437dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"softWeights", ",", 
   RowBox[{"PlotRange", "->", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.868598583187772*^9, 3.8685985949050713`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"cc97491a-dd5c-471f-bfe6-ce6dda57775e"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.518], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.518], Thickness[Small]}], RectangleBox[{-3.2, 0}, {-3., 9.},
      RoundingRadius->0], RectangleBox[{-3., 0}, {-2.8, 17.},
      RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.6, 27.},
      RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.4, 51.},
      RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.2, 112.},
      RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2., 150.},
      RoundingRadius->0], RectangleBox[{-2., 0}, {-1.8, 159.},
      RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.6, 280.},
      RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.4, 412.},
      RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.2, 471.},
      RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1., 624.},
      RoundingRadius->0], RectangleBox[{-1., 0}, {-0.8, 806.},
      RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.6, 1282.},
      RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.4, 1483.},
      RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.2, 2126.},
      RoundingRadius->0], RectangleBox[{-0.2, 0}, {0., 3314.},
      RoundingRadius->0], RectangleBox[{0., 0}, {0.2, 5674.},
      RoundingRadius->0], RectangleBox[{0.2, 0}, {0.4, 2022.},
      RoundingRadius->0], RectangleBox[{0.4, 0}, {0.6, 2084.},
      RoundingRadius->0], RectangleBox[{0.6, 0}, {0.8, 524.},
      RoundingRadius->0], RectangleBox[{0.8, 0}, {1., 839.},
      RoundingRadius->0], RectangleBox[{1., 0}, {1.2, 36.},
      RoundingRadius->0], RectangleBox[{1.2, 0}, {1.4, 19.},
      RoundingRadius->0], RectangleBox[{1.4, 0}, {1.6, 4.},
      RoundingRadius->0], RectangleBox[{1.6, 0}, {1.8, 1.},
      RoundingRadius->0], RectangleBox[{1.8, 0}, {2., 2.},
      RoundingRadius->
       0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.3040000000000003`, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-3.2, 2.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.868598587213368*^9, 3.868598595534347*^9}, 
   3.8685995277293787`*^9, 3.868600221413623*^9, 3.868602949041443*^9, 
   3.868604296907655*^9, 3.8686706335951767`*^9, 3.868672097574623*^9, 
   3.868681481840914*^9, 3.868947735099625*^9, 3.868948276385453*^9, 
   3.868959188370422*^9, 3.868961360146255*^9, 3.868963094406687*^9, 
   3.868965910434655*^9, 3.8690319681917677`*^9, 3.869034213800087*^9, 
   3.8690403778000517`*^9, 3.869042975607337*^9, 3.869043303143322*^9, 
   3.8691056830996943`*^9, 3.869107210252901*^9},
 CellLabel->
  "Out[304]=",ExpressionUUID->"e6103b80-4921-4098-9ca4-b8cea3aeda4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a91410a-fdc1-4cfe-a437-7a311bcf3ad2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[797, 28, 779, 16, 29, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[CellGroupData[{
Cell[1601, 48, 207, 4, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1811, 54, 28292, 632, 313, "Output",ExpressionUUID->"dcfd6397-b247-49ab-8909-553d8770bdb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30140, 691, 204, 4, 69, "Chapter",ExpressionUUID->"3104f7e3-d1cf-444c-857d-f3d3d76d7c7a"],
Cell[CellGroupData[{
Cell[30369, 699, 465, 9, 29, "Input",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],
Cell[30837, 710, 127671, 2373, 652, "Output",ExpressionUUID->"610e0a40-4cdd-411a-9668-518b1108f58f"]
}, Open  ]],
Cell[158523, 3086, 8493, 202, 37, "Input",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167053, 3293, 317, 5, 69, "Chapter",ExpressionUUID->"fc79f348-c5f7-48d3-80d6-e4dab5b13de8"],
Cell[167373, 3300, 2756, 68, 154, "Input",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],
Cell[170132, 3370, 1775, 41, 195, "Input",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171944, 3416, 355, 6, 69, "Chapter",ExpressionUUID->"1674350a-bfdf-4c15-99d4-bba009f90f57"],
Cell[172302, 3424, 4509, 75, 133, "Input",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],
Cell[176814, 3501, 1445, 27, 32, "Input",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],
Cell[178262, 3530, 1095, 25, 117, "Input",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"],
Cell[CellGroupData[{
Cell[179382, 3559, 271, 5, 29, "Input",ExpressionUUID->"45322628-cc61-4057-9fa0-4c75c908c79b"],
Cell[179656, 3566, 580030, 11722, 68, "Output",ExpressionUUID->"9389ccf2-0525-450d-8941-b3f9bc4b2ab2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[759735, 15294, 355, 6, 69, "Chapter",ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-772879a58a20"],
Cell[760093, 15302, 2113, 38, 154, "Input",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[762243, 15345, 456, 7, 69, "Chapter",ExpressionUUID->"b925ae5d-4091-4d4b-a37f-d801edc11fc9"],
Cell[CellGroupData[{
Cell[762724, 15356, 414, 10, 29, "Input",ExpressionUUID->"078c4ec8-5e79-490c-8132-46594829ba27"],
Cell[763141, 15368, 104866, 2177, 248, "Output",ExpressionUUID->"8a3d8e04-1b8d-40da-b5bb-a9a5a150690c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[868044, 17550, 372, 7, 29, "Input",ExpressionUUID->"1a500de4-554f-45b9-bbe8-80975777ab7d"],
Cell[868419, 17559, 306150, 5799, 1720, "Output",ExpressionUUID->"dda303dd-96f9-451f-83e0-ff8f8a2ad66a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1174606, 23363, 400, 9, 29, "Input",ExpressionUUID->"42fd3643-5a76-47ba-8960-172aa64ca857"],
Cell[1175009, 23374, 305207, 5784, 1718, "Output",ExpressionUUID->"ad067368-2b21-4e49-8c06-79d636983819"]
}, Open  ]],
Cell[1480231, 29161, 1755, 33, 97, "Input",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],
Cell[CellGroupData[{
Cell[1482011, 29198, 1066, 20, 29, "Input",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],
Cell[1483080, 29220, 524794, 9583, 495, "Output",ExpressionUUID->"6b9db6b7-aa82-457e-bc9f-95b378af287a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2007911, 38808, 191, 3, 29, "Input",ExpressionUUID->"cc642641-389a-452b-ba6a-31dc0fd4a3b1"],
Cell[2008105, 38813, 260612, 4914, 1123, "Output",ExpressionUUID->"928f45ed-9ea8-4d22-ac0e-5fdc45c895b4"]
}, Open  ]],
Cell[2268732, 43730, 218, 4, 29, "Input",ExpressionUUID->"2a6819e4-9a46-4a3b-83f3-d44623582bb0"],
Cell[CellGroupData[{
Cell[2268975, 43738, 229, 4, 29, "Input",ExpressionUUID->"ba6844d1-752a-4d40-a39b-d6c1360536e5"],
Cell[2269207, 43744, 128888, 2380, 120, "Output",ExpressionUUID->"ed6f76dd-2698-43ab-bb53-516aef41e94e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2398144, 46130, 507, 8, 69, "Chapter",ExpressionUUID->"161daabc-615f-418f-a171-832b4a2218d6"],
Cell[2398654, 46140, 873, 15, 29, "Input",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],
Cell[CellGroupData[{
Cell[2399552, 46159, 1242, 22, 51, "Input",ExpressionUUID->"f5f447dd-5588-4178-92cf-69aee019ae5a"],
Cell[2400797, 46183, 2382, 49, 62, "Output",ExpressionUUID->"d7aa101a-e2ba-4d02-b03b-db53113b6343"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2403216, 46237, 1366, 33, 92, "Input",ExpressionUUID->"431bf369-571a-4438-9ea5-687fe2d08638"],
Cell[2404585, 46272, 3779, 82, 132, "Output",ExpressionUUID->"85ac24af-18c0-4d25-8e8b-2011592717c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2408401, 46359, 574, 15, 32, "Input",ExpressionUUID->"30f555f6-ae5b-4dfd-bdc5-755388129f83"],
Cell[2408978, 46376, 425, 8, 44, "Output",ExpressionUUID->"9d180d6e-7b59-47c2-af46-16217911e963"]
}, Open  ]],
Cell[2409418, 46387, 329, 7, 29, "Input",ExpressionUUID->"e6885692-13f6-4974-9b2c-afe8fa234cc6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2409784, 46399, 412, 6, 69, "Chapter",ExpressionUUID->"85881d34-aa2c-47a4-9cef-231d0c092462"],
Cell[CellGroupData[{
Cell[2410221, 46409, 584, 11, 29, "Input",ExpressionUUID->"0aed3bad-4fce-478f-b2bd-61ab2c146048"],
Cell[2410808, 46422, 102350, 1826, 68, "Output",ExpressionUUID->"6871e97c-7114-4129-908c-f7164b0eb2dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2513195, 48253, 346, 7, 29, "Input",ExpressionUUID->"210cf671-ac61-409b-9991-3376e561b207"],
Cell[2513544, 48262, 198359, 3748, 495, "Output",ExpressionUUID->"525816a6-016d-40b3-a104-dcb961fcbf59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2711940, 52015, 368, 7, 29, "Input",ExpressionUUID->"b9f96706-1adc-45ac-abbd-80f2fee1da04"],
Cell[2712311, 52024, 325, 7, 44, "Output",ExpressionUUID->"35e9f6e1-cd90-4de0-adc7-055c46b337ed"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2712685, 52037, 541, 8, 69, "Chapter",ExpressionUUID->"d293971e-29a8-48c6-9378-634a3d38a3fe"],
Cell[2713229, 52047, 322, 8, 29, "Input",ExpressionUUID->"3b63cdad-d22a-47bf-85a7-a8a2628437dc"],
Cell[CellGroupData[{
Cell[2713576, 52059, 281, 6, 29, "Input",ExpressionUUID->"cc97491a-dd5c-471f-bfe6-ce6dda57775e"],
Cell[2713860, 52067, 3180, 59, 258, "Output",ExpressionUUID->"e6103b80-4921-4098-9ca4-b8cea3aeda4f"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

