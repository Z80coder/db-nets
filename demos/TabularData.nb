(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    728141,      13617]
NotebookOptionsPosition[    724113,      13540]
NotebookOutlinePosition[    724551,      13557]
CellTagsIndexPosition[    724508,      13554]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learning tabular data", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 
  3.8684260746987667`*^9}},ExpressionUUID->"e16c6739-4a62-4e56-b75b-\
c3030d8dbab8"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "neurallogic`*"}]], "Input",
 CellChangeTimes->{{3.864791111748754*^9, 3.8647911154679937`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              StyleBox["neurallogic`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["DifferentiableHardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "DifferentiableHardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardeningLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardeningLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassScores", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassScores", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["LogisticClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "LogisticClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "DifferentiableHardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "NeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["DifferentiableHardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "DifferentiableHardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralReshapeLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralReshapeLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["NeuralOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "NeuralOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["ExtractWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "ExtractWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetBooleanExpression", "InformationGridButton"],
                 
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetBooleanExpression", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralChain", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralChain", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["RandomBalancedNormalSoftBits", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "RandomBalancedNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["GetWeights", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "GetWeights", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetBooleanFunction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetBooleanFunction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralCount", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralCount", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNOT", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNOT", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomNormalSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "RandomNormalSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralExactlyK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralExactlyK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["RandomUniformSoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "RandomUniformSoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClassificationLoss", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardClassificationLoss", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassify", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassify", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralLTEK", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralLTEK", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBalanced", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeBalanced", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Require", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "Require", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardClip", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardClip", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["HardNetClassifyEvaluation", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassifyEvaluation", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralMajority", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralMajority", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToOne", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeBiasToOne", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["SoftBits", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "SoftBits", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["HardDropoutLayer", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardDropoutLayer", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNetClassPrediction", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassPrediction", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNAND", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralNAND", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeBiasToZero", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeBiasToZero", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["Soften", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "Soften", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["Harden", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "Harden", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["HardNetClassProbabilities", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNetClassProbabilities", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["HardNeuralNOR", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "HardNeuralNOR", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InitializeToConstant", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-795d0963-4b38-447b-87d1-d85a2c06aeed", {
                   "InitializeToConstant", "neurallogic`"}, False},
                 ButtonNote->"neurallogic`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.19]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{
  3.86479111604138*^9, 3.8647911657240562`*^9, 3.864791620800887*^9, 
   3.86479194597997*^9, 3.86479198092934*^9, 3.864792204697258*^9, 
   3.864792687703233*^9, 3.864793105592959*^9, 3.864793526801218*^9, 
   3.864793732850697*^9, 3.864794507927494*^9, 3.864796071752219*^9, 
   3.864825438485825*^9, 3.864825531891514*^9, 3.8648260962141314`*^9, 
   3.864830162877289*^9, 3.8648755408909893`*^9, 3.865049480919162*^9, 
   3.865050046751976*^9, 3.865051042066378*^9, 3.8650523426134*^9, 
   3.8650543558693867`*^9, 3.865058337414798*^9, 3.8650584086343327`*^9, 
   3.86505947338*^9, 3.86506885830449*^9, 3.865397062515942*^9, 
   3.86539822002991*^9, 3.865414037240362*^9, 3.865415448442546*^9, 
   3.865415610582356*^9, 3.8654172214829617`*^9, 3.865417469191354*^9, 
   3.865419590403018*^9, 3.865420075554387*^9, 3.865428054175325*^9, 
   3.8654793173710623`*^9, 3.8655665906709213`*^9, 3.865591995941038*^9, 
   3.865658579968223*^9, 3.865772215681147*^9, 3.865779562552833*^9, 
   3.8658370145359364`*^9, 3.86584060155225*^9, 3.8659992094486027`*^9, 
   3.866003652107215*^9, 3.8660161651613417`*^9, 3.8661754677644978`*^9, 
   3.866258657623454*^9, 3.866285693609187*^9, 3.86635057486532*^9, 
   3.866512485808078*^9, 3.866512816932197*^9, 3.866553529720395*^9, 
   3.8666025113336687`*^9, 3.866606144536639*^9, 3.866608546326232*^9, 
   3.866609704076623*^9, 3.8666137219288273`*^9, 3.86671285229326*^9, 
   3.866788776837541*^9, 3.866788812552528*^9, 3.866794689702251*^9, 
   3.8667979035574636`*^9, 3.8667996941084146`*^9, 3.866800686995532*^9, 
   3.866801936715271*^9, 3.866865563143631*^9, 3.8671595128431797`*^9, 
   3.867322056244096*^9, 3.8674794507502613`*^9, 3.8675828633257*^9, 
   3.867669743397482*^9, 3.867732450434094*^9, 3.867751859422694*^9, 
   3.867752571591299*^9, 3.867811509870346*^9, 3.8678117360040903`*^9, 
   3.8678203831872883`*^9, 3.867843695133718*^9, 3.867850373374954*^9, 
   3.86800725388065*^9, 3.868015027015581*^9, 3.868070609148181*^9, 
   3.8680707782820997`*^9, 3.868071504515008*^9, 3.868078566976554*^9, 
   3.868079276409031*^9, 3.8680936161674767`*^9, 3.868332595482695*^9, 
   3.868343297990016*^9, {3.868434780605877*^9, 3.86843479524651*^9}, 
   3.868445566107071*^9, 3.868519876174618*^9, 3.86853009787873*^9, 
   3.868533409155756*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"d92b2653-4301-4f99-94ac-dcbdc92fcffa"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Get data", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 
  3.868426122274289*^9}},ExpressionUUID->"3104f7e3-d1cf-444c-857d-\
f3d3d76d7c7a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8684261284499598`*^9, 3.8684261339874697`*^9}, {
   3.868426165551331*^9, 3.868426166147992*^9}, {3.868443501655848*^9, 
   3.868443511617087*^9}, {3.868445089535833*^9, 3.8684450898384523`*^9}, 
   3.8684475343091707`*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          11074797896484436513746244097332570116292617748430130407896], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11074797896484436513746244097332570116292617748430130407896,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868447534840249*^9, 3.8684985354123583`*^9, 
  3.868519879764835*^9, 3.8685300999400797`*^9, 3.868533465833148*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"2f2671b6-ff8c-40e2-a600-10268d1fbe8e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{3.868445433613286*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create feature encoders", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 
  3.86843398679764*^9}},ExpressionUUID->"fc79f348-c5f7-48d3-80d6-\
e4dab5b13de8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", "featureValues"}], "\[IndentingNewLine]", "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"encoders", "=", 
   RowBox[{"Encoders", "[", "trainData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Normal", "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"encoders", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"data", "[", 
      RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868426687511053*^9, 3.868426801572831*^9}, {
   3.8684269173036003`*^9, 3.8684269578937387`*^9}, {3.8684269966730623`*^9, 
   3.868427061846773*^9}, {3.868427135120562*^9, 3.868427173055786*^9}, {
   3.868427218784813*^9, 3.868427313389267*^9}, {3.868427822986774*^9, 
   3.8684278511841917`*^9}, {3.8684280835200367`*^9, 3.868428089883707*^9}, {
   3.868428156521447*^9, 3.8684281614416733`*^9}, {3.8684281955955667`*^9, 
   3.868428284555341*^9}, 3.868434324643379*^9, {3.868434449433856*^9, 
   3.8684344506731787`*^9}, {3.868437882742872*^9, 3.8684378847594643`*^9}, {
   3.868443521427595*^9, 3.86844353043198*^9}, {3.868445371253304*^9, 
   3.868445422686679*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureLayer", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
      RowBox[{"\"\<Catenate\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], "\[IndentingNewLine]", 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "->", "\"\<Catenate\>\""}],
         "&"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<PurchasePrice\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<PurchasePrice\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<MaintenanceCost\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<MaintenanceCost\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Doors\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Doors\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Passengers\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Passengers\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Cargo\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Cargo\>\"", "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Safety\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Safety\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868511402960554*^9, 3.868511420437525*^9}, {
   3.8685114920935707`*^9, 3.86851156446668*^9}, 3.868511640913454*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.86843932450987*^9}},ExpressionUUID->"1674350a-bfdf-4c15-99d4-\
bba009f90f57"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"numClasses", "=", 
        RowBox[{"Length", "[", "classes", "]"}]}], ",", 
       "classificationLayerSize"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"192", "*", "numClasses"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralNAND", "[", 
          RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"HardNeuralReshapeLayer", "[", 
          RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868434027583748*^9, 3.868434035787488*^9}, {
   3.8684347252717743`*^9, 3.868434739712077*^9}, {3.8684348123552837`*^9, 
   3.868434889688067*^9}, {3.868436138483499*^9, 3.8684361400155487`*^9}, {
   3.868439429843689*^9, 3.868439430063843*^9}, {3.868439981288126*^9, 
   3.86843999564869*^9}, {3.868440077141582*^9, 3.8684400780122023`*^9}, {
   3.868440461557928*^9, 3.868440463889024*^9}, {3.8684406325500402`*^9, 
   3.868440632800852*^9}, {3.8684407142457123`*^9, 3.868440714673073*^9}, 
   3.8684407820700693`*^9, {3.868441017230885*^9, 3.868441018893251*^9}, {
   3.8684411315833893`*^9, 3.868441133033833*^9}, {3.868518724134651*^9, 
   3.868518725441156*^9}, {3.868518928530555*^9, 3.868518943190036*^9}, {
   3.868519041547244*^9, 3.868519068014036*^9}, {3.868519147675601*^9, 
   3.868519154814497*^9}, {3.868519330700121*^9, 3.868519338754211*^9}, {
   3.868519481675853*^9, 3.868519515993621*^9}, {3.868519704140811*^9, 
   3.8685197412954483`*^9}, {3.8685197864581833`*^9, 3.868519804727289*^9}, {
   3.868520025904859*^9, 3.868520026662962*^9}, {3.868520165374518*^9, 
   3.868520172724663*^9}, {3.868520227657476*^9, 3.8685202280400333`*^9}, {
   3.868520278697311*^9, 3.868520283147401*^9}, {3.8685206145298347`*^9, 
   3.8685206150078983`*^9}, {3.868537004723915*^9, 3.868537005683709*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<FeatureLayer\>\"", "->", "featureLayer"}], ",", 
       RowBox[{"\"\<SoftNet\>\"", "->", "softNet"}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<FeatureLayer\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868436150363471*^9, 3.868436214879616*^9}, {
   3.8684363176157846`*^9, 3.868436401711966*^9}, {3.868436439018614*^9, 
   3.868436449976253*^9}, {3.868436507251442*^9, 3.868436566344318*^9}, {
   3.868436601752877*^9, 3.868436606688592*^9}, {3.8684378203450413`*^9, 
   3.868437848662979*^9}, {3.868438156495153*^9, 3.8684381757432423`*^9}, {
   3.868438230057756*^9, 3.8684382404094887`*^9}, {3.868438312361177*^9, 
   3.868438339094953*^9}, {3.8684384459605*^9, 3.868438454771668*^9}, {
   3.8684385462566147`*^9, 3.8684385862545233`*^9}, {3.8684386245588503`*^9, 
   3.868438717976014*^9}, {3.868438791131241*^9, 3.8684388742400846`*^9}, {
   3.868438957513969*^9, 3.8684389581925077`*^9}, {3.8684390163704367`*^9, 
   3.868439068705132*^9}, {3.868442351137228*^9, 3.868442398109271*^9}, 
   3.8684433338319263`*^9, {3.86844712352503*^9, 3.868447133785776*^9}, {
   3.868511573996563*^9, 3.868511634912119*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainableNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
        RowBox[{"NetPort", "[", 
         RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
       RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Acceptability\>\"", "->", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684424197508583`*^9, 3.868442462956246*^9}, 
   3.8684433239111013`*^9, {3.868447095425324*^9, 3.868447102608048*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.868439333949903*^9}},ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-\
772879a58a20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "trainableNet", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
     
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"testData", ",", 
        RowBox[{"UpTo", "[", "1000", "]"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 
  3.868447037389845*^9}},ExpressionUUID->"b925ae5d-4091-4d4b-a37f-\
d801edc11fc9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedSoftNet", "=", 
   RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<TrainedNet\>\"", "->", 
       RowBox[{"NetDelete", "[", 
        RowBox[{
         RowBox[{"NetFlatten", "[", 
          RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}], ",", 
         "\"\<Loss/Error\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", "}"}], ",", 
     RowBox[{"\"\<Output\>\"", "->", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868441715962099*^9, 3.868441726772949*^9}, {
   3.868442062468679*^9, 3.868442075018716*^9}, {3.868442527005735*^9, 
   3.86844256484381*^9}, {3.868442825916274*^9, 3.868442879501833*^9}, {
   3.868442927862575*^9, 3.868442930140501*^9}, {3.868442994108386*^9, 
   3.868442997385559*^9}, {3.868443171305544*^9, 3.868443172008521*^9}, {
   3.868443210207801*^9, 3.86844327444496*^9}, {3.868443832176667*^9, 
   3.868443841549613*^9}, {3.868443968480337*^9, 3.86844397610231*^9}, {
   3.868445156069516*^9, 3.868445169542899*^9}, {3.86844548965233*^9, 
   3.8684454911676607`*^9}, {3.868445524601853*^9, 3.868445525318458*^9}, {
   3.8684457755379953`*^9, 3.8684457785428762`*^9}, {3.868445841953512*^9, 
   3.868445843190568*^9}, {3.868446029551764*^9, 3.8684460319907627`*^9}, {
   3.868446204633617*^9, 3.8684462159667997`*^9}, {3.868446498761023*^9, 
   3.868446502318582*^9}, 3.868446990300243*^9, {3.868447023781098*^9, 
   3.868447024311913*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"trainedSoftNet", ",", 
    RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868441761355565*^9, 3.86844176541033*^9}, {
   3.868442023100346*^9, 3.8684420354226837`*^9}, {3.868444107190956*^9, 
   3.868444110989802*^9}, {3.868444188263138*^9, 3.868444188997357*^9}, {
   3.8684443072021*^9, 3.868444343231183*^9}, {3.86844438017598*^9, 
   3.868444387605728*^9}, {3.868444533736438*^9, 3.868444535818205*^9}, {
   3.868444625239705*^9, 3.868444635677659*^9}, {3.8684447356698933`*^9, 
   3.8684447565897284`*^9}, 3.86844479804601*^9, {3.868445054584428*^9, 
   3.868445061735847*^9}, {3.868447028248465*^9, 3.868447028907001*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classifier method"], 
                   TextCell["Classifier method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "Net",ExpressionUUID->"71416538-632b-4322-b46e-526dd5a1ac8e"],
                
                TextCell["Net"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "346"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"99.4", "0.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    99.4219653179190743231`3., 0.4081394480165771443`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"70.8", "2.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    70.8092485549132959477`3., 2.4476994076247526877`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Geometric mean of probabilities"], 
                   TextCell["Geometric mean of probabilities"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.965453313751796216`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0073839038120227518`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.9506855061277507124`3.", "\", \"", 
                   "0.9802211213758417196`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.9506855061277507124`3., 
                   ", ", 0.9802211213758417196`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.0351575327603672119`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0076480464910789678`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.0198614397782092764`3.", "\", \"", 
                   "0.0504536257425251475`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.0198614397782092764`3., 
                   ", ", 0.0504536257425251475`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"4.61`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"2.91`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"ms\""}], 
                 "examples per millisecond", 
                 FractionBox["\"Examples\"", "\"Milliseconds\""]},
                "Quantity"]},
              {
               ItemBox[
                GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2BNL7/XiWcJm8s7+iB6nmQ7DW/t3t9k2+ue/
sC9VvqMrafXW/lGt8c5D/i/tTSf8u7Rg7V2SzXlwVyilY+Nb+7mnt0wVEn5t
b9a1W3V7zmOi3Qejra37fogqv7F3WXfqIVfPE/swiR0CE28eJdkcGP2wSmSd
+8Nb9gwogHRz0GkAsP9jVw==
                  "], {{0, 0}, {4, 4}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["245", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "245", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{245, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["72", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "72", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9863013698630136`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.993103448275862`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{72, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9863013698630136}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.993103448275862}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.0136986301369863`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.08333333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.0136986301369863}], 
                    Row[{"Row fraction = ", 0.08333333333333333}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9166666666666666}], 
                    Row[{"Recall = ", 0.9166666666666666}], 
                    Row[{"FScore = ", 0.9166666666666666}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.08333333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.058823529411764705`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.08333333333333333}], 
                    Row[{"Row fraction = ", 0.058823529411764705`}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9411764705882353`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9696969696969696`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{16, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9411764705882353}], 
                    Row[{"FScore = ", 0.9696969696969696}]}], "Tooltip"]& ]}, 
                   
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "245", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{245, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "72", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{72, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 0.9166666666666666}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "17", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9411764705882353`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{17, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.9411764705882353}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "245", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{245, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "73", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9863013698630136`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{73, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9863013698630136}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9166666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{12, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 0.9166666666666666}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["245", TraditionalForm]}, {2.5, 
                    FormBox["72", TraditionalForm]}, {1.5, 
                    FormBox["12", TraditionalForm]}, {0.5, 
                    FormBox["17", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["245", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["73", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["12", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["16", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->212.4,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[<|
   "Model" -> ClassifierFunction[<|
      "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "PurchasePrice" -> <|"Type" -> "Expression"|>, 
              "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
              "Doors" -> <|"Type" -> "Expression"|>, 
              "Passengers" -> <|"Type" -> "Expression"|>, 
              "Cargo" -> <|"Type" -> "Expression"|>, 
              "Safety" -> <|"Type" -> "Expression"|>|>, 
            "Output" -> <|
             "PurchasePrice" -> <|"Type" -> "Expression"|>, 
              "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
              "Doors" -> <|"Type" -> "Expression"|>, 
              "Passengers" -> <|"Type" -> "Expression"|>, 
              "Cargo" -> <|"Type" -> "Expression"|>, 
              "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
            MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> False,
             "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
         "Processor" -> 
         MachineLearning`MLProcessor[
          "Identity", <|
           "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
         "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
         "Marginal" -> <|
          "unacceptable" -> 0.25, "acceptable" -> 0.25, "very good" -> 0.25, 
           "good" -> 0.25|>|>, "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {4, 5}, 0., {
         1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
       Automatic, "BatchProcessing" -> 
       MachineLearning`PackageScope`$BatchProcessing, 
       "Model" -> <|
        "Method" -> "Net", "Net" -> 
         NetGraph[<|
           "Type" -> "Graph", 
            "Inputs" -> <|
             "PurchasePrice" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"low", "high", "medium", "very high"}, 
                 "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                 "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                 "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"low", "medium", "very high", "high"}, 
                 "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                 "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                 "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
              NetEncoder["Class", <|"Labels" -> {3, 2, 4, 
                   Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                  "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                 "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
              NetEncoder["Class", <|"Labels" -> {2, 
                   Interval[{5, 
                    DirectedInfinity[1]}], 4}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
              NetEncoder[
               "Class", <|
                "Labels" -> {"high", "low", "medium"}, "OutputForm" -> 
                 "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False,
                  "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{3}, 
                 NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
            "Outputs" -> <|
             "Output" -> 
              NetDecoder[
               "Class", <|
                "Labels" -> {
                  "unacceptable", "acceptable", "very good", "good"}, 
                 "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 4, 
                 "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
            "Nodes" -> <|
             "TrainedNet" -> <|
               "Type" -> "Graph", 
                "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                  NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                  NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                  NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                "Nodes" -> <|
                 "Net/SoftNet/1" -> <|
                   "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
v753XfOyUXyuby3+eR/Ve9kneHA+BILPDMQ05gHrq1DaNQFaejOnDADzZwz6
p57Tdk/+09pm/0gGtTOc2Wr+eZv69/d38fN2AGWfgEFUhxp05fIKdwadiTcC
q6Du2LZwl2gf6QLfS1kjKMdUJ0zcw+msrtUs1e8+dbjGM5XwtBMdj0/ip3Be
RKoiovqwVonYJJZxXmpkG6B6rr8N1DntI1l9M+Cr40EoO5kO2n0KhLS2YlZ7
uKYaADdrFsPBodKQN6Y3jBkqBSOLkvHbNCNQS1GDGYPNYGafCkyV0mZGHO6l
tgr2uOrDYIf5kLVPDTofluBq3qJji+qwL51wU7dovKebFLsrI47TxHFynLbk
mZIy4eNpmnHs2plDgMY5xrGcrk7cKey9wR3R+L/so3nXmn/DxXjf5P+n393/
Eyt2LEFfbZJ/W8MaivbvINUg+JUH6Kc/+2wIGD3fCwm9g2Badhynao+iuFig
0pHLN570goOJsVys4PYM8yT1lkDfXRNxmbokeiT7Bd8c8AIPa0zAQVJDgMZT
PQu4vp5n5GHIhT1cfEjlq4Bq+I9kTMd0eFCKs5SckLCnE/BIvs8RUB338BOm
elaYAI0X5sC4KRvIEPXj8LZ4LLSNK8eHr80lgswG0I3YRDT0ZOBq2XgUpPKZ
G3OzRkmolPGQNc/Zi7V6J+M74xl2ZP06/Cfqc6VR8N0GYdXi0+yqURdZz6jb
7Ifw9jj+gzxrbxfDXtnwwnpVU9mRWyqpMDIjCmRE9+dLzmRCfGUm9N6aBDtS
MiHaIwXitmdyPGorg6gqlWXDHkgB6Qtzse7bLDAyvAuKuhmwbN158HycDQ6L
I8Tnu8qH1t9l1t0R0mp/DjSVQycWf/9P9x2+S7OAUjFjFqtoKY34nKJULSvO
Z6uHQMvaZ7/T4CHbW1x/ne2F+fjMhVgYqZIIz2bHwtrzkfARRYDhtER49TQC
zFclgLVRImwxS4Cast0g7ZIIoSNAELkkESjVA7Kh8HACLNZLhH6lCeC4NAfm
miSC/1BLVPl5JSSUqAiPym7EQqtTuPCcNaJKCZu8hU041AVn6zzAO4sfsX5n
0/GtlwyWr2lgl8stgwR8ABKeH2LXLxwDNvbZrMwLbTKnlzly+ZwChw9KwbVn
I6CDYyjLozyYQVSjVw9BvHe5thTT/nkRPYXqvozY91FfB9SfvMTij3OyziwG
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
UDsblpqdhKkJ2bC7PgscDNOhp34m4OhsjnHVDDJ6kwXv8i/Cvc9Z0LsuAzZD
Nrg8qQCzxv/tO9STvzQJsr//v/3e9a+YyFmjgoetf1fLeUwnoFwc1SjgY566
zrJIu6+XOLe8pMqp5Pd2iOrOwWtb+cl1M7h4vOZBVspHgXQ+2tPy6iRVy9yQ
PAFPabYkKsrXI5suCC1GO7haZC7pZfn+bphFlVp/y6SkIyzfl6Yqg84PfWox
eHIIlpTtaTHThSGU9Z4M6rVIkvA5Ra4Hg9jeh8iGyaNIlvRQsuDTPDLs4yUs
K8jk6vVS8WTTzVxwe02IYMw+zpNJFO13+QfsZKlDhCJjxSCqurOb9VcuqPyM
c68gTh+NfSGg6jg9Dfia4Q9t5ExUYPp+DYiTlyPxvr3Yho6W8C22K6LKM+qE
gjj+OJbhahKieZr3BJbxsC0niaXbcKvwQpNfWhKeiTKBcONOO2yh7IUa7h2C
Z5VPocd0F6Kz3gROHK7DfJ9G5lPQ2PAKLjmOJN6C3iSjeC66L1qL0DHTJFPB
ZH0UKK7PAv9jmZBclgnzYpPAfXMm6DqlgEtGJsf316qI6m2cDUW7U0A1q1hw
9GkWuCTegoNqGdB+/HmYczcbjo2LALcxfTBPx/xxKPatPiR2MYGlR57ibcvb
wMxPsths52hcqpeDT9tJQjeHQrzjsAJ8uLyLG5NxOpbbxg3jOIxcpsKFvg7Q
VqkfDNvzmVNKoOk6cfwrtXP6IC7uoo1473mcZKueGtv/7fu04Uv++d55X7se
6LqnCdqan4Wdx02F6becIdynHkfoTgVKXcevAqrLOruKPcqIvqPg+XoHmHp8
vdgz3PxZMObCR8G+Dj7cNv70//sW3RP1lP/9t3PfTQ//49zR79L//hssqi1+
B9DCgkEeONPaP+in90N/RqttOlgcx5TO3RlEVTn6ON4hWk98nnQC9/NXA5r/
f6y9dzxX////bySZFWloaCmioqLy5JwGJQmlYTW0F5FEWods2VsKJZVKhXie
x/3RViqjyGhqUSma2sPv+The5/ni9er1+ry+78vvj+vldruv8/R8Ps95nuE5
JihYAalduX8ZnTe5gorfX0TH1Hpwff1TrYDE/HJ0LUW3hcbB6PA1cEInBNQK
h4HNU2PEHrKA5fVp6NexgfC+dCPK7JOH5A+zaNztAWA5+TLSmJwNXbE3uJ8J
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
mCNDB+e0vc9qy9TN+PK2ySC/fTLIlJpB/pbJsO7QPXiVPBHWOBtCZFkkJhqY
MJHrIXVSO9nvPRfrSdZRRAmJ9CXobdGNjsT7cblBIP7yIRdNvTEGZx1fBily
W3HyqBRc47sXZ68vApkkhibKs/DqeUTUR8jQ+g3GeNZcBbT+lz9LlmPyKAsP
3BQNOvb+SGBgizym+KAzZrfYB9004d6VHfBeeQxa5u0Lx7oMgVfbz6DveAPE
UQ/ZU3pbYJn6HCQrb4xKr6mho/dioGmdCn21TwDcylHAV3c1mRA+NjE0UbMP
+wXZ9TWCed1OcI8Vyd1e1lZrz9CUEeLculzR65nrRe69T/wcwXjoEjpQSbLD
czZ/6P/2HQe6i3ON9nS+bGQ84bnRRod0o1DHZ0ZXBxcZLWx6ZvTVK9hINW4E
RfjW7EATHa93nevbuy3HyKO0mJslfWYJ47l60ZZ3JkPn5LIjvq9CflavhcVy
kvjYkB3oUw4LxOvszUOM7XzkulyeJkrYNTuXVX0cDFO8XiA+d3xJFJxvOSwg
yyJzf/27W4eFU0tr//yu/NWVyRTJ/df7nbSHoZeVTYEj2is4JWz40Q3bJryB
5fb7gc9VvNTAROelVyLjrqbimOB0eyqnJ5MVxMtY8wRRPGqOCvRnl0rB6ege
xnYGNwWularGx2ZY0+17FmZWCeaa3RGQvnprFePqClXjGZ9DjJqtVIx3aTQL
Io+EGK1duwTxjFnF0MW1WDi/1J0dtT+ItbWfAeNDNcFH4ITkCruxSyTMWBdz
Sbbn/Hywi/+A0npqI23noSjcNR82CK8K3k//AJuGR8PT4lCOIZJxnIZfCobD
OBQilytDqigOmb0YTol0Si8feCzS3RdDYZlIIwyeoDM4GB6Jeo/cfIrIrGYN
QxP9vx5z/SjbDs/PMbO2z5hur53429eTe97//L8yyX5dO6zv9x+eMOnz+r99
huvCqF5w5mYp6l0Yg8PndIfMilJE0NrE0ERbnFehxV+jseXaKuQtigmzfROx
bkAsnjdrNk6f6AM2dtF4jOw0o06rz0HE+pvc/zu+LE00ebst5f/cDnufTeZ6
tm7/516HU2vpPoUuwHN/9E5abskKqBGMg5C3WVDzcShIF6kDpTwF1nn9QNlr
RM+XmR+cNZgAD6doQV3uc8TPfg5TgibPBFSWEsM9R27n1P78vm/rzr/9G3qP
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
0r35cKFmE8pgdRejxEyYo0bnJbxAlbtOCqyWXoVnIQrITn0r6PdXhxwtijzh
tQ71JM63t5e7w0qU+00SB6yr/Y6jW9KqaFlbPAhr2Pvz2RVIWUiRn2cKkJAJ
sWXI2UKAjm17b3JepttrpcpQR1w8sV5TgDa5lphiD/cs9XpM4FjYl7wrk6tt
7hMKc3k8RkifMTFgVCnL9PSETHDWg+PtCiSOhwS/RtWDVpE/9ph2toDUM0eO
VJODfKz+OSe414N3SYiJpFcKV7s/eBAp7KtNbOXm3SXnThBCL1+2+/uhL58l
mkTLH4IJXT7ozkRfRCodgqu1l5F/njJIZhXS9+9+ok+cFIB2wAZ66vIItKb/
YHgz0ATdC6PIB3QQEiJR3p0vL2lAYxgBTLUvph+U55VhJDQkSay30ieiP5xP
I/1lmwXSo2fTz5sVkE6rFDL4kku/0RkpUOtbDJNitAUOplsEuL9YSowbN0Ds
IFK7k0JjX3Tcy/uI5hKd06ai+JojReqb/PM8+rmk+1mmDu1Wonnk6Kc8pvxS
EKg9aGakrv0FH/fWMFvcTZlUnWPM8syVjICYTKaoZcBwn0wgP95mCgfyGL+B
Tszdjsnk4183k1P/CmRqnBqZy6YUKVZdwtxzGAKyv6yni132Iqw/cjWEInvm
05IPIHfnNEFP74hRUq+xWqsnoZkfC3kdsfIgYroxnaswEWQjF6PY8VfRGeNJ
qOazB3zSGUCPNp4j6rNtpciZ5ef5PceOXnKBy9c6Msgq9iVStj/GKaZppTzk
v3YV1YQ86ywVxb6zKXKdMkWKxhgvB6x4zKR+V02FGD8+w8f66P5HvtBTvv6J
OHNW3XRklwq39vU8+IxwPdP9epSc/JZbu0vHdREuTylSOIYJiYd+ckGQcioO
mnziYLtaHJhuSgDnsn0se6F8ahysKY2CiqQI6Pd7AuguiYbbXlFQI54AG23L
wXB2HEzekgAzAhMgLy+Vj9Wu6VLZtZm/nIg/GotevS1Amb/3JQ+OaUVCNJdQ
vfIFeV30TXtxeh/vGW37W18wvf4c7fSWh4Jln2h1tA+92hmN2kxcQIiF/obu
uCwOjlyaLfJXNJoxPfs6pShSlP/QO1CFIqW7roGQ4zwV8kz4LOi4JQnStS5o
oNdlkEaVgFo0mMnvB8LIaF+UE7kILltchgLvYZBaHMxs79oPeiPvwWV3TWbB
wa9oh5kSmJ4fTg5T+R2EhOaKQQu/Horf5MDuOedAhk8ybv0lwbpyEVQENyKH
lwVg8/okuJYPgex58aJxjj7JkJfA/nnnhv1/vS/c73X6JLRRJBkhwx3L+a9+
fkyHZM/+f/5eS92ICChLPo/ujowAIcmbpnOKa0KvkV3D9OzROdDFx6psF96r
r/oYRSaerqG1jN2Qge54tCAnBU4qlKLwz3Xo5nF1ztdlry23VW1FQtLPepdV
O6sBvBXQOB9mQJHObRtE9Tyd7/t7Q4Yizf7hd1I/srDs79/dEvK6M4s/oDUF
dB9Gw8WNKVA2LwXshqSAuH0qvM9NAondifBuTAoYTEkGr/YEyJqdCm5RyXDC
Mh2+aKVCZfaf0KmfAukOqWCyLhXkLvclsZYHrkDOY5XhfnMQSCf7wcecEAgx
mYDaHzdDH2MJ2HhKjlRgVbJDicaKGRbkbIr1wdpXsHG2K8htvAuOXqcgU5/h
Y89+3RoROp0v+fSbyqmo0w+tYPM/etQ2WcmQWG1Z4h6boLuGJWD6zpt+Tq2G
pgHPBVlbpRGuR3f58+PuhoNPUSEvyD8WJGPcYZVNNMiXzATd8WGQq74Ntv8V
C8qOEdB0/CJ7HvaEqtURHMctJcmjdmFQpZ8Niz6FwR4mGXJMQ+EI+zoY2m8c
HZ2siDBuiYpoUzIJey/mMzjfldDtY0r93qDvfe9FMaYqlyKxbrYLQ682UOSS
/tIo8tQgNE9FF8Y0ToaXXyqQs1wlwrHceR+UljQZLk6RQkHOMcj/lTfyNNPi
J4+oRD2JpChy4dUcdOqDFDfuemOEiIhHfUl7cjr9PlqPVllaAVcX1SNhzT8s
k8EafmcfFPvuRGut1CH7YB0ELpGGU5EZaEvYWKQ7bBYYdOrCfkVxuDiim03b
fESxdtI2Ue3DVx1S6GOvMHahqA+j7jSQFNYMm/LArXIaGp1JkVgxgV6TUaBk
Bhe/CBsHQh+jYbpa1HMoRIernaKa0eWC7r6UX02Rj4kkVC31RJhFDfIk1jAb
T3TxLnDetoHdNSHmLUpk4qCbSN7Gg8v99bKRX5YH1weHPLix+fsFtPGM/SBE
PkGWXDZUjvOsl6cyC2MvgSB3AMpfVIzULqihTZdrGFm2tulRDRqsnY7+8DwO
MJZAbeVPwKVAn8HjYmet/Nv86REEvY5lg2AJbg5Y5G5ALm5M59YvL3dVcT13
zH/+3Dsx4jyvpKkPV3P5VME7vmG7aN3TNklCFO9pOSeKP6DuuEXvJKd+clWi
WtHZc7xIRTkmxOABe621nPZdsFGgLqHK5AW+QLWUJrNi5ilkW3ONXR9VwRD3
2YzVLQnG5nI6SCdQJFaMblZ3XODhTavK8plV5hR5uSQVtHdoMp+c1jOp6ulQ
e0ePKVjSAM2HV6ETnoUAn28CsOsrTlmMhy9kUq7uZZL6xXC5k3EQ+PvOIN/c
D2fi9SYziqW63LX2qktBJt5VFYSaSSWB48fGlQTOcU0/7QFfyJhGG/J0kC7Z
08O4S9mQeBzu10xvJUaza8BIj3YYb50Jaf0ugqEdqxKZoOqaAWmNGXC0NgNc
2LzdPQNu22eCICwDzH1ouDg9E8Z4P4WctAzIssoEff1MOL43AzImZEDNselw
7kY/ONTPBVzGS8BrDRdYlKcBRWP3gMvC9wjX9dn1FlYhcnHd+dr5faBikQbY
IwNuvPhTVW4b+92t+SDT/dny9RGd//Ec2fmY4WeODeTLiH34V+fSvi7f7y1A
Px7709fdzE8RvT4TnMnOcUPUvz2z47fv57JRPjHANARCa340EJFxINe0F7w7
4mDRjb2Q7RcFoWLxHOcCPiGsdwZQcCo5Ega/j4PyA15cD45xrfYcRWINermj
9+eMa7r/vkZ3//PzbTHOm/9+b5b/hoyKLSnZ470+3df//VxdPXEe+X/sov3s

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{16128}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {16128}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16128}, NeuralNetworks`AtomT]|>|>,
                   "Net/SoftNet/2" -> <|
                   "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJwVlntcjtkWx99uKt1V0o1SSBTRlEvv+qV0wdSohim51EgZ0+Aocmm0hQxi
GFGp1IQk5XLMST07l1RmMnIZhFOiaFAq75RQ6j37/PN8nutez/rttb7rZ/vt
muBoVZlMFqclDsGRCbPWrYvcFDLk/xcrImOnTolVEacyNZnsK/caae/fakiW
JyB6JMNZZZ0U5cxQ8Z0TPV/GsCOlSHKctIGrxzJEVjF81rKSnFpWwHmvUrLx
aSJpLcOFxpc0JoghLJHBpbRCMksegolfOiMrhGH4uEA+Js8NRcYML15qejzq
HaCGrxgK98/GnWkM9dO7qNs2EktuPKVvpupxqxkM+lOcSOWZO6wdGL70KpXe
bUuE7xUguPk9yfOMeWdCFJ84fCWPGlpLZqnxPKgqhsIUGfQk9k/a/b2W5PaT
C8ocnWGXlc3v6zH4HWR4u6dYGhqaQrt2z8TovHPy18V+mN2rJL12HUy296Cg
jjSpNpJhT78b/2cRw+uz10kenSdv+TURP7vcouovGZ5OqKBd3X+TbJ85RriL
3I6dp0pThhChk/HvPnhrUE3u4xjuT2dIqsiRfjWtJsXXDP/qPkglyxrItXUC
9IVOz53c8MtfQgPXP8np6hA+1I3hh/YGintSTPv1/JBtxtBryPDL99PxWNFL
rycw5M6ZglVWZXTXOACvE1rJ/bk3ZharwPJoDL86PwIND27TTbeLZKG3gBf6
+eGMiHvu6iP5lGCGh+lynqGhpIGhgGKLFvoSZQgq1cdP1gzdjgyv1B7Stm/8
KD7tAKWV/MxLd07gn00M+T4/Btj0UJxOGD7uMuSLW8L5PO990ps9H6k1dTT9
KJ6POMT41za+PNOcYb/Da1r+2wFqeDIHqldieEymv+S6RR9Fsxpp+rpheDif
Ye+P0/BBq5FsNSejdSlD5xKCx7dinTCGCXr1lNGymSfscOAtHSG0e2WBNH9X
gTxQvhGf267SoZkMZve3kfuf9yj70nBu05hJ5adtkLwoXu4ochl3U0lNGv5c
dlMD9qsZVDrmSIVFqohaZAeFqpJOLGb4/X4YZouaTWp2kOItxDvivLm+k/o6
ldTWPAY+lfYItJVh5X1ddD//GpOeKejQz4HoLXFFi1Uf7XEcjUcRTbRkoj3+
pf2J4t8/oDKZHY4veUM/XGTwN5Uh7BCn9TVGiLDV5zu6r9Ogldi/5w8poOoA
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
rQ==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {768}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/3" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], 
                    "$Dimensions" -> {16128}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{16128}, NeuralNetworks`AtomT]|>|>,
                   "Net/SoftNet/4" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {768}|>,
                     "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/5" -> <|
                   "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{768, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{16128}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "Net/FeatureLayer/Catenate" -> <|
                   "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                  "Net/SoftNet/6" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{768, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/7" -> <|
                   "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/8" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {768}|>,
                     "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/9" -> <|
                   "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>|>, 
                  "Net/SoftNet/10" -> <|
                   "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    Clip[#, {1.*^-8, 0.9999999}]& ], "$Dimensions" -> {768}|>,
                     "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>|>, 
                  "Net/SoftNet/11" -> <|
                   "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 192}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{768}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 192}, 
                    NeuralNetworks`RealT]|>|>, 
                  "Loss/Harden" -> <|
                   "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 0.9, 0.1]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_8401b642_45e4_40df_a5b0_025be2e24e2d", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CWwZ14PSWdsf8c2fHQvQhULmWGhp1oJXg2SXUONiEgC/lPis2y8WXpzlupAL
YFMBzMcAwGrHLPlL0E0FsL1kAFso9VlHuwZgJb4AdsbqXPCjiPEA5js2hfx5
TZqEviNJ/dIKfcoPLVUNOSRLKaxJBZki0VFX9lER6RB2VLjcEH3az5BOf2pC
6eUaUj3CmSuO4vmQK0r/XFj4JTgmtZ3mGc5cc90ngtvAn/yDG8qzitSXXDer
bwuNm0QN4D/y4ZAemzAvsbAG/vyJi9GHYzSQe9WQ35tRt/IfRXDV6ZhYWKHP
aeDzA6uWs7icgyRV9lfBnx+UGcT/Slv7HDslkylgvZMVHQF4idRyZzCLNY5r
dBHduFyDZ6AmmvztP6yqIivXs1QeTWtckn/mry6cdENuNrVMuIhrGigkPsi0
Cs8QIzF1hljkkk7PZo41UN1z6tPeItwgKde3hFw33eO+Vgz6VBKxhKjFv/sk
hPx69VipWbnA1luVJk6YdYkUCQlyIbqjZmFu1IZw88Nz2Eka3PJYB4utSiha
KtxekU3L9R0a+D4J6XT0YZdEjPiwi9CG+aVlFUmL9JTpanLQxczHh1vBD/ml
m25oWNZAml6mtd82yYeamlF8iMP9CvB1193HKiV3SWdIIKl/QieR0g1QTjtT
M28Hq6rYynWyet5fXWGRJIymFZmqCD6vGyRcDgR7AMEs80qtq4jgcegOIGus
Rr7zqbn8R/zlaqnJM2nZVMM/0A33scDSKnwl4DJLM2cvqxfmDFLPWYEWZr4d
tBbhX6Bza6LRkSdxmDWEjV2ne4yyvMCbL7rcWoAfZdwtbh82YN+IWSXcXD03
PNodb1kTj87W9ycYPFalCNUfw6vHA8y5asdwO+gV29ST0Oo1LYsFGd+iy+1K
8Xhd/JTwbr/qArFfMZ4V7m7s2aOs6dXxGXkwJl7Z2t/tRZw92XtaeT3MC2a0
C61eE4cQ6Atzheq8y9Xn8WpceBzC51D1YnzqT2J6JXEkoaJH8djk1MiEblX1
1ioWcfr49rA8Dsc/N3QX6n6y1S4Wdd8TthuvytfgVUXCWBV1Ff0f/OrcR52/
bZ/WQmQp/TlDNUOODugA9+nW+WnK2LAdCOFDNcei0SC2YSF4tXULjmFO2BqE
f0X1l81exCmMwVPKvE7I3V6Jw81cXImTPT2DTeseLyctb+y/9RF/VWBSAzHa
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
vzPhvwxERdZIdSL8xv8BQJziRw==
                    "]]|>, "orcInstance" -> 113659024, "orcModuleId" -> 
                    111656544, "targetMachineId" -> 78456720|>, 
                    140147808528208, 140147808528064, 140147808528144, 
                    140147808522240, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_92c85191_9a66_4f3c_82f8_7f5075b9faa3", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
lmqz0UpIMsSZGeIMkjDVWYmS6tqlzUSzNIdIy8l6Tl/dOI1Im7u01kiIc9IJ
CSmRTHvZaCAyCfnSN+gmIc6dkSmdIc7SzNc1VjcZNZrSpY06fbW5urFFYa6r
NWqKNRq1rmqJ0SC3WnUtmnKjzpyTpZH818z/DyMziNQmnVWcJS3VVddS/yBD
Qq1RVoBjJxVkr0rrKNdV7VvSMCf52Yb341OlP/95RVXmlnFLGvY+u+XteSsa
4lNl5YdDLN4/zatKfrhr3pJn41NV4I9wvYugrXFR1jS4jtDllZYOOHfdELF5
/d2Oy8KjO6OvyqllfpmaXAqfE7MuarlX1BD2MSMU+GOuqLl3O212tCWNXpXN
7vogJistO7ql+5H83c6Z7d2MJXCBC88OC88SwhEd9bxqT+zSCft3CnuDQEIG
YCmkahPaV7Dbmb8DLkbmTJ+zAC5MbzdVm3QQH3XUfskqSqeqJnWG47cBvjzu
e1lkv5obUcYoKoOV8TYse3AXAc+61laKyXl7RVpYotlonDgN4CxnnuefTZzj
hWrCy3O+D3dRr9+ndZg43i1qtdfEYe6nSXu7GveO2x0vlu3AWcwfOVhy/2Fx
+gmFXJbh056yCRgMQS2eRgrEpA2aPBrNqNsqwh085wVo0HYWbE/FD4uzJhfJ
Za3xDC6nmMMhWAHfJqeMY4pjJwnEae9CqyrurlcY+vctBFWlc6oqZIYzBwOC
Cfjp/bXP98swXgA/fne2UpQ1GClVZhJHjv+UXXPz8SoWd4Cjqr+/vPT8/fde
aytDNpXeb9pVIau4sqLmoWeAUr9fk6KKUGafe+j5IG0CfmL5qouz9EnFEcql
G89ElSNln1yZpU+HAge+eOj5PQEFWm4k/wPl/fxvEQWD8ixV/Z2W0jO/1Z33
ZyYonfxl7528W/P40Es4lDTJqSAjypCBVcCdhQzcPXlZDzmDUgAQMZw3OI7X
Woe1BzmsLnNcm/O0hMD2GdVc0zE/wQntQ9QcJtFzqKDnkNrEstpAO0jNBq5U
HZVF+3qEx9E6eU4GJidlzn8UiAmYZKZU3RqNZRA2HVOfzNBuJTCU0qUKxzM2
vj+J98JqjS1JyrmYtVpZglpI8N2j5pq42O+I8Yx0FbvEM9g4X9FRnBwS+OLO
mHhax2CKHcRUu4zXLo9+gqlkWpbCFZvG1RGIq2N7Cxd5JjgH+fEMk2LIjAvZ
n+OTU50rpsmwiCdY68wqdDrbBHwccwSEC1/NZCNz0/BeT2DARQhUJp9Mntmq
t6alqTJbdzpoMmJNw3ojftggIOZjDuQE28WzyXNbi96nuAJOPK6Qge5oBspO
ZrP5Dm1/v1zG3sex49DFi1Beifan2/s37PxVEsWQnMVdiKBNIFBjDrkTRSb3
SThKUq8uEGFsPFG5j6XcjHzazVYSPP/iYVk2HNdWJ43Bjae45cimVT/N0s+A
MLm36qHnHb7M8OiXaCWNjvstpefvbXzYiwg5tqw1x6fI9QzVxfGTJK9syMIL
laQy8++8Muz4SPIkvBQdgLC9kl3z05fXkw/SIP3zxgeeIzQqbyTP0k+fG8Tp
xlPjFkBgnsylmM+VQKh+cfIglPyakvyNYmbBSHI2POyNlI0uhevJJirgwcMb
T0WXU+tglj5NRcH8oed2GoMofeya2RNN4TKaxiWj/iCnF4GQYP1Vko7uNy7C
Fx27JezfKir0Pdftkr7WGgUF4i6Y46Q9pyU25MIoPtb+dzWHz4i+pMZT1fwj
/wNsCJ7Gho+UjGKjohJio3AUGwavksLG4iA2lgexsZhCwckQNg5AbDT/TTCx
ZhdBTDKQZhkHQTi5WFx4ypNRu6BPwioMTblXKNvHKsxtvdwNjVgUOFtL6rUy
2LEhgWUij5F4wCO/DT3LmvDjsfjneK//2NDrUbjELGPxkUVSauyZYYycP7xR
QGPk/Cwrc6ARjy4/u+r1wT/9HRaa1Ag87stVrHWRxIYXF/Y2ApRJHNfcz0mO
duE8zkDJGiW/MPPX3gjlmEITqlMt1Dw/DxFx4F2ICMF6WKo23J91IfmHLgic
n37ZQMEkCsLknZsHrkNJcm6whG3s4FCTf3GWlYFTlfHO8tIzD9c89JyApe10
483kphCoBTRGIKinBjGCBWvW/xUb52hsvERjAwtjI/J7WRy/cBqfGZ2qZkeI
GWp+kRob2UDpGNhzOowCl9b3VbyrFWNWcb3lapN9+9pqJ4/JhPWOZL6YZ4p0
hIofM6Z6WF1axHRr59KzRtgD6Qo5Cy5+3KHVsqt80n2sQIkykTNl2t2V2Kcf
27vKjGRGRNK2ddLWjfzlswSJfwh8Dtc4ifs9SKydEOyxT8a/z+2TCIvh7AMC
Y5v62ZU583B1vZcdpf5D4BDfY5h6QTCr/Oqvt3bY4wyWm52wGLNIvU0JhReT
qNLN7k5XOKgQABVCE87+W7pcdkQ+Oc1g9I7VtwWQ+Kf1/agrridAHutMC3js
iI0QdASmwJD6YlkVwrDe0Gm58Ine+ED0lGkGwa18CEMGAusfYzocil0Eh9IZ
SOuRCzi5LDOAJbBkfH893NAZQE5anOXYYTG2WobyWSOOWdSGgWHaQ/IHTLLD
aHnXF88UeBiJ1P5eiLRGe0SEbZit4/u1W5H1MO96BtzBX5VvS22GfQtUmHar
Dy7YqXAD2jOhF247Px7t3MaYQmnPfaI9TGnLt4e19cNvp3YcFld+BKKoCCqe
RFAZASPwObQ9vg4ZzvG92g9n2kKAEoiLqQcLeLep3X7BmnFf8ct61gx+ZSnh
FT1atopLN88Ht7ScVTjdvGL6ICQ/OEe4QMl7/PmUI+Ii/u3zf49Ic3ST8y/O
7mmMViHpsbfP35tJRHSqetZcnGSntsnHn5xnlYM3lY9y60jX82WBaEr9yxpN
gFI/8yCBbn6i6aKbjyJp3bqTTUmiaInI7zD4XdLSK1k9vCD//L0JYxf27Tfo
nfjLd+Lnjm60Qgbt7l7tawNjDjVbVkfR4Z35/HdypkjJUmQNTuGt7S/JmTrW
4In91c+9qHxEbSjtb5/8WdlDy+SH9u56IlhzJVw8ycW4yWoGr9swF7vD32yL
2hK8aQMjPHi8CWkss11L3Y6pc6EZHiafh5TKO3WurAzZo+h46vodvFmDt2Fn
DKQfQZofOhuAMf0gJE/9wvf9MKU/RqUAIAydUcKU4mPpAEyH7zwwSml+StAP
9ckjTMP8l+B7HBilYTu1obocpmG/O0Hwy0KYhvmXkGDMe8f4BfD81hUaS5iG
5U+E5E48FeflUPvyU/z7IJizMA3z2dDvBDBKw/x4JKgfpmF+OmyPA6M0zM8N
yeU+Ja9Cgp9hwjScHzBm3tjhcYXuGbFglIb51O93EDP2IGYeUHih7l9SaXVt
dWO1zly9HF7q6mqV8B5H3cbM5qaaDGOzxVjVmFEtLrYajaXzl9YYrdVV9DWu
fGltY3WNUaOwGnWNxrE9tGKNsabK0pJhIaulwUd1Ttac/+BHkyepkmaL88Sa
PF1OjibLlFmlkUpMUk2uKZvMzdbnmXS6TCoQjWJObVNdFa1Et1+26iwWo1Wj
0JnNNKOo2WIdlZlvXKYJX5qLrNY6a4Oxsai5ymihOhc0tpiNFcaGxtnGRk1p
hbG2oc4K1aoWPZFQ6WoNUDM4rpAE5YDOQLD5BjTYaLTW6swhxpNcWWFKaht1
5ozaOjhQXUNGQ1WdxZhhMFaZ4eWdzBATBoMuU6rP1GXm5UiN2ZlVRn2uIUsi
JbPzcnVV2VVSQ1UOacox6ODVXgNv9paq58zUVf/l0iffAf5XXwEylpkzSv5T
1igs/Dtgnr+F
                    "]]|>, "orcInstance" -> 115492320, "orcModuleId" -> 
                    71782000, "targetMachineId" -> 115057600|>, 
                    140147808514592, 140147808514192, 140147808514272, 
                    140147808514048, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 192}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "5a0244871d7b04e7", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 192}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 192}, 
                    NeuralNetworks`RealT]|>|>, 
                  "Loss/SoftProbs" -> <|
                   "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 192}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                  "Loss/SoftmaxLayer" -> <|
                   "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                  NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                  NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                  NeuralNetworks`NetPath["Inputs", "Doors"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                  NeuralNetworks`NetPath["Inputs", "Passengers"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                  NeuralNetworks`NetPath["Inputs", "Cargo"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                  NeuralNetworks`NetPath["Inputs", "Safety"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/3", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/4", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Inputs", "Weights"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Inputs", "Weights"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/FeatureLayer/Catenate", "Outputs", "Output"],
                   NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/Harden", "Outputs", "Output"], 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                  NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
              NeuralNetworks`NetPath["Inputs", "Cargo"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
              NeuralNetworks`NetPath["Inputs", "Doors"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
              NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
              NeuralNetworks`NetPath["Inputs", "Passengers"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
              NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
              NeuralNetworks`NetPath["Inputs", "Safety"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
           "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
         MachineLearning`MLProcessor["Identity"]|>, 
       "Log" -> <|
        "FunctionMemory" -> 203040, "LanguageVersion" -> {13.1, 0}, "Date" -> 
         DateObject[{2022, 8, 3, 18, 52, 22.087203`8.096715705885718}, 
           "Instant", "Gregorian", 1.]|>|>], 
    "TestSet" -> <|"Input" -> {{"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "high", "high", 4, 4, "small", "high"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "very high", 4, 2, "large", "low"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "low", 2, 4, "large", "high"}, {
        "low", "high", 3, 4, "small", "low"}, {
        "high", "very high", 3, 4, "medium", "medium"}, {
        "very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "high", "low", 4, 4, "small", "high"}, {
        "very high", "low", 4, 4, "small", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "medium", 3, 2, "small", "low"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "low", "high", 2, 2, "medium", "high"}, {
        "high", "very high", 2, 4, "medium", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "very high", "very high", 2, 4, "small", "high"}, {
        "medium", "very high", 3, 2, "large", "medium"}, {
        "low", "low", 4, 4, "small", "high"}, {
        "medium", "low", 2, 4, "medium", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "low", 2, 4, "large", "high"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "very high", 4, 2, "large", "low"}, {
        "very high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "low", "medium", 2, 2, "small", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "very high", "very high", 4, 4, "small", "high"}, {
        "very high", "very high", 3, 4, "medium", "low"}, {
        "high", "high", 2, 2, "medium", "low"}, {
        "medium", "low", 3, 2, "large", "medium"}, {
        "high", "medium", 2, 2, "small", "high"}, {
        "high", "very high", 3, 2, "large", "low"}, {
        "low", "very high", 3, 2, "medium", "high"}, {
        "low", "low", 2, 4, "medium", "high"}, {
        "low", "medium", 4, 4, "medium", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "low", "high", 2, 2, "large", "high"}, {
        "very high", "medium", 4, 4, "large", "medium"}, {
        "high", "high", 3, 2, "large", "high"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "high", "medium", 2, 2, "medium", "high"}, {
        "very high", "high", 3, 4, "medium", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "low", "high", 3, 2, "small", "medium"}, {
        "high", "low", 3, 2, "small", "medium"}, {
        "low", "very high", 4, 2, "small", "medium"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "low", 2, 2, "large", "low"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "very high", 2, 4, "large", "high"}, {
        "low", "very high", 3, 4, "large", "high"}, {
        "high", "medium", 2, 2, "medium", "low"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {
        "high", "high", 3, 4, "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "high", "high", 3, 4, "large", "high"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {
        "high", "very high", 4, 4, "small", "low"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "low", "high", 4, 2, "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "medium", "low", 2, 4, "large", "medium"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "low", "very high", 4, 4, "large", "medium"}, {
        "high", "low", 3, 2, "medium", "medium"}, {
        "very high", "medium", 2, 4, "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "very high", "low", 4, 4, "large", "low"}, {
        "medium", "medium", 4, 2, "small", "low"}, {
        "very high", "very high", 4, 4, "large", "low"}, {
        "low", "medium", 3, 2, "large", "medium"}, {
        "high", "medium", 2, 4, "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "high"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "medium", 3, 2, "large", "low"}, {"very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 4, 4, "small", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"low", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "very high", "low", 4, 4, "small", "low"}, {
        "medium", "high", 3, 4, "medium", "high"}, {
        "very high", "low", 3, 4, "large", "medium"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "medium", 4, 4, "small", "low"}, {
        "high", "very high", 2, 4, "medium", "high"}, {
        "low", "low", 2, 4, "medium", "medium"}, {
        "low", "medium", 4, 4, "small", "medium"}, {
        "high", "low", 4, 4, "medium", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {"medium", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {
        "medium", "low", 2, 4, "large", "low"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "very high", "very high", 3, 4, "large", "low"}, {
        "medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "low", 3, 2, "medium", "high"}, {
        "very high", "low", 3, 4, "large", "high"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "low", "medium", 2, 4, "medium", "medium"}, {
        "low", "low", 3, 2, "large", "high"}, {"high", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "very high", 3, 4, "medium", "medium"}, {
        "medium", "very high", 4, 4, "large", "low"}, {
        "low", "medium", 4, 2, "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "very high", "high", 4, 2, "large", "low"}, {
        "medium", "medium", 4, 2, "large", "medium"}, {"very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "medium", 3, 2, "medium", "medium"}, {
        "high", "low", 4, 2, "small", "high"}, {
        "low", "medium", 3, 2, "medium", "medium"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "low", "low", 4, 2, "small", "medium"}, {
        "medium", "high", 2, 2, "medium", "high"}, {
        "high", "medium", 2, 4, "large", "low"}, {
        "medium", "high", 3, 2, "small", "medium"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"medium", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "low"}, {
        "very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "low", 2, 4, "small", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "medium", 4, 2, "medium", "high"}, {
        "medium", "very high", 3, 2, "small", "high"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "very high", "very high", 2, 2, "small", "low"}, {
        "medium", "low", 2, 2, "small", "high"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {
        "very high", "high", 4, 4, "large", "low"}, {
        "medium", "very high", 2, 2, "large", "low"}, {
        "medium", "very high", 3, 4, "small", "medium"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "very high", 4, 2, "medium", "high"}, {
        "very high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "low", 4, 2, "large", "high"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "very high", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "high", 2, 2, "small", "low"}, {
        "high", "low", 2, 2, "small", "medium"}, {"high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "low", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "very high", "medium", 4, 2, "small", "low"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "medium", "high", 4, 2, "medium", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "high", "high", 2, 4, "medium", "high"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {"low", "medium", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "medium", "medium", 4, 4, "large", "low"}, {"medium", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "high", "high", 2, 4, "large", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "very high", "high", 3, 2, "large", "medium"}, {
        "high", "very high", 3, 2, "small", "medium"}, {
        "very high", "high", 2, 4, "medium", "low"}, {
        "low", "very high", 3, 2, "small", "low"}, {
        "very high", "very high", 4, 4, "small", "medium"}, {"low", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "high", "medium", 2, 4, "medium", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "medium"}, {
        "low", "high", 3, 4, "large", "medium"}, {"medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "medium", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"low", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "medium"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "very high", "very high", 4, 2, "small", "medium"}, {
        "medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "medium", "high", 2, 4, "medium", "low"}, {
        "high", "very high", 4, 4, "large", "medium"}, {
        "low", "very high", 3, 2, "large", "high"}, {"low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {"medium", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "very high", 2, 2, "medium", "high"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "low"}, {
        "medium", "low", 4, 4, "large", "high"}, {"low", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 3, 4, "medium", "low"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "high", 4, 4, "medium", "medium"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {
        "medium", "low", 4, 2, "medium", "high"}, {
        "low", "low", 4, 4, "large", "medium"}, {
        "medium", "medium", 3, 2, "small", "high"}, {
        "very high", "medium", 3, 2, "large", "high"}, {"medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "very high", "very high", 3, 2, "medium", "medium"}, {
        "medium", "very high", 2, 4, "large", "low"}, {
        "low", "very high", 2, 2, "medium", "low"}, {
        "high", "low", 2, 4, "small", "low"}, {
        "very high", "very high", 2, 2, "large", "medium"}, {
        "medium", "high", 2, 4, "small", "high"}, {
        "very high", "medium", 3, 4, "small", "low"}, {
        "high", "very high", 4, 2, "small", "low"}, {
        "high", "high", 4, 4, "medium", "low"}, {
        "low", "very high", 4, 4, "medium", "high"}, {
        "high", "very high", 3, 2, "medium", "low"}, {
        "very high", "high", 2, 4, "small", "high"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {
        "medium", "medium", 2, 4, "large", "medium"}, {
        "very high", "high", 4, 4, "medium", "low"}, {
        "medium", "high", 2, 2, "small", "low"}, {
        "low", "low", 2, 2, "medium", "medium"}, {"high", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "medium"}, {
        "high", "very high", 2, 2, "large", "low"}, {
        "low", "very high", 2, 2, "small", "high"}, {
        "low", "high", 4, 2, "large", "medium"}, {
        "medium", "high", 3, 2, "medium", "medium"}, {
        "very high", "medium", 3, 4, "medium", "low"}, {"low", "very high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "high", "very high", 2, 4, "large", "low"}, {
        "very high", "high", 2, 4, "large", "medium"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "medium", "medium", 3, 2, "medium", "high"}, {
        "medium", "high", 4, 2, "medium", "high"}, {
        "low", "very high", 3, 2, "large", "medium"}, {
        "very high", "very high", 3, 2, "medium", "high"}, {
        "medium", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "high", "very high", 3, 2, "medium", "medium"}, {
        "very high", "high", 2, 2, "large", "low"}, {
        "medium", "medium", 2, 4, "small", "high"}, {"very high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "medium"}, {
        "low", "low", 3, 2, "medium", "medium"}, {
        "low", "low", 2, 2, "medium", "high"}, {"low", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "low", 4, 4, "medium", "medium"}, {
        "very high", "very high", 4, 4, "large", "high"}, {
        "very high", "very high", 2, 4, "large", "low"}, {
        "low", "very high", 2, 2, "large", "high"}, {"high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "very high", "medium", 2, 4, "small", "medium"}, {"medium", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "low"}, {
        "very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "low"}, {"very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "high"}, {
        "medium", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "large", "high"}, {
        "high", "low", 3, 2, "small", "low"}, {"very high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "low", "low", 4, 2, "medium", "low"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"low", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "large", "high"}, {
        "medium", "low", 2, 4, "medium", "medium"}, {
        "high", "high", 4, 2, "small", "medium"}, {
        "low", "low", 4, 2, "small", "low"}, {
        "very high", "very high", 2, 2, "large", "high"}, {
        "medium", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "very high", "high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"high", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "high", 2, 4, "large", "medium"}, {"high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {"low", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "high", "high", 3, 2, "medium", "medium"}, {
        "very high", "low", 3, 2, "small", "medium"}, {
        "high", "very high", 3, 2, "small", "low"}, {"very high", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "very high", "high", 2, 4, "small", "low"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "low"}, {
        "very high", "very high", 2, 2, "small", "high"}, {
        "very high", "high", 2, 2, "large", "medium"}, {
        "very high", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "small", "high"}, {
        "medium", "low", 3, 4, "small", "high"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {
        "low", "low", 3, 4, "small", "medium"}, {"very high", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {
        "low", "medium", 2, 2, "small", "high"}, {"high", "very high", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "high"}, {
        "low", "high", 3, 4, "large", "low"}, {"low", "very high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"low", "very high", 2, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "low"}, {"very high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "medium", "medium"}, {"low", "low", 
         Interval[{5, 
           DirectedInfinity[1]}], 4, "medium", "high"}, {
        "very high", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {
        "high", "very high", 4, 4, "medium", "low"}, {"high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "large", "medium"}, {
        "low", "very high", 2, 2, "large", "low"}, {
        "medium", "medium", 2, 4, "small", "medium"}, {
        "low", "low", 2, 2, "large", "high"}, {
        "high", "high", 2, 4, "small", "medium"}, {"high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {
        "medium", "very high", 2, 4, "medium", "low"}, {
        "low", "high", 2, 2, "large", "medium"}, {
        "high", "medium", 3, 4, "small", "low"}, {
        "very high", "high", 3, 4, "medium", "medium"}, {
        "very high", "low", 2, 2, "medium", "low"}, {"high", "medium", 
         Interval[{5, 
           DirectedInfinity[1]}], 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "low"}, {
        "low", "high", 2, 4, "medium", "low"}, {
        "very high", "very high", 3, 4, "small", "medium"}, {
        "very high", "high", 
         Interval[{5, 
           DirectedInfinity[1]}], 2, "small", "medium"}, {"medium", "high", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "medium", "high"}, {"very high", "low", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "medium"}, {"high", "medium", 3, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}, {"medium", "medium", 4, 
         Interval[{5, 
           DirectedInfinity[1]}], "small", "high"}}, 
      "Output" -> {
       "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "good", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "good", "very good", 
        "unacceptable", "good", "very good", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "good", "acceptable", "very good", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "very good", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "good", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "very good", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "good", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", "good", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", "acceptable", 
        "good", "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "acceptable"}|>, 
    "Predictions" -> {
     "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "good", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "good", "good", "very good", "unacceptable", "good", 
      "very good", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", "good", 
      "acceptable", "very good", "unacceptable", "acceptable", "unacceptable",
       "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "very good", "acceptable", "unacceptable", "unacceptable",
       "acceptable", "acceptable", "very good", "unacceptable", 
      "unacceptable", "acceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "acceptable", "good", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "good", "very good", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "acceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "acceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "good", "acceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "very good", "good", "unacceptable", "acceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "good", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "acceptable", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
      "acceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "very good", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "good", "acceptable", "very good", 
      "acceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "very good", "unacceptable", "unacceptable", "acceptable", 
      "unacceptable", "acceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
      "unacceptable", "unacceptable", "acceptable", "unacceptable", 
      "acceptable", "acceptable"}, "LogProbabilities" -> CompressedData["
1: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
Lan27gsETxKTuorqlktEEGf9f2OsPAk=
     "], "CountMatrix" -> {{245, 0, 0, 0, 0}, {0, 72, 0, 0, 0}, {0, 1, 11, 0, 
     0}, {0, 0, 1, 16, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwl0tlrDwAAwPHfZsNsq21sI3aPbUZjdrl2sFybncbczAMPjhCREnLnVlIK
OcuVq/CAnEU8uEUpRK4QyVGOz/Lw6fsPfFOaZtXNDAoEAt9objAhhNKSMMKJ
IJIooomhHbHEEU97EkgkiWRSSCWNdDrThQwyyaIr2eSQSx75FFBIEX3oSz/6
U0wJpZQxgHKGMIwKKqmimhpqqaeBUTQymjGMZRzjmcBEJjGZJqYwlWlMZwaz
mcNc5jGfBSxkEYtZwlKWsZwVrGQVq1nDWtaxng1sZBOb2cJWtrGdHexkF7vZ
w172sZ8DHOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlWucZ0b3OQWt7nD
Xe5xnwc85BGPecJTnvGcF7zkFa95w1ve8Z4PfOQTn/nC18D/P7/zg5/84jd/
+EvzvEEE04IQQmlFa8JoQzgRRBJFNDG0JZY44ulARzqRQCJJJJNCKmmkk0Em
WWTTje7k0IOe5NKLPPIpoJAielNMCaWUMZByBjGYoVRQyXCqqKaGWuqoZwQN
jKSRf5KxZjA=
       "], {}, {}, {}, {}}, {{}, {3, 7, 8, 10, 14, 15, 27, 28, 51, 57, 67, 70,
        73, 77, 84, 86, 100, 102, 105, 106, 110, 111, 112, 116, 119, 122, 124,
        127, 151, 153, 154, 156, 157, 161, 169, 175, 181, 182, 186, 187, 188, 
       192, 199, 200, 203, 207, 208, 217, 223, 224, 231, 237, 241, 244, 246, 
       252, 262, 270, 271, 280, 282, 294, 298, 302, 315, 317, 322, 328, 330, 
       343, 345, 346}, {}, {}, {}}, {{}, {139}, {46, 49, 71, 101, 107, 131, 
       149, 168, 220, 293, 325}, {}, {}}, {{}, {}, {316}, {19, 25, 26, 44, 45,
        48, 69, 82, 125, 148, 206, 221, 228, 251, 276, 314}, {}}}, 
    "ExtendedClasses" -> {"unacceptable", "acceptable", "very good", "good"}, 
    "Weights" -> SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0003439710982658959, "SingleEvaluationTime" -> 
    0.004615125, "Version" -> {13.1, 0}|>]]], "Output",
 CellChangeTimes->{
  3.8684443883703527`*^9, 3.868444628441779*^9, 3.8684447374621*^9, 
   3.868444798788579*^9, {3.8684450567305193`*^9, 3.8684450634502573`*^9}, 
   3.86844514160921*^9, {3.868445216184236*^9, 3.868445245788845*^9}, 
   3.86844550286349*^9, 3.868445684338311*^9, 3.868445860318709*^9, 
   3.868446035571615*^9, 3.8684462387314863`*^9, 3.868446531804*^9, 
   3.868446992824225*^9, 3.868447029560577*^9, 3.8684986039156446`*^9, 
   3.8685204529294043`*^9, 3.8685215146011333`*^9, 3.8685301612497177`*^9, 
   3.868530590591856*^9, 3.86853261496434*^9, 3.8685338436228123`*^9, {
   3.868535643570589*^9, 3.868535653266458*^9}, 3.86853620504729*^9, 
   3.868536647435892*^9, 3.8685368910591183`*^9, 3.868536956624065*^9, 
   3.868537492992119*^9, {3.8685379158969793`*^9, 3.868537942476584*^9}},
 CellLabel->
  "Out[150]=",ExpressionUUID->"bb9198b3-b1ba-4d62-8c9d-c5e9c080a34a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 3.868447049013842*^9}, {
  3.8684475100383997`*^9, 
  3.868447512030362*^9}},ExpressionUUID->"161daabc-615f-418f-a171-\
832b4a2218d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedSoftNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"be", "=", 
   RowBox[{"HardNetBooleanExpression", "[", 
    RowBox[{"hnf", ",", "inputSize"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bf", "=", 
   RowBox[{"HardNetBooleanFunction", "[", 
    RowBox[{"hnf", ",", "inputSize"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}, {
   3.8684988741865396`*^9, 3.868498874592616*^9}, {3.868499185605513*^9, 
   3.8684992093586597`*^9}, 3.868501716401897*^9, {3.868514975845937*^9, 
   3.868514978733061*^9}, {3.868533857047714*^9, 3.8685338619606743`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt", "=", 
   RowBox[{"HardNetClassify", "[", 
    RowBox[{"bf", ",", "featureLayer", ",", 
     RowBox[{"NetDecoder", "[", 
      RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}], ",", 
     "testData", ",", "\"\<Acceptability\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval", "=", 
  RowBox[{"HardNetClassifyEvaluation", "[", "hncwt", "]"}]}]}], "Input",
 CellChangeTimes->{{3.868518101019845*^9, 3.8685181135715637`*^9}, {
   3.868530047989657*^9, 3.868530063111247*^9}, {3.868530190826717*^9, 
   3.868530196600292*^9}, {3.86853144384466*^9, 3.868531451560924*^9}, {
   3.868532766824644*^9, 3.8685327949413958`*^9}, 3.868532945602283*^9, {
   3.868533874444491*^9, 3.8685338747929583`*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"f5f447dd-5588-4178-92cf-69aee019ae5a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Accuracy\"\>", "\[Rule]", "0.9913294797687862`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.868533879017746*^9, 3.868535667588807*^9, 
  3.868536213741539*^9, 3.868536669450602*^9, 3.868536920899683*^9, 
  3.868536972335367*^9, 3.8685375019147253`*^9, 3.868537949682953*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"ad48924c-fbd6-44de-b413-5d75c1b10948"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapIndexed", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"#2", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"trainedSoftNet", "[", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"#1", ",", 
          RowBox[{"-", "1"}]}], "]"}], ",", "\"\<Probabilities\>\""}], "]"}], 
      ",", 
      RowBox[{"HardNetClassProbabilities", "[", 
       RowBox[{"HardNetClassScores", "[", 
        RowBox[{"HardNetClassBits", "[", 
         RowBox[{"bf", ",", "featureLayer", ",", 
          RowBox[{"{", 
           RowBox[{"Drop", "[", 
            RowBox[{"#1", ",", 
             RowBox[{"-", "1"}]}], "]"}], "}"}]}], "]"}], "]"}], "]"}]}], 
     "}"}], "&"}], ",", "testData"}], "]"}]], "Input",
 CellChangeTimes->{{3.868534500633864*^9, 3.868534530856123*^9}, {
  3.868534632169736*^9, 3.868534646264037*^9}, {3.868534678794361*^9, 
  3.868534701575143*^9}, {3.8685348592982283`*^9, 3.868534879711412*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"5a479eae-a14a-4e16-be45-c641694c4dfb"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{
       1, <|"unacceptable" -> 0.9963157773017883, "acceptable" -> 
         0.003684245515614748, "very good" -> 1.1446326793161784`*^-15, 
         "good" -> 4.146040455399458*^-10|>, {{0.9975273768382814, 
        0.002472623156622173, 5.73530586237405*^-19, 
        5.096456176197253*^-12}}}, {
       2, <|"unacceptable" -> 1., "acceptable" -> 5.162169240449633*^-16, 
         "very good" -> 5.690358869324917*^-15, "good" -> 
         1.1488654088327266`*^-15|>, {{1., 2.1151310375910807`*^-19, 
        4.248354255291589*^-18, 5.74952226429356*^-19}}}, {
       3, <|"unacceptable" -> 0.08317258208990097, "acceptable" -> 
         0.9168274402618408, "very good" -> 3.1398768134127675`*^-12, "good" -> 
         1.889722156533935*^-9|>, {{0.047425873176938804`, 0.95257412680982, 
        1.2063556439703388`*^-14, 1.3229296000351899`*^-11}}}, {
       4, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 1.042233542833626*^-16, "good" -> 
         1.538821045414529*^-12|>, {{0.9999999992417393, 
        7.58256042216235*^-10, 2.8625185783788586`*^-20, 
        4.658886141570748*^-15}}}, {
       5, <|"unacceptable" -> 1., "acceptable" -> 1.0208944800638164`*^-8, 
         "very good" -> 8.577292197552235*^-19, "good" -> 
         4.24835413113866*^-18|>, {{0.9999999997210532, 
        2.789468092090812*^-10, 7.095474160305444*^-23, 
        5.242885661900978*^-22}}}, {
       6, <|"unacceptable" -> 1., "acceptable" -> 2.3195226989972605`*^-16, 
         "very good" -> 5.809300448147263*^-23, "good" -> 
         5.270070474306733*^-24|>, {{0.9999999999999999, 
        2.8625185805493937`*^-20, 4.359610000063081*^-28, 
        7.984904245686979*^-30}}}, {
       7, <|"unacceptable" -> 0.000067723318352364, "acceptable" -> 
         0.9999260902404785, "very good" -> 5.0561421716111*^-8, "good" -> 
         6.143758128018817*^-6|>, {{6.14417271004557*^-6, 0.9999935478658029, 
        2.061140323598785*^-9, 3.059003467790027*^-7}}}, {
       8, <|"unacceptable" -> 0.017985807731747627`, "acceptable" -> 
         0.9819843173027039, "very good" -> 1.0025023478021922`*^-8, "good" -> 
         0.00002988440428453032|>, {{0.006692835895666156, 0.993304918630937, 
        2.770792377010762*^-10, 2.2451963176804302`*^-6}}}, {
       9, <|"unacceptable" -> 1., "acceptable" -> 4.161403721614221*^-10, 
         "very good" -> 2.8773609378982676`*^-22, "good" -> 
         2.8773609378982676`*^-22|>, {{0.9999999999981206, 
        1.8795288165355508`*^-12, 3.2213402859864616`*^-27, 
        1.1850648642317536`*^-27}}}, {
       10, <|"unacceptable" -> 0.0016581929521635175`, "acceptable" -> 
         0.9979766607284546, "very good" -> 0.0003347813035361469, "good" -> 
         0.000030370629247045144`|>, {{0.00033530800639560435`, 
        0.9995390797840157, 0.00012335292201312535`, 
        2.259287575462593*^-6}}}, {
       11, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573892281063308*^-7, "very good" -> 2.5568337493075705`*^-15, 
         "good" -> 6.914343772014553*^-13|>, {{0.9999999847700198, 
        1.522997951276034*^-8, 5.749522176728449*^-19, 
        6.305116664120186*^-16}}}, {
       12, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.76075638794282*^-6, "very good" -> 2.10423068043241*^-17, "good" -> 
         1.2664131048901236`*^-14|>, {{0.9999998874648379, 
        1.1253516205509498`*^-7, 3.873997192726237*^-21, 
        4.248353777202354*^-18}}}, {
       13, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.5045233087439556`*^-7, "very good" -> 1.5388323211171229`*^-12, 
         "good" -> 5.69040122097228*^-15|>, {{0.999999994397199, 
        5.602796406145914*^-9, 4.658886119000585*^-15, 
        1.562882180578471*^-18}}}, {
       14, <|"unacceptable" -> 0.00813277903944254, "acceptable" -> 
         0.9882128238677979, "very good" -> 1.1120955178967051`*^-7, "good" -> 
         0.0036542818415910006`|>, {{0.0024703760215425787`, 
        0.9966208178443055, 5.5838635677935526`*^-9, 
        0.0009088005502884147}}}, {
       15, <|"unacceptable" -> 0.0036836923100054264`, "acceptable" -> 
         0.9961661100387573, "very good" -> 2.2633386720372073`*^-8, "good" -> 
         0.0001501558581367135|>, {{0.0009110359917223521, 0.999072277044486, 
        7.575525912541361*^-10, 0.000016686206239026422`}}}, {
       16, <|
        "unacceptable" -> 1., "acceptable" -> 9.45491511103936*^-18, 
         "very good" -> 1.76790508133433*^-27, "good" -> 
         2.148187067090664*^-25|>, {{0.9999999999999999, 
        1.4251640827409352`*^-21, 9.85415468611126*^-34, 
        3.975449735908647*^-31}}}, {
       17, <|"unacceptable" -> 0.8320192694664001, "acceptable" -> 
         0.16798076033592224`, "very good" -> 7.705606153152189*^-10, "good" -> 
         1.5557374832830817`*^-10|>, {{0.8807970779665716, 0.1192029220205868,
         1.2232460375224084`*^-11, 6.090183410084681*^-13}}}, {
       18, <|"unacceptable" -> 1., "acceptable" -> 9.45491511103936*^-18, 
         "very good" -> 7.943715204226384*^-28, "good" -> 
         1.948803212853152*^-26|>, {{1., 5.242885663363464*^-22, 
        3.6251409191435593`*^-34, 7.281290178321643*^-33}}}, {
       19, <|"unacceptable" -> 2.0830640323765692`*^-8, "acceptable" -> 
         0.08317269384860992, "very good" -> 5.6331900850636885`*^-6, "good" -> 
         0.9168216586112976|>, {{9.775198180329481*^-11, 
        0.047425859353289794`, 2.9139455090568935`*^-7, 
        0.9525738491544073}}}, {
       20, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 8.401731393936629*^-11, 
         "good" -> 7.621867546825367*^-12|>, {{0.9999999585999204, 
        4.1399375473914156`*^-8, 6.914399820683487*^-13, 
        1.2664165024796712`*^-14}}}, {
       21, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404859717207728`*^-6, "very good" -> 1.7317258768344915`*^-19, 
         "good" -> 5.162202592371931*^-16|>, {{0.9999999586006245, 
        4.1399375473943306`*^-8, 9.60267965696372*^-24, 
        7.781131918999781*^-20}}}, {
       22, <|"unacceptable" -> 1., "acceptable" -> 4.6830430024273186`*^-17, 
         "very good" -> 3.1717465106521578`*^-21, "good" -> 
         1.2928777690831585`*^-22|>, {{1., 1.0530617357553813`*^-20, 
        6.47023492564546*^-26, 1.1850648642339808`*^-27}}}, {
       23, <|"unacceptable" -> 0.999849259853363, "acceptable" -> 
         0.00015071104280650616`, "very good" -> 1.5707490979308564`*^-20, 
         "good" -> 6.271647426652621*^-14|>, {{0.9999832985781518, 
        0.000016701421848095177`, 4.780813036176604*^-25, 
        3.139080364067032*^-17}}}, {
       24, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 2.3195226989972605`*^-16, "good" -> 
         6.914400150527522*^-13|>, {{0.9999999997210526, 
        2.78946809209081*^-10, 7.781132238963269*^-20, 
        6.305116758388193*^-16}}}, {
       25, <|"unacceptable" -> 5.049015427971426*^-8, "acceptable" -> 
         0.0007454749429598451, "very good" -> 0.0007454749429598451, "good" -> 
         0.9985089898109436|>, {{7.579082590104654*^-10, 
        0.00012335320060998867`, 0.0003353087637003955, 
        0.9995413372777814}}}, {
       26, <|"unacceptable" -> 5.035368758399272*^-6, "acceptable" -> 
         0.16546058654785156`, "very good" -> 0.015010223723948002`, "good" -> 
         0.8195241689682007|>, {{2.651601394511665*^-7, 0.11731039672014895`, 
        0.01587623576672076, 0.8668131023529907}}}, {
       27, <|"unacceptable" -> 0.0001505982072558254, "acceptable" -> 
         0.9991007447242737, "very good" -> 0.0007459167391061783, "good" -> 
         2.7583025712374365`*^-6|>, {{6.143415757791762*^-6, 
        0.9998703502596201, 0.00012339380403761938`, 
        1.1252058456307315`*^-7}}}, {
       28, <|"unacceptable" -> 0.0007453627767972648, "acceptable" -> 
         0.9983587861061096, "very good" -> 0.0007453627767972648, "good" -> 
         0.00015048752538859844`|>, {{0.00012335114147454544`, 
        0.9995246519304664, 0.0003353031663899377, 
        0.000016693761669017087`}}}, {
       29, <|"unacceptable" -> 0.9820135235786438, "acceptable" -> 
         0.017986342310905457`, "very good" -> 6.159818071197962*^-14, "good" -> 
         1.1051106696413626`*^-7|>, {{0.993307147042059, 0.006692850910582189,
         8.475937192701855*^-17, 2.0473586243198493`*^-9}}}, {
       30, <|"unacceptable" -> 1., "acceptable" -> 1.042233542833626*^-16, 
         "very good" -> 1.1728793405156866`*^-23, "good" -> 
         2.877382899785869*^-22|>, {{1., 1.0530617357553812`*^-20, 
        5.900090541597062*^-29, 1.185064864233981*^-27}}}, {
       31, <|"unacceptable" -> 0.9918374419212341, "acceptable" -> 
         0.008162546902894974, "very good" -> 3.7443197847819576`*^-11, 
         "good" -> 1.6824262469294915`*^-11|>, {{0.9975273768430779, 
        0.0024726231566340622`, 2.5373761207937515`*^-13, 
        3.4339651598544*^-14}}}, {
       32, <|"unacceptable" -> 0.9918373823165894, "acceptable" -> 
         0.008162608370184898, "very good" -> 2.2535035171245*^-8, "good" -> 
         7.559662097700315*^-12|>, {{0.993307148327541, 0.006692850919243698, 
        7.531811475670435*^-10, 3.4194371197971516`*^-14}}}, {
       33, <|"unacceptable" -> 1., "acceptable" -> 4.5871257903229434`*^-9, 
         "very good" -> 1.731714890841981*^-19, "good" -> 
         3.1068070750588095`*^-13|>, {{0.9999999999622484, 
        3.77513454413658*^-11, 9.60268005414616*^-24, 
        2.3195228301560036`*^-16}}}, {
       34, <|"unacceptable" -> 0.9999996423721313, "acceptable" -> 
         2.504503981981543*^-7, "very good" -> 6.914397440022091*^-13, "good" -> 
         1.125351332120772*^-7|>, {{0.9999999791672226, 1.522997942742985*^-8,
         1.71390839583654*^-15, 5.602796320815457*^-9}}}, {
       35, <|"unacceptable" -> 1., "acceptable" -> 1.042217660965865*^-16, 
         "very good" -> 1.4251532336076977`*^-21, "good" -> 
         5.162169240449633*^-16|>, {{1., 2.8625185805493937`*^-20, 
        2.3802664086944007`*^-26, 2.1151310375910805`*^-19}}}, {
       36, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404859717207728`*^-6, "very good" -> 2.3195197873215044`*^-16, 
         "good" -> 4.248348754464678*^-18|>, {{0.9999999586006245, 
        4.1399375473943306`*^-8, 7.781131918999781*^-20, 
        1.928749768114879*^-22}}}, {
       37, <|"unacceptable" -> 0.9996646642684937, "acceptable" -> 
         0.00033535013790242374`, "very good" -> 2.3187447521747667`*^-16, 
         "good" -> 7.619262859526188*^-12|>, {{0.999954602131285, 
        0.00004539786870243382, 7.780778994313859*^-20, 
        1.2663590622969192`*^-14}}}, {
       38, <|"unacceptable" -> 1., "acceptable" -> 6.272640826893161*^-14, 
         "very good" -> 1.2928876140672556`*^-22, "good" -> 
         2.6102989257483514`*^-23|>, {{1., 3.1391327920480296`*^-17, 
        4.359610000063081*^-28, 5.900090541597061*^-29}}}, {
       39, <|"unacceptable" -> 1., "acceptable" -> 4.24835413113866*^-18, 
         "very good" -> 7.94368487082976*^-28, "good" -> 
         6.537457101081178*^-30|>, {{1., 1.9287498479639178`*^-22, 
        3.625140919143559*^-34, 3.305700626760734*^-37}}}, {
       40, <|"unacceptable" -> 0.9996509552001953, "acceptable" -> 
         0.00001366936066915514, "very good" -> 1.0205459588519261`*^-8, 
         "good" -> 0.0003353455394972116|>, {{0.9999537703998465, 
        8.314902778633676*^-7, 2.789339136874351*^-10, 
        0.00004539783094188494}}}, {
       41, <|"unacceptable" -> 1., "acceptable" -> 2.0611694573346995`*^-9, 
         "very good" -> 1.570997898349476*^-20, "good" -> 
         5.162208945119035*^-16|>, {{0.999999999986112, 
        1.3887943864771146`*^-11, 4.780892883819072*^-25, 
        7.781132241025731*^-20}}}, {
       42, <|"unacceptable" -> 1., "acceptable" -> 1.731714890841981*^-19, 
         "very good" -> 6.537406695883414*^-30, "good" -> 
         6.537457101081178*^-30|>, {{1., 3.532628572200807*^-24, 
        8.985825944049381*^-37, 3.3057006267607348`*^-37}}}, {
       43, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 7.621867546825367*^-12, 
         "good" -> 1.6962830445832466`*^-11|>, {{0.9999999586005557, 
        4.1399375473940454`*^-8, 3.442476965953337*^-14, 
        3.442476965953337*^-14}}}, {
       44, <|"unacceptable" -> 1.0963467502733693`*^-6, "acceptable" -> 
         0.03602587431669235, "very good" -> 0.0801766887307167, "good" -> 
         0.8837963342666626|>, {{3.588553080332467*^-8, 0.01587623940673947, 
        0.1173104236164514, 0.8668133010912783}}}, {
       45, <|"unacceptable" -> 4.6363211936295556`*^-7, "acceptable" -> 
         0.16793487966060638`, "very good" -> 0.0002790351281873882, "good" -> 
         0.8317856192588806|>, {{1.3413063490356352`*^-8, 
        0.11918996459389562`, 0.00010868717918825474`, 
        0.8807013348138527}}}, {
       46, <|"unacceptable" -> 1.1373174402251607`*^-6, "acceptable" -> 
         0.0831722766160965, "very good" -> 0.9168240427970886, "good" -> 
         2.531154450480244*^-6|>, {{1.4956049299587815`*^-8, 
        0.017986208961863915`, 0.9820137354273297, 4.065475703660719*^-8}}}, {
       47, <|
        "unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 2.6102886705565835`*^-23, 
         "good" -> 1.0422254695508475`*^-16|>, {{0.9999999943972037, 
        5.60279640614594*^-9, 1.6038108815628122`*^-28, 
        2.862518564511285*^-20}}}, {
       48, <|"unacceptable" -> 4.858446445155096*^-8, "acceptable" -> 
         0.03916532173752785, "very good" -> 0.000013138501344656106`, "good" -> 
         0.9608215093612671|>, {{2.7392938964851274`*^-10, 
        0.017986195270129127`, 8.165720019581998*^-7, 0.9820129878839395}}}, {
       49, <|"unacceptable" -> 8.370800580470572*^-11, "acceptable" -> 
         6.121584647189593*^-6, "very good" -> 0.9963096380233765, "good" -> 
         0.0036842229310423136`|>, {{9.349094837952507*^-14, 
        3.056235344215608*^-7, 0.9990886434604103, 0.0009110509159618741}}}, {
       50, <|"unacceptable" -> 0.9999986886978149, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 5.056509522205488*^-8, 
         "good" -> 8.401666862223323*^-11|>, {{0.9999999565392168, 
        4.139937538860231*^-8, 2.061153532859207*^-9, 
        2.543665536827221*^-13}}}, {
       51, <|"unacceptable" -> 0.0003353517677169293, "acceptable" -> 
         0.9996618628501892, "very good" -> 4.5856447528080935`*^-9, "good" -> 
         2.7598307497100905`*^-6|>, {{0.000045397863589151354`, 
        0.9999544895037435, 1.0261412608467327`*^-10, 
        1.1253005318761134`*^-7}}}, {
       52, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 2.556832055241676*^-15, 
         "good" -> 4.248348754464678*^-18|>, {{0.9999999586006245, 
        4.1399375473943306`*^-8, 1.5628821246326424`*^-18, 
        1.9287497681148788`*^-22}}}, {
       53, <|"unacceptable" -> 0.9996643662452698, "acceptable" -> 
         2.503683447230287*^-7, "very good" -> 2.0604620232234083`*^-9, 
         "good" -> 0.00033535261172801256`|>, {{0.9998765901600506, 
        1.52281002153499*^-8, 3.7746686555292005`*^-11, 
        0.00012339457410250903`}}}, {
       54, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 2.8184668954180786`*^-14, 
         "good" -> 6.272633373003225*^-14|>, {{0.9999999586006244, 
        4.13993754739433*^-8, 3.139132662089893*^-17, 
        3.139132662089893*^-17}}}, {
       55, <|"unacceptable" -> 1., "acceptable" -> 6.914400150527522*^-13, 
         "very good" -> 7.058926702980258*^-21, "good" -> 
         1.1728793405156866`*^-23|>, {{0.9999999999999992, 
        6.305116760146985*^-16, 6.470234925645455*^-26, 
        2.1705220113036378`*^-29}}}, {
       56, <|"unacceptable" -> 0.9983412027359009, "acceptable" -> 
         0.001658798661082983, "very good" -> 9.439230939444741*^-18, "good" -> 
         6.902930375744798*^-13|>, {{0.9990889488055976, 
        0.0009110511944006438, 1.4238656853011347`*^-21, 
        1.7123469732183603`*^-15}}}, {
       57, <|"unacceptable" -> 0.0003353492065798491, "acceptable" -> 
         0.9996618628501892, "very good" -> 2.2712638880761915`*^-8, "good" -> 
         2.759830522336415*^-6|>, {{0.00004539786355938818, 0.999954488848166,
         7.582215336852981*^-10, 1.1253005311383578`*^-7}}}, {
       58, <|"unacceptable" -> 1., "acceptable" -> 3.775134371775124*^-11, 
         "very good" -> 3.854014127173845*^-19, "good" -> 
         6.403655264738168*^-22|>, {{0.9999999999999065, 9.3576229688393*^-14,
         2.6102790696674608`*^-23, 3.2213402859922146`*^-27}}}, {
       59, <|"unacceptable" -> 1., "acceptable" -> 1.5709739876598943`*^-20, 
         "very good" -> 8.756443870358695*^-27, "good" -> 
         5.930637953005909*^-31|>, {{1., 4.78089288388547*^-25, 
        7.281290178321645*^-33, 4.473779306181121*^-38}}}, {
       60, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 7.058872580811272*^-21, 
         "good" -> 1.042233410484728*^-16|>, {{0.9999999979388464, 
        2.0611536181902037`*^-9, 1.758792198799171*^-25, 
        1.0530617335848593`*^-20}}}, {
       61, <|"unacceptable" -> 1., "acceptable" -> 7.62181897456804*^-12, 
         "very good" -> 5.270070474306733*^-24, "good" -> 
         4.2483868047728556`*^-18|>, {{0.9999999999999875, 
        1.2664165549094016`*^-14, 2.170522011303612*^-29, 
        1.9287498479638934`*^-22}}}, {
       62, <|"unacceptable" -> 1., "acceptable" -> 8.401741802277485*^-11, 
         "very good" -> 1.0640186457981085`*^-24, "good" -> 
         4.2483868047728556`*^-18|>, {{0.9999999999997455, 
        2.5436656473762755`*^-13, 2.9374821117100552`*^-30, 
        1.928749847963427*^-22}}}, {
       63, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404859717207728`*^-6, "very good" -> 1.6962700341571768`*^-11, 
         "good" -> 1.395983074145915*^-13|>, {{0.9999999586005308, 
        4.139937547393943*^-8, 9.357622581439552*^-14, 
        8.533047272480423*^-17}}}, {
       64, <|"unacceptable" -> 1., "acceptable" -> 2.1042204233928143`*^-17, 
         "very good" -> 5.809300448147263*^-23, "good" -> 
         2.6102790464535398`*^-23|>, {{1., 1.4251640827409352`*^-21, 
        4.359610000063081*^-28, 5.900090541597061*^-29}}}, {
       65, <|"unacceptable" -> 0.9168256521224976, "acceptable" -> 
         0.0831717848777771, "very good" -> 6.339251497865239*^-13, "good" -> 
         2.531139443817665*^-6|>, {{0.9525740247083102, 0.04742586809360396, 
        1.6326246526154828`*^-15, 1.0719808430357754`*^-7}}}, {
       66, <|"unacceptable" -> 0.8320192694664001, "acceptable" -> 
         0.16798076033592224`, "very good" -> 1.5557374832830817`*^-10, 
         "good" -> 6.990357598324337*^-11|>, {{0.8807970779762271, 
        0.11920292202189353`, 1.6554834895797408`*^-12, 
        2.2404532695581016`*^-13}}}, {
       67, <|"unacceptable" -> 0.0015913856914266944`, "acceptable" -> 
         0.9577763080596924, "very good" -> 0.03904089704155922, "good" -> 
         0.0015913856914266944`|>, {{0.00031934892203094867`, 
        0.9519657197813226, 0.04739558237461552, 0.00031934892203094867`}}}, {
       68, <|"unacceptable" -> 1., "acceptable" -> 1.0422256018997455`*^-16, 
         "very good" -> 2.3679880713656866`*^-24, "good" -> 
         2.148187067090664*^-25|>, {{1., 1.0530617357553813`*^-20, 
        7.984904245686979*^-30, 1.462486227251231*^-31}}}, {
       69, <|"unacceptable" -> 1.903884367493447*^-6, "acceptable" -> 
         0.3098662793636322, "very good" -> 0.0005148597992956638, "good" -> 
         0.6896169781684875|>, {{3.026263863812505*^-8, 0.26891715158057106`, 
        0.00009021165435727649, 0.7309926065024329}}}, {
       70, <|"unacceptable" -> 0.08317316323518753, "acceptable" -> 
         0.9168268442153931, "very good" -> 5.750925451998568*^-14, "good" -> 
         4.205664261291986*^-9|>, {{0.0474258731758613, 0.9525741267881778, 
        8.128360390935087*^-17, 3.596095492024547*^-11}}}, {
       71, <|"unacceptable" -> 9.805873446566693*^-9, "acceptable" -> 
         0.000322217820212245, "very good" -> 0.9605251550674438, "good" -> 
         0.03915264084935188|>, {{3.707068908016223*^-11, 
        0.000044581369504743506`, 0.981970010481872, 
        0.017985408111552487`}}}, {
       72, <|"unacceptable" -> 0.9820137619972229, "acceptable" -> 
         0.01798621006309986, "very good" -> 9.094825448308086*^-10, "good" -> 
         3.707262621888141*^-11|>, {{0.9933071490619201, 
        0.0066928509241919055`, 1.3794993926839394`*^-11, 
        9.294993793174974*^-14}}}, {
       73, <|"unacceptable" -> 0.0036842450499534607`, "acceptable" -> 
         0.9963156580924988, "very good" -> 1.1212055284204325`*^-7, "good" -> 
         1.862958537435233*^-10|>, {{0.0009110511893002322, 
        0.9990889432123172, 5.597691971812845*^-9, 
        6.908100695790021*^-13}}}, {
       74, <|"unacceptable" -> 1., "acceptable" -> 1.6962851262514178`*^-11, 
         "very good" -> 7.206364619444846*^-29, "good" -> 
         2.3679880713656866`*^-24|>, {{0.9999999999999656, 
        3.442477108469858*^-14, 1.804851387845353*^-35, 
        2.937482111710702*^-30}}}, {
       75, <|"unacceptable" -> 1., "acceptable" -> 1.266426233900806*^-14, 
         "very good" -> 5.690402491521701*^-15, "good" -> 
         4.2483868047728556`*^-18|>, {{1., 1.1548224173015786`*^-17, 
        4.248354255291589*^-18, 5.242885663363464*^-22}}}, {
       76, <|"unacceptable" -> 1., "acceptable" -> 1.266426233900806*^-14, 
         "very good" -> 7.943806204416256*^-28, "good" -> 
         1.0640186457981085`*^-24|>, {{1., 4.248354255291589*^-18, 
        1.3336148155022614`*^-34, 1.0806392777072785`*^-30}}}, {
       77, <|"unacceptable" -> 0.03916555270552635, "acceptable" -> 
         0.9608344435691833, "very good" -> 1.7966005072533875`*^-10, "good" -> 
         3.6272516240609676`*^-11|>, {{0.017986209962056708`, 
        0.9820137900360058, 1.8457232166114336`*^-12, 
        9.18931479735872*^-14}}}, {
       78, <|"unacceptable" -> 1., "acceptable" -> 1.8698335935152244`*^-10, 
         "very good" -> 8.577292197552235*^-19, "good" -> 
         8.577292197552235*^-19|>, {{0.9999999999993086, 
        6.914400106935423*^-13, 7.095474162279798*^-23, 
        2.6102790696658998`*^-23}}}, {
       79, <|"unacceptable" -> 0.9999802112579346, "acceptable" -> 
         0.000013673966350324918`, "very good" -> 6.144137387309456*^-6, 
         "good" -> 3.775059431720962*^-11|>, {{0.9999983369452341, 
        8.315273362257686*^-7, 8.315273362257686*^-7, 
        9.357607406600699*^-14}}}, {
       80, <|"unacceptable" -> 1., "acceptable" -> 1.1488654088327266`*^-15, 
         "very good" -> 1.570985943004685*^-20, "good" -> 
         5.809256271936571*^-23|>, {{1., 5.749522264293559*^-19, 
        4.780892883885469*^-25, 4.359610000063081*^-28}}}, {
       81, <|"unacceptable" -> 1., "acceptable" -> 6.272592715421757*^-14, 
         "very good" -> 7.943745537623008*^-28, "good" -> 
         1.1728793405156866`*^-23|>, {{0.9999999999999999, 
        8.533047625744066*^-17, 1.3336148155022612`*^-34, 
        5.900090541597062*^-29}}}, {
       82, <|"unacceptable" -> 8.559085813431011*^-7, "acceptable" -> 
         0.3100259602069855, "very good" -> 8.559151183362701*^-7, "good" -> 
         0.6899723410606384|>, {{3.0265366437199984`*^-8, 0.2689413911046286, 
        8.226979561789499*^-8, 0.7310584963602091}}}, {
       83, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 1.0640023755419383`*^-24, "good" -> 
         8.577227057078997*^-19|>, {{0.9999999997210531, 
        2.7894680920908113`*^-10, 2.9374821108914016`*^-30, 
        2.6102790689395753`*^-23}}}, {
       84, <|"unacceptable" -> 0.003678156528621912, "acceptable" -> 
         0.9946691393852234, "very good" -> 1.8598657336443836`*^-10, "good" -> 
         0.0016526973340660334`|>, {{0.0009107459515141703, 
        0.9987542093349164, 1.8771873170846833`*^-12, 
        0.0003350447116921865}}}, {
       85, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 2.3195226989972605`*^-16, "good" -> 
         1.395995406945627*^-13|>, {{0.9999999997210532, 
        2.789468092090812*^-10, 7.781132238963274*^-20, 
        8.533047623363799*^-17}}}, {
       86, <|"unacceptable" -> 0.03916554898023605, "acceptable" -> 
         0.9608343839645386, "very good" -> 2.9851498334863835`*^-13, "good" -> 
         4.8585118150867856`*^-8|>, {{0.017986209948698692`, 
        0.9820137893066828, 6.191711601653021*^-16, 
        7.446178898460673*^-10}}}, {
       87, <|"unacceptable" -> 0.9991559386253357, "acceptable" -> 
         0.000030406750738620758`, "very good" -> 0.00006767167360521853, 
         "good" -> 0.000745957950130105|>, {{0.9996418197979795, 
        6.142011618106238*^-6, 0.000016695718571682522`, 
        0.0003353424718306794}}}, {
       88, <|"unacceptable" -> 1., "acceptable" -> 4.5871959564181*^-9, 
         "very good" -> 5.690358869324917*^-15, "good" -> 
         6.272592715421757*^-14|>, {{0.9999999999622485, 
        3.775134544136581*^-11, 1.5628821892759875`*^-18, 
        3.1391327919295223`*^-17}}}, {
       89, <|"unacceptable" -> 1., "acceptable" -> 2.556854925131252*^-15, 
         "very good" -> 3.1717465106521578`*^-21, "good" -> 
         7.058873388604839*^-21|>, {{1., 5.749522264293559*^-19, 
        6.47023492564546*^-26, 6.47023492564546*^-26}}}, {
       90, <|"unacceptable" -> 1., "acceptable" -> 6.272592715421757*^-14, 
         "very good" -> 5.809300448147263*^-23, "good" -> 
         2.8773609378982676`*^-22|>, {{1., 3.1391327920480296`*^-17, 
        1.603810890548638*^-28, 1.185064864233981*^-27}}}, {
       91, <|"unacceptable" -> 0.9812941551208496, "acceptable" -> 
         0.0007326225750148296, "very good" -> 4.961929533919829*^-8, "good" -> 
         0.017973167821764946`|>, {{0.99318539856166, 0.0001225688154582452, 
        2.0471076819984485`*^-9, 0.00669203057577404}}}, {
       92, <|"unacceptable" -> 0.9983412027359009, "acceptable" -> 
         0.001658798661082983, "very good" -> 1.0404967282450606`*^-16, 
         "good" -> 1.536280109203092*^-12|>, {{0.9996646498695319, 
        0.00033535013046647757`, 2.861558634569939*^-20, 
        1.7133336721258848`*^-15}}}, {
       93, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404859717207728`*^-6, "very good" -> 2.5568517487576997`*^-15, 
         "good" -> 1.395983074145915*^-13|>, {{0.9999998874648379, 
        1.12535162055095*^-7, 1.5628820134557881`*^-18, 
        2.3195225692156916`*^-16}}}, {
       94, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 2.1042202579566917`*^-17, 
         "good" -> 3.1068542378533126`*^-13|>, {{0.9999999943972029, 
        5.602796406145936*^-9, 3.8739976069819646`*^-21, 
        6.305116724820699*^-16}}}, {
       95, <|"unacceptable" -> 0.9963157176971436, "acceptable" -> 
         0.0036842734552919865`, "very good" -> 4.1461034605561053`*^-10, 
         "good" -> 3.412128002019954*^-12|>, {{0.9990889488004949, 
        0.0009110511943959908, 5.10443438637593*^-12, 
        4.654641661292543*^-15}}}, {
       96, <|"unacceptable" -> 1., "acceptable" -> 6.272640826893161*^-14, 
         "very good" -> 2.5568744068890387`*^-15, "good" -> 
         6.914452734332888*^-13|>, {{0.9999999999999993, 
        3.139132792048028*^-17, 1.5628821893349878`*^-18, 
        6.305116760146985*^-16}}}, {
       97, <|"unacceptable" -> 0.9168267846107483, "acceptable" -> 
         0.08317315578460693, "very good" -> 4.635984751644173*^-8, "good" -> 
         1.410843122016947*^-12|>, {{0.9525741249521462, 
        0.047425873084450676`, 1.963401608286356*^-9, 
        1.6326248244242384`*^-15}}}, {
       98, <|"unacceptable" -> 0.9918374419212341, "acceptable" -> 
         0.008162546902894974, "very good" -> 5.64391097062928*^-15, "good" -> 
         1.012561412494506*^-8|>, {{0.9975273767412534, 
        0.0024726231563816643`, 4.23784967574856*^-18, 
        1.0236505869446087`*^-10}}}, {
       99, <|"unacceptable" -> 0.9820137619972229, "acceptable" -> 
         0.01798621006309986, "very good" -> 6.790087697834679*^-13, "good" -> 
         9.094825448308086*^-10|>, {{0.9933071490706725, 0.006692850924250878,
         1.7024374979031846`*^-15, 5.074894656813835*^-12}}}, {
       100, <|"unacceptable" -> 0.0006840237765572965, "acceptable" -> 
         0.9161996841430664, "very good" -> 4.202787451390577*^-9, "good" -> 
         0.08311627060174942|>, {{0.000043244928245047824`, 
        0.9525329327884167, 3.595939979133032*^-11, 0.04742382224737885}}}, {
       101, <|"unacceptable" -> 1.9048613921768265`*^-6, "acceptable" -> 
         0.31002530455589294`, "very good" -> 0.689970850944519, "good" -> 
         1.9048758304052171`*^-6|>, {{3.026536643719999*^-8, 
        0.2689413911046287, 0.7310584963602093, 8.2269795617895*^-8}}}, {
       102, <|"unacceptable" -> 0.00003042968273803126, "acceptable" -> 
         0.9999018311500549, "very good" -> 0.0000677221905789338, "good" -> 
         4.586745649959312*^-9|>, {{8.31522918583601*^-7, 0.9999930242698375, 
        6.144169492960772*^-6, 3.775108209959189*^-11}}}, {
       103, <|"unacceptable" -> 0.9999863505363464, "acceptable" -> 
         0.000013674154615728185`, "very good" -> 3.106835535365837*^-13, 
         "good" -> 7.621831117632372*^-12|>, {{0.9999977396756671, 
        2.2603242979034955`*^-6, 6.305102508538154*^-16, 
        3.442469327355202*^-14}}}, {
       104, <|"unacceptable" -> 1., "acceptable" -> 4.1614353629704226`*^-10, 
         "very good" -> 3.854043595483167*^-19, "good" -> 
         5.162248120392846*^-16|>, {{0.9999999999981205, 
        1.8795288165355508`*^-12, 9.602680054490627*^-24, 
        7.781132241119172*^-20}}}, {
       105, <|"unacceptable" -> 0.0016579811926931143`, "acceptable" -> 
         0.997856855392456, "very good" -> 0.0003347411402501166, "good" -> 
         0.00015040842117741704`|>, {{0.00033530316638993776`, 
        0.9995246519304665, 0.00012335114147454544`, 
        0.00001669376166901709}}}, {
       106, <|"unacceptable" -> 0.039137762039899826`, "acceptable" -> 
         0.9601454138755798, "very good" -> 4.404375086863865*^-9, "good" -> 
         0.0007168331649154425|>, {{0.017984030473298357`, 0.9818947939817818,
         1.007608618683577*^-10, 0.00012117544415902227`}}}, {
       107, <|"unacceptable" -> 4.1598816058474597`*^-10, "acceptable" -> 
         0.000030421539122471586`, "very good" -> 0.9996342658996582, "good" -> 
         0.0003353399224579334|>, {{6.914278877296974*^-13, 
        8.315141399747364*^-7, 0.9999824670772081, 
        0.00001670140796061521}}}, {
       108, <|"unacceptable" -> 1., "acceptable" -> 2.06115369216775*^-9, 
         "very good" -> 3.854043595483167*^-19, "good" -> 
         4.24835413113866*^-18|>, {{0.9999999999861121, 
        1.3887943864771146`*^-11, 9.602680054375314*^-24, 
        1.9287498479371316`*^-22}}}, {
       109, <|"unacceptable" -> 0.9608341455459595, "acceptable" -> 
         0.039165835827589035`, "very good" -> 2.7080827475780243`*^-14, 
         "good" -> 7.323415311677461*^-12|>, {{0.9820137900378962, 
        0.017986209962091333`, 3.082671690551329*^-17, 
        1.2436385208533327`*^-14}}}, {
       110, <|"unacceptable" -> 0.0003074666892644018, "acceptable" -> 
         0.9165453314781189, "very good" -> 2.295509631267123*^-7, "good" -> 
         0.08314698934555054|>, {{0.00004324492761924624, 0.9525329190042195, 
        1.4507057062606259`*^-8, 0.047423821561104085`}}}, {
       111, <|"unacceptable" -> 0.002544938586652279, "acceptable" -> 
         0.6882175207138062, "very good" -> 3.479982879639465*^-8, "good" -> 
         0.3092374801635742|>, {{0.000666195020941201, 0.7305715499440624, 
        1.505820196617756*^-9, 0.26876225352917615`}}}, {
       112, <|"unacceptable" -> 0.00815983023494482, "acceptable" -> 
         0.9915072917938232, "very good" -> 2.4832536382746184`*^-7, "good" -> 
         0.00033261365024372935`|>, {{0.0024725111447957584`, 
        0.9974821880422942, 1.5191633519595772`*^-8, 
        0.00004528562127644986}}}, {
       113, <|"unacceptable" -> 0.9608344435691833, "acceptable" -> 
         0.03916555270552635, "very good" -> 1.2168167000262478`*^-14, "good" -> 
         8.898606296270373*^-10|>, {{0.9525741268098314, 
        0.047425873176939366`, 1.1000539557814698`*^-17, 
        1.3229296000352057`*^-11}}}, {
       114, <|"unacceptable" -> 0.9999938607215881, "acceptable" -> 
         6.144127837615088*^-6, "very good" -> 8.401690454462596*^-11, "good" -> 
         1.3959868688535187`*^-13|>, {{0.9999996940970816, 
        3.0590222692541323`*^-7, 6.914397991805032*^-13, 
        8.533045015459894*^-17}}}, {
       115, <|"unacceptable" -> 1., "acceptable" -> 4.161403721614221*^-10, 
         "very good" -> 1.7317280740329936`*^-19, "good" -> 
         5.162208945119035*^-16|>, {{0.9999999999948911, 
        5.109089028037223*^-12, 9.602680054459616*^-24, 
        2.1151310375802743`*^-19}}}, {
       116, <|"unacceptable" -> 0.008162608370184898, "acceptable" -> 
         0.9918373823165894, "very good" -> 1.854584957827754*^-10, "good" -> 
         1.0125690508289154`*^-8|>, {{0.0009110511943066102, 
        0.9990889487024772, 6.908100733751183*^-13, 
        1.0252530532948406`*^-10}}}, {
       117, <|"unacceptable" -> 1., "acceptable" -> 8.401677964453569*^-11, 
         "very good" -> 6.403655264738168*^-22, "good" -> 
         8.577227057078997*^-19|>, {{0.9999999999993084, 
        6.914400106935422*^-13, 8.756510762690465*^-27, 
        7.095474162279798*^-23}}}, {
       118, <|"unacceptable" -> 0.9999876618385315, "acceptable" -> 
         6.144183316791896*^-6, "very good" -> 5.056492113908462*^-8, "good" -> 
         6.144183316791896*^-6|>, {{0.9999993874374782, 3.059021331175289*^-7,
         7.58255578311957*^-10, 3.059021331175289*^-7}}}, {
       119, <|"unacceptable" -> 0.0007454692968167365, "acceptable" -> 
         0.9985090494155884, "very good" -> 2.0580648296686377`*^-9, "good" -> 
         0.0007454692968167365|>, {{0.00004539226710532558, 0.999831218744184,
         1.3885599840357788`*^-11, 0.0001233889748249658}}}, {
       120, <|"unacceptable" -> 0.6899735331535339, "acceptable" -> 
         0.31002649664878845`, "very good" -> 2.871280158078804*^-10, "good" -> 
         2.604762759650381*^-11|>, {{0.4999999999986591, 0.4999999999986591, 
        2.5545445140248112`*^-12, 1.2718328236850507`*^-13}}}, {
       121, <|"unacceptable" -> 1., "acceptable" -> 2.8184489383195968`*^-14, 
         "very good" -> 5.809300448147263*^-23, "good" -> 
         6.403704237223164*^-22|>, {{1., 1.1548224173015786`*^-17, 
        1.603810890548638*^-28, 3.221340285992516*^-27}}}, {
       122, <|"unacceptable" -> 0.02735535055398941, "acceptable" -> 
         0.6710990071296692, "very good" -> 3.3934487220221854`*^-8, "good" -> 
         0.3015455901622772|>, {{0.013212886934142982`, 0.7213991832013098, 
        1.4869145396795965`*^-9, 0.26538792837763275`}}}, {
       123, <|"unacceptable" -> 0.9995079040527344, "acceptable" -> 
         6.14123564446345*^-6, "very good" -> 0.0003352975472807884, "good" -> 
         0.0001506584376329556|>, {{0.9998596023070826, 
        3.0585937252176924`*^-7, 0.0001233924776349024, 
        0.000016699355909986914`}}}, {
       124, <|"unacceptable" -> 0.003670172533020377, "acceptable" -> 
         0.9925100803375244, "very good" -> 0.0036701445933431387`, "good" -> 
         0.0001496036275057122|>, {{0.0009087854283907541, 0.9966042346699125,
         0.002470334915962956, 0.00001664498573374865}}}, {
       125, <|"unacceptable" -> 9.227281716484015*^-10, "acceptable" -> 
         0.0036842175759375095`, "very good" -> 1.0171333109099123`*^-8, 
         "good" -> 0.9963157773017883|>, {{1.8778164693698147`*^-12, 
        0.0009110511943055288, 1.0252530532936236`*^-10, 
        0.9990889487012913}}}, {
       126, <|"unacceptable" -> 0.9996646046638489, "acceptable" -> 
         0.0003353526699356735, "very good" -> 5.054858576158949*^-8, "good" -> 
         2.060478232479568*^-9|>, {{0.9998766033256268, 0.0001233945757272702,
         2.0608992829361767`*^-9, 3.774668705231022*^-11}}}, {
       127, <|"unacceptable" -> 0.0011451224563643336`, "acceptable" -> 
         0.6891821026802063, "very good" -> 1.902683720800269*^-6, "good" -> 
         0.30967089533805847`|>, {{0.0002451826478201907, 0.7308791723036367, 
        2.2357763481413624`*^-7, 0.26887542147090815`}}}, {
       128, <|"unacceptable" -> 0.9574044942855835, "acceptable" -> 
         0.000029136373996152543`, "very good" -> 0.039026033133268356`, 
         "good" -> 0.003540356643497944|>, {{0.9517453581015282, 
        2.151258020874598*^-6, 0.047384611212597925`, 
        0.0008678794278530083}}}, {
       129, <|"unacceptable" -> 0.9608344435691833, "acceptable" -> 
         0.03916555270552635, "very good" -> 5.467492642441049*^-15, "good" -> 
         3.998389674908509*^-10|>, {{0.9820137900360959, 0.01798620996205836, 
        4.171942463654869*^-18, 1.845723216611603*^-12}}}, {
       130, <|"unacceptable" -> 1., "acceptable" -> 2.0611379270008*^-9, 
         "very good" -> 9.454843146326067*^-18, "good" -> 
         9.454843146326067*^-18|>, {{0.999999999986112, 
        1.3887943864771146`*^-11, 1.4251640827211425`*^-21, 
        5.242885663290651*^-22}}}, {
       131, <|"unacceptable" -> 3.7748477954568926`*^-11, "acceptable" -> 
         5.573471639763738*^-7, "very good" -> 0.9999316930770874, "good" -> 
         0.00006772369670215994|>, {{3.4424693080677935`*^-14, 
        5.602783742008966*^-9, 0.9999977340728966, 
        2.2603242852393885`*^-6}}}, {
       132, <|"unacceptable" -> 0.6899729371070862, "acceptable" -> 
         0.31002622842788696`, "very good" -> 1.4221401833935943`*^-9, "good" -> 
         8.559093203075463*^-7|>, {{0.7310585564840713, 0.26894141322296145`, 
        2.7598444104738295`*^-11, 3.026536892629043*^-8}}}, {
       133, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 1.2664164083186179`*^-14, 
         "good" -> 1.2664164083186179`*^-14|>, {{0.9999999979388463, 
        2.0611536181902033`*^-9, 4.248354246535077*^-18, 
        4.248354246535077*^-18}}}, {
       134, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573892281063308*^-7, "very good" -> 2.556853442823594*^-15, "good" -> 
         2.061152581944725*^-9|>, {{0.9999999847561324, 
        1.5229979512548833`*^-8, 1.5628821655106195`*^-18, 
        1.3887943653258042`*^-11}}}, {
       135, <|"unacceptable" -> 0.9996342062950134, "acceptable" -> 
         0.00003042130447283853, "very good" -> 5.054704743656657*^-8, "good" -> 
         0.0003353399224579334|>, {{0.9998704607050092, 6.143416436391685*^-6,
         2.060886622051439*^-9, 0.0001233938176676632}}}, {
       136, <|"unacceptable" -> 1., "acceptable" -> 3.496304071801836*^-20, 
         "very good" -> 3.5693577437769466`*^-28, "good" -> 
         2.6648398158423717`*^-31|>, {{1., 4.780892883885469*^-25, 
        1.3336148155022612`*^-34, 6.054601895401186*^-39}}}, {
       137, <|"unacceptable" -> 0.9918361306190491, "acceptable" -> 
         0.008162535727024078, "very good" -> 1.1161645119273089`*^-7, "good" -> 
         1.2303790981604834`*^-6|>, {{0.9975273300733438, 
        0.0024726230407034816`, 5.5889425712809926`*^-9, 
        4.129701019289696*^-8}}}, {
       138, <|"unacceptable" -> 0.9918373823165894, "acceptable" -> 
         0.008162608370184898, "very good" -> 1.3846004421128044`*^-13, 
         "good" -> 3.7443482342469636`*^-11|>, {{0.9975273768432718, 
        0.0024726231566345428`, 2.3137875243809493`*^-16, 
        9.334485093595488*^-14}}}, {
       139, <|
        "unacceptable" -> 9.434331332158763*^-6, "acceptable" -> 
         0.6899347305297852, "very good" -> 0.31000909209251404`, "good" -> 
         0.00004672848081099801|>, {{4.157629094245821*^-7, 
        0.49999825607081444`, 0.49999825607081444`, 
        3.0720954615928597`*^-6}}}, {
       140, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056554286397841*^-8, "very good" -> 1.148874090920436*^-15, "good" -> 
         1.042233476659177*^-16|>, {{0.999999999241744, 
        7.582560422162385*^-10, 5.74952225993395*^-19, 
        1.0530617349568909`*^-20}}}, {
       141, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056515561818742*^-8, "very good" -> 1.148874090920436*^-15, "good" -> 
         7.621877087804485*^-12|>, {{0.9999999992417314, 
        7.58256042216229*^-10, 5.7495222599338785`*^-19, 
        1.2664165539491339`*^-14}}}, {
       142, <|"unacceptable" -> 0.9999185800552368, "acceptable" -> 
         0.00006772332562832162, "very good" -> 2.0609858264464265`*^-9, 
         "good" -> 0.000013673020475835074`|>, {{0.9999930242698374, 
        6.144169492960771*^-6, 3.7751082099591896`*^-11, 
        8.315229185836011*^-7}}}, {
       143, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 3.4247190586894627`*^-12, 
         "good" -> 1.3959952714203555`*^-13|>, {{0.9999999943971988, 
        5.6027964061459125`*^-9, 4.6588861190005844`*^-15, 
        2.319522817247744*^-16}}}, {
       144, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404859717207728`*^-6, "very good" -> 1.1488727144918966`*^-15, 
         "good" -> 4.587190183258372*^-9|>, {{0.999999958562873, 
        4.1399375472380424`*^-8, 5.749522026049875*^-19, 
        3.7751343878483684`*^-11}}}, {
       145, <|"unacceptable" -> 1., "acceptable" -> 1.0208944800638164`*^-8, 
         "very good" -> 1.395995406945627*^-13, "good" -> 
         2.818470452956457*^-14|>, {{0.999999999897381, 
        1.0261879630648826`*^-10, 2.319522830005542*^-16, 
        1.1548224171830718`*^-17}}}, {
       146, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.5045233087439556`*^-7, "very good" -> 2.818448260693239*^-14, 
         "good" -> 2.8184697753300993`*^-14|>, {{0.9999999943972036, 
        5.602796406145939*^-9, 1.1548224108313436`*^-17, 
        1.1548224108313436`*^-17}}}, {
       147, <|"unacceptable" -> 1., "acceptable" -> 7.621877087804485*^-12, 
         "very good" -> 5.809300448147263*^-23, "good" -> 
         3.854043595483167*^-19|>, {{0.9999999999999875, 
        1.2664165549094015`*^-14, 4.359610000063026*^-28, 
        9.602680054508555*^-24}}}, {
       148, <|"unacceptable" -> 9.227210662210439*^-10, "acceptable" -> 
         0.003684245515614748, "very good" -> 2.2636614360749263`*^-8, "good" -> 
         0.9963157176971436|>, {{5.104434382509011*^-12, 
        0.0009110511937058144, 7.575652321399722*^-10, 
        0.9990889480436246}}}, {
       149, <|"unacceptable" -> 5.1002744250183696`*^-9, "acceptable" -> 
         0.0008300940389744937, "very good" -> 0.49958494305610657`, "good" -> 
         0.49958494305610657`|>, {{2.759595523856441*^-11, 
        0.00009021165708482979, 0.7309926286040264, 0.2689171597112929}}}, {
       150, <|"unacceptable" -> 0.9999938607215881, "acceptable" -> 
         6.144174676592229*^-6, "very good" -> 3.7751402698349423`*^-11, 
         "good" -> 6.914410450448161*^-13|>, {{0.9999991684717162, 
        8.315280276639192*^-7, 2.5436635322469927`*^-13, 
        1.7139070063786765`*^-15}}}, {
       151, <|"unacceptable" -> 0.00033478892873972654`, "acceptable" -> 
         0.9980069994926453, "very good" -> 4.57798332575976*^-9, "good" -> 
         0.0016582305543124676`|>, {{0.00004538264520750041, 
        0.9996192823408567, 1.02579727529101*^-10, 
        0.00033533491135608675`}}}, {
       152, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.76075638794282*^-6, "very good" -> 3.424709951391214*^-12, "good" -> 
         1.8698284587337355`*^-10|>, {{0.9999996940958887, 
        3.059022269250483*^-7, 4.658884719930971*^-15, 
        1.879528241583491*^-12}}}, {
       153, <|"unacceptable" -> 0.03916554898023605, "acceptable" -> 
         0.9608344435691833, "very good" -> 8.898606296270373*^-10, "good" -> 
         2.1830633301078706`*^-8|>, {{0.017986209956919304`, 
        0.982013789755513, 1.3638152386745145`*^-11, 
        2.7392961332802965`*^-10}}}, {
       154, <|
        "unacceptable" -> 0.0081623001024127, "acceptable" -> 
         0.9918075203895569, "very good" -> 2.044267644052411*^-9, "good" -> 
         0.00003018311872438062|>, {{0.002472617581430747, 0.997525127645531, 
        3.765791568161061*^-11, 2.254735380219724*^-6}}}, {
       155, <|"unacceptable" -> 0.9963157773017883, "acceptable" -> 
         0.003684245515614748, "very good" -> 2.0964679212558448`*^-17, 
         "good" -> 3.761225705889437*^-11|>, {{0.9990889488055058, 
        0.00091105119440056, 3.870468218520104*^-21, 
        9.349097695256786*^-14}}}, {
       156, <|"unacceptable" -> 0.001658549066632986, "acceptable" -> 
         0.9981909990310669, "very good" -> 4.578862622395263*^-9, "good" -> 
         0.00015045993495732546`|>, {{0.00012339251537100217`, 
        0.9998599080858661, 3.7746056784546764`*^-11, 
        0.00001669936101701266}}}, {
       157, <|"unacceptable" -> 0.00815983023494482, "acceptable" -> 
         0.9915072917938232, "very good" -> 2.4832536382746184`*^-7, "good" -> 
         0.00033261365024372935`|>, {{0.0009110098671979897, 
        0.9990436280248219, 5.597438080041779*^-9, 
        0.00004535651054198496}}}, {
       158, <|"unacceptable" -> 0.9996281266212463, "acceptable" -> 
         0.000030421118935919367`, "very good" -> 6.141927315184148*^-6, 
         "good" -> 0.000335337856085971|>, {{0.9999515105634509, 
        2.2602198048816946`*^-6, 8.314883987445042*^-7, 
        0.0000453977283454713}}}, {
       159, <|"unacceptable" -> 0.9999322891235352, "acceptable" -> 
         0.00006772425695089623, "very good" -> 9.260704425528843*^-10, 
         "good" -> 6.913984358994374*^-13|>, {{0.9999938558115095, 
        6.1441746021293855`*^-6, 1.3887858534819168`*^-11, 
        6.30507802032116*^-16}}}, {
       160, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 4.24835413113866*^-18, "good" -> 
         3.1068545089038557`*^-13|>, {{0.9999999997210529, 
        2.7894680920908113`*^-10, 5.242885661900977*^-22, 
        2.3195228295965454`*^-16}}}, {
       161, <|"unacceptable" -> 0.03280225768685341, "acceptable" -> 
         0.8047260642051697, "very good" -> 8.2154674174717*^-9, "good" -> 
         0.16247165203094482`|>, {{0.005899750401372671, 0.8756005949844122, 
        8.985307911176596*^-11, 0.11849965452436204`}}}, {
       162, <|"unacceptable" -> 1., "acceptable" -> 5.270030242400567*^-24, 
         "very good" -> 1.485342516813408*^-37, "good" -> 
         3.643909801065943*^-36|>, {{1., 7.984904245686979*^-30, 
        2.5065674758999535`*^-46, 5.034575358764983*^-45}}}, {
       163, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         9.261331146426244*^-10, "very good" -> 3.1068542378533126`*^-13, 
         "good" -> 5.056515561818742*^-8|>, {{0.9999999992366343, 
        5.109089024163222*^-12, 6.30511675533388*^-16, 
        7.582560422123641*^-10}}}, {
       164, <|"unacceptable" -> 1., "acceptable" -> 2.556854925131252*^-15, 
         "very good" -> 7.781191733293151*^-20, "good" -> 
         2.877382899785869*^-22|>, {{1., 1.5628821893349888`*^-18, 
        3.5326285722008064`*^-24, 3.221340285992516*^-27}}}, {
       165, <|"unacceptable" -> 1., "acceptable" -> 1.5388327547979919`*^-12, 
         "very good" -> 7.058926702980258*^-21, "good" -> 
         1.2928876140672556`*^-22|>, {{0.9999999999999982, 
        1.71390843154201*^-15, 6.470234925645448*^-26, 
        4.359610000063073*^-28}}}, {
       166, <|"unacceptable" -> 1., "acceptable" -> 1.0422256018997455`*^-16, 
         "very good" -> 2.6102989257483514`*^-23, "good" -> 
         5.270070474306733*^-24|>, {{1., 1.0530617357553813`*^-20, 
        1.603810890548638*^-28, 7.984904245686979*^-30}}}, {
       167, <|"unacceptable" -> 0.9963157773017883, "acceptable" -> 
         0.003684245515614748, "very good" -> 5.143189879079624*^-16, "good" -> 
         4.146040455399458*^-10|>, {{0.9990889488037233, 
        0.0009110511943989346, 2.1132040449290012`*^-19, 
        1.877816469562339*^-12}}}, {
       168, <|"unacceptable" -> 3.772307466398672*^-11, "acceptable" -> 
         2.758696837190655*^-6, "very good" -> 0.9992512464523315, "good" -> 
         0.0007460233755409718|>, {{3.4423206848426136`*^-14, 
        4.139749603060756*^-8, 0.9999545607356465, 
        0.000045397866823074744`}}}, {
       169, <|"unacceptable" -> 0.00033410490141250193`, "acceptable" -> 
         0.9959527254104614, "very good" -> 0.0036828750744462013`, "good" -> 
         0.00003030926745850593|>, {{0.000045285519861942344`, 
        0.9974799542391133, 0.0024725056077512615`, 
        2.2546332734407844`*^-6}}}, {
       170, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.76075638794282*^-6, "very good" -> 1.7317101087040647`*^-19, 
         "good" -> 2.818441145616482*^-14|>, {{0.999999887464838, 
        1.12535162055095*^-7, 9.602678973869522*^-24, 
        1.1548222873434507`*^-17}}}, {
       171, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573892281063308*^-7, "very good" -> 3.775132290106953*^-11, "good" -> 
         3.106852882600597*^-13|>, {{0.9999999847697658, 
        1.522997951275647*^-8, 2.5436656086362994`*^-13, 
        2.3195227949166936`*^-16}}}, {
       172, <|"unacceptable" -> 0.9992539882659912, "acceptable" -> 
         0.0007460368215106428, "very good" -> 2.554966888691822*^-15, "good" -> 
         3.1045603371068764`*^-13|>, {{0.9998766054240135, 
        0.0001233945759862317, 1.562689338149919*^-18, 
        2.3192366137074405`*^-16}}}, {
       173, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 4.161398448054854*^-10, 
         "good" -> 3.424741393254216*^-12|>, {{0.9999999585955107, 
        4.139937547373161*^-8, 5.109088816524104*^-12, 
        4.658885952204597*^-15}}}, {
       174, <|"unacceptable" -> 1., "acceptable" -> 6.914347566722157*^-13, 
         "very good" -> 2.6102591671587282`*^-23, "good" -> 
         6.403655264738168*^-22|>, {{0.9999999999999994, 
        6.305116760146985*^-16, 1.6038108905486368`*^-28, 
        3.2213402859925145`*^-27}}}, {
       175, <|"unacceptable" -> 0.001658549066632986, "acceptable" -> 
         0.9981909990310669, "very good" -> 2.0574251191618487`*^-9, "good" -> 
         0.00015045993495732546`|>, {{0.00033534453150803285`, 
        0.999647959609637, 3.773805544440457*^-11, 
        0.000016695821116979737`}}}, {
       176, <|"unacceptable" -> 1., "acceptable" -> 4.5871959564181*^-9, 
         "very good" -> 1.908917373222818*^-18, "good" -> 
         8.577357855013357*^-19|>, {{0.9999999999622486, 
        3.7751345441365816`*^-11, 1.9287498478911049`*^-22, 
        2.610279069569163*^-23}}}, {
       177, <|"unacceptable" -> 1., "acceptable" -> 2.6102989257483514`*^-23, 
         "very good" -> 1.8048513285848406`*^-35, "good" -> 
         8.109757337253299*^-36|>, {{1., 5.900090541597062*^-29, 
        1.0112214926104486`*^-43, 1.368539471173853*^-44}}}, {
       178, <|"unacceptable" -> 1., "acceptable" -> 3.106830656456061*^-13, 
         "very good" -> 1.948810762498534*^-26, "good" -> 
         1.4251749430598094`*^-21|>, {{0.9999999999999998, 
        2.3195228302435686`*^-16, 1.9792598779469042`*^-32, 
        8.756510762696519*^-27}}}, {
       179, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573934913627454*^-7, "very good" -> 5.162245473414886*^-16, "good" -> 
         8.577353202122411*^-19|>, {{0.9999999847700205, 
        1.522997951276035*^-8, 2.115131005377678*^-19, 
        2.610279029913208*^-23}}}, {
       180, <|"unacceptable" -> 0.9812917113304138, "acceptable" -> 
         2.7091355150332674`*^-6, "very good" -> 0.01797298528254032, "good" -> 
         0.0007326207123696804|>, {{0.9816900980226239, 3.003012789987855*^-7,
         0.017980281336028442`, 0.0003293203400685438}}}, {
       181, <|"unacceptable" -> 0.00006771198968635872, "acceptable" -> 
         0.9997511506080627, "very good" -> 0.0001506962435087189, "good" -> 
         0.00003042509706574492|>, {{6.143881785015669*^-6, 
        0.9999461984232426, 0.000045397487174678954`, 
        2.260207797694968*^-6}}}, {
       182, <|"unacceptable" -> 0.0831674188375473, "acceptable" -> 
         0.9167705178260803, "very good" -> 8.490581016040721*^-10, "good" -> 
         0.00006209179991856217|>, {{0.047425595603573165`, 
        0.9525685515997355, 1.3229218572147209`*^-11, 
        5.852783462131054*^-6}}}, {
       183, <|"unacceptable" -> 1., "acceptable" -> 1.0422256018997455`*^-16, 
         "very good" -> 8.75651089272076*^-27, "good" -> 
         8.75651089272076*^-27|>, {{0.9999999999999999, 
        1.0530617357553812`*^-20, 7.281290178321643*^-33, 
        2.678636961808078*^-33}}}, {
       184, <|"unacceptable" -> 0.9983397126197815, "acceptable" -> 
         0.0016588086728006601`, "very good" -> 2.500365496871382*^-7, "good" -> 
         1.238437448591867*^-6|>, {{0.9990888212731563, 0.0009110510781061106,
         1.5216102511158984`*^-8, 1.1243263506203329`*^-7}}}, {
       185, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056515561818742*^-8, "very good" -> 1.2664261491975113`*^-14, 
         "good" -> 2.8184702835498676`*^-14|>, {{0.999999999241744, 
        7.582560422162385*^-10, 1.1548224164259276`*^-17, 
        1.1548224164259276`*^-17}}}, {
       186, <|"unacceptable" -> 0.0025305983144789934`, "acceptable" -> 
         0.6843447685241699, "very good" -> 0.3074926435947418, "good" -> 
         0.005631967447698116|>, {{0.00024473931606814323`, 
        0.7295576189764615, 0.2683892491714287, 0.00180839253604143}}}, {
       187, <|"unacceptable" -> 0.01798621006309986, "acceptable" -> 
         0.9820137619972229, "very good" -> 3.707234172423135*^-11, "good" -> 
         8.250626570838193*^-11|>, {{0.006692850924281474, 0.9933071490752132,
         2.526641272396528*^-13, 2.526641272396528*^-13}}}, {
       188, <|"unacceptable" -> 0.0016575756017118692`, "acceptable" -> 
         0.9975975751876831, "very good" -> 5.044406847787286*^-8, "good" -> 
         0.0007447944954037666|>, {{0.0003353087632637228, 0.9995413359760787,
         2.06020824542417*^-9, 0.00012335320044934583`}}}, {
       189, <|"unacceptable" -> 0.4952794313430786, "acceptable" -> 
         0.009071359410881996, "very good" -> 0.00036977254785597324`, "good" -> 
         0.4952794313430786|>, {{0.498237879692626, 0.0033571004263056358`, 
        0.00016714018844226388`, 0.498237879692626}}}, {
       190, <|"unacceptable" -> 0.9999319911003113, "acceptable" -> 
         0.00006772423512302339, "very good" -> 2.5043345885933377`*^-7, 
         "good" -> 4.586849122745207*^-9|>, {{0.9999938501849195, 
        6.144174567558422*^-6, 5.602761981375243*^-9, 
        3.775111327899746*^-11}}}, {
       191, <|"unacceptable" -> 0.9999801516532898, "acceptable" -> 
         0.000013673966350324918`, "very good" -> 6.144090548332315*^-6, 
         "good" -> 1.0208820455659406`*^-8|>, {{0.9999974334959126, 
        2.2603236058363927`*^-6, 3.059015354022699*^-7, 
        2.7894609336876626`*^-10}}}, {
       192, <|"unacceptable" -> 0.0016588111175224185`, "acceptable" -> 
         0.9983411431312561, "very good" -> 2.2682804967644188`*^-8, "good" -> 
         8.387805033871487*^-11|>, {{0.00033535013021219676`, 
        0.9996646491115315, 7.580017609535541*^-10, 
        2.5428126268421084`*^-13}}}, {
       193, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056554286397841*^-8, "very good" -> 1.5388326463777746`*^-12, 
         "good" -> 7.621877087804485*^-12|>, {{0.9999999979388102, 
        2.061153618190129*^-9, 1.7139084280093225`*^-15, 
        3.442477101374378*^-14}}}, {
       194, <|"unacceptable" -> 1., "acceptable" -> 1.5388327547979919`*^-12, 
         "very good" -> 2.877338976010666*^-22, "good" -> 
         3.1717465106521578`*^-21|>, {{0.9999999999999982, 
        1.7139084315420098`*^-15, 3.2213402859925105`*^-27, 
        2.3802664086943964`*^-26}}}, {
       195, <|"unacceptable" -> 1., "acceptable" -> 4.6830072682248563`*^-17, 
         "very good" -> 4.880787359122498*^-33, "good" -> 
         1.76789814798653*^-27|>, {{1., 3.8739976286871875`*^-21, 
        1.1089390193121365`*^-40, 3.6251409191435593`*^-34}}}, {
       196, <|"unacceptable" -> 1., "acceptable" -> 3.106830656456061*^-13, 
         "very good" -> 1.2928777690831585`*^-22, "good" -> 
         5.270070474306733*^-24|>, {{0.9999999999999998, 
        2.3195228302435686`*^-16, 4.35961000006308*^-28, 
        7.984904245686978*^-30}}}, {
       197, <|"unacceptable" -> 1., "acceptable" -> 4.24835413113866*^-18, 
         "very good" -> 7.206419989930747*^-29, "good" -> 
         2.3680062151665067`*^-24|>, {{1., 1.9287498479639178`*^-22, 
        1.804851387845415*^-35, 2.937482111710803*^-30}}}, {
       198, <|"unacceptable" -> 1., "acceptable" -> 9.261261202375692*^-10, 
         "very good" -> 5.809256271936571*^-23, "good" -> 
         1.0422256018997455`*^-16|>, {{0.9999999999948909, 
        5.109089028037222*^-12, 4.359610000040807*^-28, 
        1.053061735750001*^-20}}}, {
       199, <|"unacceptable" -> 2.504527287783276*^-7, "acceptable" -> 
         0.999993622303009, "very good" -> 4.1614087176178316`*^-10, "good" -> 
         6.144173312350176*^-6|>, {{5.6027946922094266`*^-9, 
        0.9999996884898711, 5.1090874365303425`*^-12, 
        3.0590222521015446`*^-7}}}, {
       200, <|"unacceptable" -> 0.08317295461893082, "acceptable" -> 
         0.9168245196342468, "very good" -> 3.815276983232252*^-10, "good" -> 
         2.5311555873486213`*^-6|>, {{0.04742586809337322, 0.9525740247036758,
         4.866785498031672*^-12, 1.07198084303056*^-7}}}, {
       201, <|"unacceptable" -> 1., "acceptable" -> 4.5871959564181*^-9, 
         "very good" -> 5.162208945119035*^-16, "good" -> 
         2.3195404337495937`*^-16|>, {{0.9999999999622486, 
        3.7751345441365816`*^-11, 7.781132240840048*^-20, 
        2.86251858044133*^-20}}}, {
       202, <|"unacceptable" -> 1., "acceptable" -> 1.696259105399278*^-11, 
         "very good" -> 1.4251532336076977`*^-21, "good" -> 
         1.5709739876598943`*^-20|>, {{0.9999999999999064, 
        9.357622968839299*^-14, 2.380266408694178*^-26, 
        4.780892883885022*^-25}}}, {
       203, <|"unacceptable" -> 1.2404877907101763`*^-6, "acceptable" -> 
         0.9999926090240479, "very good" -> 9.261334477095318*^-10, "good" -> 
         6.144213784864405*^-6|>, {{4.139936280920773*^-8, 0.999999652684535, 
        1.3887939041466339`*^-11, 3.0590221425721907`*^-7}}}, {
       204, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.5045233087439556`*^-7, "very good" -> 3.1068536957522264`*^-13, 
         "good" -> 2.8184697753300993`*^-14|>, {{0.999999994397203, 
        5.602796406145937*^-9, 6.3051167248207*^-16, 
        1.1548224108313432`*^-17}}}, {
       205, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573892281063308*^-7, "very good" -> 6.914396355819918*^-13, "good" -> 
         1.5388318874362539`*^-12|>, {{0.999999984770017, 
        1.5229979512760296`*^-8, 1.7139084054392168`*^-15, 
        1.7139084054392168`*^-15}}}, {
       206, <|"unacceptable" -> 6.044728706910973*^-6, "acceptable" -> 
         0.008096471428871155, "very good" -> 0.00809640996158123, "good" -> 
         0.9838010668754578|>, {{3.031085672978344*^-7, 
        0.0024561141599814835`, 0.00667641048969862, 0.9908671722417526}}}, {
       207, <|"unacceptable" -> 0.0001501501683378592, "acceptable" -> 
         0.9961360096931458, "very good" -> 0.003683552611619234, "good" -> 
         0.0000303148444800172|>, {{6.138563116517779*^-6, 0.9990805596412417,
         0.0009110435444729616, 2.2582511689001876`*^-6}}}, {
       208, <|"unacceptable" -> 0.00033535013790242374`, "acceptable" -> 
         0.9996646642684937, "very good" -> 6.270537474678539*^-14, "good" -> 
         4.585657631395179*^-9|>, {{0.00001670142184746469, 
        0.9999832985404018, 3.13908036394853*^-17, 
        3.775071494022029*^-11}}}, {
       209, <|"unacceptable" -> 1., "acceptable" -> 2.0611379270008*^-9, 
         "very good" -> 1.2928777690831585`*^-22, "good" -> 
         6.403655264738168*^-22|>, {{0.9999999999622486, 
        3.7751345441365816`*^-11, 1.1850648641892433`*^-27, 
        8.756510762365951*^-27}}}, {
       210, <|"unacceptable" -> 1., "acceptable" -> 9.454987075752651*^-18, 
         "very good" -> 5.930728230972052*^-31, "good" -> 
         4.337154791714794*^-26|>, {{1., 5.242885663363464*^-22, 
        4.4737793061811207`*^-38, 1.9792598779469045`*^-32}}}, {
       211, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2404954077283037`*^-6, "very good" -> 1.6962830445832466`*^-11, 
         "good" -> 3.4247151555616417`*^-12|>, {{0.9999998874647318, 
        1.1253516205508304`*^-7, 9.357621915777565*^-14, 
        1.266416412392891*^-14}}}, {
       212, <|"unacceptable" -> 1., "acceptable" -> 2.272032162409232*^-8, 
         "very good" -> 1.2664165777252073`*^-14, "good" -> 
         1.1488654088327266`*^-15|>, {{0.9999999997210534, 
        2.7894680920908124`*^-10, 4.248354254106525*^-18, 
        2.1151310370010718`*^-19}}}, {
       213, <|"unacceptable" -> 0.9820139408111572, "acceptable" -> 
         0.017986075952649117`, "very good" -> 2.510867177084211*^-15, "good" -> 
         4.086556371074579*^-10|>, {{0.9933071490738608, 0.006692850924272361,
         1.5524220518266517`*^-18, 1.866949410358604*^-12}}}, {
       214, <|"unacceptable" -> 0.9999987483024597, "acceptable" -> 
         1.2405048437358346`*^-6, "very good" -> 1.869845389634861*^-10, 
         "good" -> 8.401795925649935*^-11|>, {{0.9999999585984906, 
        4.139937547385496*^-8, 1.879528738723753*^-12, 
        2.5436655420653253`*^-13}}}, {
       215, <|"unacceptable" -> 0.9999322891235352, "acceptable" -> 
         0.00006772425695089623, "very good" -> 3.1715558713703584`*^-21, 
         "good" -> 2.5566817068935384`*^-15|>, {{0.9999938558253979, 
        6.144174602214719*^-6, 6.47019517139236*^-26, 
        5.74948693822489*^-19}}}, {
       216, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.760777533694636*^-6, "very good" -> 1.0208994538629668`*^-8, 
         "good" -> 6.914433760794869*^-13|>, {{0.9999996938188247, 
        3.059022268402938*^-7, 2.789467238786306*^-10, 
        1.7139079067755151`*^-15}}}, {
       217, <|"unacceptable" -> 0.000056347962527070194`, "acceptable" -> 
         0.8319704532623291, "very good" -> 0.1679709106683731, "good" -> 
         2.2968740722717484`*^-6|>, {{1.990887375957508*^-6, 0.8807952371051, 
        0.11920267288707814`, 9.91204458995137*^-8}}}, {
       218, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 2.556854925131252*^-15, "good" -> 
         1.2664165777252073`*^-14|>, {{0.9999999997210532, 
        2.7894680920908113`*^-10, 1.5628821888990278`*^-18, 
        4.248354254106524*^-18}}}, {
       219, <|"unacceptable" -> 1., "acceptable" -> 7.781072826080097*^-20, 
         "very good" -> 1.7679118220891352`*^-27, "good" -> 
         2.9374821418009058`*^-30|>, {{1., 3.532628572200807*^-24, 
        9.854154686111257*^-34, 3.3057006267607343`*^-37}}}, {
       220, <|"unacceptable" -> 8.398668566167444*^-11, "acceptable" -> 
         0.000030421306291827932`, "very good" -> 0.9996342658996582, "good" -> 
         0.0003353399224579334|>, {{9.35745890236474*^-14, 
        8.315141399752337*^-7, 0.9999824670778058, 
        0.000016701407960625193`}}}, {
       221, <|"unacceptable" -> 2.057734649341114*^-9, "acceptable" -> 
         0.0016587985446676612`, "very good" -> 2.2682804967644188`*^-8, 
         "good" -> 0.9983412027359009|>, {{1.388328653046069*^-11, 
        0.0003353501302076263, 7.580017609432234*^-10, 
        0.9996646490979072}}}, {
       222, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056554286397841*^-8, "very good" -> 1.2664164930219126`*^-14, 
         "good" -> 3.1068542378533126`*^-13|>, {{0.9999999992417438, 
        7.582560422162383*^-10, 4.2483542520702484`*^-18, 
        2.3195228284847766`*^-16}}}, {
       223, <|"unacceptable" -> 0.00002988414235005621, "acceptable" -> 
         0.9819832444190979, "very good" -> 0.017985651269555092`, "good" -> 
         1.2181473039163393`*^-6|>, {{2.219669630499064*^-6, 
        0.9820115703682781, 0.017986169307424155`, 
        4.0654667404510886`*^-8}}}, {
       224, <|"unacceptable" -> 2.7607757147052325`*^-6, "acceptable" -> 
         0.999996542930603, "very good" -> 1.1253479215156403`*^-7, "good" -> 
         5.573875796471839*^-7|>, {{1.1253515971067547`*^-7, 
        0.9999998666320671, 5.602795690303887*^-9, 1.522997771352171*^-8}}}, {
       225, <|"unacceptable" -> 1., "acceptable" -> 4.6830430024273186`*^-17, 
         "very good" -> 3.171770744459166*^-21, "good" -> 
         5.809300448147263*^-23|>, {{1., 1.0530617357553812`*^-20, 
        6.47023492564546*^-26, 4.359610000063081*^-28}}}, {
       226, <|"unacceptable" -> 1., "acceptable" -> 4.6830430024273186`*^-17, 
         "very good" -> 3.93454198721696*^-27, "good" -> 
         9.652397265695326*^-26|>, {{1., 1.0530617357553813`*^-20, 
        2.678636961808078*^-33, 1.462486227251231*^-31}}}, {
       227, <|"unacceptable" -> 0.9917940497398376, "acceptable" -> 
         0.000013562027561420109`, "very good" -> 0.008162189275026321, 
         "good" -> 0.000030182709451764822`|>, {{0.9933040984751514, 
        8.25960884685367*^-7, 0.006692830369499942, 2.24519446385819*^-6}}}, {
       228, <|"unacceptable" -> 2.053544223556969*^-9, "acceptable" -> 
         0.003684217343106866, "very good" -> 5.0378478277934846`*^-8, "good" -> 
         0.9963157176971436|>, {{1.38752912083525*^-11, 0.0009110511925118985,
         2.059275801699802*^-9, 0.9990889467343369}}}, {
       229, <|"unacceptable" -> 0.9999938607215881, "acceptable" -> 
         6.144174676592229*^-6, "very good" -> 1.8698362302949079`*^-10, 
         "good" -> 2.272035359851543*^-8|>, {{0.999999693816947, 
        3.059022268397194*^-7, 1.879528241059212*^-12, 
        2.7894672387810677`*^-10}}}, {
       230, <|"unacceptable" -> 0.9999863505363464, "acceptable" -> 
         0.00001367405002383748, "very good" -> 4.161346822684209*^-10, 
         "good" -> 6.27255476834572*^-14|>, {{0.9999991684668631, 
        8.315280276598837*^-7, 5.109084779686499*^-12, 
        3.139130181755092*^-17}}}, {
       231, <|"unacceptable" -> 0.000746008416172117, "acceptable" -> 
         0.9992235898971558, "very good" -> 2.0595691818670048`*^-9, "good" -> 
         0.00003040880801563617|>, {{0.00004539776609255669, 
        0.9999523419983359, 1.3887281993312196`*^-11, 
        2.260221684198415*^-6}}}, {
       232, <|"unacceptable" -> 1., "acceptable" -> 5.690358869324917*^-15, 
         "very good" -> 1.0640023755419383`*^-24, "good" -> 
         2.6102790464535398`*^-23|>, {{1., 1.5628821893349886`*^-18, 
        2.9374821117108028`*^-30, 5.900090541597061*^-29}}}, {
       233, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.5045233087439556`*^-7, "very good" -> 5.69040122097228*^-15, 
         "good" -> 2.8184697753300993`*^-14|>, {{0.9999999943972037, 
        5.602796406145941*^-9, 1.562882180578478*^-18, 
        1.1548224108313436`*^-17}}}, {
       234, <|"unacceptable" -> 1., "acceptable" -> 4.6830430024273186`*^-17, 
         "very good" -> 2.148203583865867*^-25, "good" -> 
         5.270070474306733*^-24|>, {{1., 3.8739976286871875`*^-21, 
        3.975449735908647*^-31, 7.984904245686979*^-30}}}, {
       235, <|"unacceptable" -> 1., "acceptable" -> 3.775134371775124*^-11, 
         "very good" -> 2.8773609378982676`*^-22, "good" -> 
         4.24835413113866*^-18|>, {{0.9999999999999064, 
        9.357622968839299*^-14, 1.1850648642338701`*^-27, 
        1.9287498479637373`*^-22}}}, {
       236, <|"unacceptable" -> 1., "acceptable" -> 6.272544603950353*^-14, 
         "very good" -> 1.0640023755419383`*^-24, "good" -> 
         1.4251640378466556`*^-21|>, {{1., 3.1391327920480296`*^-17, 
        2.9374821117108028`*^-30, 8.756510762696519*^-27}}}, {
       237, <|"unacceptable" -> 0.08317212015390396, "acceptable" -> 
         0.9168153405189514, "very good" -> 3.815267823892299*^-10, "good" -> 
         0.00001253675054613268|>, {{0.04742583561167572, 0.9525733722913413, 
        4.8667821647989724`*^-12, 7.920921161135852*^-7}}}, {
       238, <|"unacceptable" -> 1., "acceptable" -> 9.261261202375692*^-10, 
         "very good" -> 3.49627757617284*^-20, "good" -> 
         1.908902690766945*^-18|>, {{0.9999999999948909, 
        5.109089028037222*^-12, 4.780892883861042*^-25, 
        7.095474162248453*^-23}}}, {
       239, <|"unacceptable" -> 1., "acceptable" -> 6.403606797124151*^-22, 
         "very good" -> 8.109695635279318*^-36, "good" -> 
         2.1930557091528235`*^-33|>, {{1., 3.221340285992516*^-27, 
        3.720075976020836*^-44, 1.500785762707395*^-41}}}, {
       240, <|"unacceptable" -> 1., "acceptable" -> 2.272032162409232*^-8, 
         "very good" -> 5.162208945119035*^-16, "good" -> 
         1.7317280740329936`*^-19|>, {{0.9999999997210532, 
        2.789468092090812*^-10, 7.781132238963275*^-20, 
        3.532628571215392*^-24}}}, {
       241, <|"unacceptable" -> 0.0016451580449938774`, "acceptable" -> 
         0.9901391863822937, "very good" -> 0.00814857054501772, "good" -> 
         0.00006706047133775428|>, {{0.0003331043973870886, 
        0.9929702139097636, 0.006690580672994546, 6.101019854791325*^-6}}}, {
       242, <|"unacceptable" -> 1., "acceptable" -> 1.7317280740329936`*^-19, 
         "very good" -> 6.537506753962556*^-30, "good" -> 
         1.3199119192219392`*^-30|>, {{1., 3.532628572200807*^-24, 
        8.985825944049381*^-37, 4.4737793061811207`*^-38}}}, {
       243, <|"unacceptable" -> 0.9992539882659912, "acceptable" -> 
         0.0007460311171598732, "very good" -> 4.245184788621663*^-18, "good" -> 
         1.3949538952336832`*^-13|>, {{0.9998766054240137, 
        0.00012339457598623172`, 5.242238719710088*^-22, 
        8.531994693950415*^-17}}}, {
       244, <|"unacceptable" -> 0.0036842364352196455`, "acceptable" -> 
         0.9963132739067078, "very good" -> 1.2359236052361666`*^-6, "good" -> 
         1.2359236052361666`*^-6|>, {{0.00033535010270921884`, 
        0.9996645671263098, 4.138549047579256*^-8, 4.138549047579256*^-8}}}, {
       245, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056515561818742*^-8, "very good" -> 7.621818107206302*^-12, "good" -> 
         2.2720319847735482`*^-8|>, {{0.9999999989627627, 
        7.582560420046992*^-10, 3.442477104899311*^-14, 
        2.7894680899755844`*^-10}}}, {
       246, <|"unacceptable" -> 1.2395779549478902`*^-6, "acceptable" -> 
         0.9992514848709106, "very good" -> 1.2395779549478902`*^-6, "good" -> 
         0.0007460236083716154|>, {{4.139426235803652*^-8, 0.9998764515274726,
         1.1252127117031696`*^-7, 0.00012339455699388974`}}}, {
       247, <|"unacceptable" -> 1., "acceptable" -> 1.538821045414529*^-12, 
         "very good" -> 1.7317280740329936`*^-19, "good" -> 
         2.6102790464535398`*^-23|>, {{0.9999999999999982, 
        1.7139084315420098`*^-15, 3.5326285722008005`*^-24, 
        5.900090541597051*^-29}}}, {
       248, <|"unacceptable" -> 1., "acceptable" -> 1.731714890841981*^-19, 
         "very good" -> 1.6038109389511792`*^-28, "good" -> 
         7.943715204226384*^-28|>, {{1., 3.532628572200807*^-24, 
        4.906094730649281*^-35, 1.3336148155022614`*^-34}}}, {
       249, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.5045233087439556`*^-7, "very good" -> 1.3959950003698124`*^-13, 
         "good" -> 1.0208942136102905`*^-8|>, {{0.9999999942945846, 
        5.602796405570986*^-9, 2.319522817009728*^-16, 
        1.0261879573153603`*^-10}}}, {
       250, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 1.5388325379575574`*^-12, 
         "good" -> 6.914399608426436*^-13|>, {{0.999999997938841, 
        2.0611536181901926`*^-9, 4.6588861355006925`*^-15, 
        6.305116747151142*^-16}}}, {
       251, <|"unacceptable" -> 1.0171397057945342`*^-8, "acceptable" -> 
         0.0036842687986791134`, "very good" -> 1.235934519172588*^-6, "good" -> 
         0.9963144659996033|>, {{1.0252529380236448`*^-10, 
        0.0009110510918753515, 1.1243263676129262`*^-7, 
        0.9990888363729626}}}, {
       252, <|"unacceptable" -> 0.0016526973340660334`, "acceptable" -> 
         0.9946691989898682, "very good" -> 4.1391884364472276`*^-10, "good" -> 
         0.0036781285889446735`|>, {{0.0001232821710693962, 
        0.9989657789490232, 1.8775849682711012`*^-12, 
        0.0009109388780297337}}}, {
       253, <|"unacceptable" -> 1., "acceptable" -> 1.731714890841981*^-19, 
         "very good" -> 1.3198917947586531`*^-30, "good" -> 
         5.930637953005909*^-31|>, {{1., 3.532628572200807*^-24, 
        1.2160992992528256`*^-37, 1.6458114310822737`*^-38}}}, {
       254, <|"unacceptable" -> 1., "acceptable" -> 1.8698335935152244`*^-10, 
         "very good" -> 3.1717465106521578`*^-21, "good" -> 
         1.1488654088327266`*^-15|>, {{0.9999999999993086, 
        6.914400106935423*^-13, 6.470234925640987*^-26, 
        2.1151310375896182`*^-19}}}, {
       255, <|"unacceptable" -> 0.9992539882659912, "acceptable" -> 
         0.0007460311171598732, "very good" -> 3.4221644615306523`*^-12, 
         "good" -> 4.158267619125411*^-10|>, {{0.9998766054221219, 
        0.00012339457598599824`, 1.2662602859732066`*^-14, 
        1.8792968928741566`*^-12}}}, {
       256, <|"unacceptable" -> 1., "acceptable" -> 4.5871608733705216`*^-9, 
         "very good" -> 5.162169240449633*^-16, "good" -> 
         5.690358869324917*^-15|>, {{0.9999999999622486, 
        3.7751345441365816`*^-11, 2.1151310375112312`*^-19, 
        1.5628821892759877`*^-18}}}, {
       257, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 5.690402491521701*^-15, "good" -> 
         4.6830430024273186`*^-17|>, {{0.9999999997210531, 
        2.789468092090812*^-10, 1.5628821888990276`*^-18, 
        3.873997627606548*^-21}}}, {
       258, <|"unacceptable" -> 0.8320192098617554, "acceptable" -> 
         0.16798076033592224`, "very good" -> 8.671517664617131*^-17, "good" -> 
         1.7149195397081485`*^-9|>, {{0.880797077967108, 0.1192029220206594, 
        2.5212980013744598`*^-20, 1.2232460375231533`*^-11}}}, {
       259, <|"unacceptable" -> 0.9999960064888, "acceptable" -> 
         2.7607741230895044`*^-6, "very good" -> 1.240491997123172*^-6, 
         "good" -> 1.8698402548533721`*^-10|>, {{0.9999995815608004, 
        3.059021925003037*^-7, 1.1253512763013067`*^-7, 
        1.8795280300705495`*^-12}}}, {
       260, <|"unacceptable" -> 1., "acceptable" -> 3.7751635151295204`*^-11, 
         "very good" -> 5.809300448147263*^-23, "good" -> 
         6.403704237223164*^-22|>, {{0.9999999999999065, 9.3576229688393*^-14,
         1.603810890548488*^-28, 3.2213402859922146`*^-27}}}, {
       261, <|"unacceptable" -> 0.9963157176971436, "acceptable" -> 
         0.0036842734552919865`, "very good" -> 2.54745412996615*^-15, "good" -> 
         3.412128002019954*^-12|>, {{0.9990889488055947, 
        0.0009110511944006412, 1.5614583236496805`*^-18, 
        4.6546416613163035`*^-15}}}, {
       262, <|"unacceptable" -> 0.00074328004848212, "acceptable" -> 
         0.995569109916687, "very good" -> 0.0036814846098423004`, "good" -> 
         6.117034899943974*^-6|>, {{0.00012308946770024507`, 
        0.9974042873756652, 0.002472318048348788, 
        3.0510828598668585`*^-7}}}, {
       263, <|"unacceptable" -> 0.9996985197067261, "acceptable" -> 
         0.00015068831271491945`, "very good" -> 0.00015068831271491945`, 
         "good" -> 1.1250210718571907`*^-7|>, {{0.9999379001649227, 
        0.000016700663617381075`, 0.00004539711043433408, 
        2.0610256251385355`*^-9}}}, {
       264, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573849648499163*^-7, "very good" -> 2.0611368167777755`*^-9, 
         "good" -> 3.1068290301528023`*^-13|>, {{0.9999999847322688, 
        1.522997951218539*^-8, 3.775134486641358*^-11, 
        2.319522794829718*^-16}}}, {
       265, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 4.6830423406828286`*^-17, 
         "good" -> 3.775134024830429*^-11|>, {{0.9999999979387527, 
        2.0611536181900106`*^-9, 1.0530617335847606`*^-20, 
        9.3576229495518*^-14}}}, {
       266, <|"unacceptable" -> 1., "acceptable" -> 7.621877087804485*^-12, 
         "very good" -> 3.49627757617284*^-20, "good" -> 
         3.1717465106521578`*^-21|>, {{0.9999999999999875, 
        1.2664165549094016`*^-14, 1.2995814250074866`*^-24, 
        2.3802664086943708`*^-26}}}, {
       267, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573849648499163*^-7, "very good" -> 3.4246915199542816`*^-12, 
         "good" -> 3.1068290301528023`*^-13|>, {{0.9999999847700076, 
        1.5229979512760154`*^-8, 1.2664165356219033`*^-14, 
        2.319522794917254*^-16}}}, {
       268, <|"unacceptable" -> 1., "acceptable" -> 6.914347566722157*^-13, 
         "very good" -> 4.780892995206139*^-25, "good" -> 
         1.2928777690831585`*^-22|>, {{0.9999999999999994, 
        6.305116760146985*^-16, 1.0806392777072778`*^-30, 
        4.359610000063078*^-28}}}, {
       269, <|"unacceptable" -> 1., "acceptable" -> 1.5709739876598943`*^-20, 
         "very good" -> 1.6037986611477837`*^-28, "good" -> 
         2.664799143737833*^-31|>, {{1., 1.7587922024243116`*^-25, 
        4.906094730649281*^-35, 6.054601895401184*^-39}}}, {
       270, <|"unacceptable" -> 0.0016290097264572978`, "acceptable" -> 
         0.9804129004478455, "very good" -> 1.2161899576312862`*^-6, "good" -> 
         0.017956888303160667`|>, {{0.00033310639245313656`, 
        0.9929761611178338, 1.1174474578345462`*^-7, 
        0.006690620744967316}}}, {
       271, <|"unacceptable" -> 0.008162607438862324, "acceptable" -> 
         0.9918373227119446, "very good" -> 1.012561234858822*^-8, "good" -> 
         5.015279569420272*^-8|>, {{0.002472623154076504, 0.9975273758112851, 
        2.7825707865888494`*^-10, 7.56381160558546*^-10}}}, {
       272, <|"unacceptable" -> 0.9999558925628662, "acceptable" -> 
         0.00003043086144316476, "very good" -> 4.1612202572594015`*^-10, 
         "good" -> 0.000013673530702362768`|>, {{0.9999969081463245, 
        2.2603224183732696`*^-6, 5.1090732315076355`*^-12, 
        8.315261481384415*^-7}}}, {
       273, <|"unacceptable" -> 0.9999838471412659, "acceptable" -> 
         1.2404769904605928`*^-6, "very good" -> 1.2404675544530619`*^-6, 
         "good" -> 0.000013673912690137513`|>, {{0.9999990145377, 
        4.139933639032621*^-8, 1.12535063820087*^-7, 
        8.315278996633638*^-7}}}, {
       274, <|"unacceptable" -> 0.9608341455459595, "acceptable" -> 
         0.039165835827589035`, "very good" -> 2.228693767876406*^-16, "good" -> 
         2.9851720596309195`*^-13|>, {{0.9820137900379082, 
        0.017986209962091552`, 7.641179162901961*^-20, 
        2.2778034056069434`*^-16}}}, {
       275, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.504504266198637*^-7, "very good" -> 1.1728746073502553`*^-23, 
         "good" -> 3.1717699366655992`*^-21|>, {{0.9999999943972036, 
        5.60279640614594*^-9, 5.900090508540055*^-29, 
        2.3802663953582522`*^-26}}}, {
       276, <|"unacceptable" -> 1.9044097143705585`*^-6, "acceptable" -> 
         0.3099541664123535, "very good" -> 0.0002314063167432323, "good" -> 
         0.6898125410079956|>, {{8.226237641361557*^-8, 0.2689171375969493, 
        0.00009021164966629398, 0.730992568491008}}}, {
       277, <|"unacceptable" -> 0.9983412027359009, "acceptable" -> 
         0.0016588111175224185`, "very good" -> 4.579621126765687*^-9, "good" -> 
         1.6934712313010358`*^-11|>, {{0.9996646497669491, 
        0.0003353501304320649, 1.0258438307975859`*^-10, 
        3.441322672969379*^-14}}}, {
       278, <|"unacceptable" -> 1., "acceptable" -> 3.106830656456061*^-13, 
         "very good" -> 2.6102790464535398`*^-23, "good" -> 
         2.8773609378982676`*^-22|>, {{0.9999999999999998, 
        2.3195228302435686`*^-16, 5.90009054159706*^-29, 
        1.1850648642339806`*^-27}}}, {
       279, <|"unacceptable" -> 0.9999998807907104, "acceptable" -> 
         1.1253516163378663`*^-7, "very good" -> 3.424745296382037*^-12, 
         "good" -> 3.424745296382037*^-12|>, {{0.9999999979388289, 
        2.0611536181901678`*^-9, 1.2664165522991166`*^-14, 
        4.6588861355006365`*^-15}}}, {
       280, <|"unacceptable" -> 0.00033534757676534355`, "acceptable" -> 
         0.9996646642684937, "very good" -> 1.020552087283022*^-8, "good" -> 
         3.4235708885888005`*^-12|>, {{0.000045397868689771164`, 
        0.9999546018523715, 2.7893414561846397`*^-10, 
        4.6586746403023976`*^-15}}}, {
       281, <|"unacceptable" -> 1., "acceptable" -> 1.696272115825348*^-11, 
         "very good" -> 2.610269106806134*^-23, "good" -> 
         4.6830430024273186`*^-17|>, {{0.9999999999999064, 
        9.3576229688393*^-14, 1.603810890548488*^-28, 
        1.0530617357552826`*^-20}}}, {
       282, <|"unacceptable" -> 0.039165791124105453`, "acceptable" -> 
         0.9608330130577087, "very good" -> 4.40752945252143*^-9, "good" -> 
         1.1919104281332693`*^-6|>, {{0.006692850648808488, 
        0.9933071081913971, 3.749867977211319*^-11, 
        4.112229563538984*^-8}}}, {
       283, <|"unacceptable" -> 0.9983412027359009, "acceptable" -> 
         0.0016587859718129039`, "very good" -> 4.6752390496562483`*^-17, 
         "good" -> 3.1016771724796943`*^-13|>, {{0.9996646498695333, 
        0.00033535013046647805`, 1.0527085913649063`*^-20, 
        2.318744977959827*^-16}}}, {
       284, <|"unacceptable" -> 0.9999665021896362, "acceptable" -> 
         6.144006420072401*^-6, "very good" -> 0.00001367367531202035, "good" -> 
         0.000013673778994416352`|>, {{0.9999960766285477, 
        8.315254567075297*^-7, 8.315254567075297*^-7, 
        2.260320538869186*^-6}}}, {
       285, <|"unacceptable" -> 1., "acceptable" -> 9.261402755811332*^-10, 
         "very good" -> 1.1728749228946174`*^-23, "good" -> 
         4.24835413113866*^-18|>, {{0.9999999999948911, 
        5.109089028037223*^-12, 5.900090541566918*^-29, 
        1.9287498479540641`*^-22}}}, {
       286, <|"unacceptable" -> 1., "acceptable" -> 2.8773609378982676`*^-22, 
         "very good" -> 3.643909801065943*^-36, "good" -> 
         2.41746613979304*^-32|>, {{1., 3.2213402859925163`*^-27, 
        1.368539471173853*^-44, 8.194012623990516*^-40}}}, {
       287, <|"unacceptable" -> 1., "acceptable" -> 1.6962851262514178`*^-11, 
         "very good" -> 2.1042204233928143`*^-17, "good" -> 
         1.4251640378466556`*^-21|>, {{0.9999999999999065, 
        9.3576229688393*^-14, 3.873997628686825*^-21, 
        2.380266408694178*^-26}}}, {
       288, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573892281063308*^-7, "very good" -> 1.8698466386357637`*^-10, 
         "good" -> 1.5388318874362539`*^-12|>, {{0.9999999585987404, 
        4.139937547386531*^-8, 1.879528738724223*^-12, 
        4.658885952219643*^-15}}}, {
       289, <|"unacceptable" -> 1., "acceptable" -> 3.854014127173845*^-19, 
         "very good" -> 1.6038169574822554`*^-28, "good" -> 
         4.780892995206139*^-25|>, {{1., 9.602680054508677*^-24, 
        4.906094730649281*^-35, 3.975449735908647*^-31}}}, {
       290, <|"unacceptable" -> 1., "acceptable" -> 6.914400150527522*^-13, 
         "very good" -> 1.4251640378466556`*^-21, "good" -> 
         6.403655264738168*^-22|>, {{0.9999999999999994, 
        6.305116760146985*^-16, 2.380266408694399*^-26, 
        3.221340285992514*^-27}}}, {
       291, <|"unacceptable" -> 1., "acceptable" -> 1.2664165777252073`*^-14, 
         "very good" -> 2.556854925131252*^-15, "good" -> 
         2.556854925131252*^-15|>, {{1., 4.248354255291589*^-18, 
        1.5628821893349888`*^-18, 5.74952226429356*^-19}}}, {
       292, <|"unacceptable" -> 1., "acceptable" -> 4.161403721614221*^-10, 
         "very good" -> 8.577292197552235*^-19, "good" -> 
         4.24835413113866*^-18|>, {{0.9999999999981206, 
        1.879528816535551*^-12, 7.095474162271369*^-23, 
        1.928749847960293*^-22}}}, {
       293, <|"unacceptable" -> 2.484045751316444*^-7, "acceptable" -> 
         0.00816255621612072, "very good" -> 0.9918311238288879, "good" -> 
         6.093974661780521*^-6|>, {{2.056056534637662*^-9, 
        0.002472622397040237, 0.9975270704010575, 
        3.0514584559907164`*^-7}}}, {
       294, <|"unacceptable" -> 0.0033788441214710474`, "acceptable" -> 
         0.9137272834777832, "very good" -> 2.522585418773815*^-6, "good" -> 
         0.08289134502410889|>, {{0.0008678810422132088, 0.9517471284624534, 
        2.911416551276138*^-7, 0.04738469935367836}}}, {
       295, <|"unacceptable" -> 1., "acceptable" -> 1.5388444641814547`*^-12, 
         "very good" -> 1.7679185628439406`*^-27, "good" -> 
         5.270070474306733*^-24|>, {{0.9999999999999983, 
        1.7139084315420104`*^-15, 9.854154686111244*^-34, 
        7.984904245686967*^-30}}}, {
       296, <|"unacceptable" -> 1., "acceptable" -> 2.3195226989972605`*^-16, 
         "very good" -> 7.058926702980258*^-21, "good" -> 
         2.1042364706966978`*^-17|>, {{1., 2.8625185805493937`*^-20, 
        1.7587922024243118`*^-25, 1.4251640827409352`*^-21}}}, {
       297, <|"unacceptable" -> 1., "acceptable" -> 7.62193520104093*^-12, 
         "very good" -> 1.570985943004685*^-20, "good" -> 
         3.171770744459166*^-21|>, {{0.9999999999999875, 
        1.2664165549094016`*^-14, 4.780892883885409*^-25, 
        2.3802664086943708`*^-26}}}, {
       298, <|"unacceptable" -> 0.03916599974036217, "acceptable" -> 
         0.960830807685852, "very good" -> 5.355611278901051*^-7, "good" -> 
         2.652647481227177*^-6|>, {{0.017986207243191204`, 0.9820136415909789,
         4.065475315184072*^-8, 1.1051107673313672`*^-7}}}, {
       299, <|"unacceptable" -> 1., "acceptable" -> 3.775105575365423*^-11, 
         "very good" -> 1.908902690766945*^-18, "good" -> 
         1.4251640378466556`*^-21|>, {{0.9999999999999064, 
        9.357622968839299*^-14, 1.9287498479637373`*^-22, 
        8.7565107626957*^-27}}}, {
       300, <|"unacceptable" -> 0.9983412027359009, "acceptable" -> 
         0.0016588111175224185`, "very good" -> 4.675310518061173*^-17, 
         "good" -> 6.902982959550163*^-13|>, {{0.9996646498695331, 
        0.00033535013046647795`, 1.052708591364906*^-20, 
        6.303002338418865*^-16}}}, {
       301, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573892281063308*^-7, "very good" -> 6.403627496834304*^-22, "good" -> 
         2.1042192653399567`*^-17|>, {{0.9999999847700204, 
        1.5229979512760346`*^-8, 8.75651062933504*^-27, 
        1.4251640610357152`*^-21}}}, {
       302, <|"unacceptable" -> 0.008162546902894974, "acceptable" -> 
         0.9918374419212341, "very good" -> 2.795464529889262*^-14, "good" -> 
         3.7443197847819576`*^-11|>, {{0.0024726231566345436`, 
        0.9975273768432721, 3.131370899614368*^-17, 
        9.334485093595491*^-14}}}, {
       303, <|"unacceptable" -> 0.999999463558197, "acceptable" -> 
         5.573934913627454*^-7, "very good" -> 7.621872750995795*^-12, "good" -> 
         3.775132290106953*^-11|>, {{0.9999999586003357, 
        4.1399375473931355`*^-8, 3.44247696595258*^-14, 
        2.5436655420700196`*^-13}}}, {
       304, <|"unacceptable" -> 0.9168274402618408, "acceptable" -> 
         0.08317258208990097, "very good" -> 2.126601945535029*^-16, "good" -> 
         9.359840014155907*^-9|>, {{0.9525741267293172, 0.0474258731729308, 
        7.41210524956336*^-20, 9.775201028769795*^-11}}}, {
       305, <|"unacceptable" -> 1., "acceptable" -> 2.06115369216775*^-9, 
         "very good" -> 7.058873388604839*^-21, "good" -> 
         1.5709739876598943`*^-20|>, {{0.9999999999861121, 
        1.3887943864771147`*^-11, 1.758792202399886*^-25, 
        1.758792202399886*^-25}}}, {
       306, <|"unacceptable" -> 1., "acceptable" -> 3.4247194923703317`*^-12, 
         "very good" -> 2.6102591671587282`*^-23, "good" -> 
         1.908902690766945*^-18|>, {{0.9999999999999952, 
        4.658886145103376*^-15, 1.6038108905486303`*^-28, 
        7.095474162284671*^-23}}}, {
       307, <|"unacceptable" -> 1., "acceptable" -> 2.8773172665585545`*^-22, 
         "very good" -> 1.637309232267531*^-36, "good" -> 
         2.1930557091528235`*^-33|>, {{1., 1.185064864233981*^-27, 
        5.0345753587649823`*^-45, 1.5007857627073948`*^-41}}}, {
       308, <|"unacceptable" -> 0.9963157773017883, "acceptable" -> 
         0.003684245515614748, "very good" -> 3.4121282188603885`*^-12, 
         "good" -> 2.0535599887239187`*^-9|>, {{0.9990889487917239, 
        0.0009110511943879926, 1.2652627845768867`*^-14, 
        1.3875291236925377`*^-11}}}, {
       309, <|"unacceptable" -> 1., "acceptable" -> 2.818470452956457*^-14, 
         "very good" -> 7.943715204226384*^-28, "good" -> 
         1.948803212853152*^-26|>, {{1., 1.1548224173015786`*^-17, 
        1.3336148155022614`*^-34, 7.281290178321643*^-33}}}, {
       310, <|"unacceptable" -> 0.9999999403953552, "acceptable" -> 
         5.056554286397841*^-8, "very good" -> 3.1068542378533126`*^-13, 
         "good" -> 3.1068542378533126`*^-13|>, {{0.999999999241743, 
        7.582560422162378*^-10, 6.305116755366091*^-16, 
        2.319522828484775*^-16}}}, {
       311, <|"unacceptable" -> 1., "acceptable" -> 1.2664165777252073`*^-14, 
         "very good" -> 3.2380681219841363`*^-29, "good" -> 
         2.3680062151665067`*^-24|>, {{1., 4.248354255291589*^-18, 
        6.639677199580733*^-36, 2.937482111710803*^-30}}}, {
       312, <|"unacceptable" -> 1., "acceptable" -> 1.5388327547979919`*^-12, 
         "very good" -> 2.6102790464535398`*^-23, "good" -> 
         6.403704237223164*^-22|>, {{0.9999999999999982, 
        1.71390843154201*^-15, 1.603810890548635*^-28, 
        3.2213402859925102`*^-27}}}, {
       313, <|"unacceptable" -> 0.9992539882659912, "acceptable" -> 
         0.0007460311171598732, "very good" -> 4.6795493223921396`*^-17, 
         "good" -> 3.7723470180939245`*^-11|>, {{0.9996646498692792, 
        0.0003353501304663928, 1.0527085913646386`*^-20, 
        2.5428126287695654`*^-13}}}, {
       314, <|"unacceptable" -> 2.268280141493051*^-8, "acceptable" -> 
         0.0016587984282523394`, "very good" -> 1.1234848784624774`*^-7, 
         "good" -> 0.9983410835266113|>, {{2.7885326279841164`*^-10, 
        0.0003353501284946962, 5.600917506088852*^-9, 0.9996646439917346}}}, {
       315, <|"unacceptable" -> 0.00006772332562832162, "acceptable" -> 
         0.9999185800552368, "very good" -> 1.0208113465637325`*^-8, "good" -> 
         0.000013673124158231076`|>, {{6.144169491478836*^-6, 
        0.9999930240286453, 2.789448633619414*^-10, 
        8.315229183830428*^-7}}}, {
       316, <|"unacceptable" -> 5.07730464960332*^-6, "acceptable" -> 
         0.006800728850066662, "very good" -> 0.8263556361198425, "good" -> 
         0.16683858633041382`|>, {{1.0710504910132716`*^-7, 
        0.0008678812019351364, 0.9517473036188155, 0.04738470807420013}}}, {
       317, <|"unacceptable" -> 0.0007399404421448708, "acceptable" -> 
         0.9911035299301147, "very good" -> 8.32693289321007*^-11, "good" -> 
         0.008156507275998592|>, {{0.00012308950525578814`, 
        0.9974045916913826, 6.896454415453546*^-13, 
        0.0024723188026720354`}}}, {
       318, <|"unacceptable" -> 1., "acceptable" -> 2.2720493930705743`*^-8, 
         "very good" -> 1.2664165777252073`*^-14, "good" -> 
         6.914452734332888*^-13|>, {{0.9999999992417422, 
        7.582560422162372*^-10, 1.1548224164259254`*^-17, 
        1.7139084302424286`*^-15}}}, {
       319, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         4.587159541102892*^-9, "very good" -> 1.3959950003698124`*^-13, 
         "good" -> 2.504504266198637*^-7|>, {{0.9999999943594521, 
        3.77513452298527*^-11, 2.3195228171601897`*^-16, 
        5.6027964059344256`*^-9}}}, {
       320, <|"unacceptable" -> 0.9168268442153931, "acceptable" -> 
         0.08317316323518753, "very good" -> 3.8152866976837174`*^-10, "good" -> 
         6.987941475466997*^-12|>, {{0.9525741268177859, 
        0.047425873177335404`, 4.866786019741751*^-12, 
        1.206355643980427*^-14}}}, {
       321, <|"unacceptable" -> 0.9999863505363464, "acceptable" -> 
         0.00001367405002383748, "very good" -> 4.161315181328007*^-10, 
         "good" -> 4.161315181328007*^-10|>, {{0.9999991684682132, 
        8.315280276610064*^-7, 1.879527253651128*^-12, 
        1.879527253651128*^-12}}}, {
       322, <|"unacceptable" -> 0.01798596791923046, "acceptable" -> 
         0.9820005893707275, "very good" -> 4.504629114165937*^-9, "good" -> 
         0.000013428109014057554`|>, {{0.00247262110557005, 
        0.9975265493847981, 3.765796935418081*^-11, 
        8.294719738817432*^-7}}}, {
       323, <|
        "unacceptable" -> 1., "acceptable" -> 7.621877087804485*^-12, 
         "very good" -> 5.270070474306733*^-24, "good" -> 
         3.171770744459166*^-21|>, {{0.9999999999999873, 
        1.2664165549094016`*^-14, 2.170522011303612*^-29, 
        2.3802664086943708`*^-26}}}, {
       324, <|"unacceptable" -> 0.9999997615814209, "acceptable" -> 
         2.5045233087439556`*^-7, "very good" -> 6.272639471640445*^-14, 
         "good" -> 5.69040122097228*^-15|>, {{0.9999999847700203, 
        1.5229979512760346`*^-8, 8.533047495785923*^-17, 
        4.24835419058924*^-18}}}, {
       325, <|"unacceptable" -> 4.086561644633946*^-10, "acceptable" -> 
         6.033664249116555*^-6, "very good" -> 0.9820077419281006, "good" -> 
         0.01798623614013195|>, {{6.86812097087624*^-13, 
        3.0385486954529577`*^-7, 0.9933068472538187, 
        0.006692848890624914}}}, {
       326, <|"unacceptable" -> 0.9996646642684937, "acceptable" -> 
         0.00033535013790242374`, "very good" -> 2.5559975160303937`*^-15, 
         "good" -> 6.270537474678539*^-14|>, {{0.9999546021312974, 
        0.00004539786870243438, 1.5628112378145596`*^-18, 
        3.138990282109696*^-17}}}, {
       327, <|"unacceptable" -> 1., "acceptable" -> 1.696272115825348*^-11, 
         "very good" -> 1.5709739876598943`*^-20, "good" -> 
         6.403655264738168*^-22|>, {{0.9999999999999656, 
        3.442477108469858*^-14, 1.7587922024242508`*^-25, 
        3.221340285992405*^-27}}}, {
       328, <|"unacceptable" -> 0.00015070989320520312`, "acceptable" -> 
         0.9998493194580078, "very good" -> 6.271695538124025*^-14, "good" -> 
         1.696016417584989*^-11|>, {{6.144174602214505*^-6, 
        0.9999938558253632, 3.139113504667947*^-17, 
        3.4424559572894385`*^-14}}}, {
       329, <|"unacceptable" -> 1., "acceptable" -> 1.0422256018997455`*^-16, 
         "very good" -> 5.270070474306733*^-24, "good" -> 
         2.8773609378982676`*^-22|>, {{1., 1.0530617357553813`*^-20, 
        2.1705220113036395`*^-29, 1.1850648642339812`*^-27}}}, {
       330, <|"unacceptable" -> 0.1679818034172058, "acceptable" -> 
         0.8320180177688599, "very good" -> 6.990400619466541*^-11, "good" -> 
         2.083793049223459*^-7|>, {{0.11920292143378729`, 0.880797073630677, 
        6.090183380104571*^-13, 4.934926706331208*^-9}}}, {
       331, <|"unacceptable" -> 0.9991022348403931, "acceptable" -> 
         1.2393927590892417`*^-6, "very good" -> 0.0007459178450517356, 
         "good" -> 0.00015059844008646905`|>, {{0.9996479182771297, 
        4.138480122380561*^-8, 0.0003353445176425213, 
        0.000016695820426656565`}}}, {
       332, <|"unacceptable" -> 0.9999322891235352, "acceptable" -> 
         0.00006772374035790563, "very good" -> 6.403221580566914*^-22, 
         "good" -> 9.454202908531951*^-18|>, {{0.9999938558253977, 
        6.144174602214717*^-6, 8.756456961165487*^-27, 
        5.242853450158529*^-22}}}, {
       333, <|"unacceptable" -> 0.9918373823165894, "acceptable" -> 
         0.008162608370184898, "very good" -> 5.643953745793117*^-15, "good" -> 
         2.2535035171245*^-8|>, {{0.9975273765657963, 0.0024726231559467496`, 
        4.237849675003156*^-18, 2.7825707886935334`*^-10}}}, {
       334, <|"unacceptable" -> 1., "acceptable" -> 2.272032162409232*^-8, 
         "very good" -> 2.3195226989972605`*^-16, "good" -> 
         2.3195226989972605`*^-16|>, {{0.9999999997210534, 
        2.7894680920908124`*^-10, 2.862518579750904*^-20, 
        2.862518579750904*^-20}}}, {
       335, <|"unacceptable" -> 0.9999322891235352, "acceptable" -> 
         0.00006772477354388684, "very good" -> 2.818279531730146*^-14, 
         "good" -> 3.7749078168891614`*^-11|>, {{0.9999938558253041, 
        6.144174602214142*^-6, 3.139113504667762*^-17, 
        9.357565473969916*^-14}}}, {
       336, <|"unacceptable" -> 1., "acceptable" -> 1.8698335935152244`*^-10, 
         "very good" -> 7.781191733293151*^-20, "good" -> 
         2.1042364706966978`*^-17|>, {{0.9999999999993084, 
        6.914400106935422*^-13, 1.2995814250066042`*^-24, 
        1.4251640827399496`*^-21}}}, {
       337, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.7607352421910036`*^-6, "very good" -> 5.162154946768648*^-16, 
         "good" -> 5.162154946768648*^-16|>, {{0.9999998874648379, 
        1.12535162055095*^-7, 2.1151307995644662`*^-19, 
        7.781131365482818*^-20}}}, {
       338, <|"unacceptable" -> 1., "acceptable" -> 9.454843146326067*^-18, 
         "very good" -> 1.0639942897176598`*^-24, "good" -> 
         1.0640023755419383`*^-24|>, {{1., 5.242885663363464*^-22, 
        2.937482111710803*^-30, 1.0806392777072785`*^-30}}}, {
       339, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.760777533694636*^-6, "very good" -> 8.401718903927602*^-11, "good" -> 
         1.5388285264095192`*^-12|>, {{0.9999996940970769, 
        3.0590222692541175`*^-7, 6.914397991804999*^-13, 
        4.6588847199365066`*^-15}}}, {
       340, <|"unacceptable" -> 0.9999972581863403, "acceptable" -> 
         2.760777533694636*^-6, "very good" -> 3.424736189083788*^-12, "good" -> 
         6.914433760794869*^-13|>, {{0.9999998874648325, 
        1.1253516205509437`*^-7, 4.658885620814864*^-15, 
        6.305116050599619*^-16}}}, {
       341, <|"unacceptable" -> 1., "acceptable" -> 1.8698335935152244`*^-10, 
         "very good" -> 2.3679971432660967`*^-24, "good" -> 
         8.577292197552235*^-19|>, {{0.9999999999993086, 
        6.914400106935422*^-13, 7.98490424568146*^-30, 
        2.6102790696659004`*^-23}}}, {
       342, <|"unacceptable" -> 1., "acceptable" -> 5.162208945119035*^-16, 
         "very good" -> 1.4549532556737824`*^-29, "good" -> 
         1.948803212853152*^-26|>, {{1., 2.1151310375910807`*^-19, 
        2.4426007377405277`*^-36, 1.9792598779469048`*^-32}}}, {
       343, <|"unacceptable" -> 0.00033408994204364717`, "acceptable" -> 
         0.9959157109260559, "very good" -> 0.0036827661097049713`, "good" -> 
         0.00006745169957866892|>, {{0.00004528534442219858, 
        0.9974760899215981, 0.0024724960290658095`, 
        6.128704913845803*^-6}}}, {
       344, <|"unacceptable" -> 0.9963157773017883, "acceptable" -> 
         0.003684245515614748, "very good" -> 5.6694375790442095`*^-15, 
         "good" -> 4.570295697448046*^-9|>, {{0.9990889487679168, 
        0.0009110511943662832, 4.2444837869129795`*^-18, 
        3.771695203301252*^-11}}}, {
       345, <|"unacceptable" -> 0.08317236602306366, "acceptable" -> 
         0.9168251156806946, "very good" -> 9.359816921516995*^-9, "good" -> 
         2.5311571789643494`*^-6|>, {{0.04742586808100215, 0.9525740244551962,
         2.657174847313513*^-10, 1.0719808427509332`*^-7}}}, {
       346, <|"unacceptable" -> 0.00032992413616739213`, "acceptable" -> 
         0.9834824800491333, "very good" -> 0.008093788288533688, "good" -> 
         0.008093788288533688|>, {{0.00004498329007174822, 0.9908229001032308,
         0.0066761121863757236`, 0.0024560044203217573`}}}}, "AllowEmbedding" -> 
     True, "InitialShape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[34], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 2, "unacceptable"} -> 
             1, {All, 2, "acceptable"} -> 1, {All, 2, "very good"} -> 
             1, {All, 2, "good"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "unacceptable" -> TypeSystem`PackageScope`AtomShape[60], 
               "acceptable" -> TypeSystem`PackageScope`AtomShape[60], 
               "very good" -> TypeSystem`PackageScope`AtomShape[60], "good" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 2}]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[1, 4], 1, 4, {All, 3, All}]}], 
         DirectedInfinity[1], 3, {All}]], 10, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[Integer], 
         TypeSystem`Struct[{
          "unacceptable", "acceptable", "very good", "good"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 4], 1]}], 346], "Meta" -> <||>, "RowTarget" -> 
     20, "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`Limited[
         TypeSystem`PackageScope`RowShape[{
           TypeSystem`PackageScope`AtomShape[34], 
           
           TypeSystem`PackageScope`HeaderShape[<|{All, 2, "unacceptable"} -> 
             1, {All, 2, "acceptable"} -> 1, {All, 2, "very good"} -> 
             1, {All, 2, "good"} -> 1|>, 
            TypeSystem`PackageScope`Limited[
             
             TypeSystem`PackageScope`RowShape[<|
              "unacceptable" -> TypeSystem`PackageScope`AtomShape[60], 
               "acceptable" -> TypeSystem`PackageScope`AtomShape[60], 
               "very good" -> TypeSystem`PackageScope`AtomShape[60], "good" -> 
               TypeSystem`PackageScope`AtomShape[60]|>], 
             DirectedInfinity[1], 4, {All, 2}]], 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`MatrixShape[1, 4], 1, 4, {All, 3, All}]}], 
         DirectedInfinity[1], 3, {All}]], 10, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Vector[
       TypeSystem`Tuple[{
         TypeSystem`Atom[Integer], 
         TypeSystem`Struct[{
          "unacceptable", "acceptable", "very good", "good"}, {
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real]}], 
         TypeSystem`Vector[
          TypeSystem`Vector[
           TypeSystem`Atom[Real], 4], 1]}], 346], "Path" -> {}, 
     "DisplayedRowCount" -> 10, "DisplayedColumnCount" -> 3, "DataRowCount" -> 
     346, "DataColumnCount" -> 3, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.997527"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00247262"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000573531"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000509646"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.996316"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00368425"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000114463"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000414604"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000211513"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000424835"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000574952"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000516217"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000569036"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000114887"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0474259"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.952574"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000120636"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000132293"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0831726"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.916827"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000313988"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000188972"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000758256"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000286252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000465889"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000227205"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000104223"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000153882"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000278947"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000709547"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000524289"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000102089"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000857729"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000424835"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000286252"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000000000435961"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000000000000000000000000079849"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000231952"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000058093"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000000000527007"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000614417"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999994"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000206114"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000003059"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000677233"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999926"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000000505614"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000614376"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00669284"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.993305"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000277079"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000022452"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0179858"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.981984"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000010025"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000298844"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["9"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000187953"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000000000000322134"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000000000000000000000118506"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000000041614"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000287736"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000000000000000000000287736"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["10"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["unacceptable", 
                  Style[
                  "unacceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "unacceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "unacceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["acceptable", 
                  Style[
                  "acceptable", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "acceptable"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "acceptable"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["very good", 
                  Style[
                  "very good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "very good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "very good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["good", 
                  Style[
                  "good", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, 2, "good"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, 2, "good"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000335308"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 1, 
                1}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.999539"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 1, 
                2}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000123353"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 1, 
                3}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000225929"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 3, 1, 
                4}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00165819"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["unacceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.997977"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["acceptable"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000334781"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["very good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000303706"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 2, 
                 Key["good"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], SpanFromAbove, SpanFromAbove, 
            SpanFromAbove, SpanFromAbove}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[True, 346, 1], {1, 346 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-10) 
                    If[False, 346, 1], {1, 346 - -10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[346, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 10, " of ", 
                    Style[346, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[False, 346, 1], {1, 346 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    10 If[True, 346, 1], {1, 346 - 10 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{1323., {296.1875, 301.8125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{1323., {296.1875, 301.8125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.868534506308836*^9, 3.868534531541417*^9}, {
   3.868534632915978*^9, 3.868534646886385*^9}, 3.868534704351715*^9, 
   3.8685348817575083`*^9, 3.86853567474021*^9, 3.868536233389105*^9, 
   3.868536681815991*^9, 3.8685375207897377`*^9, 3.868537957723404*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"4ac5cf6e-1072-4efc-8ca5-e6fade063ed9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"testData", "[", 
  RowBox[{"[", "308", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868534905486122*^9, 3.868534908750902*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"7142bd0e-1b2f-4a99-92b6-01861523e14e"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "PurchasePrice" -> "very high", "MaintenanceCost" -> "low", "Doors" -> 
       2, "Passengers" -> Interval[{5, 
          DirectedInfinity[1]}], "Cargo" -> "small", "Safety" -> "high", 
       "Acceptability" -> "unacceptable"|>, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"PurchasePrice"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {
         "MaintenanceCost"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Doors"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Passengers"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Cargo"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"Safety"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "Acceptability"} -> TypeSystem`PackageScope`AtomShape[134.4]|>, 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", "Cargo", 
        "Safety", "Acceptability"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"PurchasePrice"} -> 
        TypeSystem`PackageScope`AtomShape[100.80000000000001`], {
         "MaintenanceCost"} -> 
        TypeSystem`PackageScope`AtomShape[33.6], {"Doors"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Passengers"} -> 
        TypeSystem`PackageScope`UnknownShape[False], {"Cargo"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"Safety"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "Acceptability"} -> TypeSystem`PackageScope`AtomShape[134.4]|>, 1], 
     "Type" -> TypeSystem`Struct[{
       "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", "Cargo", 
        "Safety", "Acceptability"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], TypeSystem`AnyType, 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 7, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PurchasePrice", 
                  Style[
                  "PurchasePrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PurchasePrice"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PurchasePrice"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["very high", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PurchasePrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MaintenanceCost", 
                  Style[
                  "MaintenanceCost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MaintenanceCost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaintenanceCost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["low", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Doors", 
                  Style[
                  "Doors", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Doors"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Doors"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Doors"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Passengers", 
                  Style[
                  "Passengers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Passengers"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                StyleBox[
                 RowBox[{"Interval", "[", 
                   RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                 FontFamily -> Dynamic[
                   CurrentValue[{"StyleHints", "CodeFont"}]], 
                 ShowStringCharacters -> True]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cargo", 
                  Style[
                  "Cargo", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cargo"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cargo"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["small", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cargo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Safety", 
                  Style[
                  "Safety", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Safety"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Safety"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["high", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Safety"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Acceptability", 
                  Style[
                  "Acceptability", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Acceptability"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Acceptability"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["unacceptable", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Acceptability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{134.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{253., {103.6875, 109.3125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{253., {103.6875, 109.3125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.868534909419202*^9, 3.868535676816082*^9, 
  3.868536235043371*^9, 3.868536683631303*^9, 3.868537522566601*^9, 
  3.8685379593720617`*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"36c61314-e384-483a-ab06-58fddc5eb934"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"trainedSoftNet", "[", 
      RowBox[{
       RowBox[{"Drop", "[", 
        RowBox[{"#1", ",", 
         RowBox[{"-", "1"}]}], "]"}], ",", "\"\<Probabilities\>\""}], "]"}], 
     ",", 
     RowBox[{"HardNetClassProbabilities", "[", 
      RowBox[{"HardNetClassScores", "[", 
       RowBox[{"HardNetClassBits", "[", 
        RowBox[{"bf", ",", "featureLayer", ",", 
         RowBox[{"{", 
          RowBox[{"Drop", "[", 
           RowBox[{"#1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "}"}]}], "]"}], "]"}], "]"}]}], 
    "}"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"testData", "[", 
    RowBox[{"[", "308", "]"}], "]"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.868534931247612*^9, 3.868534945854948*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"3c3b7e40-3534-4912-a903-aca255697971"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    TagBox[
     TagBox[
      DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
       "InitialData" -> <|
         "unacceptable" -> 0.9963157773017883, "acceptable" -> 
          0.003684245515614748, "very good" -> 3.4121282188603885`*^-12, 
          "good" -> 2.0535599887239187`*^-9|>, "AllowEmbedding" -> True, 
        "InitialShape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[126.], 
            TypeSystem`PackageScope`AtomShape[60]]], 4, 
          DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "acceptable", "good", "unacceptable", "very good"]], 
          TypeSystem`Atom[Real], 4], "Meta" -> <||>, "RowTarget" -> 20, 
        "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`ColumnShape[
           TypeSystem`PackageScope`KeyValueShape[
            TypeSystem`PackageScope`AtomShape[126.], 
            TypeSystem`PackageScope`AtomShape[60]]], 4, 
          DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
          TypeSystem`Atom[
           TypeSystem`Enumeration[
           "acceptable", "good", "unacceptable", "very good"]], 
          TypeSystem`Atom[Real], 4], "Path" -> {}, "DisplayedRowCount" -> 4, 
        "DisplayedColumnCount" -> 1, "DataRowCount" -> 4, "DataColumnCount" -> 
        1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> 
        Null, "UpdateType" -> 1|>, 
       TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["unacceptable", 
                    Style[
                    "unacceptable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["unacceptable"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["unacceptable"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.996316"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["unacceptable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["acceptable", 
                    Style[
                    "acceptable", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["acceptable"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["acceptable"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.00368425"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["acceptable"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["very good", 
                    Style[
                    "very good", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["very good"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["very good"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.00000000000341213"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["very good"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}, {
               Item[
                Pane[
                 Annotation[
                  EventHandler[
                   MouseAppearance[
                    Mouseover["good", 
                    Style[
                    "good", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                   If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["good"]}, 1]]], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["good"]}, "RowHeader", False], "Mouse"], 
                 ImageSize -> {{126., Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], 
               Item[
                Pane[
                 Annotation[
                  RawBoxes["0.00000000205356"], 
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                   TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["good"]}, "Item", False], "Mouse"], 
                 ImageSize -> {{60, Full}, Automatic}, 
                 ImageMargins -> {{5, 3}, {4, 5}}], 
                ItemSize -> {Full, Automatic}]}}, 
             BaseStyle -> {
              ContextMenu -> 
               Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                 Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                   TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                   TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                    True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                   TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
               "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
             Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
             Spacings -> {0, 0}, Alignment -> Left, 
             BaseStyle -> {
              FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
               Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
            NumberMarks -> False, ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`datasetData[
               TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                 TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
          TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
         TrackedSymbols :> {
          TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
        DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
         TypeSystem`PackageScope`SubViewPathbar[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, 
          TypeSystem`NestedGrid`PackagePrivate`updateState[
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
        Framed[
         Dynamic[
          Replace[
          TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
           TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
              Blank[]] -> "", 
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
              Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
               Blank[]], 
              Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
               Blank[]]] :> (
             Increment[
              TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
              TypeSystem`NestedGrid`PackagePrivate`path$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
              TypeSystem`NestedGrid`PackagePrivate`pathType$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
              TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
             TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
             TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
              TypeSystem`NestedGrid`PackagePrivate`path$, 
               TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
            Spacer[10], Blank[] :> Spacer[10]}], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
         FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
         Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
       DynamicWrapperBox[
        DynamicBox[ToBoxes[
          Dataset`DatasetContent[
          2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
           "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
           "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
           "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
           "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
           "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
           "BottomBar" -> 
           Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
           "OutputID" -> Hold[
             TypeSystem`NestedGrid`PackagePrivate`localHold[
             TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
          StandardForm],
         ImageSizeCache->{271., {61.6875, 67.3125}},
         TrackedSymbols:>{
          TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
        MouseAnnotation[],
        ImageSizeCache->{271., {61.6875, 67.3125}}],
       BaseStyle->{LineBreakWithin -> False},
       DynamicModuleValues:>{},
       Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
        CreateUUID[]),
       UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy,
      DefaultBaseStyle->"Deploy"],
     Dataset`InterpretDataset[1],
     Editable->False,
     SelectWithContents->True,
     Selectable->False], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "0.9990889487917239`", ",", "0.0009110511943879926`", ",", 
       "1.2652627845768867`*^-14", ",", "1.3875291236925377`*^-11"}], "}"}], 
     "}"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8685349469699907`*^9, 3.8685356788775883`*^9, 
  3.868536236199932*^9, 3.8685366849742126`*^9, 3.868537523735043*^9, 
  3.868537960984705*^9},
 CellLabel->
  "Out[158]=",ExpressionUUID->"89db5aee-fd17-4bd2-8d37-8bc5dfb6f828"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HardNetClassScores", "[", 
  RowBox[{"HardNetClassBits", "[", 
   RowBox[{"bf", ",", "featureLayer", ",", 
    RowBox[{"{", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"testData", "[", 
        RowBox[{"[", "308", "]"}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.868534969725892*^9, 3.868535011211142*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"5abacf0c-68f0-4990-aa7b-45aa378db4fe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"75", ",", "75", ",", "50", ",", "53"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.868534999458582*^9, 3.8685350166318502`*^9}, 
   3.868536298662074*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"53e53c28-aea4-4b7c-8826-bcfdfa6ad374"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7a91410a-fdc1-4cfe-a437-7a311bcf3ad2"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 214, 4, 98, "Title",ExpressionUUID->"e16c6739-4a62-4e56-b75b-c3030d8dbab8"],
Cell[797, 28, 633, 14, 59, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[CellGroupData[{
Cell[1455, 46, 202, 3, 29, "Input",ExpressionUUID->"b6c0dc4a-3793-4071-8577-e783d118064e"],
Cell[1660, 51, 26697, 596, 291, "Output",ExpressionUUID->"d92b2653-4301-4f99-94ac-dcbdc92fcffa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28394, 652, 204, 4, 69, "Chapter",ExpressionUUID->"3104f7e3-d1cf-444c-857d-f3d3d76d7c7a"],
Cell[CellGroupData[{
Cell[28623, 660, 465, 9, 29, "Input",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],
Cell[29091, 671, 127555, 2371, 652, "Output",ExpressionUUID->"2f2671b6-ff8c-40e2-a600-10268d1fbe8e"]
}, Open  ]],
Cell[156661, 3045, 8493, 202, 37, "Input",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165191, 3252, 317, 5, 69, "Chapter",ExpressionUUID->"fc79f348-c5f7-48d3-80d6-e4dab5b13de8"],
Cell[165511, 3259, 2784, 69, 216, "Input",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],
Cell[168298, 3330, 1798, 40, 257, "Input",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170133, 3375, 355, 6, 69, "Chapter",ExpressionUUID->"1674350a-bfdf-4c15-99d4-bba009f90f57"],
Cell[170491, 3383, 2343, 43, 133, "Input",ExpressionUUID->"ad2ef6d3-cd02-4807-bcb7-4197c5c0f639"],
Cell[172837, 3428, 1445, 27, 32, "Input",ExpressionUUID->"d4969fd9-cfe3-4b00-becd-a1837d573614"],
Cell[174285, 3457, 1095, 25, 117, "Input",ExpressionUUID->"7439541b-c071-4819-9fbd-8e1e8cfa2b4a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[175417, 3487, 355, 6, 69, "Chapter",ExpressionUUID->"3ba812ad-d11b-4f60-9a7a-772879a58a20"],
Cell[175775, 3495, 1115, 26, 133, "Input",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176927, 3526, 456, 7, 69, "Chapter",ExpressionUUID->"b925ae5d-4091-4d4b-a37f-d801edc11fc9"],
Cell[177386, 3535, 1755, 33, 97, "Input",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],
Cell[CellGroupData[{
Cell[179166, 3572, 859, 14, 29, "Input",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],
Cell[180028, 3588, 217408, 4037, 495, "Output",ExpressionUUID->"bb9198b3-b1ba-4d62-8c9d-c5e9c080a34a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[397485, 7631, 507, 8, 69, "Chapter",ExpressionUUID->"161daabc-615f-418f-a171-832b4a2218d6"],
Cell[397995, 7641, 849, 20, 71, "Input",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],
Cell[CellGroupData[{
Cell[398869, 7665, 849, 17, 51, "Input",ExpressionUUID->"f5f447dd-5588-4178-92cf-69aee019ae5a"],
Cell[399721, 7684, 437, 8, 33, "Output",ExpressionUUID->"ad48924c-fbd6-44de-b413-5d75c1b10948"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400195, 7697, 1070, 27, 51, "Input",ExpressionUUID->"5a479eae-a14a-4e16-be45-c641694c4dfb"],
Cell[401268, 7726, 253892, 4541, 617, "Output",ExpressionUUID->"4ac5cf6e-1072-4efc-8ca5-e6fade063ed9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[655197, 12272, 235, 5, 29, "Input",ExpressionUUID->"7142bd0e-1b2f-4a99-92b6-01861523e14e"],
Cell[655435, 12279, 36765, 666, 232, "Output",ExpressionUUID->"36c61314-e384-483a-ab06-58fddc5eb934"]
}, Open  ]],
Cell[CellGroupData[{
Cell[692237, 12950, 878, 25, 29, "Input",ExpressionUUID->"3c3b7e40-3534-4912-a903-aca255697971"],
Cell[693118, 12977, 30136, 534, 197, "Output",ExpressionUUID->"89db5aee-fd17-4bd2-8d37-8bc5dfb6f828"]
}, Open  ]],
Cell[CellGroupData[{
Cell[723291, 13516, 485, 11, 29, "Input",ExpressionUUID->"5abacf0c-68f0-4990-aa7b-45aa378db4fe"],
Cell[723779, 13529, 294, 6, 33, "Output",ExpressionUUID->"53e53c28-aea4-4b7c-8826-bcfdfa6ad374"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

