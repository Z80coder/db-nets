(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1166458,      22477]
NotebookOptionsPosition[   1159673,      22360]
NotebookOutlinePosition[   1160111,      22377]
CellTagsIndexPosition[   1160068,      22374]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Learning XOR", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 3.8684260746987667`*^9}, {3.869278884416973*^9, 
  3.869278885792972*^9}},ExpressionUUID->"e80ffaf1-ce7d-4821-a091-\
e123c51e05cc"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}, {
   3.868604559041458*^9, 3.868604559653843*^9}, {3.868937073460001*^9, 
   3.868937074141531*^9}, {3.869042727278556*^9, 3.869042728153739*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"e7550ce8-9c02-454b-9ce5-651d0f8e87b4"],

Cell[CellGroupData[{

Cell["Get data", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 
  3.868426122274289*^9}},ExpressionUUID->"ff3102a6-3c5a-457a-910a-\
4abcf0a85217"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"numBooleanVariables", "=", "10"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    SuperscriptBox["2", "numBooleanVariables"], " ", "possible", " ", 
    "inputs"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bf", "=", 
   RowBox[{"BooleanConvert", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Xor", "[", 
       RowBox[{
       "#1", ",", "#2", ",", "#3", ",", "#4", ",", "#5", ",", "#6", ",", "#7",
         ",", "#8", ",", "#9", ",", "#10"}], "]"}], "&"}], ",", 
     "\"\<BooleanFunction\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"maxExamples", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"2000", ",", 
     SuperscriptBox["2", "numBooleanVariables"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"numClasses", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"With", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", "=", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "numBooleanVariables"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"Soften", "/@", "x"}], "->", 
         RowBox[{"bf", "@@", "x"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"Range", "[", "maxExamples", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8631507903678637`*^9, 3.8631507905196667`*^9}, {
   3.863151242837092*^9, 3.863151247696003*^9}, 3.863158542401339*^9, 
   3.863163212116626*^9, 3.8631766947235193`*^9, 3.863176797755232*^9, {
   3.863179909310301*^9, 3.863179923837204*^9}, {3.863243605533627*^9, 
   3.863243620585451*^9}, {3.86324880283392*^9, 3.863248807664549*^9}, 
   3.863261133634419*^9, {3.86326137325694*^9, 3.8632614056637583`*^9}, {
   3.863261437377194*^9, 3.863261502775928*^9}, {3.8632617677613983`*^9, 
   3.863261767960438*^9}, {3.8632618648892*^9, 3.8632618650156393`*^9}, {
   3.863263609082129*^9, 3.863263612112956*^9}, {3.8632641205013657`*^9, 
   3.8632641216097193`*^9}, {3.8632646726440353`*^9, 
   3.8632646847617817`*^9}, {3.863265794153249*^9, 3.863265797374902*^9}, {
   3.86326617446527*^9, 3.8632661766776447`*^9}, {3.8632663950099487`*^9, 
   3.863266397423538*^9}, {3.863266602290083*^9, 3.863266603667367*^9}, {
   3.863267749709738*^9, 3.8632677506435137`*^9}, {3.863268331863552*^9, 
   3.863268332996944*^9}, {3.864793623697935*^9, 3.864793626168922*^9}, {
   3.864793718272374*^9, 3.864793728328333*^9}, {3.8647937905288*^9, 
   3.864793839705696*^9}, {3.8648255889830313`*^9, 3.864825592504498*^9}, {
   3.864825624917417*^9, 3.864825626880946*^9}, {3.864829407265236*^9, 
   3.8648294087742167`*^9}, {3.864829443456806*^9, 3.864829444846697*^9}, {
   3.864829792396603*^9, 3.8648297927316837`*^9}, {3.864830032545388*^9, 
   3.8648300662967587`*^9}, 3.86483040909219*^9, {3.864830633132044*^9, 
   3.8648306348014383`*^9}, {3.8648309522842607`*^9, 
   3.8648309524254227`*^9}, {3.864831241412085*^9, 3.8648312465735483`*^9}, {
   3.864831361588151*^9, 3.864831427353725*^9}, {3.864831467589365*^9, 
   3.864831467738257*^9}, {3.8650545097885313`*^9, 3.865054521919083*^9}, {
   3.865574752812943*^9, 3.865574784399784*^9}, {3.865592534192895*^9, 
   3.865592534298318*^9}, {3.865592762627692*^9, 3.8655927636071053`*^9}, {
   3.865594557687479*^9, 3.865594557984342*^9}, {3.865594963476437*^9, 
   3.8655949635928717`*^9}, {3.865780594387285*^9, 3.8657805954725647`*^9}, {
   3.86578528554428*^9, 3.865785286930284*^9}, {3.8658288989019117`*^9, 
   3.865828899235673*^9}, {3.865830427368958*^9, 3.865830428545253*^9}, {
   3.865830742328867*^9, 3.8658307442321053`*^9}, {3.865831732136331*^9, 
   3.8658317341109133`*^9}, {3.865837020252844*^9, 3.865837020623869*^9}, {
   3.8658371834605103`*^9, 3.865837184543343*^9}, {3.8658377080420017`*^9, 
   3.865837708413855*^9}, {3.865837740366976*^9, 3.86583774055787*^9}, {
   3.865859522557151*^9, 3.865859523313833*^9}, {3.865859830431425*^9, 
   3.865859831995036*^9}, {3.865866201299968*^9, 3.865866202414603*^9}, {
   3.8658663169608183`*^9, 3.865866318295281*^9}, {3.865866383754406*^9, 
   3.8658663858232803`*^9}, {3.8660002644683657`*^9, 3.866000265575876*^9}, {
   3.866000397664502*^9, 3.866000398839758*^9}, {3.8660004574432163`*^9, 
   3.8660004580794077`*^9}, {3.8666042520823517`*^9, 3.866604264374364*^9}, {
   3.866604302861124*^9, 3.866604304397232*^9}, {3.866604362727042*^9, 
   3.866604365684434*^9}, {3.866634397416646*^9, 3.86663441391949*^9}, {
   3.866634545413786*^9, 3.866634547171479*^9}, {3.8666346718798122`*^9, 
   3.866634702156291*^9}, {3.867671157222414*^9, 3.867671157363698*^9}, {
   3.868095338683979*^9, 3.868095349658772*^9}, {3.8692257543862534`*^9, 
   3.869225760070663*^9}, {3.869226350038672*^9, 3.8692263530848923`*^9}, {
   3.869226445388289*^9, 3.869226447765545*^9}, {3.869227314728384*^9, 
   3.869227438401598*^9}, {3.8692778466039267`*^9, 3.869277860306823*^9}, {
   3.869280781904627*^9, 3.869280784726466*^9}, {3.8692942712492027`*^9, 
   3.8692943131087103`*^9}, 3.869294699302785*^9, {3.8692967045596027`*^9, 
   3.869296708100168*^9}, {3.869299553854471*^9, 3.8692995957754602`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"a1d35da7-df69-4f5a-aded-2375da917235"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Take", "[", 
  RowBox[{"examples", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.869294701690948*^9, 3.8692947036918592`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"b5a69e04-bf85-4754-84c2-66a1ec08c68d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.`", ",", "1.`", ",", "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", 
      "0.`", ",", "0.`", ",", "1.`", ",", "0.`"}], "}"}], "\[Rule]", 
    "False"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "0.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
      "1.`", ",", "1.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", "True"}],
    ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "1.`", ",", 
      "1.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}], "\[Rule]", 
    "False"}]}], "}"}]], "Output",
 CellChangeTimes->{3.869294703931072*^9, 3.869296709793788*^9, 
  3.8692995993322277`*^9, 3.8693102752164717`*^9, 3.869551960884112*^9, 
  3.869554574261319*^9, 3.8695549832573833`*^9, 3.869561061731083*^9, 
  3.8695668988357286`*^9, 3.8695683489990053`*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"b999af51-515c-4f15-a7fc-c32eafcd8b4a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{11., {1., 10.}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{11., {1., 10.}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"examples", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.2", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"6656dcd5-3f96-4076-89bb-d35e7d524003"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create feature encoders", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 
  3.86843398679764*^9}},ExpressionUUID->"a83aa6fb-db66-4018-aace-\
2706a2be80da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Length", "[", 
    RowBox[{"First", "[", 
     RowBox[{"First", "[", "trainData", "]"}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.86678913871952*^9, 3.86678914729805*^9}, {
  3.8692943328044443`*^9, 3.869294348259564*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"58a7a509-6e27-4603-86a4-437a1775943b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"targetEncoder", "=", 
   RowBox[{"NetEncoder", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Class\>\"", ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}], ",", 
      "\"\<IndicatorVector\>\""}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.869277326407647*^9, 3.86927733940766*^9}, {
  3.8692807974788446`*^9, 3.869280799898975*^9}, {3.869284676787505*^9, 
  3.8692846810647993`*^9}, {3.86928477155538*^9, 3.869284775848857*^9}, {
  3.8692967298312063`*^9, 3.869296740112113*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2b9a254b-8e88-46ea-9c93-3e1f258901d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Create net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.86843932450987*^9}},ExpressionUUID->"b6f53683-da40-4a5d-9d7a-\
130f6c5ca4dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"16", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNOT", "[", 
         RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralMajority", "[", 
         RowBox[{"classificationLayerSize", ",", "inputSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.869299418713677*^9, {3.8692994812626457`*^9, 3.869299509217765*^9}, {
   3.8692996464312763`*^9, 3.869299648695244*^9}, {3.8693023829191008`*^9, 
   3.869302383206976*^9}, {3.869302606635058*^9, 3.869302607503434*^9}, {
   3.8695519944197283`*^9, 3.8695520116113234`*^9}, {3.8695520497476788`*^9, 
   3.86955205361952*^9}, {3.8695522074191504`*^9, 3.8695522084918833`*^9}, 
   3.869552337095097*^9, {3.869552371303269*^9, 3.869552373171102*^9}, 
   3.869552475387332*^9, {3.869552534414999*^9, 3.869552536002717*^9}, {
   3.869563004255267*^9, 3.8695630090855827`*^9}, {3.869563076916162*^9, 
   3.869563136725778*^9}, {3.869568010599187*^9, 3.86956801472672*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"0b6fe1aa-0068-42c6-a004-d876d189b254"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"classificationLayerSize", "=", 
       RowBox[{"16", "*", "numClasses"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralChain", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"HardNeuralNAND", "[", 
         RowBox[{"inputSize", ",", "classificationLayerSize"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"HardNeuralReshapeLayer", "[", 
         RowBox[{"classificationLayerSize", ",", "numClasses"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.869569245687269*^9, 3.869569254196104*^9}, 
   3.869627237783164*^9},
 CellLabel->
  "In[160]:=",ExpressionUUID->"d1ef7b56-3413-4a9e-b2bd-d56f8df851c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralMajority", "[", 
      RowBox[{"1", ",", "inputSize"}], "]"}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.86956627984511*^9, 3.8695662865086823`*^9}, {
  3.869566395549609*^9, 3.869566395740498*^9}, {3.8695669898449383`*^9, 
  3.869566989969635*^9}, {3.869567857577652*^9, 3.869567897070895*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"4d6b2e2b-d152-47d0-aa59-9f7edf61c195"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralNOT", "[", 
      RowBox[{"inputSize", ",", "5"}], "]"}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.869563144869587*^9, 3.86956314498997*^9}, {
  3.869564411899786*^9, 3.869564413998609*^9}, {3.869564497069552*^9, 
  3.8695644982296877`*^9}, {3.869564635554785*^9, 3.869564649205081*^9}, {
  3.869565314293108*^9, 3.869565315644567*^9}, {3.869565377533413*^9, 
  3.86956538103703*^9}, {3.869565695003598*^9, 3.86956569620516*^9}, {
  3.869627335072386*^9, 3.869627335631557*^9}, {3.869627813965476*^9, 
  3.8696278654154787`*^9}, {3.869628014762409*^9, 3.869628059108115*^9}, {
  3.869628197293066*^9, 
  3.869628197951858*^9}},ExpressionUUID->"0d4e47b0-8464-4926-818c-\
0d7d4ffc45d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"HardNeuralAND", "[", 
      RowBox[{"inputSize", ",", "5"}], "]"}], "\[IndentingNewLine]", "}"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.869628204080036*^9, 3.869628204483774*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"43e7aec3-bc8e-4d9f-8456-36c63d8898d1"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}, {
   3.868604559041458*^9, 3.868604559653843*^9}, {3.868937073460001*^9, 
   3.868937074141531*^9}, {3.869042727278556*^9, 3.869042728153739*^9}},
 CellLabel->
  "In[254]:=",ExpressionUUID->"a1c7e22c-cd5b-4bac-9b52-8543cdb194e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralChain", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"HardNeuralNOT", "[", 
       RowBox[{"inputSize", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"HardNeuralAND", "[", 
       RowBox[{"inputSize", ",", "5"}], "]"}]}], "\[IndentingNewLine]", "}"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8696282328796873`*^9, 3.869628233719715*^9}},
 CellLabel->
  "In[255]:=",ExpressionUUID->"50dafd05-81d3-47c6-b057-b503ec79b515"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.869570003840391*^9, 3.869570005006679*^9}},
 CellLabel->
  "In[256]:=",ExpressionUUID->"3edf5a6b-2ad1-4dad-9dab-571328b9e6eb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"array\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5, 10}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{5, 10}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{5, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5, 10}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"]}|>, 
                    "2" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {50}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{5, 10}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{50}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5, 10}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{5, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5, 10}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {5}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{5}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"array\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "3", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetGraph", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "5", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}]}]}], "]"}]& ), 
                    BaseStyle -> GrayLevel[0.5]]}, "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 5\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.869570005351843*^9, 3.8695703567885237`*^9, 3.8695709244708014`*^9, 
   3.869627417461577*^9, 3.869627788413251*^9, 3.869628062147098*^9, {
   3.86962821236342*^9, 3.869628238005649*^9}, 3.8696283315844183`*^9, 
   3.869628378149276*^9, 3.869628444439489*^9, 3.8696286485289097`*^9},
 CellLabel->
  "Out[256]=",ExpressionUUID->"dc50a9b1-9899-40e6-8e01-bbdc24c52b0b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"N", ".", "B", ".", " ", "0.5"}], " ", "causes", " ", "a", " ", 
    "hardening", " ", "problem"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"input", "=", 
    RowBox[{"{", 
     RowBox[{
     "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.51", ",", "0.6", ",", 
      "0.7", ",", "0.8", ",", "0.9", ",", " ", "1.0"}], "}"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.8695626951434927`*^9, 3.869562701469039*^9}, {
  3.869565565563881*^9, 3.869565575764864*^9}, {3.869568174864388*^9, 
  3.8695681749473658`*^9}, {3.869568487560749*^9, 3.869568496199288*^9}, {
  3.869569025577195*^9, 3.869569047158197*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"882c0a7b-3365-4211-8395-9ae08e6dab58"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", 
  RowBox[{"softNet", "[", 
   RowBox[{"{", "input", "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.869562653238688*^9, 3.869562706388445*^9}, {
  3.869562901285935*^9, 3.869562903004402*^9}, {3.869566507990491*^9, 
  3.869566509436795*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"5383f8bf-9e75-433e-bd6c-7fbe18173605"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8695626764803553`*^9, 3.869562706919236*^9, 3.869562903433219*^9, 
   3.869564443974052*^9, 3.869564500177593*^9, 3.8695646511818123`*^9, 
   3.8695653172797613`*^9, 3.869565384682824*^9, 3.86956557712136*^9, 
   3.8695656987380457`*^9, {3.869565875725026*^9, 3.869565900486446*^9}, 
   3.869566258348048*^9, 3.8695662903280497`*^9, 3.869566397845002*^9, {
   3.869566490967664*^9, 3.869566509936646*^9}, 3.869566752666017*^9, {
   3.8695668087348623`*^9, 3.869566826793043*^9}, 3.869566875676362*^9, 
   3.8695679072399178`*^9, 3.869568062022946*^9, {3.869568176452132*^9, 
   3.869568212929451*^9}, 3.869568373830989*^9, 3.8695684671758537`*^9, 
   3.869568497921206*^9, {3.869568976489731*^9, 3.869569048771565*^9}, 
   3.869569261572281*^9, 3.8695703546070232`*^9, 3.869570922829103*^9, 
   3.869570973662788*^9, 3.869571220726675*^9, 3.869571442291033*^9, 
   3.8696272437291613`*^9, 3.8696273400103407`*^9, 3.869627416558683*^9, 
   3.8696276323445253`*^9, 3.869627717755643*^9, 3.8696277875108967`*^9, {
   3.8696280316338987`*^9, 3.869628061340591*^9}, {3.869628207295225*^9, 
   3.869628236557781*^9}, 3.8696283307389097`*^9, 3.869628380292445*^9, 
   3.86962844617058*^9, 3.8696286502846823`*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"dff1666c-011f-4759-a542-a9fca819c008"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"ExtractWeights", "[", "softNet", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.869562709339863*^9, 3.8695628225402737`*^9}, {
   3.8695649705546703`*^9, 3.86956497488258*^9}, 3.8695654345937243`*^9, 
   3.869565704486629*^9, {3.86956844969346*^9, 3.8695684539519043`*^9}, {
   3.8695699374747753`*^9, 3.869569943327403*^9}, {3.869570016416572*^9, 
   3.869570035602868*^9}, {3.869570083226841*^9, 3.869570098606935*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"3027f0e8-46b8-401e-9141-ba3136b963d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", 
  RowBox[{"Boole", "[", 
   RowBox[{"hardNet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Harden", "[", "input", "]"}], ",", 
      RowBox[{"Harden", "[", "weights", "]"}]}], "}"}], "]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869562827829084*^9, 3.869562910036956*^9}, {
  3.869564921894912*^9, 3.869564929676914*^9}, {3.869565019614992*^9, 
  3.8695650390529213`*^9}, {3.869566536182705*^9, 3.869566548517174*^9}, {
  3.869567928711677*^9, 3.8695679705017242`*^9}, {3.869568078647868*^9, 
  3.869568080307917*^9}, {3.869568475488037*^9, 3.869568478077745*^9}, {
  3.8695689916965303`*^9, 3.869568993262467*^9}, {3.86957013066539*^9, 
  3.8695701740392933`*^9}, {3.869571295737862*^9, 3.869571314607389*^9}, {
  3.869627738742504*^9, 3.869627740487463*^9}, {3.869628092081785*^9, 
  3.869628104031847*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"8661e71e-dc7f-4de8-8316-f6d9cb134b82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  TagBox["\<\"reshapedWeights\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "False", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
      "False", ",", "False", ",", "False", ",", "False", ",", "False"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
      "False", ",", "False", ",", "False", ",", "False", ",", "False"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
      "False", ",", "False", ",", "False", ",", "False", ",", "False"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
      "False", ",", "False", ",", "False", ",", "False", ",", "False"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
      "False", ",", "False", ",", "False", ",", "False", ",", "False"}], 
     "}"}]}], "}"}]}]], "Echo",
 CellChangeTimes->{
  3.869628654001009*^9},ExpressionUUID->"cef4bb61-322a-4201-b6c7-\
f69feb74ae61"],

Cell[BoxData[
 RowBox[{
  TagBox["\<\"notWeights\"\>",
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "True", ",", "True", ",", "True", ",", "False", ",", "False", ",", 
      "True", ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
      ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
      ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
      ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
      ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
   "}"}]}]], "Echo",
 CellChangeTimes->{
  3.869628654035013*^9},ExpressionUUID->"9c35a353-f551-4244-a352-\
28d9536d82be"]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["Failure",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Assertion \
\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"Length\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"False\\\", \\\",\\\", \\\"True\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \
\\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"True\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"False\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"False\\\", \\\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"Length\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{\\\"True\\\", \\\",\\\", \\\"True\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\
\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
Function[Short[Slot[1], 5]]]\\) failed.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ConfirmationFailed\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            FrameBox[
             StyleBox["\"\[WarningSign]\"", 
              Directive["Message", 35], StripOnInput -> False], 
             ContentPadding -> False, FrameStyle -> None, 
             FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
            GridBox[{{
               TagBox[
                GridBox[{{
                   TagBox["\"Message: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                   "\"Assertion \
\\!\\(\\*TagBox[RowBox[{RowBox[{\\\"Length\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"False\\\", \\\",\\\", \\\"True\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \
\\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"True\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"False\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"False\\\", \\\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\
\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \
\\\"True\\\", \\\",\\\", \\\"False\\\"}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{\\\"False\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"False\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\"}], \\\"}\\\"}]}], \
\\\"}\\\"}], \\\"]\\\"}], \\\"\[Equal]\\\", RowBox[{\\\"Length\\\", \
\\\"[\\\", RowBox[{\\\"{\\\", RowBox[{\\\"True\\\", \\\",\\\", \\\"True\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"False\\\", \\\",\\\", \\\"False\\\", \
\\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\", \\\
\",\\\", \\\"True\\\", \\\",\\\", \\\"True\\\"}], \\\"}\\\"}], \\\"]\\\"}]}], \
Function[Short[Slot[1], 5]]]\\) failed.\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               TagBox[
                GridBox[{{
                   TagBox["\"Tag: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"ConfirmationFailed\"", "SummaryItem"]}}, 
                 GridBoxItemSize -> {"Columns" -> {6.5, All}}, 
                 GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0}}}], "SummaryItem"]}, {
               RowBox[{
                 TagBox[
                  
                  TemplateBox[{"\"ConfirmationType\"", "\": \""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["\"ConfirmAssert\"", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"HeldTest\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"Hold", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"False", ",", "False", ",", "True", ",", "True", 
                    ",", "False", ",", "True", ",", "True", ",", "False", ",",
                     "False", ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"False", ",", "True", ",", "True", ",", "False", 
                    ",", "True", ",", "False", ",", "True", ",", "False", ",",
                     "True", ",", "True"}], "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"True", ",", "False", ",", "False", ",", "False", 
                    ",", "False", ",", "True", ",", "True", ",", "False", ",",
                     "False", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"False", ",", "True", ",", "True", ",", "False", 
                    ",", "False", ",", "True", ",", "True", ",", "False", ",",
                     "True", ",", "False"}], "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"False", ",", "False", ",", "False", ",", "True", 
                    ",", "True", ",", "True", ",", "True", ",", "False", ",", 
                    "True", ",", "False"}], "}"}]}], "}"}], "]"}], "\[Equal]", 
                    RowBox[{"Length", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"True", ",", "True", ",", "True", ",", "False", 
                    ",", "False", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}], "]"}]}], "]"}], HoldForm], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Test\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["False", HoldForm], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                  TemplateBox[{"\"Information\"", "\": \""}, "RowDefault"], 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox[
                  TagBox["Null", HoldForm], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Failure[
  "ConfirmationFailed", <|
   "MessageTemplate" -> "Assertion `` failed.", "MessageParameters" -> {
      HoldForm[
      Length[{{False, False, True, True, False, True, True, False, False, 
           True}, {False, True, True, False, True, False, True, False, True, 
           True}, {True, False, False, False, False, True, True, False, False,
            False}, {
          False, True, True, False, False, True, True, False, True, False}, {
          False, False, False, True, True, True, True, False, True, False}}] == 
       Length[{True, True, True, False, False, True, True, True, True, 
          True}]]}, "ConfirmationType" -> "ConfirmAssert", "HeldTest" -> 
    Hold[Length[{{
         False, False, True, True, False, True, True, False, False, True}, {
         False, True, True, False, True, False, True, False, True, True}, {
         True, False, False, False, False, True, True, False, False, False}, {
         False, True, True, False, False, True, True, False, True, False}, {
         False, False, False, True, True, True, True, False, True, False}}] == 
      Length[{True, True, True, False, False, True, True, True, True, True}]],
     "Test" -> False, "Information" -> Null|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.869562831658525*^9, 3.869562878850068*^9}, 
   3.869562910366125*^9, 3.869564468036994*^9, 3.869564503450646*^9, 
   3.869564653358883*^9, {3.8695649239419947`*^9, 3.869564930040203*^9}, {
   3.869565022261648*^9, 3.869565039515634*^9}, 3.869565319455946*^9, 
   3.869565392190792*^9, 3.869565578804137*^9, 3.869565706052743*^9, {
   3.869565877393133*^9, 3.869565902825994*^9}, 3.869566259759976*^9, {
   3.8695665220496607`*^9, 3.86956654906046*^9}, 3.8695667558577137`*^9, {
   3.8695668146924353`*^9, 3.869566829082345*^9}, 3.869566877598217*^9, 
   3.869567910200733*^9, 3.869567971602276*^9, {3.869568066101931*^9, 
   3.869568081088861*^9}, 3.869568178456891*^9, {3.8695684555961447`*^9, 
   3.8695685001006804`*^9}, {3.8695689792765408`*^9, 3.869569050769661*^9}, {
   3.8695701015659027`*^9, 3.869570187079969*^9}, 3.869570359807618*^9, 
   3.869570927268817*^9, 3.8695709772715054`*^9, 3.86957122490068*^9, {
   3.869571298126525*^9, 3.869571315588252*^9}, 3.869571445937619*^9, 
   3.869571499745243*^9, 3.869627250534802*^9, 3.869627307771237*^9, {
   3.869627346559436*^9, 3.8696273538844557`*^9}, 3.869627420118238*^9, 
   3.8696276375844917`*^9, {3.869627721433605*^9, 3.8696277419160957`*^9}, 
   3.869627790244175*^9, {3.869628077877345*^9, 3.869628110786669*^9}, 
   3.869628170945786*^9, {3.869628218231092*^9, 3.869628240003636*^9}, 
   3.869628341663529*^9, 3.86962838208359*^9, {3.8696284479198112`*^9, 
   3.8696284568177633`*^9}, 3.869628654165392*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"78e7d5a9-601b-47c6-a329-e715cd5b58a0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainableSoftNet", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"\"\<NeuralLogicNet\>\"", "->", "softNet"}], ",", 
       RowBox[{"\"\<Loss\>\"", "->", 
        RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
      "\[RightAssociation]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<NeuralLogicNet\>\"", "->", "\"\<Loss\>\""}], "}"}], ",", 
     RowBox[{"\"\<Target\>\"", "->", "targetEncoder"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.866020485648757*^9, 3.866020486758964*^9}, {
   3.8660206133758917`*^9, 3.86602061576938*^9}, {3.866021594138579*^9, 
   3.866021622648958*^9}, {3.86602221641733*^9, 3.866022259472351*^9}, {
   3.86602506519114*^9, 3.8660250652828293`*^9}, {3.866027283063545*^9, 
   3.866027305459503*^9}, {3.866027571359556*^9, 3.866027577807056*^9}, {
   3.866028577017147*^9, 3.866028577337102*^9}, {3.866028739939226*^9, 
   3.866028740417481*^9}, {3.866038386270308*^9, 3.866038393509417*^9}, {
   3.866038426793558*^9, 3.866038432549663*^9}, {3.866038541734429*^9, 
   3.866038552581696*^9}, {3.8660399839336977`*^9, 3.8660400476873417`*^9}, {
   3.866040086377454*^9, 3.866040113183221*^9}, {3.8660842202209263`*^9, 
   3.8660842234441147`*^9}, {3.866084729086014*^9, 3.8660847389004602`*^9}, {
   3.866084883181377*^9, 3.866084891034108*^9}, {3.866087944385981*^9, 
   3.866087946377273*^9}, {3.8660898129249763`*^9, 3.866089819116226*^9}, {
   3.8660918927590847`*^9, 3.866091896174137*^9}, {3.866118640249077*^9, 
   3.8661186553525763`*^9}, {3.8661697941751633`*^9, 3.86616982143332*^9}, {
   3.8661700477905827`*^9, 3.866170062053422*^9}, {3.866170430900312*^9, 
   3.866170441150339*^9}, {3.866171085971992*^9, 3.866171092538931*^9}, {
   3.8661713117235622`*^9, 3.866171323794742*^9}, {3.866172075114151*^9, 
   3.866172086385466*^9}, {3.8661726453612757`*^9, 3.8661726565682907`*^9}, {
   3.866172963402001*^9, 3.866172967303824*^9}, {3.866175492855685*^9, 
   3.86617549327916*^9}, {3.8661755786344223`*^9, 3.866175597119087*^9}, {
   3.866176135095639*^9, 3.866176139335493*^9}, {3.866176563216754*^9, 
   3.866176567303925*^9}, {3.866177234452429*^9, 3.866177240033128*^9}, {
   3.866177471626033*^9, 3.866177471849081*^9}, {3.8661781260498943`*^9, 
   3.866178174045168*^9}, {3.866179499382938*^9, 3.866179520538422*^9}, {
   3.866180308892374*^9, 3.866180328231532*^9}, {3.866180620692492*^9, 
   3.866180620811393*^9}, {3.866180727174838*^9, 3.866180728856566*^9}, {
   3.8661809278929253`*^9, 3.866180930764296*^9}, {3.866181239813146*^9, 
   3.866181242692215*^9}, {3.866184773364808*^9, 3.866184773468157*^9}, {
   3.866184929896516*^9, 3.866184931032365*^9}, {3.866185363169696*^9, 
   3.866185363420731*^9}, {3.866185838820908*^9, 3.866185842136413*^9}, {
   3.8661861874248247`*^9, 3.866186188480125*^9}, {3.86618706378515*^9, 
   3.866187066984132*^9}, {3.866209107928833*^9, 3.866209126148491*^9}, {
   3.866209156593391*^9, 3.8662091576123867`*^9}, {3.866209702848567*^9, 
   3.866209710039878*^9}, {3.866209813177039*^9, 3.866209834123746*^9}, {
   3.86621053449234*^9, 3.866210540769287*^9}, {3.866210581043235*^9, 
   3.8662105868693542`*^9}, {3.866210622339385*^9, 3.866210627545692*^9}, {
   3.866210657739574*^9, 3.8662106609137363`*^9}, {3.866210756731784*^9, 
   3.866210768609764*^9}, {3.866211193549685*^9, 3.8662112016988564`*^9}, {
   3.866211352173271*^9, 3.866211355378903*^9}, {3.8662114673335752`*^9, 
   3.866211471635058*^9}, {3.8662116682945633`*^9, 3.86621167888715*^9}, 
   3.8662117763988447`*^9, {3.866211833182128*^9, 3.8662118352832003`*^9}, {
   3.86621193783076*^9, 3.866211943219183*^9}, {3.866214069618958*^9, 
   3.866214085207219*^9}, {3.86621414917101*^9, 3.866214201293022*^9}, {
   3.866214582928615*^9, 3.866214586096209*^9}, {3.8662146462687683`*^9, 
   3.8662146535499763`*^9}, {3.866214940556902*^9, 3.866214945432839*^9}, {
   3.86625367959163*^9, 3.86625368544868*^9}, {3.8662538129344873`*^9, 
   3.866253817785205*^9}, {3.866254549496963*^9, 3.866254555093663*^9}, {
   3.8662546252320347`*^9, 3.866254645248086*^9}, {3.866254759667647*^9, 
   3.8662547607426033`*^9}, {3.866254889744342*^9, 3.8662548909149446`*^9}, {
   3.866254921233653*^9, 3.866254922151456*^9}, {3.866255111823483*^9, 
   3.866255112738577*^9}, 3.8662574558616056`*^9, {3.866257625671372*^9, 
   3.8662576360908813`*^9}, {3.866257668990629*^9, 3.866257673154139*^9}, {
   3.866258160607082*^9, 3.866258163488317*^9}, {3.866258216054822*^9, 
   3.866258216152341*^9}, {3.866258465946023*^9, 3.8662584660890408`*^9}, {
   3.8662587584666643`*^9, 3.866258758714335*^9}, {3.8662591656591253`*^9, 
   3.866259171110828*^9}, {3.8662595439403343`*^9, 3.866259575288472*^9}, {
   3.866260163911601*^9, 3.866260184078418*^9}, {3.86626215222803*^9, 
   3.8662621832516203`*^9}, {3.866263109109415*^9, 3.86626311329671*^9}, {
   3.8662634113702927`*^9, 3.866263445027198*^9}, {3.8662637295611134`*^9, 
   3.8662637341766987`*^9}, {3.8662638454628477`*^9, 3.86626384912811*^9}, {
   3.866264629557499*^9, 3.866264632526574*^9}, {3.866264756302319*^9, 
   3.866264756571878*^9}, {3.86626485570925*^9, 3.8662648604861727`*^9}, {
   3.866264906589533*^9, 3.866264909654014*^9}, {3.8662650173821917`*^9, 
   3.866265024103039*^9}, {3.866267932128647*^9, 3.866267936947571*^9}, {
   3.866272289890004*^9, 3.866272326071719*^9}, 3.866272498086396*^9, {
   3.866272605318948*^9, 3.8662726100556726`*^9}, {3.866272697696899*^9, 
   3.8662727061238422`*^9}, {3.866272804197109*^9, 3.866272807076984*^9}, {
   3.866272890576043*^9, 3.8662729018249826`*^9}, {3.866273061136441*^9, 
   3.866273079881092*^9}, {3.8662739928242073`*^9, 3.866274026656089*^9}, {
   3.866274121640194*^9, 3.86627415310497*^9}, {3.8662742538084593`*^9, 
   3.866274260924819*^9}, {3.86627447707015*^9, 3.866274491178595*^9}, {
   3.866274954835182*^9, 3.866274972215249*^9}, {3.8662751949711027`*^9, 
   3.866275214973873*^9}, {3.866275317133552*^9, 3.866275326157571*^9}, {
   3.866276341927771*^9, 3.866276342361364*^9}, {3.866276444445874*^9, 
   3.866276444758065*^9}, 3.866276574032675*^9, {3.8662774805759163`*^9, 
   3.866277486441833*^9}, {3.866277730486899*^9, 3.866277745606361*^9}, {
   3.866277812901185*^9, 3.8662778241863747`*^9}, {3.866277923447342*^9, 
   3.866277942127078*^9}, {3.866278044847097*^9, 3.866278070211129*^9}, {
   3.866278491367318*^9, 3.866278493966505*^9}, {3.866278580024693*^9, 
   3.8662785830122213`*^9}, {3.866278895153315*^9, 3.866278898232675*^9}, {
   3.866280230366321*^9, 3.86628024016776*^9}, 3.866280351079256*^9, {
   3.866280499461529*^9, 3.8662805080447283`*^9}, {3.866280639515723*^9, 
   3.8662806449211483`*^9}, {3.866280754797947*^9, 3.86628075810079*^9}, {
   3.866280876373425*^9, 3.866280889329287*^9}, 3.866281009490582*^9, {
   3.8662811039106913`*^9, 3.866281107962268*^9}, {3.866281186723476*^9, 
   3.866281191533492*^9}, {3.8662812575988626`*^9, 3.866281268830084*^9}, {
   3.8662813166116953`*^9, 3.866281325765922*^9}, {3.866282044987713*^9, 
   3.866282048676916*^9}, {3.866282148870701*^9, 3.866282152685348*^9}, {
   3.86628313823394*^9, 3.8662831431981792`*^9}, {3.866283203895447*^9, 
   3.8662832148382063`*^9}, {3.8662832951824627`*^9, 
   3.8662833056304398`*^9}, {3.866283478244402*^9, 3.866283487341878*^9}, {
   3.8662841436542883`*^9, 3.86628415025281*^9}, {3.866284940968055*^9, 
   3.866284945101494*^9}, {3.866285029031362*^9, 3.866285034053158*^9}, {
   3.866285238231142*^9, 3.8662852400450497`*^9}, {3.8662854784494677`*^9, 
   3.866285480030343*^9}, {3.8662855684494333`*^9, 3.866285589220209*^9}, {
   3.866285661897065*^9, 3.866285665049341*^9}, {3.866286012525502*^9, 
   3.866286023701212*^9}, {3.866286183975936*^9, 3.866286197019022*^9}, {
   3.866286343624745*^9, 3.8662863761838703`*^9}, {3.86628647476213*^9, 
   3.866286478513227*^9}, {3.866286583730136*^9, 3.866286589629998*^9}, {
   3.8662866316154537`*^9, 3.866286632298744*^9}, {3.866286684611227*^9, 
   3.866286694033737*^9}, {3.866286815683847*^9, 3.866286826001635*^9}, {
   3.8662869515842*^9, 3.866286957090143*^9}, {3.866287432190014*^9, 
   3.866287433732437*^9}, {3.8662875714309177`*^9, 3.866287575508819*^9}, {
   3.866287972431319*^9, 3.866287979390542*^9}, {3.8662881211610413`*^9, 
   3.866288128734665*^9}, {3.866301184432645*^9, 3.866301189032214*^9}, {
   3.866301252666163*^9, 3.866301255952261*^9}, {3.866301376402754*^9, 
   3.866301391652487*^9}, {3.866301466042976*^9, 3.866301469288639*^9}, {
   3.866301630395039*^9, 3.866301653060717*^9}, {3.866301748836125*^9, 
   3.866301755312545*^9}, {3.86630188485115*^9, 3.866301888560711*^9}, {
   3.866302280747377*^9, 3.8663022952887983`*^9}, {3.866302405795878*^9, 
   3.866302419001148*^9}, {3.866302495340143*^9, 3.866302504605687*^9}, {
   3.866350591374894*^9, 3.8663505951022243`*^9}, {3.866351142159863*^9, 
   3.866351179558625*^9}, {3.8663515938249702`*^9, 3.866351597311022*^9}, {
   3.8663516429930353`*^9, 3.866351646919097*^9}, {3.8663540899964314`*^9, 
   3.866354091250739*^9}, 3.866354227060774*^9, {3.866354342347616*^9, 
   3.866354366019519*^9}, {3.866354536533381*^9, 3.866354542835105*^9}, {
   3.866354615988611*^9, 3.866354616498942*^9}, {3.866354747316181*^9, 
   3.866354747986311*^9}, {3.866354820971937*^9, 3.866354830674176*^9}, {
   3.866354985259542*^9, 3.866355003354249*^9}, {3.866355243555305*^9, 
   3.866355280233426*^9}, {3.866355363275181*^9, 3.8663553649290257`*^9}, {
   3.866355508482728*^9, 3.8663555086333237`*^9}, {3.866355904531114*^9, 
   3.8663559105053043`*^9}, {3.866355992402801*^9, 3.866356013229351*^9}, {
   3.866356256538742*^9, 3.866356257041319*^9}, {3.866356472449071*^9, 
   3.866356473280033*^9}, {3.8663565818412313`*^9, 3.866356588441074*^9}, {
   3.866356990748909*^9, 3.866356994266841*^9}, {3.8663571204214773`*^9, 
   3.866357120574224*^9}, {3.8663572027579412`*^9, 3.8663572078996153`*^9}, {
   3.866357620436617*^9, 3.866357634688436*^9}, {3.866357667446629*^9, 
   3.866357681140574*^9}, {3.8663583040873337`*^9, 3.866358308549032*^9}, {
   3.866358702488315*^9, 3.866358710660177*^9}, {3.866358792502235*^9, 
   3.866358792643732*^9}, {3.8663588650968037`*^9, 3.866358870370079*^9}, {
   3.8663590601050797`*^9, 3.866359061311141*^9}, {3.866359100825281*^9, 
   3.8663591032317047`*^9}, {3.866360392667655*^9, 3.866360402393593*^9}, {
   3.866360446451545*^9, 3.866360454122822*^9}, {3.866360518763679*^9, 
   3.866360523813664*^9}, {3.8663605658118258`*^9, 3.866360586933572*^9}, {
   3.866360874844895*^9, 3.866360875286996*^9}, {3.8663609358459*^9, 
   3.866360946523975*^9}, {3.8663629695673723`*^9, 3.8663629719826107`*^9}, {
   3.8663639844553833`*^9, 3.8663639851026163`*^9}, {3.866364664263899*^9, 
   3.866364667805708*^9}, {3.8663647416864157`*^9, 3.866364751498241*^9}, {
   3.8663648173209887`*^9, 3.8663648239090853`*^9}, {3.866364861552744*^9, 
   3.866364866359233*^9}, {3.866364911593669*^9, 3.866364912091476*^9}, {
   3.8663650443606586`*^9, 3.8663650452161922`*^9}, {3.866365512692107*^9, 
   3.866365515810193*^9}, 3.866365740980801*^9, {3.866366124781304*^9, 
   3.866366128103511*^9}, {3.86636615827591*^9, 3.866366161795991*^9}, 
   3.8663675572465467`*^9, {3.8663679823247623`*^9, 3.8663679840072737`*^9}, {
   3.8663685724947968`*^9, 3.866368575523563*^9}, {3.866368617885765*^9, 
   3.866368630439355*^9}, {3.8663688420628223`*^9, 3.866368846739706*^9}, {
   3.866368921365861*^9, 3.866368935403892*^9}, {3.866368992805874*^9, 
   3.8663689939334173`*^9}, {3.8663690430938*^9, 3.8663690474648046`*^9}, {
   3.866369083709838*^9, 3.8663691118719187`*^9}, {3.866369202398569*^9, 
   3.866369214195849*^9}, {3.866369334334588*^9, 3.866369336388123*^9}, {
   3.866369454951181*^9, 3.8663694569323397`*^9}, {3.866369515406219*^9, 
   3.866369518628167*^9}, {3.8663703695855513`*^9, 3.8663703750077*^9}, {
   3.8663705385538683`*^9, 3.866370541048525*^9}, {3.866370586394085*^9, 
   3.866370607876096*^9}, {3.8663707547717*^9, 3.866370757696903*^9}, {
   3.866370926163419*^9, 3.866370929489147*^9}, {3.866371042659484*^9, 
   3.8663710475373373`*^9}, {3.866371595734161*^9, 3.866371595814637*^9}, {
   3.866371630486404*^9, 3.866371630623527*^9}, {3.866371683122916*^9, 
   3.866371701147089*^9}, {3.866371789324903*^9, 3.866371822547234*^9}, {
   3.8663718525974607`*^9, 3.8663718606429367`*^9}, {3.866371974165319*^9, 
   3.866371979075355*^9}, {3.866372122293806*^9, 3.8663721296757917`*^9}, {
   3.866372551518608*^9, 3.866372561132722*^9}, {3.866372627211433*^9, 
   3.866372636080841*^9}, {3.8663728112322397`*^9, 3.866372812994047*^9}, {
   3.866372895895451*^9, 3.866372901477323*^9}, {3.8664377149946833`*^9, 
   3.8664377176580143`*^9}, {3.86643884019552*^9, 3.86643884333634*^9}, {
   3.866438919186672*^9, 3.866438921864346*^9}, {3.8664391767222757`*^9, 
   3.866439182016387*^9}, {3.866439413057221*^9, 3.8664394237656918`*^9}, {
   3.866440165425671*^9, 3.8664401663535337`*^9}, {3.8664414544278717`*^9, 
   3.866441455406114*^9}, {3.8664415241527863`*^9, 3.866441526297073*^9}, {
   3.866441636299324*^9, 3.866441637325185*^9}, {3.8664421743093033`*^9, 
   3.866442174534107*^9}, {3.866444116919817*^9, 3.866444119674713*^9}, {
   3.86644604617083*^9, 3.866446049128669*^9}, {3.866512861360115*^9, 
   3.866512866295472*^9}, {3.866512916479863*^9, 3.866512918447736*^9}, {
   3.866634565957718*^9, 3.866634566999825*^9}, {3.86680026940904*^9, 
   3.866800269792528*^9}, {3.8675831417592773`*^9, 3.867583145913877*^9}, {
   3.869221218808393*^9, 3.869221231059099*^9}, {3.869225972028479*^9, 
   3.8692260010575743`*^9}, {3.869226207781839*^9, 3.869226212280487*^9}, {
   3.8692262960682364`*^9, 3.869226330905139*^9}, {3.869226390653082*^9, 
   3.869226434585244*^9}, {3.869226464845196*^9, 3.869226465900545*^9}, {
   3.869277398980557*^9, 3.86927740136417*^9}},
 CellLabel->"In[81]:=",ExpressionUUID->"e3c08978-37d7-4772-8ade-495439d8bdfc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetFlatten", "[", "trainableSoftNet", "]"}]], "Input",
 CellChangeTimes->{{3.869221232121078*^9, 3.869221234978818*^9}, 
   3.869277421619462*^9, {3.869284608873015*^9, 3.8692846132481823`*^9}, {
   3.869552225068637*^9, 3.869552227697998*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"88447c34-9b93-40ce-9b93-a538133472b4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    PaneBox[
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-12.999999999999996`, 
                    3.4833366137853197`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/13\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/13", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-11.9999999732051, 
                    1.000000321538764}], 
                    
                    Offset[{0, -13.5}, {-11.9999999732051, 
                    1.000000321538764}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Target\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss/Error\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Soft..\"", "\"Loss/SoftmaxLayer\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/SoftmaxLayer", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Loss/Soft..\"", "\"Loss/SoftProbs\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Loss/SoftProbs", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox["\"NeuralLog..\"", "\"NeuralLogicNet/1\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/1", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-14.999999973205098`, 
                    1.0000004019234552`}], 
                    
                    Offset[{0, -13.5}, {-14.999999973205098`, 
                    1.0000004019234552`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/5\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/5", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-13.999999973205098`, 
                    1.000000375128558}], 
                    
                    Offset[{0, -13.5}, {-13.999999973205098`, 
                    1.000000375128558}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/10\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/10", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999999999996, 
                    2.679489702911784*^-7}], 
                    
                    Offset[{0, -13.5}, {-9.999999999999996, 
                    2.679489702911784*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/16\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/16", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.9999999732051, 1.000000241154073}], 
                    
                    Offset[{0, -13.5}, {-8.9999999732051, 
                    1.000000241154073}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/11\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/11", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-8.999999946410203, 
                    2.0000002411540727`}], 
                    
                    Offset[{0, -13.5}, {-8.999999946410203, 
                    2.0000002411540727`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/17\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/17", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.999999946410203, 
                    2.0000002143591757`}], 
                    
                    Offset[{0, -13.5}, {-7.999999946410203, 
                    2.0000002143591757`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/12\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/12", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999973205101, 
                    1.0000001607693818`}], 
                    
                    Offset[{0, -13.5}, {-5.999999973205101, 
                    1.0000001607693818`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/20\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/20", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-4.999999973205101, 
                    1.0000001339744848`}], 
                    
                    Offset[{0, -13.5}, {-4.999999973205101, 
                    1.0000001339744848`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/14\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/14", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.9999999732051, 
                    1.000000294743867}], 
                    
                    Offset[{0, -13.5}, {-10.9999999732051, 
                    1.000000294743867}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/15\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/15", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.9999999732051, 1.00000026794897}], 
                    
                    Offset[{0, -13.5}, {-9.9999999732051, 1.00000026794897}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/18\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/18", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.999999946410203, 
                    2.0000001875642783`}], 
                    
                    Offset[{0, -13.5}, {-6.999999946410203, 
                    2.0000001875642783`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/19\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/19", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-5.999999946410204, 
                    2.0000001607693814`}], 
                    
                    Offset[{0, -13.5}, {-5.999999946410204, 
                    2.0000001607693814`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/2\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/2", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    
                    Offset[{0, -13.5}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/6\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/6", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}], 
                    
                    Offset[{0, -13.5}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/21\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/21", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -13.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/3\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/3", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-10.999999946410203`, 
                    2.0000002947438666`}], 
                    
                    Offset[{0, -13.5}, {-10.999999946410203`, 
                    2.0000002947438666`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/7\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/7", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-9.999999946410203, 
                    2.0000002679489697`}], 
                    
                    Offset[{0, -13.5}, {-9.999999946410203, 
                    2.0000002679489697`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/4\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/4", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    Offset[{0, -13.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/8\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/8", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-6.9999999732051, 
                    1.0000001875642788`}], 
                    
                    Offset[{0, -13.5}, {-6.9999999732051, 
                    1.0000001875642788`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"NeuralLog..\"", "\"NeuralLogicNet/9\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "NeuralLogicNet/9", "Tooltip"]& ], 
                    TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-12.9999999732051, 
                    1.000000348333661}], 
                    
                    Offset[{0, -13.5}, {-12.9999999732051, 
                    1.000000348333661}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-12.449999985262803`, 
                    0.5500003335964679}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"320\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-14.449999973205099`, 
                    1.0000003871862617`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337044`}, {-9.449999985262803, 
                    0.5500002532117767}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334008,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-8.449999946410202, 
                    2.0000002264168795`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-5.4499999732051005`, 
                    1.0000001460321886`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-11.449999973205099`, 
                    1.0000003068015708`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-10.449999973205099`, 
                    1.0000002800066736`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999973205099, 
                    1.0000002532117764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{-3.8890871923183177`, 
                    3.889087400733702}, {-8.449999958467906, 
                    1.5500002264168795`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334004,
                     0.7071067622396942}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193576586086`*^-7, 
                    5.499999999999997}, {-7.449999946410204, 
                    2.000000199621982}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897411974703`*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.449999946410204, 
                    2.000000172827085}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{3.889087400733703, 
                    3.8890871923183177`}, {-5.449999961147398, 
                    1.4500001460321883`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396942, -0.7071068001334005}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.473719336601483*^-7, 
                    5.499999999999997}, {-11.449999999999996`, 
                    3.0680157098339927`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117876`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233703*^-7, 
                    5.499999999999999}, {-4.449999973205101, 
                    1.0000001192372916`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885513`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"16\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox[
                    FormBox["\"1024\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-10.449999946410202`, 
                    2.0000002800066734`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.4737193454461553`*^-7, 
                    5.499999999999997}, {-7.4499999732051005`, 
                    1.0000001996219825`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897189930098`*^-8}], 
                    InsetBox[
                    FormBox["\"320\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337052`*^-7, 
                    5.499999999999999}, {-13.449999973205099`, 
                    1.0000003603913648`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.679489696788555*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.4737193366014802`*^-7, 
                    5.499999999999997}, {-10.449999999999996`, 
                    2.8000667395428143`*^-7}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117823`*^-8}], 
                    InsetBox[
                    FormBox["\"1024\"", TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-9.449999946410202, 
                    2.0000002532117764`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}], 
                    InsetBox[
                    FormBox["\"32\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337036`*^-7, 
                    5.499999999999999}, {-6.4499999732051005`, 
                    1.0000001728270855`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794896967885523`*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"32\"", "\"10\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.473719333233702*^-7, 
                    5.499999999999997}, {-12.449999973205099`, 
                    1.0000003335964678`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794896967885493`*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-12.999999999999996`, 
                    3.4833366137853197`*^-7}, {-11.9999999732051, 
                    1.000000321538764}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-14.999999973205098`, 
                    1.0000004019234552`}, {-13.999999973205098`, 
                    1.000000375128558}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 320\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 320\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999999999996, 
                    2.679489702911784*^-7}, {-8.9999999732051, 
                    1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.999999946410203, 
                    2.0000002411540727`}, {-7.999999946410203, 
                    2.0000002143591757`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999973205101, 
                    1.0000001607693818`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.9999999732051, 
                    1.000000321538764}, {-10.9999999732051, 
                    1.000000294743867}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.9999999732051, 
                    1.000000294743867}, {-9.9999999732051, 
                    1.00000026794897}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.9999999732051, 
                    1.00000026794897}, {-8.9999999732051, 
                    1.000000241154073}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-8.9999999732051, 
                    1.000000241154073}, {-7.999999946410203, 
                    2.0000002143591757`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.999999946410203, 
                    2.0000002143591757`}, {-6.999999946410203, 
                    2.0000001875642783`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.999999946410203, 
                    2.0000001875642783`}, {-5.999999946410204, 
                    2.0000001607693814`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-5.999999946410204, 
                    2.0000001607693814`}, {-4.999999973205101, 
                    1.0000001339744848`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, ImagePadding -> 
                    {{7., 7.}, {10., 5.}}, ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-11.999999999999996`, 
                    3.2153876434941414`*^-7}, {-10.999999999999996`, 
                    2.9474386732029625`*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.999999973205101, 
                    1.0000001339744848`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999946410203`, 
                    2.0000002947438666`}, {-9.999999946410203, 
                    2.0000002679489697`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-7.9999999732051, 
                    1.000000214359176}, {-6.9999999732051, 
                    1.0000001875642788`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-13.999999973205098`, 
                    1.000000375128558}, {-12.9999999732051, 
                    1.000000348333661}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 320\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 320\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-10.999999999999996`, 
                    2.9474386732029625`*^-7}, {-9.999999999999996, 
                    2.679489702911784*^-7}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-9.999999946410203, 
                    2.0000002679489697`}, {-8.999999946410203, 
                    2.0000002411540727`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-6.9999999732051, 
                    1.0000001875642788`}, {-5.999999973205101, 
                    1.0000001607693818`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-12.9999999732051, 
                    1.000000348333661}, {-11.9999999732051, 
                    1.000000321538764}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-12.449999985262803`, 
                    0.5500003335964679}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Target\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Target", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-14.449999973205099`, 
                    1.0000003871862617`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 320\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 320\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999985262803, 
                    0.5500002532117767}, {-0.25, 0}, 
                    Offset[8], {1.000000026794897, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999946410202, 
                    2.0000002264168795`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.4499999732051005`, 
                    1.0000001460321886`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999973205099`, 
                    1.0000003068015708`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999973205099`, 
                    1.0000002800066736`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999973205099, 
                    1.0000002532117764`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-8.449999958467906, 
                    1.5500002264168795`}, {-0.25, 0}, 
                    Offset[8], {1.000000026794896, 0.9999999732051028}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.449999946410204, 
                    2.000000199621982}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897411974716`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.449999946410204, 
                    2.000000172827085}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-5.449999961147398, 
                    1.4500001460321883`}, {-0.25, 0}, 
                    Offset[8], {0.999999973205103, -1.0000000267948965`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-11.449999999999996`, 
                    3.0680157098339927`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489702911789*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-4.449999973205101, 
                    1.0000001192372916`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999996, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 1\[Times]32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[Times]16\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 2\[Times]16\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999946410202`, 
                    2.0000002800066734`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-7.4499999732051005`, 
                    1.0000001996219825`}, {-0.25, 0}, 
                    Offset[8], {1., -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-13.449999973205099`, 
                    1.0000003603913648`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999982, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 320\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 320\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-10.449999999999996`, 
                    2.8000667395428143`*^-7}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794897029117836`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-9.449999946410202, 
                    2.0000002532117764`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 1024\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 1024\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-6.4499999732051005`, 
                    1.0000001728270855`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999991, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 32\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 32\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-12.449999973205099`, 
                    1.0000003335964678`}, {-0.25, 0}, 
                    Offset[8], {1., -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: \
32\[Times]10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 32\[Times]10\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-12.999999999999996`, 3.4833366137853197`*^-7}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-11.9999999732051, 1.000000321538764}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-11.9999999732051, 
                    1.000000321538764}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/13\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/13", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Target\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Target", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7226666666666666, 0.6733333333333333, 
                    0.8926666666666666]], 
                    EdgeForm[
                    RGBColor[0.584, 0.51, 0.839]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"CE\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss/Error\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CrossEntropyLossLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/Error", Bold], 
                    Style[
                    CrossEntropyLossLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztWFtIk2EYdnO6zaFuc9N5SHSbp6lT2cmpqNOpOwiRUhkUoXkgCoVpSBdF
dROdLqqbLqKuuomC6EARFEGR0F1FEdVVFEQXRecDnZ5HNhiytWn/1oG98Prr
9/7/93zv+73f+72P5SNTA+PitLS0aRl+DAzPugKB4a2DSvyxcnJ648Tk2Kh3
cmZsYizQPJKOQQe0FCpJS0lKUpKS/1syMjJUpaWl4yaTaX9FRcU2rVbbl2hM
vV4/7fF4Xvv9/m/d3d1P8PzS39//w263nxeJROJEYNbU1OwjBrC+wt9Rjkkk
kmyLxXKS42VlZZuExszLy3NxbqvVetrtdj/Nzs42hWxSqbSANpvNdlZoXKfT
ec3n833Kzc21er3eD3g25eTkNFL5O3C/OxyOi0Jiwh8d58UeXtDpdCvoWyQ1
m81HhcRFjDs5L/Z3T3V19e6GhoZjGo3GvVCzsrL0QuLCxwHiVlVV7UK8r+bn
5/tCNuZVc3PzFaxpr5CYFKVSaSNua2vrTZ6hzMzMvJCtrq7uMG3FxcVrhcaF
iFpaWq5zfuKiTniKiopWMX85xvqRAMx5kclkJcA5F55HnZ2d9+HnmkRhhkt6
eroCZ7eO60gGXkr+TUHN1UEbk604Dzui1dtEKu7SIeiZZOuf3ueUJFcKCtgq
xc5Hg8EwIyQu7nQ/52UvhbvvRjTFPTgkJC7vm7a2tlvBvnSzkHPHEvQTWpfL
9Yi9eWFh4WAysdmj9fT0PGe81Wp1ezzfKBSKCvIJ9B8H+ESPa14KNvpiC/qa
t319fa9410d7D3sjR495nDyCvTX6+mfsexkvo9G4dSnY6KV6yYHIEeRy+bKF
drFYLGWeEZM5AZ+NHGe8Ojo67hF7KX4zz7DXDzlnSUnJuoX2ysrKnbTV1tYe
7O3tfRFuQ86vpg0xDywSVgTOdYrf1tfXH4m0JsT1XXt7+232sfQ7xF2o4G4b
gmd9djGg8GU7v+N84JgZC+0hfzDvFvobrcYsprcGR1jO3OC+ku9FWdf83Y1a
40VPP1deXj4Vib+Qp8eDSY6JPH6DM/SRXCHae+AKh4jLPh7xfk/OErKpVCon
+UuknIgkXFtXV9fjYB6t/9W7jC/fA/+8hNy9ExrnuWLNw7o/I68N8eCG7oVY
9bmpqekE44+z/TLIneYQ027+HwBruMuzRz4XD2Y4biwFR3nA91HLWokTZiP/
voz9sceL+TuCmq5hfcA+qZOBl5KU/E3yE7YM2js=
                    "], {{0, 29.333333333333332`}, {16., 0}}, {0, 255}, 
                    ColorFunction -> RGBColor, ImageResolution -> 135.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {16., 29.333333333333332`}, 
                    PlotRange -> {{0, 16.}, {0, 29.333333333333332`}}, 
                    ImageSize -> 16], 
                    TraditionalForm]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/SoftmaxLayer\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "SoftmaxLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/SoftmaxLayer", Bold], 
                    Style[
                    SoftmaxLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"\[Sum]\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Loss/SoftProbs\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Total", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss/SoftProbs", Bold], 
                    HoldForm[
                    AggregationLayer[Total]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-14.999999973205098`, 
                    1.0000004019234552`}], 
                    
                    Offset[{-10.5, -10.5}, {-14.999999973205098`, 
                    1.0000004019234552`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-14.999999973205098`, 
                    1.0000004019234552`}], 
                    
                    Offset[{10.5, 10.5}, {-14.999999973205098`, 
                    1.0000004019234552`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-14.999999973205098`, 
                    1.0000004019234552`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/1", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-13.999999973205098`, 1.000000375128558}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-13.999999973205098`, 
                    1.000000375128558}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/5", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-9.999999999999996, 2.679489702911784*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-9.999999999999996, 
                    2.679489702911784*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/10\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/10", Bold], 
                    Style[ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.9999999732051, 1.000000241154073}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-8.9999999732051, 
                    1.000000241154073}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/16\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/16", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-8.999999946410203, 2.0000002411540727`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-8.999999946410203, 
                    2.0000002411540727`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/11\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/11", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 12), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-7.999999946410203, 2.0000002143591757`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-7.999999946410203, 
                    2.0000002143591757`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/17\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/17", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 13), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-5.999999973205101, 1.0000001607693818`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-5.999999973205101, 
                    1.0000001607693818`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/12\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/12", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 14), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-4.999999973205101, 1.0000001339744848`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    GrayLevel[0.33], 14, Bold, Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`], FontFamily -> "Source Code Pro", 
                    StripOnInput -> False], 
                    TraditionalForm]], {-4.999999973205101, 
                    1.0000001339744848`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/20\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/20", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 15), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.9999999732051, 1.000000294743867}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-10.9999999732051, 
                    1.000000294743867}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/14\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/14", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 16), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.98, 0.98, 0.98]], 
                    EdgeForm[
                    GrayLevel[0.97]], 
                    DiskBox[{-9.9999999732051, 1.00000026794897}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"C\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-9.9999999732051, 1.00000026794897}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/15\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CompiledLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/15", Bold], 
                    Style[
                    CompiledLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 17), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.999999946410203, 2.0000001875642783`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Min\"", 
                    GrayLevel[0.33], Bold, 10, StripOnInput -> False], 
                    TraditionalForm]], {-6.999999946410203, 
                    2.0000001875642783`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/18\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/18", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 18), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.98, 0.98, 0.98]], 
                    EdgeForm[
                    GrayLevel[0.97]], 
                    DiskBox[{-5.999999946410204, 2.0000001607693814`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"C\"", 
                    GrayLevel[0.33], Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-5.999999946410204, 
                    2.0000001607693814`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/19\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CompiledLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/19", Bold], 
                    Style[
                    CompiledLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 19), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    
                    Offset[{-10.5, -10.5}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}], 
                    
                    Offset[{10.5, 10.5}, {-11.999999999999996`, 
                    3.2153876434941414`*^-7}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-11.999999999999996`, 
                    3.2153876434941414`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/2", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 20), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-10.999999999999996`, 2.9474386732029625`*^-7}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-10.999999999999996`, 
                    2.9474386732029625`*^-7}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/6\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/6", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 21), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-3.9999999732051017`, 
                    1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/21\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/21", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 22), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-10.999999946410203`, 
                    2.0000002947438666`}], 
                    
                    Offset[{-10.5, -10.5}, {-10.999999946410203`, 
                    2.0000002947438666`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-10.999999946410203`, 
                    2.0000002947438666`}], 
                    
                    Offset[{10.5, 10.5}, {-10.999999946410203`, 
                    2.0000002947438666`}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-10.999999946410203`, 
                    2.0000002947438666`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/3", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 23), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-9.999999946410203, 2.0000002679489697`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-9.999999946410203, 
                    2.0000002679489697`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/7\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/7", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 24), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    Offset[{-10.5, -10.5}, {-7.9999999732051, 
                    1.000000214359176}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-7.9999999732051, 1.000000214359176}], 
                    
                    
                    Offset[{10.5, 10.5}, {-7.9999999732051, 
                    1.000000214359176}]]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"A\"", Bold, 12, StripOnInput -> False], 
                    TraditionalForm]], {-7.9999999732051, 
                    1.000000214359176}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetArrayLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/4", Bold], 
                    Style[
                    NetArrayLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 25), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-6.9999999732051, 1.0000001875642788`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    GraphicsBox[
                    TagBox[
                    RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
                    "], {{0, 25.5}, {40., 0}}, {0, 255}, ColorFunction -> 
                    RGBColor, ImageResolution -> 144.], 
                    BoxForm`ImageTag[
                    "Byte", ColorSpace -> "RGB", Interleaving -> True, 
                    Magnification -> Automatic], Selectable -> False], 
                    DefaultBaseStyle -> "ImageGraphics", 
                    ImageSizeRaw -> {40., 25.5}, 
                    PlotRange -> {{0, 40.}, {0, 25.5}}, ImageSize -> 20], 
                    TraditionalForm]], {-6.9999999732051, 
                    1.0000001875642788`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/8\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ElementwiseLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/8", Bold], 
                    Style[
                    ElementwiseLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 26), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    DiskBox[{-12.9999999732051, 1.000000348333661}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    BoxData[
                    FormBox[
                    StyleBox["\"Reshape\"", 
                    GrayLevel[0.33], Bold, 6, StripOnInput -> False], 
                    TraditionalForm]], {-12.9999999732051, 
                    1.000000348333661}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"NeuralLogicNet/9\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["NeuralLogicNet/9", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 27), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[CompressedData["
1:eJxTTMoPSmViYGCQBmIQ/e8/CGge+JD/dElwwnS7lKuSQL76gUM//cMYGD7Y
/wXL/9+flCTlGHw0xy4mbO7H///f7z8fYsgOkoeIx9hB1L2311197gdI/fyV
SXwg+Wmh6X/+/2c/kP9vsiiInww2X/eA8Y/H2Qi+9oGkxZtSQHyIe5QP1NZu
4Aj5PRHqHsUDgb93O4DkT60y/gfir/gbqwB0vsNUsPnyBxyCj8qA+BB58QMP
/qhrI9QLHxBY8U0ZxIeYp3rg0xI5fwRf+YBiwFt3EB9invSB6yt0JEHmQdwv
DnU/gwPEfeoHTp28XPBv8lQ7CF/1wGLlQzYrj0+2g+jnh7oHZr/qgYqgfnWE
+5Sh7mFwOAnmyx9oXNZlCVIP4Usf2BAYaYRwn+aBSX6NsSA+ANud7uM=
                    "], NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 21, 8, 21, 21, 21, 21, 21, 21, 21, 21, 21,
                     21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {877.9999999999997, 152.5000014737193}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{27.999999999999957`, 25.}, {
                    27.49998821024531, 15.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], Scrollbars -> {True, False}, ImageSizeAction -> 
                    "Scrollable", ImageSize -> {800, Automatic}]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Target\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Target\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Target"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Target\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Target"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "NeuralLogicNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{320}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {320}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {32}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1024}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1024}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{32}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {32}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {320}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{32, 10}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{320}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{32, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1024}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/15" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {32}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/17" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1, 32}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/18" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/19" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {32}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/20" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{32}, 
                    NeuralNetworks`RealT], "Weights" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/21" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 16}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1, 32}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2, 16}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2, 16}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/Error" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 2, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 2]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], 
                    "Target" -> <|"Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {True, False}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 2, "$Version" -> "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Error", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/13"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Error"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftmaxLayer"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftProbs"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/5"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/10"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/16"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/11"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/17"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/12"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/20"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/14"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/15"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/18"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/19"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/6"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/21"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/7"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/4"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/8"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/9"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/13"], 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/Error"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftmaxLayer"], 
                    NeuralNetworks`NetPath["Nodes", "Loss/SoftProbs"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/1"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/5"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/10"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/16"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/11"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/17"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/12"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/20"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/14"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/15"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/18"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/19"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/2"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/6"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/21"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/3"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/7"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/4"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/8"], 
                    NeuralNetworks`NetPath["Nodes", "NeuralLogicNet/9"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8692846140728807`*^9, 3.869284685781642*^9, 3.8692934271654387`*^9, 
   3.869310298316814*^9, {3.8695522199738617`*^9, 3.869552228548277*^9}, 
   3.869552543654649*^9, 3.8695526214970293`*^9, 3.869552678464608*^9, 
   3.869552712040965*^9, 3.869554614318481*^9, 3.8695549895842113`*^9, 
   3.869555139045484*^9, 3.869561134345007*^9, 3.8695690591689796`*^9, 
   3.869569281503888*^9},
 CellLabel->"Out[82]=",ExpressionUUID->"91b25cfd-dfe5-4fe7-8786-80a99cf00ce7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 
  3.868439333949903*^9}},ExpressionUUID->"790cc1ff-a1fd-4751-9fa0-\
78e337587528"],

Cell[BoxData[
 RowBox[{
  RowBox[{"result", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{
    "trainableSoftNet", ",", "trainData", ",", "All", ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Method", "->", 
      RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "20000"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.861526691136385*^9, 3.8615266963148317`*^9}, {
   3.861526892029048*^9, 3.861526926283662*^9}, {3.861527458190147*^9, 
   3.8615274604371557`*^9}, {3.861596326598248*^9, 3.8615963274217*^9}, {
   3.8615967956741247`*^9, 3.8615967961606627`*^9}, {3.861598174371325*^9, 
   3.8615981746979227`*^9}, {3.861598220275262*^9, 3.861598225258154*^9}, 
   3.8615983260431423`*^9, 3.861598358699059*^9, 3.86159844430643*^9, {
   3.861599169123077*^9, 3.861599174704619*^9}, 3.8615992423695927`*^9, {
   3.861600520411129*^9, 3.861600562629966*^9}, {3.8616081896592207`*^9, 
   3.8616082644326277`*^9}, {3.8616083130496693`*^9, 3.861608481636849*^9}, {
   3.861608535186941*^9, 3.861608535398024*^9}, {3.8616086046096888`*^9, 
   3.861608609360312*^9}, {3.861608739970097*^9, 3.861608740192383*^9}, 
   3.8616099667122927`*^9, {3.861614281981885*^9, 3.861614287106696*^9}, {
   3.861614365090412*^9, 3.8616143673881083`*^9}, {3.8616144695057087`*^9, 
   3.861614469732106*^9}, {3.86161505490434*^9, 3.86161505538334*^9}, {
   3.861615116680296*^9, 3.8616151171363297`*^9}, {3.8616198840202208`*^9, 
   3.861619896475774*^9}, {3.861619933949086*^9, 3.861619934436226*^9}, {
   3.8616205688654413`*^9, 3.86162056898837*^9}, {3.861621088443665*^9, 
   3.861621098667687*^9}, {3.861621218259624*^9, 3.861621225825265*^9}, 
   3.861624043980535*^9, {3.861624307531184*^9, 3.8616243076298437`*^9}, {
   3.861624687459483*^9, 3.86162468788214*^9}, {3.8616317684296827`*^9, 
   3.861631771261539*^9}, {3.861631816290057*^9, 3.8616318651050177`*^9}, {
   3.861631958566456*^9, 3.8616320059017973`*^9}, {3.861638826475503*^9, 
   3.861638863051971*^9}, {3.861638929739991*^9, 3.861638933259767*^9}, {
   3.86163909929949*^9, 3.8616391274931498`*^9}, {3.8616392874074907`*^9, 
   3.861639287788124*^9}, {3.861639342925112*^9, 3.8616393990436583`*^9}, 
   3.861639449163229*^9, {3.861639487797435*^9, 3.861639488276143*^9}, {
   3.861639520343843*^9, 3.861639615020278*^9}, 3.861639650557322*^9, {
   3.861639686197283*^9, 3.861639686348756*^9}, {3.861639721733241*^9, 
   3.861639751631373*^9}, 3.861639812613257*^9, 3.861639861214222*^9, 
   3.8616774469586077`*^9, 3.861677554774518*^9, {3.8616778506545143`*^9, 
   3.8616778521812696`*^9}, {3.861677928513179*^9, 3.861677931501341*^9}, {
   3.861678046006336*^9, 3.861678055688725*^9}, {3.8616783565669107`*^9, 
   3.861678357598217*^9}, 3.86167840465492*^9, {3.861678454463538*^9, 
   3.861678527994815*^9}, 3.8616785698992653`*^9, {3.86167862517889*^9, 
   3.861678625463068*^9}, {3.861678715451593*^9, 3.861678733335671*^9}, {
   3.861679256809675*^9, 3.861679276951795*^9}, {3.861679388201187*^9, 
   3.861679388456155*^9}, {3.8616794844013147`*^9, 3.861679484503944*^9}, 
   3.861679546193308*^9, {3.861679619851099*^9, 3.861679638016491*^9}, {
   3.861681013467979*^9, 3.86168101459874*^9}, 3.861681415909296*^9, 
   3.861681864196413*^9, {3.861682110373234*^9, 3.861682112492031*^9}, {
   3.8616863025138683`*^9, 3.861686304841498*^9}, 3.861687285337879*^9, {
   3.861689174383565*^9, 3.861689176310357*^9}, {3.861689209167395*^9, 
   3.861689214174241*^9}, 3.861689288336671*^9, {3.861689432798358*^9, 
   3.861689436373431*^9}, {3.8616895457298203`*^9, 3.861689547927351*^9}, 
   3.861690874285904*^9, {3.8616913171934137`*^9, 3.8616913362674923`*^9}, {
   3.861694913869595*^9, 3.861694931633668*^9}, {3.861761976810191*^9, 
   3.861761976961794*^9}, 3.861762475508395*^9, 3.861764987789689*^9, 
   3.861768316847867*^9, {3.8617857164782677`*^9, 3.861785780365232*^9}, {
   3.861785914277614*^9, 3.861785932239442*^9}, {3.861786088006579*^9, 
   3.861786091462006*^9}, {3.861786160342374*^9, 3.861786241983512*^9}, {
   3.861786364954378*^9, 3.861786365077137*^9}, {3.863151017817006*^9, 
   3.863151052231936*^9}, {3.863152267054907*^9, 3.8631522705590677`*^9}, {
   3.8631524024308443`*^9, 3.863152416905096*^9}, {3.863155751116795*^9, 
   3.863155797511241*^9}, {3.863159013274281*^9, 3.8631590500184107`*^9}, {
   3.863162764531417*^9, 3.8631628032353477`*^9}, {3.8631630660294247`*^9, 
   3.863163069595264*^9}, 3.863163206259715*^9, {3.863179475518319*^9, 
   3.86317957456575*^9}, {3.863179608120089*^9, 3.863179608444792*^9}, {
   3.86318927526542*^9, 3.863189277768508*^9}, {3.863234988848897*^9, 
   3.863235011991157*^9}, {3.8632401771258497`*^9, 3.863240219429329*^9}, {
   3.863240252735134*^9, 3.8632402947899647`*^9}, {3.863244122334219*^9, 
   3.863244136601095*^9}, {3.8632487772288446`*^9, 3.86324879750486*^9}, 
   3.86324887355694*^9, {3.863267289564172*^9, 3.8632672965366917`*^9}, {
   3.863267350136612*^9, 3.863267353600457*^9}, 3.863267621669776*^9, {
   3.863267668405401*^9, 3.863267703033616*^9}, {3.863267742193708*^9, 
   3.863267743881342*^9}, 3.863267824797658*^9, {3.8632679622613688`*^9, 
   3.863267962414866*^9}, 3.864825849288335*^9, {3.864872337081386*^9, 
   3.8648723399380198`*^9}, {3.8648723753220787`*^9, 
   3.8648723831139507`*^9}, {3.865054457509366*^9, 3.8650544578686247`*^9}, {
   3.86505477772941*^9, 3.865054778082748*^9}, {3.865068653838964*^9, 
   3.865068654609194*^9}, {3.865080627414422*^9, 3.8650806283184032`*^9}, {
   3.865083708681526*^9, 3.865083708825326*^9}, {3.865083821079447*^9, 
   3.865083834942741*^9}, {3.865083963691033*^9, 3.865083963798675*^9}, {
   3.865084052031911*^9, 3.86508405604659*^9}, {3.865084712458816*^9, 
   3.865084714779253*^9}, {3.8650850318199787`*^9, 3.865085042375606*^9}, {
   3.865085347092472*^9, 3.8650853492436037`*^9}, {3.865087177268942*^9, 
   3.8650871774987164`*^9}, {3.8650875295432863`*^9, 3.86508753004692*^9}, {
   3.8650910391528397`*^9, 3.865091039680594*^9}, {3.865092465235463*^9, 
   3.86509246561416*^9}, {3.865093077156846*^9, 3.8650930777408447`*^9}, {
   3.865093563590226*^9, 3.8650935665811462`*^9}, {3.865093604509932*^9, 
   3.865093606613147*^9}, {3.865094711282296*^9, 3.8650947154901857`*^9}, {
   3.865095636817848*^9, 3.8650956465365458`*^9}, {3.865096640966447*^9, 
   3.865096641349704*^9}, {3.865096841405044*^9, 3.865096845450448*^9}, {
   3.865096978238997*^9, 3.8650969783420362`*^9}, {3.8650978859209423`*^9, 
   3.8650978879502153`*^9}, {3.8651521462428493`*^9, 3.865152151624899*^9}, {
   3.8654237453279037`*^9, 3.865423761191227*^9}, {3.865425094569989*^9, 
   3.8654250949273663`*^9}, 3.865426407631672*^9, {3.865427268299314*^9, 
   3.8654272687216043`*^9}, {3.865427312071782*^9, 3.865427338236537*^9}, {
   3.865480943115551*^9, 3.8654809615709352`*^9}, {3.865481127404986*^9, 
   3.865481127963303*^9}, 3.865481611043377*^9, {3.865481767251525*^9, 
   3.86548177979108*^9}, 3.865482045247164*^9, 3.865501190993976*^9, {
   3.865501226812446*^9, 3.865501227285406*^9}, {3.86550125951196*^9, 
   3.865501261192251*^9}, 3.8655018022002287`*^9, {3.8655027038867693`*^9, 
   3.865502705656213*^9}, {3.865502868555921*^9, 3.865502868657743*^9}, {
   3.865504196722334*^9, 3.865504242725172*^9}, {3.865504328367261*^9, 
   3.8655043284768267`*^9}, {3.86550676499557*^9, 3.865506785593732*^9}, {
   3.865507111985943*^9, 3.865507113081835*^9}, {3.865508282529696*^9, 
   3.865508288970006*^9}, {3.865508459308895*^9, 3.8655084672501917`*^9}, {
   3.865508616831658*^9, 3.865508617456334*^9}, {3.865508753514429*^9, 
   3.865508754689973*^9}, 3.8655090265308237`*^9, {3.8655093577005377`*^9, 
   3.865509361259615*^9}, {3.865509406175308*^9, 3.865509406480921*^9}, {
   3.865509566540971*^9, 3.865509566797229*^9}, {3.865509801781477*^9, 
   3.865509806869198*^9}, {3.865510364828817*^9, 3.865510364984823*^9}, {
   3.865511892763131*^9, 3.865511899248225*^9}, 3.865512183735215*^9, {
   3.865576817028904*^9, 3.865576827768445*^9}, {3.865576940005062*^9, 
   3.865576944416757*^9}, 3.865577256166149*^9, {3.865581257661825*^9, 
   3.865581260646195*^9}, {3.865581380175387*^9, 3.865581389569625*^9}, 
   3.8655814425356083`*^9, {3.865581702235195*^9, 3.865581703944759*^9}, {
   3.865581754832677*^9, 3.865581760065102*^9}, 3.865581805068038*^9, 
   3.865581849095172*^9, 3.86558189879091*^9, {3.8655819661420727`*^9, 
   3.8655819675929527`*^9}, 3.865582095860794*^9, {3.865583743222515*^9, 
   3.865583772696185*^9}, 3.865583831452342*^9, {3.865584080798609*^9, 
   3.8655840820932693`*^9}, {3.865584186450605*^9, 3.865584222885951*^9}, {
   3.8655842856232557`*^9, 3.865584303781209*^9}, {3.865584337940879*^9, 
   3.865584338117053*^9}, {3.8655855488998632`*^9, 3.8655855568312683`*^9}, {
   3.865585680889308*^9, 3.865585681005665*^9}, {3.8655862452812977`*^9, 
   3.865586247610465*^9}, {3.865586360932333*^9, 3.865586361032501*^9}, {
   3.865586798800089*^9, 3.865586823072701*^9}, {3.865587092591731*^9, 
   3.8655871007506332`*^9}, {3.865587141673348*^9, 3.865587157874174*^9}, {
   3.865588726668622*^9, 3.865588729424287*^9}, 3.865588761896544*^9, 
   3.865588841508543*^9, {3.8655891085364428`*^9, 3.8655891086489573`*^9}, {
   3.865589984183222*^9, 3.8655899844488497`*^9}, {3.865603709429957*^9, 
   3.86560371174704*^9}, {3.865605271864118*^9, 3.8656052731299133`*^9}, 
   3.865605330719324*^9, {3.865605443927062*^9, 3.8656054440635033`*^9}, {
   3.865605614265745*^9, 3.865605618539999*^9}, {3.865605816150147*^9, 
   3.865605816332803*^9}, {3.865606265557193*^9, 3.865606272049069*^9}, {
   3.865606327091432*^9, 3.8656063273223667`*^9}, {3.865611040542164*^9, 
   3.8656110408409224`*^9}, {3.86561116212323*^9, 3.865611166641942*^9}, {
   3.8656549028483057`*^9, 3.865654906333233*^9}, 3.865680761391651*^9, 
   3.8656811483450813`*^9, 3.8656829062398977`*^9, 3.865683115764473*^9, 
   3.86578561075629*^9, {3.865785661867104*^9, 3.865785668865432*^9}, {
   3.865785726995323*^9, 3.8657857292651587`*^9}, 3.865838257738958*^9, {
   3.865838364183861*^9, 3.86583836573066*^9}, {3.865838530611968*^9, 
   3.86583854995222*^9}, {3.8658396342012157`*^9, 3.865839638792821*^9}, {
   3.8658397023405647`*^9, 3.865839718293825*^9}, 3.865864968666602*^9, 
   3.865866763740403*^9, {3.865868027575666*^9, 3.8658680277180977`*^9}, {
   3.8658681686608667`*^9, 3.865868171064867*^9}, {3.86586843683401*^9, 
   3.865868436993589*^9}, {3.865912066537798*^9, 3.86591207452584*^9}, {
   3.865912437888954*^9, 3.865912443081304*^9}, {3.865935613934861*^9, 
   3.865935620516629*^9}, 3.865935723596953*^9, {3.865936198781383*^9, 
   3.865936198919567*^9}, {3.865937462692774*^9, 3.865937465098215*^9}, 
   3.865937675009396*^9, {3.865938076169652*^9, 3.8659380788303537`*^9}, {
   3.865938264161339*^9, 3.8659382856316338`*^9}, {3.865938346816244*^9, 
   3.865938346995491*^9}, {3.8659402354700937`*^9, 3.8659402355749483`*^9}, {
   3.8659417869015293`*^9, 3.8659417907552633`*^9}, {3.865941822901186*^9, 
   3.86594184197126*^9}, 3.865943618614884*^9, 3.865944576270194*^9, {
   3.865944785446289*^9, 3.8659447855898933`*^9}, {3.866003246716501*^9, 
   3.866003249338025*^9}, {3.866003345918395*^9, 3.866003346802381*^9}, {
   3.866004153500367*^9, 3.866004153612595*^9}, {3.866006456771926*^9, 
   3.866006459991156*^9}, 3.8660064967175922`*^9, {3.866006667277667*^9, 
   3.8660066694796553`*^9}, {3.866006907306169*^9, 3.866006907735796*^9}, 
   3.8660070948661203`*^9, 3.866007922187111*^9, 3.866008126424575*^9, 
   3.866022478356038*^9, {3.8660227773998528`*^9, 3.866022785633342*^9}, 
   3.866028086831442*^9, 3.866028189948174*^9, {3.866169904740741*^9, 
   3.866169909566701*^9}, {3.86617007030836*^9, 3.866170070761507*^9}, {
   3.8661701842474957`*^9, 3.866170188549567*^9}, {3.866170225131812*^9, 
   3.866170225241187*^9}, {3.866171364152894*^9, 3.866171377370982*^9}, {
   3.866171422283556*^9, 3.866171423291066*^9}, {3.866171465017973*^9, 
   3.8661714663629837`*^9}, {3.86617152859019*^9, 3.866171536859111*^9}, {
   3.866171592410349*^9, 3.86617162393864*^9}, 3.866172071808412*^9, {
   3.866172664340991*^9, 3.866172665516221*^9}, {3.8661756288733797`*^9, 
   3.8661756318478518`*^9}, {3.8661757469204397`*^9, 3.86617578836042*^9}, {
   3.866176182548183*^9, 3.866176183139518*^9}, {3.866177251342409*^9, 
   3.866177251909031*^9}, {3.866178181556961*^9, 3.866178183130048*^9}, {
   3.8661847410258703`*^9, 3.866184743289184*^9}, {3.866184820283268*^9, 
   3.8661848203806543`*^9}, {3.866185850555801*^9, 3.866185850716692*^9}, {
   3.866209361509819*^9, 3.866209367713132*^9}, {3.866210145850836*^9, 
   3.8662101579444437`*^9}, {3.866211403272949*^9, 3.866211406923521*^9}, 
   3.866211495134623*^9, {3.866211537983692*^9, 3.866211572497748*^9}, {
   3.866214748241581*^9, 3.866214760229577*^9}, {3.866214809876875*^9, 
   3.8662148485175447`*^9}, {3.866214898846077*^9, 3.866214911205903*^9}, {
   3.866259873211958*^9, 3.866259875000155*^9}, {3.866259906986361*^9, 
   3.8662599259831533`*^9}, {3.8662600952629633`*^9, 3.86626009599518*^9}, {
   3.8662604682691298`*^9, 3.866260485284494*^9}, {3.866260718542985*^9, 
   3.8662607188938417`*^9}, {3.866262230733412*^9, 3.866262232700974*^9}, {
   3.866262747191399*^9, 3.866262755095587*^9}, {3.866263687522623*^9, 
   3.866263691522341*^9}, {3.866272907421722*^9, 3.866272908705574*^9}, {
   3.866274679974001*^9, 3.866274683777981*^9}, {3.866275126894273*^9, 
   3.866275130882132*^9}, {3.866275621030303*^9, 3.86627562449095*^9}, {
   3.866275800963348*^9, 3.866275804851942*^9}, {3.866278286918571*^9, 
   3.866278290408846*^9}, {3.866279939718389*^9, 3.8662799438283052`*^9}, {
   3.8662825835076027`*^9, 3.866282587086446*^9}, {3.8662848978232517`*^9, 
   3.8662849013340178`*^9}, {3.866301199025255*^9, 3.866301208705173*^9}, {
   3.866302091405136*^9, 3.866302093072084*^9}, {3.8663022330606956`*^9, 
   3.8663022743807373`*^9}, {3.866303190918262*^9, 3.8663031961042967`*^9}, {
   3.8663508996403513`*^9, 3.866350903983953*^9}, {3.8663558607588453`*^9, 
   3.866355860917651*^9}, {3.86637013313169*^9, 3.866370138430928*^9}, {
   3.866370237003203*^9, 3.866370239455555*^9}, {3.8663703291644793`*^9, 
   3.866370333111907*^9}, {3.866370363265703*^9, 3.866370363711856*^9}, {
   3.8663720431119947`*^9, 3.866372048852154*^9}, {3.866372163198892*^9, 
   3.8663721862104397`*^9}, 3.8663723957836103`*^9, {3.866372460806899*^9, 
   3.866372466981298*^9}, {3.8663728465397882`*^9, 3.866372846690668*^9}, {
   3.866439863015705*^9, 3.866439889076521*^9}, {3.866444399919945*^9, 
   3.866444403398275*^9}, 3.866445596437694*^9, 3.866445994629862*^9, {
   3.866446077093233*^9, 3.8664460772227592`*^9}, {3.866514058957122*^9, 
   3.866514061965129*^9}, {3.866514093672724*^9, 3.8665140946276417`*^9}, 
   3.866514530731886*^9, {3.866514784096607*^9, 3.866514784235477*^9}, {
   3.8665148543229303`*^9, 3.86651485485518*^9}, {3.866517197949828*^9, 
   3.866517203967832*^9}, 3.866517357579501*^9, 3.8665174374755917`*^9, 
   3.8665175119230967`*^9, {3.866517590284361*^9, 3.866517620168564*^9}, 
   3.8665176619240017`*^9, {3.8665179325026484`*^9, 3.8665179399815683`*^9}, {
   3.866518111910069*^9, 3.866518112233807*^9}, {3.866518521945266*^9, 
   3.866518522115803*^9}, {3.866518571201038*^9, 3.866518588328702*^9}, {
   3.866518646862028*^9, 3.866518650143523*^9}, 3.866518704027602*^9, {
   3.866519202548511*^9, 3.8665192068871107`*^9}, {3.866552934111923*^9, 
   3.866552991359269*^9}, {3.866553502473754*^9, 3.8665535030716467`*^9}, {
   3.866554417382031*^9, 3.866554420050095*^9}, {3.866554652086327*^9, 
   3.8665546522545357`*^9}, 3.866604776742971*^9, {3.86680027773044*^9, 
   3.866800278113852*^9}, {3.868094967186932*^9, 3.868094986665822*^9}, {
   3.868095019045618*^9, 3.868095019220586*^9}, {3.868361304394638*^9, 
   3.868361304829949*^9}, {3.868361488191626*^9, 3.868361491259301*^9}, 
   3.868361525155517*^9, {3.8692213052091*^9, 3.8692213346561832`*^9}, {
   3.8692810440868177`*^9, 3.8692810484261227`*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"f71442fd-e126-41fb-b56d-1c2abd8c9f07"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate soft net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 
  3.868447037389845*^9}},ExpressionUUID->"306b98cf-6a16-4b58-bf92-\
e841969834f5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedSoftNet", ",", "trainedHardNet"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"<|", 
        RowBox[{"\"\<TrainedNet\>\"", "->", 
         RowBox[{"NetDelete", "[", 
          RowBox[{
           RowBox[{"NetFlatten", "[", "#", "]"}], ",", "\"\<Loss/Error\>\""}],
           "]"}]}], "|>"}], ",", 
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", "targetEncoder", "]"}]}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
      RowBox[{"HardenNet", "[", 
       RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], 
       "\[IndentingNewLine]", "]"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.866262883598037*^9, 3.866262913813736*^9}, {
   3.866800388275832*^9, 3.866800388780817*^9}, {3.8683615002909307`*^9, 
   3.868361522978859*^9}, {3.869221408816246*^9, 3.8692214711637383`*^9}, 
   3.869221553810891*^9, {3.869221654008464*^9, 3.869221732536498*^9}, {
   3.8692218215629063`*^9, 3.869221866933878*^9}, {3.86922191254809*^9, 
   3.869221913409645*^9}, {3.869221946220015*^9, 3.869221992865573*^9}, {
   3.8692220239803658`*^9, 3.869222074362282*^9}, {3.869222542284799*^9, 
   3.869222618659419*^9}, {3.869225398347341*^9, 3.8692254268744698`*^9}, {
   3.869225457230851*^9, 3.869225468811384*^9}, {3.869227062000464*^9, 
   3.8692270744112864`*^9}, {3.869277551850852*^9, 3.869277552935012*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"9dfbfa0c-b8e2-42c4-ae5a-99e0b63edb66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"#", ",", "testData"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"trainedSoftNet", ",", "trainedHardNet"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.8692215859194508`*^9, {3.869277581499093*^9, 3.8692775834166107`*^9}, 
   3.869294465445704*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"52bba437-b4a0-4114-ac5a-ca57f21e8e71"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "c5e48b76-5318-46c2-a1c7-3b7def70f93b"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "205"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"57.6", "3.5"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    57.560975609756091842`3., 3.4604428821086932189`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"52.7", "3.5"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    52.6829268292682968422`3., 3.4956569017354985895`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.5000844362710790136`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0037534184202255572`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.4925775994306278993`3.", "\", \"", 
                    "0.5075912731115301835`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.4925775994306278993`3., ", ", 0.5075912731115301835`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.6929783222751499938`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0075054988884055707`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.6779673244983388525`3.", "\", \"", 
                    "0.7079893200519611351`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.6779673244983388525`3., ", ", 0.7079893200519611351`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"1.98`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"2.6`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  
                  GraphicsBox[
                   RasterBox[{{{0.912472558782588, 0.7872374058779763, 
                    0.4561337836213849}, {1., 0.42, 0.}}, {{
                    0.8680383663399359, 0.5929211139069261, 
                    0.07399847963899264}, {0.9167625414749171, 
                    0.5026859449222277, 0.004144160167562017}}}, {{0, 0}, {2, 
                    2}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["50", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "50", "\" examples of \"", "True", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.6329113924050633`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.46296296296296297`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.5347593582887701`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{50, " examples of ", True, " correctly classified"}], 
                    Row[{"Precision = ", 0.6329113924050633}], 
                    Row[{"Recall = ", 0.46296296296296297`}], 
                    Row[{"FScore = ", 0.5347593582887701}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["29", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "29", "\" examples of \"", "False", 
                    "\" misclassified as \"", "True"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.3670886075949367`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.29896907216494845`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{29, " examples of ", False, " misclassified as ", 
                    True}], 
                    Row[{"Column fraction = ", 0.3670886075949367}], 
                    Row[{"Row fraction = ", 0.29896907216494845`}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["58", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" examples of \"", "True", 
                    "\" misclassified as \"", "False"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.4603174603174603`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.5370370370370371`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{58, " examples of ", True, " misclassified as ", 
                    False}], 
                    Row[{"Column fraction = ", 0.4603174603174603}], 
                    Row[{"Row fraction = ", 0.5370370370370371}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["68", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "68", "\" examples of \"", "False", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.5396825396825397`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7010309278350515`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.6098654708520178`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{68, " examples of ", False, 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.5396825396825397}], 
                    Row[{"Recall = ", 0.7010309278350515}], 
                    Row[{"FScore = ", 0.6098654708520178}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "108", "\" example\"", "\"s\"", "\" of class \"", "True"},
                     "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.46296296296296297`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{108, " example", "s", " of class ", True}], 
                    Row[{"Recall = ", 0.46296296296296297`}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "97", "\" example\"", "\"s\"", "\" of class \"", "False"},
                     "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.7010309278350515`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{97, " example", "s", " of class ", False}], 
                    Row[{"Recall = ", 0.7010309278350515}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "79", "\" example\"", "\"s\"", "\" classified as \"", 
                    "True"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.6329113924050633`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{79, " example", "s", " classified as ", True}], 
                    Row[{"Precision = ", 0.6329113924050633}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "126", "\" example\"", "\"s\"", "\" classified as \"", 
                    "False"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.5396825396825397`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{126, " example", "s", " classified as ", False}], 
                    Row[{"Precision = ", 0.5396825396825397}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{1.5, 
                    FormBox[
                    RotationBox["True", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["False", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{1.5, 
                    FormBox["108", TraditionalForm]}, {0.5, 
                    FormBox["97", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["79", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["126", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["True", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["False", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->181.2,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 2, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|"Input" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|"Input" -> <|"Type" -> "Expression"|>|>, 
              "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
              "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|True -> 0.5, False -> 0.5|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {True, False}, "InputDepth" -> 1, "Multilabel" -> 
                   False, "Dimensions" -> 2, "$Rank" -> 0, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "NeuralLogicNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJyVU39M1GUYv0NQIBgEDEVDYmA3wRWgAuO+975iEGogCB4WTfRoCAHjEDQ0
OblxIBxax48DdruDIsLl0aEwCN7nuUgqIcQ8FsM1XCNB18jQBCIELgI2m23G
6o/P834+7/M+7/O8z97HM0kae8yCx+PlWC+ZWEluaHa25HTc2mWRLMnYHpDB
X6K7lozyiiern2thN949wIISbWhuVz4VuSwIfU3THQWyKNKv/5PtCvTjhCop
Cz/WROKsGaz7WQf2lm+B7n4D1N5JEbW2TEKfyUVkueURO8wccUhsBG31cdib
R+BobhrYxf1EzGo+9j/UA7/wFzBdXyAGmyRj2U258UGrljS0yoxWAzLO1THL
GF1aYNyz38sonoo3qgrLOd/uEbw264aGVBV+FlSNqVE6bNqgxrG8Wtxt9z72
56vw3lkNSp0UIcvQckH0CX8avq8EruwHvETZ1hfdjTZrnNkFxdds5zxh9jf0
nR7hcjp4vpC1rPUyVmmU7Fl3/B9M1UUSi1T5Ss7+Mkv6xqupaHj8LSQ0avDN
eSl+0H4GNUm7sVRxBmPFMXiNz6PeczzicEKC48wJxe6DIMsMx1uVagg+FA/l
jwrJeJgjPhh1Q9eaRXL14WvYpngMg+lRJCBzP/EbnScX9vjgzGZb9IusA07z
HswtHoQOn0FW13OdHMkeJQZ4G/xv/Uik/pfY8c+HWTPzZwlfSaGkvpfNJish
cIuchqdVwNWNYaAuPQG+JTz60REJNH7qiL/nhEG7gVCosGIn83Z23q+e6+zK
Hu6M1ohERqE7J8wo5yJ06s7JlApWFpPCwbAZvrn8JRCxEjq4BQjhGuD1GR6t
7K8Av8vOcH7eB9x2uNN1s4dxfNSBatEHg6P5NOX5k+hZnUMiFnn05dscDuXM
kNrsSZCX6Mhq/e6YdhEtr8MHiv9xrtxh8zPjJvRZ0PVOj2j997nwQtUgmCXB
UOQVw022l4HnxSoIMRzkzrr3QZwLj+rv1oIyVkFquCKYOuSIobJEVE1XQKMz
j07cpZDs4fT3/xNrg/61znNp3au+wadHtar/CZZn9Gl9c0S/ahwrTlvxp68R
Cq1tfyMOF0Xcss74o1RYEV67wgfavKj3hmly+8MJOFWfhfueuyf6rikH47dO
iUpr9tFlXiXoxY6hcYzw/wEqPymGJE89E7RNs8wYOTQPyXHHggCiUAzqqUUy
WrQJ+NYdsE3ggYKxAURDHzQLtlHpFSujIjUTQ2QJWJ6ejzKrO9jtXSD6OOkc
jLkD6PLk1DVoBEzmSPii+xRcMvVA9EZ7ahuYiGZTF/zX3uy1sMMJCZ8KerNI
4PYwDFIehdM8D1wfqsXg6U3462Q3nEgyw1+nk07r
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {320}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> 
                    RawArray["Real32",{0.6434519290924072, 0.5249661803245544,
                     0.44358038902282715`, 0.4944533705711365, 
                    0.38776299357414246`, 0.5854532122612, 0.4667249917984009,
                     0.4958663284778595, 0.3750714361667633, 
                    0.5029629468917847, 0.542959451675415, 0.4752878248691559,
                     0.5163335204124451, 0.6543974280357361, 
                    0.5000777840614319, 0.3779032230377197, 
                    0.7756444215774536, 0.48476704955101013`, 
                    0.5974580645561218, 0.49395960569381714`, 
                    0.43823111057281494`, 0.5580429434776306, 
                    0.5392317771911621, 0.5503732562065125, 
                    0.4803098440170288, 0.4798828959465027, 
                    0.5102784633636475, 0.47669199109077454`, 
                    0.4679831266403198, 0.6463795900344849, 
                    0.5563604831695557, 0.457633376121521}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {32}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJwMLAkC/UbAXD
5nGc9uX76u2RxfDh+usctsSqRcZLH/Pbwdh2cf125JiBC8+2Mcfqfm19M7z+
IsXfxODP83zsYGZ2pUgTNPtx8he7Y4kNOMNiTXkuXK7iniCKOss39XaL4ldg
xEVn02wbEC0ZomVnf+IBWA/3h9k47dDxrMPrzj25MVQNI0nrCShuOarWYbe9
8pbt+veKdi/EL6LINXTMwZtOtn8RAfv/VmA7irqJ/HIUpa/D95hx+llyDR+G
XOhsc5z2mTYfw+sWrWPE5QX0tHru/iq8+na2Z8Hlb9xfhlXtcn4N+xlJG+By
G93PgMNzy6YftrNfh5MU7x9+3sZqx2RzDYLmYMuHqZX7iY5DdP03wmJIiv9X
EV1Y1d9yywSbe+/VahtizCkN+4mRHw885adq/gHbc9+SKmZy1jy1lv8xC29Y
rTI+S1Fe0nkqg+HW8iOoYWJ2QRbMP5qBWU4hx20DazhR8YAL69kJgs1yZOSi
epzQEv/qD6PIvZ9fNeONQx3mMLLqdGxxNBB4DZsthv+idzPCxVRzJeHucxJM
I8qt9PCT4SY/uBvvZ0+1w2av0l92rO6Q51+DM07P1TjZzzVwQtG3Q8wbrD7k
gAeGeQE/dhKVx+89KyM5TDTmqpJVfhw7jvCfk3w23F5Y+MQ+PIPX3Krb+iS7
ldQ4r7Bkthc2+oaRd86G7bWFmWXzu8TeP4EVw9wlSZtICpflGlpEuc1wwles
ZaTqU1sM/VXvze0fboe0U2d55qK4Rzt+Eob7fl+3sI/fa0iVfGGXiFmm0bsc
MY5OBYfV6vdGZNmb8UcIrE8g4xLYnPSjhUT1N+r4LEmqx2bUz7BVYrhi97VW
iWCa4ZlvQXJ+25gVZWeTtQYjHc+OIVxWXin/T7W+3BcbfRSztllL2PPa5dvx
3tG3i/mz1u6oFaYbScH9ybxw/ZlT1cB+6+/8SJGZyPGKDWe/4QHLbXumY3/v
HyOGOpkuY4LhN/vmEqLCeAY37jJlxWVEGQoAKMpEpA==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1024}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> 
                    RawArray["Real32",{0.6022746562957764, 0.485246479511261, 
                    0.4441974461078644, 0.44862982630729675`, 
                    0.42928168177604675`, 0.5585002303123474, 
                    0.415111243724823, 0.5810006856918335, 0.4760226309299469,
                     0.5789321660995483, 0.6239515542984009, 
                    0.27367860078811646`, 0.5187565088272095, 
                    0.603898823261261, 0.5546452403068542, 
                    0.48801642656326294`, 0.5070037245750427, 
                    0.4543643295764923, 0.520779013633728, 0.4906359612941742,
                     0.4999975562095642, 0.573311984539032, 
                    0.5122789144515991, 0.6349730491638184, 
                    0.4533570408821106, 0.5541437268257141, 
                    0.5379260778427124, 0.44806045293807983`, 
                    0.5024145841598511, 0.49075081944465637`, 
                    0.5294076204299927, 0.40840816497802734`}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {32}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {320}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{32, 10}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{32, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/15" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {32}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/17" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/18" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/19" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
KOtrrTUWk42QZImzs8RZJGGutxGlNXWLW4gWWS6RkSt9zlDTNIXImL24zkSI
czMJCSmRTCmrryPEOYRi8Rt0mxDnTSNzp4nF2rn6pppmk1ZbtrhJb6ix1DS1
Ki31dSbtDK1Wo69eZDIqbDZ9q7bCpLfkSrWS/5r5/zHINCK9WW8TS2Vl+po6
6h9iSOAaZQU5DlJJ9qt1zgp99Z5FjbNSn218PzFd9vOfl1VnbxqzqHH3s5ve
nrOsMTFdXnEgzOL905zq1Ac75ix6NjFdDf4I17sIxnxMjC0DriN0aZW1E+au
FyI2f7DXeUl4aHvsFQW1zC9RyaXwOV56Qce9rIGwjxuhwB93WcO902V3oK0Z
9Kps8TSEMFll3dYr60YKdrqmd/QyFsEFLjw9LDxNCEf01POKI7lHLxzcLuwP
AQkZgqWQqk3oQOFOV8E2uBiZ0/2uQrgwfb1UbdJDfNRT+yWrJJOqmtQZjt8O
+IqE7+XRgxpuVDmjpBxWxluw7MFdBDzrXl0lJufsFulgiWajCeIMgLNc+d5/
NnOOFGsIH8/1PtxFfQG/zmnm+DZpND4zh9lNk44ODe4bszNRLN+Gs5g/crDU
wQPizGNKhTzLrzthFzAYgjo8gxSISTsc8lAso36zCHfyXOfhgPbTYGs6fkAs
nViikLclMricGRwOwQr6N7jkHHMCO0UgzngXjqrm7niFYXjfSlBVOre6Um48
tS8oGIef7K57flCO8YL4kTszVSLp0WiZKps4eOSnnNobj1awuEMcdcO9pWVn
7733Wns5sqHsXvOOSnnl5WW1D7xDlPq92jR1lCrnzAPvBxnj8GNLV1woMqTM
iFItXn8qpgIp/+RykSETCuz94oH39wQUaL2e+g+U9bO/RRUeVUjVDbdby079
Vn82kJ2kcvGXvHf8Tu2j/S/hUNKsoJyMKkeGVgCPFBm6c/ySAXKOygBAxDBv
cB6vtQ3r9nFYPZaEdtdJCYHtMWm45sMBghPeh6gcptA5VNI5pDYxaTvoAOk5
wJ2up6LoWIvwODoXz8XAFKTc9Y8CMQGDzJRp2mKxLMKuZxpSGbrNBIZSulTh
eMbOD6TwXliptafIOBekK1WlqJUE3z1sqU2I/44Yy8hUs0u9R5vmKjtnpIYF
vrg9yp+2UZhihzDVIed1KGIfYyqVlqVwxaZxdRDi6vDu4gXeca6j/ESGWXnO
ggvZn+MT013LpsixqMdY65IWu1ztAj6OOYPC+a9ms5HZGXi/NzjkJgRqs1+u
yG4z2DIy1Nlt2500GbFlYP1RP6wTEHMxJ3KM7ebZFXltJe9TXAEnEVfKQW8s
A2Wnstl8p25wUCFn7+E4cGjiRSivQgczHYPrtv8qiWFITuNuRNAuEGgwp8KF
IhMHJBwVadAUijA2nqzaw1JtRD7tZasIXmDhsDwHzmuzi8bg+hPcCmTDip+K
DNMgTO6ueOB9hy83PvwlVkWj415r2dm76x/0I0KOXbrqyCSFgaG+MHaC5JV1
UrxYRaqy/84rx46MpE7Ay9AhCNvLObU/fXktdR8N0j+vv+89SKPyemqRYers
EE7XnxgzDwLzeB7FfK4UQvWL4/ug5NeU5G8UUwo9yV33oD9a/mQpXEs1Uw4f
PbD+RGwFtQ6KDBlqCuYPvLcyGETZI/f0vlgKl7E0LhkN+zj9CIQE66+STLTb
tABfcPimcHCzqNj/XK9b9lpbDBRIOG9JkPWdlNiR80/wsfq/qzl8RuxFDZ6u
4R/8H2BD8DQ2/KTkCTYqqyA2ip9gw+hTUdhYGMLG0hA2FlIoOB7Gxl6IjZa/
CcbX7iCICUbSIucgCCcPS4ikPBV1CAYkrOJwyn1C+R5WcV7bpV44iFWJs3Wk
QSeHHeuSWGbyMIkHvYpb0LK8GT8Sj3+O9wcOn3s9BpdY5Cw+skBGzT07gpGz
B9YLaIycLbIxh5rw2IrTK14/+qe/w0KTHoUnfLmCtSaaWPfi/P4mgDKJI9p7
uamxbpzHGSpdpeIXZ//aH6UaVWjCdaqVyvPzEBF734WIEKyFpWrdvaLzqT/0
QOD89Ms6CiYxECbv3Nh7DUqSs0MlbH0nh0r+hSIbA6cq4+2lZacerHrgPQZL
28mmG6nNYVALaIxAUE8OYQQL1az/KzbO0Nh4icYGFsFG9PfyBH7xFD4zNl3D
jhIzNPwSDTayjtIxsmd1mgRunf+rRHcbxqzm+io0ZsfW1TUuHpMJ6x3JfDHf
HO0MFz9mXM2wpqyE6dHNprNGOIKZSgULLn7cqdOxq/2yPaxgqSqZM2nKneXY
px87espNZFZUypY1srb1/KVFguQ/BD+Ha5zEA14k3kEIdjkm4t/nDUiEM2D2
AYGxzYPsqtw5uKbBx47R/CG4n+81Tj4vKKq48uvNbY4Eo/VGFyzGLNJgV0Hh
hSSq8rB7M5VOygVAudCMs/+WqZAfVEzMMJp8o/XtQSTxaf0A6k7oC5KHuzKC
XgdiJwSdwUnQpYF4VqUwonfupEL4WG9sMHbSFKPgZgGEIQOB9Y8xFU7FIYJT
6Qpm9CkEnDyWBcASWDp2sAFu6AygIK2uCuyAGFspR/msEWcRtWFgmG6/4j6T
7DRZ3/UnMgVeRjK1vxcjbbFeEWEfZuv5Ad1mZC2Mu4EBd/BXFVvSW2DfPDWm
2+yHC3Yy3IB2jeuH286Ph7q2MCZR2rMfaw9T2oqtEW3D8NvpnQfEVR+BGMqD
ysceVEVBD/xOXZ+/U45z/K8OwkxbCVAKcTF5XyHvFrXbz1s15it+ed+qo19Z
S3klD5es4NLNs6EtLXcFTjcvmz8Iyx+dJZyn4j36fNJBcQn/1tm/R2U4e8m5
F2b2NcWqkcz4W2fvTieiutR9qy5McFDb5KNPzrIqwJuqh3n1pPv58mAspf5l
rTZIqZ+6n0Q3P9H20M2H0bRu/fHmFFGsRBRwGgNuWdllaR8vxD97d9zohX3r
DXon/vKdxNlPNlohgzZ3t+61oVGHmk0rY2j3Tn3+OwVTpGIppUcn8VYPluZO
Hj3gse6a515UPaQ2lI63j/+s6qNlCsJ7dwMRqrkSLp7iZtxgtYDX7Zib3Rlo
scdsCt20gQkePN6ENJ7ZoaNux9S50AIPk89DSsWdOldWhcej6Fjq+h26WYO3
YWccpB9BWhA+G4BR/SAsT/0i9/0IpT9GpQEgDJ9RIpTiY5kATIXvPPCE0vy0
kB3qk0eERvgvwfcE8IRGxqkL1+UIjdjdDkJfFiI0wr+IhHzePcougOe3nvBc
IjQifywsd+wpPy+F25ee4t8DoZhFaITPhnbHgSc0wk9EQvoRGuFnwvYY8IRG
+Hlhubyn5NVI6DNMhEbiA0bljR2ZV/ieEQ+e0Aif+v0OYsYRwsx9Ci/U9Usm
q6mraarRW2qWwjtdfZ0KXuOoy5jF0lybZWqxmqqbsmrEM2wmU9ncxbUmW001
fYurWFzXVFNr0iptJn2TaXQPrVhrqq22tmZZyRpZ6FGTK531H+xos8kcvTm7
WqolZVKpVlpdXa3NJ40GrURCmqXZ+SaDwWSgHNEqZ9U111fTSnT7ZZveajXZ
tEq9xUIzSlqsticyc01LtJFLc4nNVm9rNDWVtFSbrFTnvKZWi6nS1Ng009Sk
Las01TXW26Ba9YLHEmp9nRFqhuYVlqAM0BEINd+AAzaZbHV6S5jxOFY2GJK6
Jr0lq64eTlTfmNVYXW81ZRlN1RZ4eSezxITRqM+WGbL12fm5MlNOdrXJkGeU
SmRkTn6evjqnWmasziXNuUY9vNpr4c3eWv2chbrqv1z2+DvA/+orQNYSS1bp
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {32}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/20" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/21" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 16}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 16}, NeuralNetworks`AtomT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 16}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Inputs", "Input"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 193144, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 15, 17, 24, 23.686901`8.127083227795241}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|"Input" -> CompressedData["
1:eJy9VstNBTEMXHGkCyqhB0pA4kyl9EIJcOEAaDTfrCWEsrHHk8T2vKfX95e3
h+u6Pr7/Hq8f+3z+/R/ZX7+//i6Om0fN68YjXizfKt69R/f+2L56vyyfuna/
r+/ftZS/m7etC+Sn9ouK0/Y38nP7Zd0HaVx7P23ftX2U3o/r3/b1XfNdzct4
Mxw3n1tnjI+aN41H+wyPxa3q0eWX4qTvj/KguJSvy7PNv36PdX0wS+sc4aS8
Wv1p+57xXdfbWuda/VRxWh4uHvNX1yyPq4/tf2SpTrm2qr90Pt49X1jcak6f
0kO3rta6l86Xdo4jfBbP4tJ+bPWk5dnq3UrX3PdBlsal+G2/IT8173r+qfnc
uNRSfWP+bv2t9HY1X9286RrhrfR6lXetkykPFud+T/ub4TD/9jvjwfbTOch4
uXW00ttTeKqtfk+o51nhI/6pzrn8GW6qG6u+cfFUU/tkpe/t75GWbztvUl4q
LsuTWjqHXFyWz9XvNA/jq+Ky+JSnyo/tu2vEJ+2XFH91zlXdpnOH4SO8Nu6u
eczi2brV3dRa/XLrN/Vb6346H1v9as/d6j6zdP6kvBmOmwf5r3in+GocwnFx
0346pT8sPr1/NU+b3+XR6tpqHqvf0drFTevl9H2t5p96jym/Vb+t38PdR2vG
c6VnaR2r/Nw87VxRLeXL4ld6o+6rfE7NS+TH4lZza9V/av4Uv62zdr2qP8az
5avir+Yrw3fjGS6ztJ5WOuvinp5H7Tx0ebI8Lm77vfVL33s1F1R+bhzDa+cY
+35q7ro6vdJztZ9WfNK8rQ63fFJ+LF619bulfeG+R1r/qn9q7fkZ3voeUBzj
heLZ/ro+1Hyuv1s3Kp5qqz5gvFJrz+3W22qeon22bs+z4qGu1fyuzrV6dPc5
VJz2vKfu/7//F54Fvr8=
         "], 
        "Output" -> {
         False, False, True, True, True, True, False, False, False, False, 
          False, False, False, True, False, True, True, True, False, True, 
          False, True, False, True, True, True, False, False, False, True, 
          False, True, False, True, True, False, True, False, False, True, 
          False, False, False, False, False, False, True, False, False, True, 
          False, True, False, True, False, False, False, False, False, False, 
          True, False, True, True, False, False, False, False, False, True, 
          True, False, False, True, True, True, True, True, True, False, True,
           True, True, False, False, False, False, True, True, True, True, 
          True, True, True, False, False, True, True, True, True, True, True, 
          True, False, False, True, True, True, True, False, True, True, 
          False, True, True, False, True, True, True, True, True, False, 
          False, True, True, True, False, False, True, True, False, False, 
          False, True, False, True, False, True, True, True, True, True, True,
           False, True, False, False, False, True, True, True, False, False, 
          False, False, True, True, False, False, True, True, False, True, 
          True, True, True, True, False, True, True, True, False, True, True, 
          False, True, True, True, False, False, True, False, True, True, 
          False, False, True, False, False, False, True, False, False, False, 
          False, False, False, True, True, True, False, True, True, False, 
          False}|>, 
      "Predictions" -> {
       True, False, True, False, False, False, False, False, False, False, 
        False, False, True, False, False, True, True, True, False, False, 
        True, True, True, True, False, True, True, False, True, False, False, 
        True, False, False, True, False, False, False, True, True, False, 
        True, True, False, True, True, False, True, False, True, False, False,
         False, False, False, False, True, False, False, True, True, False, 
        False, False, False, False, False, False, False, False, False, False, 
        False, False, False, False, False, False, False, False, False, False, 
        False, True, True, False, False, True, False, False, False, False, 
        True, False, True, True, True, False, False, False, True, False, 
        False, False, True, True, True, True, True, False, False, False, True,
         False, True, False, False, True, True, True, True, False, True, True,
         False, False, True, False, False, True, True, False, False, False, 
        True, True, False, True, True, True, True, True, True, True, True, 
        False, False, True, False, False, True, False, False, False, True, 
        True, True, False, False, False, False, False, True, True, False, 
        True, False, False, False, False, False, True, True, True, False, 
        True, True, False, False, False, True, False, False, True, False, 
        True, True, False, False, False, False, False, False, False, False, 
        False, False, False, True, False, False, False, True, False, False}, 
      "LogProbabilities" -> CompressedData["
1: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
       "], "CountMatrix" -> {{50, 58, 0}, {29, 68, 0}}, 
      "IndicesMatrix" -> {{{3, 16, 17, 18, 22, 24, 26, 32, 35, 40, 50, 61, 88,
          93, 97, 101, 106, 107, 108, 109, 115, 118, 119, 120, 121, 124, 130, 
         136, 138, 139, 140, 141, 142, 143, 145, 151, 156, 157, 163, 164, 166,
          173, 174, 176, 177, 181, 184, 187, 199, 203}, {4, 5, 6, 14, 20, 25, 
         30, 34, 37, 47, 52, 54, 63, 64, 70, 71, 74, 75, 76, 77, 78, 79, 81, 
         82, 83, 89, 90, 91, 92, 94, 98, 99, 100, 102, 103, 111, 112, 114, 
         117, 125, 126, 129, 134, 149, 150, 160, 161, 165, 167, 169, 170, 171,
          178, 183, 191, 198, 200, 202}, {}}, {{1, 13, 21, 23, 27, 29, 39, 42,
          43, 45, 46, 48, 57, 60, 84, 85, 95, 96, 105, 113, 123, 127, 131, 
         135, 144, 148, 155, 172, 186}, {2, 7, 8, 9, 10, 11, 12, 15, 19, 28, 
         31, 33, 36, 38, 41, 44, 49, 51, 53, 55, 56, 58, 59, 62, 65, 66, 67, 
         68, 69, 72, 73, 80, 86, 87, 104, 110, 116, 122, 128, 132, 133, 137, 
         146, 147, 152, 153, 154, 158, 159, 162, 168, 175, 179, 180, 182, 185,
          188, 189, 190, 192, 193, 194, 195, 196, 197, 201, 204, 205}, {}}}, 
      "ExtendedClasses" -> {True, False}, "Weights" -> 
      SparseArray[Automatic, {205}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.000384619512195122, "SingleEvaluationTime" -> 
      0.001980875, "Version" -> {13.1, 0}|>]], ",", 
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "ca79e143-16b8-4b58-8307-7f406c418880"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "205"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"50.7", "3.5"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    50.731707317073173158`3., 3.500325338102102446`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"52.7", "3.5"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    52.6829268292682968422`3., 3.4956569017354985895`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.4391141540776754004`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0217998028357487272`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.3955145484061779459`3.", "\", \"", 
                    "0.4827137597491728549`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.3955145484061779459`3., ", ", 0.4827137597491728549`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.8229958676418464014`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0496245858607126111`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.7237466959204211792`3.", "\", \"", 
                    "0.9222450393632716237`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.7237466959204211792`3., ", ", 0.9222450393632716237`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"2.73`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"6.57`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  
                  GraphicsBox[
                   RasterBox[{{{0.8920484212036848, 0.6979200927263708, 
                    0.28048562635228524`}, {0.9336155577688845, 
                    0.4859445931108137, 0.003305095639808718}}, {{
                    0.8628933545834183, 0.570421332731331, 
                    0.02975123391471579}, {1., 0.42, 0.}}}, {{0, 0}, {2, 
                    2}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["48", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "48", "\" examples of \"", "True", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.5393258426966292`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.4444444444444444`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.48730964467005067`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{48, " examples of ", True, " correctly classified"}], 
                    Row[{"Precision = ", 0.5393258426966292}], 
                    Row[{"Recall = ", 0.4444444444444444}], 
                    Row[{"FScore = ", 0.48730964467005067`}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["41", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "41", "\" examples of \"", "False", 
                    "\" misclassified as \"", "True"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.4606741573033708`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.422680412371134`"},
                     "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{41, " examples of ", False, " misclassified as ", 
                    True}], 
                    Row[{"Column fraction = ", 0.4606741573033708}], 
                    Row[{"Row fraction = ", 0.422680412371134}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["60", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "60", "\" examples of \"", "True", 
                    "\" misclassified as \"", "False"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.5172413793103449`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.5555555555555556`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{60, " examples of ", True, " misclassified as ", 
                    False}], 
                    Row[{"Column fraction = ", 0.5172413793103449}], 
                    Row[{"Row fraction = ", 0.5555555555555556}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["56", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "56", "\" examples of \"", "False", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.4827586206896552`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.5773195876288659`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.5258215962441314`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{56, " examples of ", False, 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.4827586206896552}], 
                    Row[{"Recall = ", 0.5773195876288659}], 
                    Row[{"FScore = ", 0.5258215962441314}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "108", "\" example\"", "\"s\"", "\" of class \"", "True"},
                     "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.4444444444444444`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{108, " example", "s", " of class ", True}], 
                    Row[{"Recall = ", 0.4444444444444444}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "97", "\" example\"", "\"s\"", "\" of class \"", "False"},
                     "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.5773195876288659`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{97, " example", "s", " of class ", False}], 
                    Row[{"Recall = ", 0.5773195876288659}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "89", "\" example\"", "\"s\"", "\" classified as \"", 
                    "True"}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.5393258426966292`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{89, " example", "s", " classified as ", True}], 
                    Row[{"Precision = ", 0.5393258426966292}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "116", "\" example\"", "\"s\"", "\" classified as \"", 
                    "False"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.4827586206896552`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{116, " example", "s", " classified as ", False}], 
                    Row[{"Precision = ", 0.4827586206896552}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{1.5, 
                    FormBox[
                    RotationBox["True", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["False", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{1.5, 
                    FormBox["108", TraditionalForm]}, {0.5, 
                    FormBox["97", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["89", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["116", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["True", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["False", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->181.2,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 2, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|"Input" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|"Input" -> <|"Type" -> "Expression"|>|>, 
              "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
              "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|True -> 0.5, False -> 0.5|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "Input" -> 
                NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {True, False}, "InputDepth" -> 1, "Multilabel" -> 
                   False, "Dimensions" -> 2, "$Rank" -> 0, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|
                   "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "NeuralLogicNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DpACJQQIM9BA9l
gMv9hPxFC3/DzCTG7MEQ7uhuIMSnlvnYwmkwhAcI4HPHQLmRlmmVlvaRmw9I
sZ+0NAQAdfEbpw==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {320}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> 
                    RawArray["Real32",{1., 1., 0., 0., 0., 1., 0., 0., 0., 1.,
                     1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 
                    0., 0., 1., 0., 0., 1., 1., 0.}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {32}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJwMKABhrsIXgo
A1zuJ+QvWvgbZuZQCdOBCKPBDvD5eaDCg5ZplZb2EWMOpXbRKk6oYS69422w
AWxuRRejV34bamUzDAx29w4l9xHr1sFSzpPjDnxtOkr8NRjChJbxR6oeYsot
arWvaVFHkuo2avYViKkX6AXItZfUvDrYy0l0MNDupaX9tGhX4JMb6H42wm4A
uFY4gw==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1024}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|
                    "Array" -> 
                    RawArray["Real32",{1., 0., 0., 0., 0., 1., 0., 1., 0., 1.,
                     1., 0., 1., 1., 1., 0., 1., 0., 1., 0., 0., 1., 1., 1., 
                    0., 1., 1., 0., 1., 0., 1., 0.}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {32}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {320}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1024}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {32}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{32, 10}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{32, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 32}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 10}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/15" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJy9vQlYU0f3OHyzkEQMkABKEJBAXFBRA7KKYgIoWBBxLdaFRVFR9tUtkABK
bFWwtRatC1qrtq8LFlxAkVWlCohiBWUXFC1CsCCgAfI/c28Sod/7Pd/ve57f
8+/zyp2Ze2bm7OfMZOa+ZoHhywNJGIa1BWOYi2tho60+hmlAPZDJn/TVmrub
RfIcv7HLxF4IxoyJYac4GDaWbIaRoT4e/tElvMPCMupiGsva8XtSCnOyBsNw
IvW7QLHxQrLL92Nd2ljW+g4MjqemdZTUI6LUjOemm3qAJfyevKmMcU2f67pI
yv2TZB2VwpluMT3dak/WusPcB2Uw7n4uhm2Cp7V52Rhu4CLMbMakDGOzyfDH
cCpz77l0/6hN67iTtiRljt+HvWEIJORoqj/fXcwizQ7+1iLgn1/f2S/91szc
reoso3A5mUWlJQszWVyKyRsG+StOS0Smxj/CzwoTPmkGiflen431KKZxLUoz
F7LFQzNIlnOH6xI1GZpWW5dR/RVfYd8dUsSaa6cKxBMWOTi8lYSlDyfSvQq/
wihOC6mFg/+C/FigW3i2db8DRiZ9yyFxz+w31N1PXRXCz3zEELOt6U85AXzu
oWnWe124womuxjQSSbJVoBHNhOEFNubfs2k862OBPowDminWrpv55uM2PNVf
VtwWrd3DHcveuazNrcBmMgzw3JiUcsRm4RH+UOlHt4JmG70nXss1yRaLV7iN
+WHpuqW9nlBYMZ02i9yykP/tsTPjfnhSzrxcJN62qIz5dvO3biEsgU8lNEjj
FklNLm5Jogx5HZ7GIo/R1KZyzOZMOmtoLSEbruIKPHS9SMZn+FzMdoxwtomF
z5HVNhrLQP4BIBcjabMC/qNzmXYsF2ySkdQMO6ql/QG1Ufw1xaZYIuaBafQW
0X4ZQG0kvgaCXIT5GmW04h0ztbAV2CCWLnauFXNJ6dhYAd0o3Q3T9Sf9rpXi
gu3JKvKloTJNDxvrE8qfQPIVb0tu0S8krzQ68AAbn/myWYDGWYCdxwZIGL3Q
FNOtghEs0AgXtfbpw4Ch3ClkXzuWPqCXPp0Yed9kbExWSPoV1NUUR0BMadbB
xjAomTrY3FpuwL/H9CEFYEDFVDlOxVZKoT62AJuEA/tvJWVhMVmSF8PwKhF7
hXXjQ71N1mL243yoohF8EJiGcPOw5mStlKnYI9orYqh0O5Y/C9uSJWEkkxzg
FYdRaBjCvZ+JVfpThDRaBM0ow5qBLccquYx0rlam1l5DqlAcYlEpYJA3USQ0
agQNWwyyMAJZ6KUIMrjUkhRxBktfL6UwQ2DscdaL9W2QyzL+wR4vVubWYu7M
6hTuMb7Pj7Zmt6ZQa1PMqo+MKbILaJ4b7tK9hOXMz2CJi6gSzeQxVI60iJNe
lEJi3hczp1CD+GaZUxibI2h6ZJsMlhScgN7EPYUUpwENp8xkO3Fq5FZKnAc9
/iJ9T62/5usqWmcmHf52c+nxGH0Xnx6VSY/m0kMxnagIeiReRo0EAJT96TGZ
9DgBPTRdG/6iahXtjZgekUmP5NJ3VNG6xPRdLHoc0RF/m82iR4npX+kw2Lou
+w4cwUg2LhknuoquO+652RIct0b724p1VgbMTQmPhOU5tw/RWyLtWA8Xbd9f
3avP+PXS7UeZGQc1vi/a9MeRjspGM9IDs5Qi4B4L/lHpWa5zz7l10zBMDFWu
g9hs1SJLaIcKGTwRByskMX/L2yIUT4IWBvwr5GLa/h73aLJursAcIyBBnnT+
uZf712SwuGzUE/7xGWIKZ3lu6goSiY+p/jMuTP92wcWxDHUD1oztW8nXDRbg
2JDxJhhK84dvKeRMJY4YBlj9eHLTRBZGU3VDWG1YSKEAMlBDPhpD0/363UKa
AOOOHOrzT458CobpIjCWEuxPrRQYyUJJIw6me9JDC+OuUfbEabR1qjaGmRDd
YiXyD/ecnYuRxSMR+2vILR6jCigYPi2GRWCu0/V3/YPzChOoabRf2QnTUwk2
E/jXWvxNIfqo8f/45CyJJFByGp9R88ezCzByIWnEjKtmLTuDUQspKl7AjL/H
mVOWA+ZkVRsC8wo4D4hRR4Ll/OFFYojV7G/GJtkx9N+UYlgZGeEwBsWdiRkc
Q7ZX+oExU9zvU10n6JMnL8K2iTVvZFDmHsDSA9F418D+TsJzDkNsXNpivFmf
NF/q6pBScsBFTN+5gx6dEcl8g+l0srR7xdpzmC4Ti4tMKs8Yb+Zr4GDJRuWU
+WWu8w9Q5pfvOBATQd/NoO/0SI2IoO+KoMTtSI3gphqWs7Xfp2u38HXC+Dqt
3drdPtpzWKUmjWbGtWYmxQETN/P3O91JdqpydcyhzLuTPC+F4lTerR/nT9+9
lW6/NTUK/opTI9JTI/zpcRb0uAENGDZenOrHSI3kpEZlpO7MkFh2dWt3NWt/
LNR+z6cElp0xbjtjXI7/rQ8wfmhmXCoxeRhAe57u6ljm6piB/71V4nDE1UFK
cTpSMhsmHUxyekZxyiphPghOjfBNjYpIjtlK3+GfGsNJjclMNaxcodOF6fzj
o92Wrt0q0Gnhar8HKrgWJvVFE4uFE5+aGddLJtY3G7e1mPxNmriZs8wBTPFE
slO5zyQlIf6p8TvoOzKWefWm6yAOTNw28WGA8Vszk8YikwTSRISwmUl3AG3l
3mSH8hKnLNf5wJDB4nltrk5SqJYcuKcJlKbGAz4M+i4LelSGZF0rS/t9ofZr
H+0ePq/oqXBiW4tBbYtJIyDgYeiUlTw/J9kopcThgKtjecm8W0WOZSVA47xy
j5xIBh2wigQG+qYa1t3Xfu+v09kM/kznNV/nNVenz0c7jKXdyteGak8z7V2z
dpuP9gCf9+p9gHGxxKS2xeC9mckbM5NSMxOQ4Fsz083ck053XOffojgeSXYs
970D0gdidwGeHqnxEcC9VO3XLO1uHFsZX7snXbvXB5k6thNMxhOeURM9uK5S
puGYKGsPLk9y4PDhJ26ZLItN86ysXQ6lm/2ylRtGWmHk/80NUOyvw0M2RwWE
cl3DQyOCQ4KiuNazrObMsprF524Oj+J6BYfF7uDucLDjWtjZzAwMjoGU6KvY
sCCulZ0l15pvbT1tSXgY18qWK4zdgte5VvZz+XZz+Y4hIXGhs0LCwyNmxQVt
jAmPCt4VNCsoLCAwJOi/vYkP3hSz9cuLTcHRMVHBgbExqj4YxmPst0/iR8yh
FjElfFd+OZf1gOkiKedyUg9Qp1iMs7O7bfeTzR/W9nnLyJNO37a3m5ObZWdw
2zo3N8f+5rKkSb+qmq7l2dj9MTsv58Yfy8gop/0N7NUMnmM1oyzADui7fCMy
gPcloHGOVSVJb4zvn9F6K0Rm+gYJB+nXeJtWf+12H1BbnTakvDrtPtq9WWIJ
facFblU7UiMJnfKNOFHikENyOpc8/0gJeTsYqHF9i3E917gtAP19K5lYHGBc
dca4jFAE0hPwY8iN08vnnUt2OgHGRJmfmTwPDCu9BPmgAJCvjg7EWypXdyyV
8IT6FpIJHJKF1MUikzyNPEHfbcwBTH8J+4jwT/2FY6DTB4gwiwHO3L0sfZlm
ShjSE3BAmN+KndExQaF+fksCIvwW+fm5+vn5BGzcHrRJGBUVsNNveVBAiJ2N
n9X/uNH6vzf+X5llLndyXECUlR3fBsNmpLxdY+XBzknKyLi/Rujj1XqJO/18
5GrW+GqHGdLvgk+Mo963qdQ03zhhi8YZq4PZSbUILMKrNYQxCZvDriiknePr
WTFDBJpz2PfwCpuoXORnkaaVuzEpRunFXm5WeIUKFfKHIskBjj7GSCJNSxdy
Ni2vZVMomJDP17DOSvLSdAr0x7gM2nkfmm/64gB3JhOjFhXqlwvGWk97L5WQ
xFxORrFhiHDKXhMrPsaiUlYIki3LzmXxaDQsyd9fM7hQ45h+XGkhJmAxvYRa
d7g/FB/icGAyybRLRQYxbVViEid9mrHHHGYQl2akQXYRitOnG3vYMyWGYpIG
KUo4oTCLZEWl8uu5l0icAxyOLiNJ+KOmxLjcmurCD/TxAtwmTOespJZZSvg+
bAaJvK6bxg8RcEkkJfBfmuDbspkUNhCpB/Pe13xoSXqildxDCxYIxeu4dIBm
kkhMe0YMRiPQ9vnTJQu63GN7RftwpZyBM/eKbTwjeu/70GIKaSU0NzGdWmWU
bPhMYsQ0YgndsHyrExKTrKIsErueROq9L6bF42ACdqENfW8S4+y83HTaOWqZ
xm6shEbVYxVGJFfR/fkEY/+aRT3Hf1ToUCS4d3hOD9/ezCqcn+WCletaUmzp
psZ7mu9UhN7R8u4umt1NsveJHihqoVfeqr9/qznFdDDJNAKALIwzm8tLQssp
3uUls8VkAJIWm2lWLq2/v7S5dOlgkgUCmmZ8rvn9/dD3NO/392enI6CM4gBN
b6f6RY+aU6YNJk1DQNONLzbXV4bmML0zi2dnIqCLxWc0vTvrF3U2p0wfTJqO
gGYYX2p+9iT0EtM7q3h2FgK6Vdyi6T2v4f7D5pQZg0kzEJClcWCztChUSvKW
Fs2WIsTLis3GehvVLzJqdjMaTLJEQDONc5ovFYVeInlfKpp9iWSvJnwcnTPp
hLVP5ImviqdRxj2YiVcOuOEVP7xS6okq7nfwyh288uD2iEqqKV5xG3OBudJ4
KWq5JKaPuRBT0vzeZaYPi2swQAbRuQqwEi2yg7iIUOSVw6wTJZYlehrVxvoM
c62ErUPd9GxqpQ1dnCQ9Z2kuoeHtrIStw4IKXbcGfrfQ4T0ZdJTkqNbRDArS
UVBv4UJdoVO5tdcqQTzMlkmB2XaykOQztVWSH/cV9QP/kX9AkQ1dI4mx1/Tl
4iPFlsK/tCgXtNuQZlZpqzVTptbM627+OtnMF+NxzVw3cOZayoxyXf8Srf+w
dLaCGsXig0n3mX7jKS2yLHqu5copTJ6LCC6nqAh2ma8meA67Gwg2oEEvLEnK
sVjnda4kixQw9g8BVsH37evW1md4uGu/Fut8FriIob+LAKueNI5hPjFBTFqS
4zr/LfmaCyCqA4jeckFjFy9Qjz2fnVFqWcI5IuRXCCVcMm3gzAeqcZUeN5sa
gAzVvzDUQEqFMZfjQlis7hfIvlRqmWyYKSzE2b1JbPqN7wHKXy7ict0jRYKF
3HRJ2/oIXZixGZ/R5St1zy3swlJL1wmXiBmjYMZjeyeW62YK7Znx6bo8IfC0
UFfN01kkFU+vLfTRy2ZGcOkE8yY0p94Y38n3zKI18H1mSXT1qQyaNYlUQitl
sbAX9yQxJawyqifi6TOqiqfFSxAWZhLAIpY9UGpJMcoRqrzTetw7CY2YK6lk
I+72iCJvUBcJqEugvwe8X7VBute33PpWkRGVR7tHTfLPbNlr7dlNK9UG77cU
QFu0cXwXqPH9uNB/fDYz2ofA18O4OfW+wWW+J5fewL9TvLSNCiop8VWrZLqG
SiUnTyj6pty6ljSRinM2Bji79QD1L1fg7DPE2SpJL83ghAbQNICravp4tZMK
pkZYPUqn72bheldPSth6/vDYbOqOKi3KrHP3fBEzsjRUzEhaqxbJJfaze5YU
CO64SM7SB85cXuRZrvueJBGK/VkGLJCGVCjAVhrRn2q5sgy2IxkJDNQyikM0
7wOe+DxZVGWQzdxTRS+SCq2AzVuzA3zYoEsipEt7xO+LNHaBhKi6rEKlGG6x
J5yxetRMT2Qp/X6c0UPLItOqr8AP7wFQN0+cOwNq7twzEgaXWx8gTye4c0Zs
+jIsp8RSYuFjAl0ykfxN8C5SmqqLxkThtnLrI8XTiC7noEt4ikaFGzA0sxjX
pWnNqbSJH/ieEZoN/MKSrb0aSDbBatlkqocKmli0vdz6XPF0KmWcpI/OnIYc
BnsCNX3HmfoACnm2bzK2T0uKzWY0p/wlDqAkTSWTOWGcbyjMRXhEzvwmTWy3
2dC3aFxSsLYmlb2qUGfJ/N6Ao/7j8gLKUp87aGmS28i10DGQwfC/JUzX4nPw
cJ2s6ZxUnxG0Y68v47yjBcvtG9KCnH7pd2vIX3OXM1jMbRTyPi3GCgZD/NBc
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {32}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/17" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32, 32}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "NeuralLogicNet/18" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/19" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_56fa949c_da3b_4a9e_a75a_bdc86a65306a", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHNxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
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
OhF+4/8AeJXagQ==
                    "]]|>, "orcInstance" -> 94182528, "orcModuleId" -> 
                    94395408, "targetMachineId" -> 67307088|>, 
                    140281895229248, 140281895229104, 140281895229184, 
                    140281895223296, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_305af3c4_0844_4ccc_90db_220f439ebbeb", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkBAiCNCFBo4INSKe09TYPklQ0
QAiI4DMvSbRYo3K9aG0bre14O+18WNHr9faRAFpasQO1Vr16VRQf0/qsVm31
jrPPSaKMM/N9M99Mvi9nnb32Wnutvda/1977iAz1FQYEAEAKAChWBs7k8AGI
gm0Dh0yb/coX5hUPurVjyu2llIyIA8DPLADGMESAAdvj4R91pG5Q9LNmsXFJ
/kbEzUmPwhKSWW8a7IISRvHGMcV9uIQvwwRzYiQGr9raJ0pVxXvaccVGhrEf
280nlDO8xNeIxOAWTM2Y6hMv75q/gTjUD8ddQwAwHVJJijeaMMwAomfTOgWi
dPhIeIazeqdPZzDOJ9LMTn9cG7iEyR3OfAbZmSr3BuZsTZndubzmtyObDF6M
153B6OoAxSRHqWEZB8UzcY3Be0HGfXXAlxadkwpmtHCdnAaOQ75xyrs7sPgd
u8ge3ZBp7XbsY6cku9BVkvj6d/zynpFG7m1iDK+1fET1pTRdL9j1dqrdt/FD
b/yH7+1/98qEbeaUrbNmK+wbpSUd5K99v0Ah+PKB4T7G2OlTZbecV+9M+ExP
HMX+Rb5rSnwDhlccORc7fvcMPM5WZsULcZ175odb3FNAMfa902k7vwAth7l4
Ac490XvuEfyh8r/aMcQHxshr5WxEbY/alUv0gbQAQ5O47TwtEOBD+X8DPhBz
xRXbdoviMXUxcoGFfAupsi9kuh5SLNCN6GLsk0D8IJroSwPxOuSKjrkdB5Ms
1s1U/yQwDzwEdua5OBANx2GPpSwSExlVuTgXpCX6nqFUPoplp4HoLotvx9Mq
GNMfB6adIGZRHS+AD8F9BKABaE6D6MGdINv8G9WBeJmBOPsLIM0fl8uvxFn9
bTvineCkvAqxshO9b4JvdUxHdCABzIIxwGEMxnrlAm+0QiwiJ2OHxDBRii1E
Zg8rRfeW2YlzxrIvOyazhtzyrXjpWHdgC8mqzFFgH0crSNH+yawT7gBjbPLy
ALPgflSB35Vr9zQsYDar0SW70OUndDEXB9nX/Ch83iTQJQBdSqI2P9pIoLUg
zmZFG+h3ihkSgO86tMmPNsvRWh8XPqnmIPuSHbX60QYCbRlkX7ejS3G0OaRI
9+7BUZsdnR2H8eKL29o7ACIt7tx2Pbg3f/mfhmuaX+GuPTJfPIFjXHlYMdD9
l7fQ4YZc/JsZi9YcvcPHPvj4L4f9neuiNgaNn3b89O0ZEXJIVMkEQA6DggsC
3K998Y6J8B0uRHsAtFUKdocChtnhAwgCvrWNEwnAApEfU1DxRwULQUhKBoRl
FsZJozFqCDnNocbZ6yuXA/5jNTa50+bJ3w8LBGywaDGOTj1uvIYNArAmEHQh
0AHlR/u9uUANHaDNY5S5NYdUbADSKB+J8FAfrevn2IGAGgqEhzIl8yYCxD/a
qx+LknPocekJQdN20e/XVFoAKwAoiyBsMWnN6ZDOE+ctn8rlgBOKSsjigU0Y
1w6qRltcPdVIonJ6QuE5ErsV/puFCJCPx9hUzUnu5CfwSn3t0ZNnHmIpZ88A
VwRU/dsNHX8H0mzMLuwbFpr5yHSvUububS+2o60taGNnA+cSiLuGc+/Yudmc
4uSeYNK324VmMooWcyUOMKf3K6e3M6cPtLQ3WdFlGNqq9lit6FIrs7nFYyU8
CQM87lUfd5iMqyPjLtzk3tRws/G+pDMi4QlRUo8+2UyuKfjMVTCozO9mFn7m
KnQzCwZu8pt16LIFaN4Cjw0+7R6rz2PVoc0ZaPP9KDjsErtHi3kaBB5bp6e1
05F5/Sb3+jnuLwHuVZJp6N8uHNkuHKCfp/XCb0TCPkfSN3r2Dz5lfr8yv5N+
7u+VdShlXmZBR+/z0OhDZ8H3zIKuXs5XNR5rlcdmdTUtQFt0niaBp8nvSfh2
Xtx1EPezhjvi416Qxw0T3KtwFkRG0ulgco8i+TuR8LQj+fQ54chw0o9IsllQ
LutSTtvmKhjQpIUnovMsaUFbOstL7/jiqAgkL0z+Ri+8Iko6E0xaiSRTDouS
burZlatdsoHegi7ldBiQhz2FI8oCL2z2th+MgTP1LIH+YOjSDNTW6Zh/Aede
DXAvari3ydTgd4rkkeEJJ4aTzkAH1AkFXa7p3a5Ed6+sXZk/0Fu4P5jf3wvn
WDig7m7AUOhVAwxglSfh1CHuVV3ctXOwHsRdJOMuEnF3Ndw6nHuB5MLm7XPs
fz3HHdFw75Op56/qhT2OpBPDE66Kki6JkvpESTCDV0STzMQ7BZ8pp+9n5ne4
8geqPoPZh5NdCv1Ue5ZYYfQ83Is49ybt7Q2Se9vHvaPhUhhthbh/DVJbsppQ
ejkJ0TaJmkh1tG/YMKTy4xnGQrGk+C2f6P0WIoUxL1H3wbmYPsbL9RazTV9L
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
f4oahYV/B6AFwFY=
                    "]]|>, "orcInstance" -> 94178480, "orcModuleId" -> 
                    67817792, "targetMachineId" -> 93276032|>, 
                    140281895215648, 140281895215248, 140281895215328, 
                    140281895215104, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {32}, 
                    "$Batched" -> True, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "2c36a8b7974939bb", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]|>|>, 
                    "NeuralLogicNet/20" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>|>,
                     "NeuralLogicNet/21" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{2, 16}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2, 16}, NeuralNetworks`AtomT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2, 16}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/21", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/20", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "NeuralLogicNet/21", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Input"] -> 
                NeuralNetworks`NetPath["Inputs", "Input"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 193144, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 15, 17, 24, 23.859449`8.130235392924119}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|"Input" -> CompressedData["
1:eJy9VstNBTEMXHGkCyqhB0pA4kyl9EIJcOEAaDTfrCWEsrHHk8T2vKfX95e3
h+u6Pr7/Hq8f+3z+/R/ZX7+//i6Om0fN68YjXizfKt69R/f+2L56vyyfuna/
r+/ftZS/m7etC+Sn9ouK0/Y38nP7Zd0HaVx7P23ftX2U3o/r3/b1XfNdzct4
Mxw3n1tnjI+aN41H+wyPxa3q0eWX4qTvj/KguJSvy7PNv36PdX0wS+sc4aS8
Wv1p+57xXdfbWuda/VRxWh4uHvNX1yyPq4/tf2SpTrm2qr90Pt49X1jcak6f
0kO3rta6l86Xdo4jfBbP4tJ+bPWk5dnq3UrX3PdBlsal+G2/IT8173r+qfnc
uNRSfWP+bv2t9HY1X9286RrhrfR6lXetkykPFud+T/ub4TD/9jvjwfbTOch4
uXW00ttTeKqtfk+o51nhI/6pzrn8GW6qG6u+cfFUU/tkpe/t75GWbztvUl4q
LsuTWjqHXFyWz9XvNA/jq+Ky+JSnyo/tu2vEJ+2XFH91zlXdpnOH4SO8Nu6u
eczi2brV3dRa/XLrN/Vb6346H1v9as/d6j6zdP6kvBmOmwf5r3in+GocwnFx
0346pT8sPr1/NU+b3+XR6tpqHqvf0drFTevl9H2t5p96jym/Vb+t38PdR2vG
c6VnaR2r/Nw87VxRLeXL4ld6o+6rfE7NS+TH4lZza9V/av4Uv62zdr2qP8az
5avir+Yrw3fjGS6ztJ5WOuvinp5H7Tx0ebI8Lm77vfVL33s1F1R+bhzDa+cY
+35q7ro6vdJztZ9WfNK8rQ63fFJ+LF619bulfeG+R1r/qn9q7fkZ3voeUBzj
heLZ/ro+1Hyuv1s3Kp5qqz5gvFJrz+3W22qeon22bs+z4qGu1fyuzrV6dPc5
VJz2vKfu/7//F54Fvr8=
         "], 
        "Output" -> {
         False, False, True, True, True, True, False, False, False, False, 
          False, False, False, True, False, True, True, True, False, True, 
          False, True, False, True, True, True, False, False, False, True, 
          False, True, False, True, True, False, True, False, False, True, 
          False, False, False, False, False, False, True, False, False, True, 
          False, True, False, True, False, False, False, False, False, False, 
          True, False, True, True, False, False, False, False, False, True, 
          True, False, False, True, True, True, True, True, True, False, True,
           True, True, False, False, False, False, True, True, True, True, 
          True, True, True, False, False, True, True, True, True, True, True, 
          True, False, False, True, True, True, True, False, True, True, 
          False, True, True, False, True, True, True, True, True, False, 
          False, True, True, True, False, False, True, True, False, False, 
          False, True, False, True, False, True, True, True, True, True, True,
           False, True, False, False, False, True, True, True, False, False, 
          False, False, True, True, False, False, True, True, False, True, 
          True, True, True, True, False, True, True, True, False, True, True, 
          False, True, True, True, False, False, True, False, True, True, 
          False, False, True, False, False, False, True, False, False, False, 
          False, False, False, True, True, True, False, True, True, False, 
          False}|>, 
      "Predictions" -> {
       True, False, True, False, False, False, False, True, True, False, True,
         False, True, False, False, True, True, True, True, False, True, 
        False, True, True, False, True, True, False, True, False, False, True,
         False, False, True, False, False, True, True, True, False, True, 
        True, False, True, False, True, False, False, True, False, True, True,
         False, False, True, True, False, False, True, True, False, False, 
        False, False, True, True, False, False, False, False, True, False, 
        False, True, False, False, False, False, False, False, False, True, 
        True, True, True, False, True, False, False, True, False, False, 
        False, True, True, True, False, False, False, False, False, False, 
        True, True, True, False, True, True, False, False, False, False, 
        False, False, False, False, True, True, True, True, False, True, 
        False, True, True, True, False, False, True, True, True, False, False,
         True, False, True, True, False, True, False, True, True, False, True,
         False, False, True, True, False, False, False, False, False, True, 
        True, True, False, False, False, False, True, True, True, False, True,
         False, False, True, False, False, False, True, True, False, False, 
        True, True, False, False, True, False, False, True, False, True, 
        False, False, False, False, True, False, True, False, False, False, 
        False, False, False, False, False, False, True, False, True}, 
      "LogProbabilities" -> CompressedData["
1:eJxTTMoPSmViYGA4C8QgOkei4E/BgxX7OR3OHW5M5jhgdl5srRzz1/3aAe8P
V/Fc2f+gKtVb1/7A/ttJQTc/MTMegNEwcXT1hOTfW/7656T3DCeNrh9dHuZO
mLth5sLsIeQedPXo/kPnk+o+QjS6+ejuRXcfun5C4YnLH7j8T2p8kaqekH/Q
45PU9EFqeJKaPkiNX3TzCKVXUsOX1PRByDxKzSfEJxS/pPqXkP9IdS+h/EIo
PZMaXqTmP0L+JxSehNxLKP9Qm08o/1Ca/yh1D6XpCV0cvX5F51NaflGaHgnV
T4TMJ7U8JdV+QumD1PBAF0ePD0LlAantA1LLG0rzC7XbZ+jhQ2p9TOv2CKH0
Q2p5Tml+p1T98W2PRJ9OnbT/6o1Tj6YKCWCEN6n1GaXlG7Xl0ctBUssPQu4H
AL2W5Xg=
       "], "CountMatrix" -> {{48, 60, 0}, {41, 56, 0}}, 
      "IndicesMatrix" -> {{{3, 16, 17, 18, 24, 26, 32, 35, 40, 47, 50, 52, 61,
          75, 83, 88, 91, 97, 106, 108, 109, 118, 119, 120, 121, 125, 126, 
         130, 138, 140, 142, 143, 145, 149, 156, 157, 163, 164, 166, 169, 173,
          174, 177, 178, 181, 184, 191, 203}, {4, 5, 6, 14, 20, 22, 25, 30, 
         34, 37, 54, 63, 64, 70, 71, 74, 76, 77, 78, 79, 81, 82, 89, 90, 92, 
         93, 94, 98, 99, 100, 101, 102, 103, 107, 111, 112, 114, 115, 117, 
         124, 129, 134, 136, 139, 141, 150, 151, 160, 161, 165, 167, 170, 171,
          176, 183, 187, 198, 199, 200, 202}, {}}, {{1, 8, 9, 11, 13, 19, 21, 
         23, 27, 29, 38, 39, 42, 43, 45, 53, 56, 57, 60, 66, 67, 72, 84, 85, 
         86, 95, 96, 104, 105, 123, 127, 131, 132, 135, 137, 148, 155, 162, 
         186, 193, 205}, {2, 7, 10, 12, 15, 28, 31, 33, 36, 41, 44, 46, 48, 
         49, 51, 55, 58, 59, 62, 65, 68, 69, 73, 80, 87, 110, 113, 116, 122, 
         128, 133, 144, 146, 147, 152, 153, 154, 158, 159, 168, 172, 175, 179,
          180, 182, 185, 188, 189, 190, 192, 194, 195, 196, 197, 201, 
         204}, {}}}, "ExtendedClasses" -> {True, False}, "Weights" -> 
      SparseArray[Automatic, {205}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.00015208292682926828`, 
      "SingleEvaluationTime" -> 0.0027305625, "Version" -> {13.1, 0}|>]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.86922158804959*^9, 3.869221713139295*^9, 3.869221916584944*^9, 
   3.869221949016221*^9, 3.8692219949471207`*^9, {3.869222057606943*^9, 
   3.8692220713339243`*^9}, 3.8692254296954308`*^9, {3.869227070722014*^9, 
   3.8692270775786343`*^9}, {3.8692775584383593`*^9, 3.869277584282023*^9}, 
   3.869280268335588*^9, 3.869280411917354*^9, 3.869280831560107*^9, 
   3.8692809874689207`*^9, 3.869281066352899*^9, 3.8692811724409447`*^9, 
   3.869281425928671*^9, 3.869281499910817*^9, 3.869281551694984*^9, 
   3.869281835979891*^9, 3.869282043779932*^9, 3.8692847524226227`*^9, 
   3.869284805759396*^9, 3.869293452523674*^9, {3.8692944587734823`*^9, 
   3.869294466449047*^9}, 3.869296784945951*^9, 3.869296856376144*^9, 
   3.8692994406780653`*^9, 3.8692996693200827`*^9, 3.869302407155458*^9, 
   3.8693025154415073`*^9, 3.869302623316126*^9, 3.869310317773045*^9, 
   3.8693107637484093`*^9, 3.86931084016854*^9, 3.869552751944106*^9, 
   3.8695546358467607`*^9, 3.8695549988502617`*^9, 3.869555146104582*^9, 
   3.8695611634305363`*^9, 3.8695690819901237`*^9, 3.869569406377159*^9, {
   3.8695694401594343`*^9, 3.869569464095893*^9}},
 CellLabel->"Out[95]=",ExpressionUUID->"c49d9150-ff72-412f-9254-c71ff9d64d27"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate hard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868446283613234*^9, 
  3.8684462871734*^9}, {3.868447036013533*^9, 3.868447049013842*^9}, {
  3.8684475100383997`*^9, 
  3.868447512030362*^9}},ExpressionUUID->"2690b326-fb91-4c09-a746-\
cb42f085f60a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedHardNet"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}, {
   3.8684988741865396`*^9, 3.868498874592616*^9}, {3.868499185605513*^9, 
   3.8684992093586597`*^9}, 3.868501716401897*^9, {3.868514975845937*^9, 
   3.868514978733061*^9}, {3.868533857047714*^9, 3.8685338619606743`*^9}, {
   3.868592161602441*^9, 3.8685921624093037`*^9}, {3.868937316229151*^9, 
   3.8689373167579613`*^9}, {3.868937496012*^9, 3.86893752144172*^9}, {
   3.868937596537734*^9, 3.868937603616037*^9}, 3.868937747599498*^9, 
   3.868938118528597*^9, {3.868939027026972*^9, 3.8689390465517597`*^9}, {
   3.868976302381322*^9, 3.868976307139587*^9}, {3.869121279126927*^9, 
   3.869121279479135*^9}, {3.869227140760223*^9, 3.869227149194792*^9}, {
   3.8692798649790173`*^9, 3.869279876404379*^9}, {3.8692987446359167`*^9, 
   3.8692987456828957`*^9}, 3.869298793152401*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"b1cb4866-8078-4a67-9f71-658ee449d7d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hncwt", "=", 
   RowBox[{"HardNetClassify", "[", 
    RowBox[{"hnf", ",", "testData", ",", 
     RowBox[{"NetDecoder", "[", "targetEncoder", "]"}], ",", 
     RowBox[{
      RowBox[{"First", "[", "#", "]"}], "&"}], ",", 
     RowBox[{
      RowBox[{"Last", "[", "#", "]"}], "&"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.869284839496479*^9, {3.8692934957441673`*^9, 3.86929350723984*^9}, 
   3.8692935774265747`*^9, {3.869293613088286*^9, 3.8692936550243273`*^9}, {
   3.8692944972849493`*^9, 3.869294556962762*^9}, {3.869294872582518*^9, 
   3.869294912979456*^9}, {3.869294971357285*^9, 3.8692950293879957`*^9}, {
   3.869295060242984*^9, 3.8692950718682213`*^9}, {3.869297055293254*^9, 
   3.869297056155302*^9}, {3.8692987230967207`*^9, 3.8692987318391743`*^9}, 
   3.8692996779039917`*^9, {3.869300234495809*^9, 3.869300238804558*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"01ed0e0c-636b-4c6e-b44d-fbd0e4dc3837"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"eval", "=", 
   RowBox[{"HardNetClassifyEvaluation", "[", "hncwt", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval", "[", "\"\<Accuracy\>\"", "]"}]}], "Input",
 CellChangeTimes->{
  3.869277655279928*^9, {3.869277716385961*^9, 3.8692777380640306`*^9}, {
   3.869277958266292*^9, 3.86927796811233*^9}, {3.869278386117118*^9, 
   3.869278386462037*^9}, {3.869278514787964*^9, 3.86927851825823*^9}, {
   3.8692787116732492`*^9, 3.869278752387225*^9}, {3.869279742103284*^9, 
   3.869279791698346*^9}, {3.869281009188909*^9, 3.869281010497501*^9}, {
   3.869281858882139*^9, 3.869281912459756*^9}, {3.8692848378347797`*^9, 
   3.869284838188376*^9}, {3.8692986858888702`*^9, 3.869298692159895*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"448651c1-6ecd-4092-b372-99eea421b7e0"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{{3.869553146822407*^9, 3.86955317237323*^9}, 
   3.869554694294444*^9, 3.869555152594727*^9, 3.869555213770483*^9, 
   3.869561171284932*^9, 3.8695612206341457`*^9, 3.8695625235012817`*^9, 
   3.8695690931943617`*^9, 3.8695698133980637`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"a9212437-f808-44f9-a8c8-63a2209235e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Prediction\>\"", "->", 
         RowBox[{"trainedHardNet", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}]}], ",", 
        RowBox[{"\"\<Target\>\"", "->", 
         RowBox[{"Last", "[", "#", "]"}]}]}], "}"}], "]"}], "&"}], "/@", 
    "testData"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eval2", "=", 
   RowBox[{"HardNetClassifyEvaluation", "[", "hncwt2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval2", "[", "\"\<Accuracy\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.868975856473425*^9, 3.868975907241156*^9}, {
  3.8689759541160727`*^9, 3.868975992561887*^9}, {3.86897610020459*^9, 
  3.8689762477878838`*^9}, {3.86897641471817*^9, 3.8689764578527117`*^9}, {
  3.8690344006348124`*^9, 3.869034400937387*^9}, {3.86904291870931*^9, 
  3.8690429575864353`*^9}, {3.869121310826304*^9, 3.869121313255774*^9}, {
  3.869219749034794*^9, 3.869219752143724*^9}, {3.8692787783714046`*^9, 
  3.869278787906781*^9}, {3.8692948373831453`*^9, 3.869294848226471*^9}, {
  3.869298696937389*^9, 3.8692987383197727`*^9}},
 CellLabel->
  "In[103]:=",ExpressionUUID->"6dd644cf-0da7-47a9-a77b-1b4465ebc2d4"],

Cell[BoxData["0.5609756097560976`"], "Output",
 CellChangeTimes->{
  3.869034589981593*^9, 3.869035628358029*^9, 3.869036154844352*^9, 
   3.869036336039586*^9, 3.8690364370454893`*^9, 3.869040359402629*^9, 
   3.869040578854313*^9, 3.869041436196286*^9, 3.8690415773217983`*^9, 
   3.869041690219269*^9, 3.86904221419751*^9, {3.869042932618347*^9, 
   3.869042959198248*^9}, 3.869043287868927*^9, 3.869043565179612*^9, 
   3.8690437567886467`*^9, 3.869104986359107*^9, 3.8691051668148937`*^9, 
   3.869105434085964*^9, 3.869105669300963*^9, 3.869105996859831*^9, 
   3.869107199042075*^9, 3.869111759364867*^9, 3.869111970506278*^9, {
   3.869121299804845*^9, 3.869121316611709*^9}, 3.8692088360902042`*^9, 
   3.86920910005622*^9, 3.869209505631686*^9, 3.869210957184381*^9, 
   3.869211922653748*^9, 3.869213358735955*^9, 3.869214238649056*^9, 
   3.8692154737290087`*^9, 3.869216025505147*^9, 3.8692166649342213`*^9, 
   3.8692170219382353`*^9, 3.869217343847763*^9, 3.8692177067848663`*^9, 
   3.869218058215096*^9, 3.869219448602796*^9, 3.869219753147689*^9, 
   3.869278789622883*^9, 3.8692804206876087`*^9, 3.869280848042408*^9, {
   3.8692809962303677`*^9, 3.869281024988372*^9}, 3.869281073128274*^9, 
   3.869281189739897*^9, 3.869281431738426*^9, 3.86928155628786*^9, 
   3.869281841834961*^9, 3.869282052670763*^9, 3.8692847599449587`*^9, 
   3.869284810292136*^9, 3.8692936592620487`*^9, 3.869294848924099*^9, 
   3.869295075551647*^9, 3.869296799752571*^9, 3.869296864065097*^9, {
   3.8692986986071157`*^9, 3.869298738736906*^9}, 3.869299449532473*^9, 
   3.869299680960174*^9, 3.869300242854801*^9, 3.869300595945923*^9, 
   3.869301454574747*^9, 3.869302064899097*^9, 3.869302248427836*^9, 
   3.869302416939876*^9, 3.869302521702746*^9, 3.869302630550453*^9, 
   3.869305019568828*^9, 3.8693053909142237`*^9, 3.869310327258253*^9, 
   3.8693107709371634`*^9, 3.8693108470289307`*^9, 3.869311235483984*^9, 
   3.8695527726332607`*^9, 3.869552903637726*^9, 3.8695546955455236`*^9, 
   3.8695611726186743`*^9, 3.869562536932818*^9, 3.86956909440084*^9, 
   3.8695698167662477`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"758389b0-ef6d-4bb4-a4ac-0e8e4679c05f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{"ExtractWeights", "[", "trainedSoftNet", "]"}], "]"}], "]"}], 
      "/", "8"}], "/", "1024"}], "//", "N"}], ",", "\"\<Kilobytes\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.868965930761516*^9, 3.868965950743415*^9}, {
  3.8689659831088343`*^9, 3.868965987890936*^9}, {3.868966862559198*^9, 
  3.868966873437675*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"46bd4ab9-a162-44ba-ae1f-a8ab77e98e9d"],

Cell[BoxData[
 TemplateBox[{"0.0390625`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.868965937053772*^9, 3.868965951415412*^9}, {
   3.86896598435365*^9, 3.868965988537725*^9}, 3.8689668742972393`*^9, 
   3.868975214076693*^9, 3.8690319344803658`*^9, 3.869042968544685*^9, 
   3.869105674742872*^9, 3.8692091039680862`*^9, 3.869210963050486*^9, 
   3.8692119248338833`*^9, 3.869213361375114*^9, 3.869215475324996*^9, 
   3.869219517507464*^9, 3.869219756735735*^9, 3.869278792689138*^9, 
   3.8692804220574636`*^9, 3.8692808499930363`*^9, 3.869280998755859*^9, 
   3.869281074256464*^9, 3.869284760836566*^9, 3.869293660792145*^9, 
   3.8692968012889338`*^9, 3.869296866349676*^9, 3.869299451366023*^9, 
   3.869299682477159*^9, 3.869300597023597*^9, 3.8693026329139*^9, 
   3.8693050205921583`*^9, 3.869305391619213*^9, 3.8693103289215813`*^9, 
   3.869552773727091*^9, 3.8695546976668797`*^9, 3.869569095636631*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"29a44f59-dc87-4843-bfc9-a14ff27d4ff6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HardNetBooleanExpression", "[", 
   RowBox[{"hnf", ",", "inputSize"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.868966922827866*^9, 3.8689669876550913`*^9}, {
   3.869031937904567*^9, 3.869031943129614*^9}, {3.869121341559927*^9, 
   3.869121348104578*^9}, {3.869210965421191*^9, 3.869210971914925*^9}, 
   3.869219529425714*^9, 3.869219571948317*^9, 3.869296803018434*^9, 
   3.869299459793828*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"7fff87c5-1eb0-47f3-bdd7-2ed2265a28b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train standard net", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
  3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
  3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868966010330719*^9, 
  3.8689660115546227`*^9}},ExpressionUUID->"0a2ce80a-fe81-4612-966f-\
edb1d9a9f984"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classifier", "=", 
  RowBox[{"Classify", "[", 
   RowBox[{
    RowBox[{"trainData", "->", "\"\<Target\>\""}], ",", 
    RowBox[{"Method", "->", "\"\<NeuralNetwork\>\""}], ",", 
    RowBox[{"PerformanceGoal", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<Memory\>\"", ",", "\"\<Quality\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.868966042398858*^9, 3.868966127319048*^9}, {
  3.8689661632395573`*^9, 3.8689661961414433`*^9}, {3.868966341118702*^9, 
  3.868966368883732*^9}, {3.8689667784326067`*^9, 3.868966778957925*^9}, {
  3.8692109926431*^9, 3.869210996642137*^9}, {3.869293711665983*^9, 
  3.8692937224093533`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"3911ed4c-aaed-4c43-b0af-f520c100bb40"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {10.77890625, {0., 10.77890625}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.45], 
               PointSize[0.13], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], {
                GrayLevel[0.7], 
                
                PointBox[{{-0.9815166384819979, 
                 0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
             Ticks -> {None, None}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "10", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {10.77890625, {0., 10.77890625}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               GrayLevel[0.45], 
               PointSize[0.13], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], {
                GrayLevel[0.7], 
                
                PointBox[{{-0.9815166384819979, 
                 0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, AspectRatio -> 1, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {0, 0}, Background -> GrayLevel[0.94], 
             BaseStyle -> {FontFamily -> "Arial", 
               AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
             Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
             Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
             GridLines -> {None, None}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], LabelStyle -> {FontFamily -> "Arial"}, 
             Method -> {"ScalingFunctions" -> None}, 
             PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
             Ticks -> {None, None}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    TemplateBox[{"\"NumericalVector\"", 
                    StyleBox[
                    TemplateBox[{"\" (\"", "10", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "False", "True"}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"NeuralNetwork\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["160", "SummaryItem"]}]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[<|
   "ExampleNumber" -> 160, "ClassNumber" -> 2, 
    "Input" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|
          "Input" -> <|"Type" -> "NumericalVector", "Length" -> 10|>|>, 
         "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["FromDataset"], 
              MachineLearning`MLProcessor[
              "FromNamedFeatures", <|"FeatureNames" -> {"Input"}|>], 
              MachineLearning`MLProcessor[
              "Transpose", <|"FeatureNumber" -> 1|>], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"NumericalVector"}, "FeatureKeys" -> {"f1"},
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                 "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         False, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "SynthesizeMissingValues", <|
            "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Distribution" -> 
             LearnedDistribution[<|
               "ExampleNumber" -> 160, "Preprocessor" -> 
                MachineLearning`MLProcessor[
                 "ToMLDataset", <|
                  "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 10|>|>,
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Preprocessor" -> MachineLearning`MLProcessor["Identity"], 
                   "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                   "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
                "Processor" -> 
                MachineLearning`MLProcessor[
                 "Standardize", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {0.56875, 0.48125, 0.50625, 0.4625, 0.50625, 
                    0.5125000000000001, 0.51875, 0.5375, 0.4625, 0.50625}, 
                   "StandardDeviation" -> {0.4952508833914383, 
                    0.49964831381682856`, 0.4999609359740019, 
                    0.49859176687947826`, 0.4999609359740019, 
                    0.4998437255783051, 0.49964831381682856`, 
                    0.49859176687947826`, 0.49859176687947826`, 
                    0.4999609359740019}, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Version" -> {13.1, 0}, "ID" -> 3802836066599686302|>], 
                "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBMQPO/CFib1JlAgAAAAoAAAAKAAAAXuTX22F5r7/WgkQq5drZP+ion5ec
4Hy/m4cV4Z0p5L9xuBzUGZ+zv/35NRqHfrC/pTWsf5Lp1L88LDLmNITWv0t0
WqoA7du/5Nl0JYAasj8keSaAJKLWvwAefRovCtm/sa1Fmpo2bD8TGTM++x/M
P+qxYbhZ8LI/72QoELJA27/Du+69cnDhv+rxaUBM784/5sBgjKsQ17/bNiX5
/rGjP1bcul72b9k/ZV+F6H6n2T/3BceDii7Rv8BOJLTpZbe/G6fUlC8yqj9K
fZ08g1vCv/VBNj605ti/cnuklanc4j+jEvEKN/nRPzitU5akmHs/5XSjGAq9
078Fi/tr3QXAP+dbLDK3JtQ/XsYugtodwz8NXwTf2/jTv/JRW7UzeOQ/AnMw
npcP3b8BynzZNVm0P3FBYhUwocg/yw1OCb+ouz/mwBiNFSTbvznIinwzPt8/
ip5cBI7rwr/QAACw0gzSP8Z26dBrosQ//FpetFbmqr/7M7ZpRQOqP21AGJkp
Haa/zMsvoSPZmb/6zTYatWLlv4epktZ76ro/nkp0smqoz78NAW5RgwnWP1qc
RJqzONe/uacrv+Tr4T+oNYKgSK3VP2ijyltAoZ6/DtAOQuQy0j8/JcRRa0jC
v+6/GtmAiti/dnu9Jjkth78G5kuiOF/cvzdzwy2WPuG//RabBfFC0L90z5QT
H9jBvzAt7J1zncA/qeHyTeL80b+2On1WR+XRv0qb+d69U9Y/U2oEzO9b17/l
GtdKbI3Sv11tUvHfZ6C/FK9zWgJ+3T+LrhIIdAHZvztEp+HrBdG/PK3cR2kB
3b852EE9mfu7P+QvB/S5fMA/Tq6EQdom3j+9ucqxsYjDvzv/QDxWqtu/Cour
LZT2tT/IgzvvS2vHv3bi0LuxRL2/K5qd5jDw4z/qnn+N5VSEP7/UX/Sjo4e/
t2+0vlzqu78uZCT40LPXP5vQaZ0KI94/BOnyIkBK2b+wEMaI/fCrvwgcSflv
9di/4HzexD1k0r8h8DLstAHRv5+2ffHrIss/0ulb3qVL2D8pUd8qVsXgP9+5
K8Zd3c+/XTZQ3n94uT+3+LIO
                   "], 
                  "Precisions" -> {0.7257174478060948, 0.7980900832683177, 
                   0.8714991822739657, 0.8935443606188151, 0.9304648215319101,
                    1.0709663859255598`, 1.1255499499187143`, 
                   1.2640914768101463`, 1.3745785065496414`, 
                   1.4571090277638326`}, "NoisePrecision" -> None, 
                  "Processor" -> 
                  MachineLearning`MLProcessor[
                   "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.00009585191189936116, \
-0.000026002148434818574`, 
                    0.0004825802401201562, -0.0005366240962883858, \
-0.00022208729013047728`, -0.0003670023338188111, 0.00021840859062624424`, 
                    0.0006710405718560929, 
                    0.0008348456504142656, -0.0006369960470426359}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 6590044052364615545|>], 
                  "PostProcessor" -> 
                  MachineLearning`MLProcessor[
                   "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                   "Method" -> "Multinormal", 
                  "Options" -> <|
                   "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 10, "Options" -> <||>|>|>|>, 
                "TrainingInformation" -> <|
                 "Configurations" -> 
                  Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.0000958519118993556, \
-0.00002600214843478388, 
                    0.00048258024012009935`, -0.0005366240962883885, \
-0.0002220872901304509, -0.00036700233381877433`, 0.00021840859062626644`, 
                    0.0006710405718561214, 
                    0.0008348456504143454, -0.0006369960470426414}, 
                    "StandardDeviation" -> {0.9994830176439881, 
                    0.9994762044040622, 0.9999165235575326, 
                    0.9996411381088086, 1.0008781861972393`, 
                    0.9999896043691929, 1.0002561936817158`, 
                    1.0003024538807717`, 0.999273305652646, 
                    1.0004398496085913`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 10, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4154342778301398384|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                  Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                "NaiveImputer" -> 
                MachineLearning`MLProcessor[
                 "ImputeMissing", <|
                  "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                   "StructurePreserving" -> True, 
                   "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Mean" -> {-0.0000958519118993556, -0.00002600214843478388,
                     0.00048258024012009935`, -0.0005366240962883885, \
-0.0002220872901304509, -0.00036700233381877433`, 0.00021840859062626644`, 
                    0.0006710405718561214, 
                    0.0008348456504143454, -0.0006369960470426414}, 
                   "StandardDeviation" -> {0.9994830176439881, 
                    0.9994762044040622, 0.9999165235575326, 
                    0.9996411381088086, 1.0008781861972393`, 
                    0.9999896043691929, 1.0002561936817158`, 
                    1.0003024538807717`, 0.999273305652646, 
                    1.0004398496085913`}, "Method" -> "NaiveSampler", 
                   "VectorLength" -> 10, 
                   "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                   "Type" -> "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                   4154342778301398384|>], "InputDimension" -> 0, 
                "OutputDimension" -> 10, 
                "Log" -> <|
                 "Example" -> 
                  MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> {{0., 1., 1., 0., 0., 1., 1., 0., 0., 1.}}, 
                    "ID" -> 6072081202834183359|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                  "TrainingTime" -> 0.111475, "MaxTrainingMemory" -> 3204752, 
                  "DataMemory" -> 15760, "FunctionMemory" -> 35056, 
                  "LanguageVersion" -> {13.1, 0}, "Date" -> 
                  DateObject[{
                    2022, 8, 12, 12, 48, 42.754424`8.383556037572742}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                  "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                  "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                "LogPDFDistribution" -> 
                MachineLearning`TailedQuantileDistribution[<|
                  "Quantiles" -> {-0.9848310120311979, -0.9848310120311979, \
-0.8884471454831475, -0.7517462237678633, -0.6354660134088475, \
-0.5656403763149495, -0.511145001827811, -0.48625869883714107`, \
-0.4859572129774997, -0.45176085615485134`, -0.4334777402766434}, 
                   "LeftBoundary" -> -0.8884471454831475, "LeftScale" -> 
                   0.04819193327402521, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                Around[6.194730281079952, 0.6114759665574782], 
                "EntropySampleSize" -> 10|>], 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0}, 
             "ID" -> 895810465636885430|>], 
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {0.56875, 0.48125, 0.50625, 0.4625, 0.50625, 
              0.5125000000000001, 0.51875, 0.5375, 0.4625, 0.50625}, 
             "StandardDeviation" -> {0.4952508833914383, 0.49964831381682856`,
               0.4999609359740019, 0.49859176687947826`, 0.4999609359740019, 
              0.4998437255783051, 0.49964831381682856`, 0.49859176687947826`, 
              0.49859176687947826`, 0.4999609359740019}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 5833576423783485350|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"|>]|>, 
    "Output" -> <|
     "Preprocessor" -> 
      MachineLearning`MLProcessor[
       "ToMLDataset", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor[
              "WrapMLDataset", <|
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False|>]}|>], "ScalarFeature" -> 
         True, "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "ToVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 5750822634109734636|>], 
           MachineLearning`MLProcessor[
           "IntegerEncodeNominalVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
             "Index" -> {<|False -> 1, True -> 2|>}, "MissingCode" -> 0, 
             "Version" -> {13.1, 0}, "ID" -> 6153537743509581873, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
           MachineLearning`MLProcessor[
           "FromVector", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|
                "Type" -> "NominalVector", "Weight" -> 1, 
                 "SetSize" -> {2}|>|>, 
             "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 335429500972439703|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, 
             "Key" -> "f1", "Invertibility" -> "Perfect", 
             "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"|>], "ProbabilityPostprocessor" -> Identity, 
      "Name" -> "class", 
      "Marginal" -> <|
       False -> 0.5123456790123456, True -> 0.48765432098765427`|>|>, 
    "LabelSplitter" -> 
    MachineLearning`MLProcessor[
     "FeatureLabelSplit", <|
      "Processor" -> 
       MachineLearning`MLProcessor[
        "KeyIndexSplit", <|
         "Index" -> "Target", "Order" -> {"Input", "Target"}|>], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
    "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
    "Prior" -> Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
    "PerformanceGoal" -> {"Memory", "Quality"}, "BatchProcessing" -> 
    Automatic, 
    "Model" -> <|
     "Method" -> "NeuralNetwork", "Network" -> 
      NetChain[<|
        "Type" -> "Chain", 
         "Nodes" -> <|
          "1" -> <|"Type" -> "Linear", 
             "Arrays" -> <|"Weights" -> CompressedData["
1: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
GpR+tOLK7GLh/zSU4aU=
                "], "Biases" -> 
               RawArray["Real32",{0.007586608175188303, 
                 0.004130740184336901, -0.003439494641497731, 
                 0.0011237405706197023`, 
                 0.0015705602709203959`, -0.006614836398512125, \
-0.0018645193194970489`, -0.0019555322360247374`, 0.003394663566723466, 
                 0.0054919905960559845`, -0.00010034607839770615`, 
                 0.012683391571044922`, -0.004204754717648029, 
                 0.0018647263059392571`, -0.004093781113624573, 
                 0.0025232837069779634`, -0.010073653422296047`, \
-0.00446350546553731, -0.0005600734730251133, 
                 0.0027902403380721807`, -0.006823718082159758, \
-0.006846791598945856, 0.0032366779632866383`, 
                 0.004454604350030422, -0.007528161164373159, 
                 0.002654435345903039, 0.009209441021084785, 
                 0.0034437868744134903`, 0.0028226024005562067`, 
                 0.003014068817719817, 
                 0.006908661685883999, -0.00495754973962903, \
-0.0019600426312536, 0.0005209469236433506, 0.0006473163957707584, 
                 0.0013040441554039717`, 
                 0.00005686868462362327, -0.0014400897780433297`, 
                 0.005742934532463551, 
                 0.0076113673858344555`, -0.003591280896216631, 
                 0.000705207756254822, 0.003198676509782672, 
                 0.0007772960816510022, -0.012217092327773571`, 
                 0.011351937428116798`, -0.0017649834044277668`, \
-0.006030149757862091, -0.006369924638420343, 0.001736971433274448}]|>, 
             "Parameters" -> <|
              "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
               10, "$InputDimensions" -> {10}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`AtomT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
             "Parameters" -> <|
              "Function" -> 
               NeuralNetworks`ValidatedParameter[
                "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "3" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
             "Parameters" -> <|
              "DropoutProbability" -> 0.01, "Method" -> "AlphaDropout", 
               "OutputPorts" -> 
               NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "4" -> <|"Type" -> "Linear", 
             "Arrays" -> <|"Weights" -> CompressedData["
1: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
4w==
                "], "Biases" -> 
               RawArray["Real32",{
                 0.0026186557952314615`, -0.0016987576382234693`, 
                 0.0014968644827604294`, -0.003594791516661644, 
                 0.00006177173054311424, 0.003362583229318261, 
                 0.0002820208901539445, 
                 0.00363851897418499, -0.0010246483143419027`, 
                 0.009928206913173199, -0.004033091478049755, \
-0.002561482833698392, -0.004127171356230974, -0.0008917942177504301, \
-0.002043253742158413, 0.00002712264540605247, 0.00258741551078856, 
                 0.005019847769290209, 0.005651443265378475, 
                 0.0007637562230229378, 0.0010623190319165587`, 
                 0.005563205108046532, -0.001955776009708643, 
                 0.008689261972904205, -0.007955365814268589, \
-0.007604903541505337, 0.004579477943480015, 
                 0.0012351189507171512`, -0.005790797062218189, 
                 0.00014774220471736044`, -0.005985989235341549, \
-0.005370402242988348, 0.002337882062420249, -0.0027976972050964832`, 
                 0.004389017820358276, 
                 0.0014165359316393733`, -0.002496752655133605, \
-0.002623909153044224, 0.003312438726425171, 
                 0.003665399271994829, -0.004828959703445435, \
-0.0013859589817002416`, -0.0018373954808339477`, 
                 0.003334455192089081, -0.000723132339771837, 
                 0.0020369216799736023`, 
                 0.0006338009843602777, -0.0011910079047083855`, \
-0.008230804465711117, 0.0015584765933454037`}]|>, 
             "Parameters" -> <|
              "OutputDimensions" -> {50}, "$OutputSize" -> 50, "$InputSize" -> 
               50, "$InputDimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "5" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
             "Parameters" -> <|
              "Function" -> 
               NeuralNetworks`ValidatedParameter[
                "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
           "6" -> <|"Type" -> "Linear", 
             "Arrays" -> <|"Weights" -> CompressedData["
1:eJwBvgFB/iFib1JmAgAAAHMIAAAAUmF3QXJyYXlTBgAAAFJlYWwzMmwCAAAA
AgAAADIAAACFuCk+srunvdFpET5IMYE9GxuCPd1OzD3aaHE9XdbovULFbr6l
3Ng9SVU2vnFPQr5LPVu8pwm+PS9wBjyQTIk+dFDTPEXntDyKWdk9CXkfPl7B
Kz7JNxs+JZMSvrEJFz6yWUy+22BXvJ5Gtz1deu28y+/mveMy2D3eGxy+uIOC
vSc9BD27p/K9LLT+Owzicz3YfR2+/FgvPQH/fr68mR8+IysdPKmaBr4uYIw6
5Q5VPAoJtj2le0S9gdw9PZLKez4g1Ba+5/SXPefcML64OnK8SlScPfFmgj2b
C809sueWPK2TWT2FcQO+WdgovjV4hj1YtDs9DvewPFz3bT7g7Ks+H9cJPhhn
P74Asjg+/ib1vdN1WL2YWk++HymcvC681z2VUlk7kixEPaNv57yDyfQ90fz9
vJS8Tr6qL9Q7XmoPvmGoyjuIYQg+zzdJvgsfCj1VcZe9o2qvvADykbwvgDU9
J6uWvualST2WeCU+2SJ3PDpCRj5uCi69PoLnPR7lQr5Qwb09fV+0Plc7aL2+
1JG9zf/D2w==
                "], "Biases" -> 
               RawArray["Real32",{
                 0.0024223430082201958`, -0.002422342775389552}]|>, 
             "Parameters" -> <|
              "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 
               50, "$InputDimensions" -> {50}|>, 
             "Inputs" -> <|
              "Input" -> NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>,
              "Outputs" -> <|
              "Output" -> 
               NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
         "Edges" -> {
          NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Inputs", "Input"], 
           NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
           NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
           NeuralNetworks`NetPath["Outputs", "Output"] -> 
           NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"]}, 
         "Inputs" -> <|
          "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`AtomT]|>, 
         "Outputs" -> <|
          "Output" -> NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, <|
        "Version" -> "13.1.3", "Unstable" -> False|>], 
      "Training" -> <|
       "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
        TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
        "TotalTrainingTime" -> 0.90165, "MeanInputsPerSecond" -> 
        21294.2937947097|>, "InputType" -> "NumericalVector", "Processor" -> 
      MachineLearning`MLProcessor[
       "Sequence", <|
        "Input" -> <|"f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>,
          "Output" -> <|
          "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
         "Processors" -> {
           MachineLearning`MLProcessor[
           "Standardize", <|
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, 
             "Input" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Mean" -> {-0.0005023999945228452, 0.00007433176593497834, 
              0.0006188508015755739, -0.00008477018728076658, 
              0.0008792203394160481, 
              0.000050793602720121404`, -0.0000839088388257775, 
              0.0007638920487112067, 
              0.0003070956565740468, -0.000670738065477329}, 
             "StandardDeviation" -> {1.0007197495535074`, 1.0001870458459403`,
               0.9994399444092847, 0.9993622913548977, 0.9996632371621096, 
              1.0005274002904267`, 0.999976989224157, 1.0004247198328566`, 
              0.9998659727781949, 0.999493083073257}, 
             "Output" -> <|
              "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
             "Version" -> {13.1, 0}, "ID" -> 5627578033704932426|>], 
           MachineLearning`MLProcessor[
           "FirstValues", <|
            "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"|>]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"|>], 
      "FeatureNumber" -> 10, "Calibrator" -> None, "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], 
      "Options" -> <|
       "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>, 
        "NetworkDepth" -> <|"Value" -> 2, "Options" -> <||>|>, 
        "NumberOfParameters" -> <|"Value" -> 3100, "Options" -> <||>|>, 
        "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
        "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
        "Dropout" -> <|"Value" -> 0.01, "Options" -> <||>|>, 
        "NetInitializationMethod" -> <|
         "Value" -> Automatic, "Options" -> <||>|>, 
        "OptimizationMethod" -> <|
         "Value" -> {"ADAM", "L2Regularization" -> None}, "Options" -> <||>|>,
         MaxTrainingRounds -> <|"Value" -> 100, "Options" -> <||>|>, 
        ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
        TrainingProgressReporting -> <|"Value" -> None, "Options" -> <||>|>, 
        "NetTrainOptions" -> <|
         "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"}, 
          "Options" -> <||>|>, 
        "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
        "ValidationSetRatio" -> <|
         "Value" -> 0.15000000000000002`, "Options" -> <||>|>|>|>, 
    "TrainingInformation" -> <|
     "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
      Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
      "PreprocessingTime" -> 0.3856`6.037682018726764, "LossName" -> 
      "MeanCrossEntropy", "BestModelInformation" -> 
      Dataset[<|"MeanCrossEntropy" -> 
         Around[0.7132941076513983, 0.08207784707816934], "Accuracy" -> 
         Around[0.5606106804399626, 0.1231054725977526], "EvaluationTime" -> 
         0.0009882117688026185, "TestSize" -> 32, "ModelMemory" -> 60368, 
         "ModelUtility" -> -1.3623460347423109`, "TrainingSize" -> 128, 
         "TrainingTime" -> 0.7943282347242815, "TrainingMemory" -> 398040, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.7132941076513983, 0.05803780225416599]}, 
         "AccuracyHistory" -> {
           Around[0.5606106804399626, 0.08704871447504557]}, 
         "Configuration" -> {
          "NeuralNetwork", "NetworkType" -> "FullyConnected", "NetworkDepth" -> 
           2, "NumberOfParameters" -> 3100, "ActivationFunction" -> "SELU", 
           "L2Regularization" -> None, "Dropout" -> 0.01, 
           "NetInitializationMethod" -> Automatic, 
           "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
           MaxTrainingRounds -> 100, ValidationSet -> Automatic, 
           "EarlyStopping" -> False, TrainingProgressReporting -> None, 
           "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}, 
         "FinalTrainingSize" -> 160|>, 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
            TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
      Dataset[<|<|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[5.1745278727732025`, 0.710660934850662], "Accuracy" -> 
              Around[0.44625604829418686`, 0.055180203926597934`], 
              "EvaluationTime" -> 0.0011804791017922904`, "TestSize" -> 152, 
              "ModelMemory" -> 56272, "ModelUtility" -> -5.342420477746496, 
              "TrainingSize" -> 8, "TrainingTime" -> 3.1622776601683795`, 
              "TrainingMemory" -> 444792, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[5.1745278727732025`, 0.5025131661572743]}, 
              "AccuracyHistory" -> {
                Around[0.44625604829418686`, 0.03901829638375395]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0011804791017922904`, "MeanCrossEntropy" -> 
             Around[5.1745278727732025`, 0.710660934850662], "ModelMemory" -> 
             56272, "TrainingMemory" -> 444792, "TrainingTime" -> 
             8.221921916437788|>, "Index" -> 1|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.5455176631156329`, 0.26344121636134366`], "Accuracy" -> 
              Around[0.538237052163241, 0.06146290488827804], 
              "EvaluationTime" -> 0.0027539657749461486`, "TestSize" -> 130, 
              "ModelMemory" -> 60368, "ModelUtility" -> -3.032111100078587, 
              "TrainingSize" -> 30, "TrainingTime" -> 0.6309573444801932, 
              "TrainingMemory" -> 371824, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5455176631156329`, 0.18628107053313855`]}, 
              "AccuracyHistory" -> {
                Around[0.538237052163241, 0.0434608368379252]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.7132941076513983, 0.08207784707816934], "Accuracy" -> 
              Around[0.5606106804399626, 0.1231054725977526], 
              "EvaluationTime" -> 0.0009882117688026185, "TestSize" -> 32, 
              "ModelMemory" -> 60368, "ModelUtility" -> -1.3623460347423109`, 
              "TrainingSize" -> 128, "TrainingTime" -> 0.7943282347242815, 
              "TrainingMemory" -> 398040, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.7132941076513983, 0.05803780225416599]}, 
              "AccuracyHistory" -> {
                Around[0.5606106804399626, 0.08704871447504557]}|>, <|
             "MeanCrossEntropy" -> 
              Around[2.877479549546502, 0.38858605004838054`], "Accuracy" -> 
              Around[0.48303078358727053`, 0.0553376762000866], 
              "EvaluationTime" -> 0.0009325096914738674, "TestSize" -> 152, 
              "ModelMemory" -> 60368, "ModelUtility" -> -4.159693500103897, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.5011872336272722, 
              "TrainingMemory" -> 295744, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[2.877479549546502, 0.274771831063705]}, 
              "AccuracyHistory" -> {
                Around[0.48303078358727053`, 0.03912964609618665]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0009325096914738674, "MeanCrossEntropy" -> 
             Around[2.877479549546502, 0.38858605004838054`], "ModelMemory" -> 
             60368, "TrainingMemory" -> 295744, "TrainingTime" -> 
             1.4328569182838289`|>, "Index" -> 2|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 8100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 300|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.6469707462070442`, 0.4678470098200977], "Accuracy" -> 
              Around[0.46970158953087165`, 0.12379214994859225`], 
              "EvaluationTime" -> 0.0009882117688026185, "TestSize" -> 32, 
              "ModelMemory" -> 91752, "ModelUtility" -> -3.1590714144018075`, 
              "TrainingSize" -> 128, "TrainingTime" -> 2.51188643150958, 
              "TrainingMemory" -> 397088, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.6469707462070442`, 0.33081779320164034`]}, 
              "AccuracyHistory" -> {
                Around[0.46970158953087165`, 0.08753426868631149]}|>, <|
             "MeanCrossEntropy" -> 
              Around[3.7842704102204543`, 0.6679427217107834], "Accuracy" -> 
              Around[0.5482043846458831, 0.06094984786979444], 
              "EvaluationTime" -> 0.0007286039311515623, "TestSize" -> 130, 
              "ModelMemory" -> 91752, "ModelUtility" -> -4.781770803778026, 
              "TrainingSize" -> 30, "TrainingTime" -> 1.2589254117941673`, 
              "TrainingMemory" -> 375896, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.7842704102204543`, 0.47230682796589385`]}, 
              "AccuracyHistory" -> {
                Around[0.5482043846458831, 0.04309805074102009]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0007286039311515623, "MeanCrossEntropy" -> 
             Around[3.7842704102204543`, 0.6679427217107834], "ModelMemory" -> 
             91752, "TrainingMemory" -> 375896, "TrainingTime" -> 
             4.526167090380248|>, "Index" -> 3|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 18100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[4.675985439182979, 0.5662912603643842], "Accuracy" -> 
              Around[0.4605210292572121, 0.05557979016574277], 
              "EvaluationTime" -> 0.0005803592023889151, "TestSize" -> 152, 
              "ModelMemory" -> 162320, "ModelUtility" -> -5.277154515730969, 
              "TrainingSize" -> 8, "TrainingTime" -> 1., "TrainingMemory" -> 
              601512, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[4.675985439182979, 0.4004283903303328]}, 
              "AccuracyHistory" -> {
                Around[0.4605210292572121, 0.039300846523122095`]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.8112304544476486, 0.13894358697675882`], "Accuracy" -> 
              Around[0.5606106804399626, 0.1231054725977526], 
              "EvaluationTime" -> 0.003125, "TestSize" -> 32, "ModelMemory" -> 
              162320, "ModelUtility" -> -1.90781856606398, "TrainingSize" -> 
              128, "TrainingTime" -> 1.2589254117941673`, "TrainingMemory" -> 
              610848, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.8112304544476486, 0.09824795255364903]}, 
              "AccuracyHistory" -> {
                Around[0.5606106804399626, 0.08704871447504557]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.003125, "MeanCrossEntropy" -> 
             Around[0.8112304544476486, 0.13894358697675882`], "ModelMemory" -> 
             162320, "TrainingMemory" -> 610848, "TrainingTime" -> 
             2.573656764742709|>, "Index" -> 4|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[1.9285852429250843`, 0.6492543638659594], "Accuracy" -> 
              Around[0.5303076501369324, 0.12379201079532379`], 
              "EvaluationTime" -> 0.0012440849079796785`, "TestSize" -> 32, 
              "ModelMemory" -> 60368, "ModelUtility" -> -3.458660847734166, 
              "TrainingSize" -> 128, "TrainingTime" -> 6.309573444801933, 
              "TrainingMemory" -> 388616, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9285852429250843`, 0.459092163404578]}, 
              "AccuracyHistory" -> {
                Around[0.5303076501369324, 0.08753417029009174]}|>, <|
             "MeanCrossEntropy" -> 
              Around[4.251416473534061, 0.7820778441733018], "Accuracy" -> 
              Around[0.511000315694987, 0.06081556351355926], 
              "EvaluationTime" -> 0.0012545825726770717`, "TestSize" -> 130, 
              "ModelMemory" -> 60368, "ModelUtility" -> -4.982374472419596, 
              "TrainingSize" -> 30, "TrainingTime" -> 3.1622776601683795`, 
              "TrainingMemory" -> 298792, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.251416473534061, 0.5530125470306977]}, 
              "AccuracyHistory" -> {
                Around[0.511000315694987, 0.04300309736211893]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0012545825726770717`, "MeanCrossEntropy" -> 
             Around[4.251416473534061, 0.7820778441733018], "ModelMemory" -> 
             60368, "TrainingMemory" -> 298792, "TrainingTime" -> 
             11.369217701071342`|>, "Index" -> 5|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 18100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[4.570761773346241, 0.747586201055562], "Accuracy" -> 
              Around[0.5005419461081866, 0.0614169849836683], 
              "EvaluationTime" -> 0.0007078621353105369, "TestSize" -> 130, 
              "ModelMemory" -> 162320, "ModelUtility" -> -5.248145453637503, 
              "TrainingSize" -> 30, "TrainingTime" -> 5.011872336272724, 
              "TrainingMemory" -> 620672, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[4.570761773346241, 0.5286232722878775]}, 
              "AccuracyHistory" -> {
                Around[0.5005419461081866, 0.04342836656198421]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0007078621353105369, "MeanCrossEntropy" -> 
             Around[4.570761773346241, 0.747586201055562], "ModelMemory" -> 
             162320, "TrainingMemory" -> 620672, "TrainingTime" -> 
             13.030868074309083`|>, "Index" -> 6|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 8100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 100|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[3.570022988477733, 0.47056125103694063`], "Accuracy" -> 
              Around[0.46808812170326913`, 0.055391654477629025`], 
              "EvaluationTime" -> 0.0010729982529474953`, "TestSize" -> 152, 
              "ModelMemory" -> 99728, "ModelUtility" -> -4.667976437863389, 
              "TrainingSize" -> 8, "TrainingTime" -> 0.6309573444801932, 
              "TrainingMemory" -> 466072, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.570022988477733, 0.332737051571846]}, 
              "AccuracyHistory" -> {
                Around[0.46808812170326913`, 0.03916781450227367]}|>, <|
             "MeanCrossEntropy" -> 
              Around[1.6244495740942417`, 0.48773046377476875`], "Accuracy" -> 
              Around[0.5909137107429928, 0.12195270099035052`], 
              "EvaluationTime" -> 0.0012440849079796785`, "TestSize" -> 32, 
              "ModelMemory" -> 99728, "ModelUtility" -> -3.172558737016106, 
              "TrainingSize" -> 128, "TrainingTime" -> 1., "TrainingMemory" -> 
              495688, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[1.6244495740942417`, 0.34487751832639874`]}, 
              "AccuracyHistory" -> {
                Around[0.5909137107429928, 0.08623358185429224]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0012440849079796785`, "MeanCrossEntropy" -> 
             Around[1.6244495740942417`, 0.48773046377476875`], "ModelMemory" -> 
             99728, "TrainingMemory" -> 495688, "TrainingTime" -> 
             1.8809573444801932`|>, "Index" -> 7|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 4|>, 
             "NumberOfParameters" -> <|"Value" -> 8100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[6.033033423949699, 0.7752242879962036], "Accuracy" -> 
              Around[0.45343777380296446`, 0.05538878083813811], 
              "EvaluationTime" -> 0.0005377730260816514, "TestSize" -> 152, 
              "ModelMemory" -> 99728, "ModelUtility" -> -5.708634968507651, 
              "TrainingSize" -> 8, "TrainingTime" -> 3.981071705534973, 
              "TrainingMemory" -> 447448, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[6.033033423949699, 0.5481663509826286]}, 
              "AccuracyHistory" -> {
                Around[0.45343777380296446`, 0.03916578253230296]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0005377730260816514, "MeanCrossEntropy" -> 
             Around[6.033033423949699, 0.7752242879962036], "ModelMemory" -> 
             99728, "TrainingMemory" -> 447448, "TrainingTime" -> 
             10.35078643439093|>, "Index" -> 8|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 8|>, 
             "NumberOfParameters" -> <|"Value" -> 18100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> 0.01|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 1000|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[8.21220490974844, 0.9380313896761981], "Accuracy" -> 
              Around[0.45328643244984645`, 0.05573477005721432], 
              "EvaluationTime" -> 0.0006231480990112045, "TestSize" -> 152, 
              "ModelMemory" -> 185360, "ModelUtility" -> -6.424714064252742, 
              "TrainingSize" -> 8, "TrainingTime" -> 5.011872336272724, 
              "TrainingMemory" -> 766064, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[8.21220490974844, 0.6632883566058805]}, 
              "AccuracyHistory" -> {
                Around[0.45328643244984645`, 0.039410433855329184`]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.0006231480990112045, "MeanCrossEntropy" -> 
             Around[8.21220490974844, 0.9380313896761981], "ModelMemory" -> 
             185360, "TrainingMemory" -> 766064, "TrainingTime" -> 
             13.030868074309083`|>, "Index" -> 9|>, <|
          "Value" -> "NeuralNetwork", 
           "Options" -> <|
            "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
             "NetworkDepth" -> <|"Value" -> 2|>, 
             "NumberOfParameters" -> <|"Value" -> 3100|>, 
             "ActivationFunction" -> <|"Value" -> "SELU"|>, 
             "L2Regularization" -> <|"Value" -> None|>, 
             "Dropout" -> <|"Value" -> None|>, 
             "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
             "OptimizationMethod" -> <|
              "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
             MaxTrainingRounds -> <|"Value" -> 300|>, 
             ValidationSet -> <|"Value" -> Automatic|>, 
             "EarlyStopping" -> <|"Value" -> False|>, 
             TrainingProgressReporting -> <|"Value" -> None|>, 
             "NetTrainOptions" -> <|"Value" -> Automatic|>, 
             "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
          "Experiments" -> {<|
             "MeanCrossEntropy" -> 
              Around[3.1697124352322645`, 0.5842252170709464], "Accuracy" -> 
              Around[0.515670025051118, 0.06149043644573219], 
              "EvaluationTime" -> 0.0006124725700823033, "TestSize" -> 130, 
              "ModelMemory" -> 56272, "ModelUtility" -> -4.363456613895947, 
              "TrainingSize" -> 30, "TrainingTime" -> 1.2589254117941673`, 
              "TrainingMemory" -> 275280, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[3.1697124352322645`, 0.4131096127310489]}, 
              "AccuracyHistory" -> {
                Around[0.515670025051118, 0.04348030458889766]}|>, <|
             "MeanCrossEntropy" -> 
              Around[0.71315214729188, 0.08135402189964082], "Accuracy" -> 
              Around[0.5606106804399626, 0.1231054725977526], 
              "EvaluationTime" -> 0.003125, "TestSize" -> 32, "ModelMemory" -> 
              56272, "ModelUtility" -> -1.467224702434685, "TrainingSize" -> 
              128, "TrainingTime" -> 1.9952623149688797`, "TrainingMemory" -> 
              355120, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                Around[0.71315214729188, 0.05752598056203491]}, 
              "AccuracyHistory" -> {
                Around[0.5606106804399626, 0.08704871447504557]}|>}, 
           "PredictedPerformances" -> <|
            "EvaluationTime" -> 0.003125, "MeanCrossEntropy" -> 
             Around[0.71315214729188, 0.08135402189964082], "ModelMemory" -> 
             56272, "TrainingMemory" -> 355120, "TrainingTime" -> 
             3.753003305505267|>, "Index" -> 10|>|>, 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration["NeuralNetwork"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 160, 
      "PreprocessorEvaluationTime" -> 3.59375*^-6, "PreprocessorMemory" -> 
      49544, "InputDimension" -> 10, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.6928423179977401, "VariableBudget" -> 
      True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, "UserStop" -> 
      False, "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
      3.869297370424875`16.34020709736964*^9, "RoundPartitioning" -> 
      Dataset[{<|
         "TrainingSizes" -> 8, "TimeBudgets" -> 8.12172683094538, 
          "ElapsedTimes" -> 17.449253000000002`, "ExperimentCounts" -> 6|>, <|
         "TrainingSizes" -> 30, "TimeBudgets" -> 11.602466901350537`, 
          "ElapsedTimes" -> 13.665400000000002`, "ExperimentCounts" -> 5|>, <|
         "TrainingSizes" -> 128, "TimeBudgets" -> 16.57495271621505, 
          "ElapsedTimes" -> 16.218941, "ExperimentCounts" -> 6|>}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], <||>]|>, "AnomalyDetector" -> None,
     "Log" -> <|
     "Example" -> 
      MachineLearning`MLDataset[<|
        "f1" -> <|
          "Type" -> "NumericalVector", "Weight" -> 1, 
           "Values" -> {{0., 1., 1., 0., 0., 1., 1., 0., 0., 1.}}, "ID" -> 
           6049509919062986817|>|>, <|
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False|>], "TrainingTime" -> 48.925742, 
      "MaxTrainingMemory" -> 13959504, "DataMemory" -> 109616, 
      "FunctionMemory" -> 284600, "LanguageVersion" -> {13.1, 0}, "Date" -> 
      DateObject[{2022, 8, 12, 12, 49, 31.527207`8.251260478943298}, 
        "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, "ProcessorType" -> 
      "x86-64", "OperatingSystem" -> "Unix", "SystemWordLength" -> 64, 
      "Evaluations" -> {}|>|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.868966100693174*^9, 3.8689661308462877`*^9}, 
   3.8689661675114813`*^9, 3.8689663082865877`*^9, 3.868966775410522*^9, 
   3.868966840697682*^9, 3.869210988494907*^9, 3.869211542035791*^9, 
   3.869293712698818*^9, 3.869293771584032*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"ed75754f-b9ec-4db8-96c1-d9b71427f486"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"measurements", "=", 
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"classifier", ",", 
    RowBox[{"testData", "->", "\"\<Target\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8689661711004057`*^9, 3.868966172114195*^9}, {
  3.8692937803386793`*^9, 3.869293781129095*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"457e49e2-b67d-4087-9007-af29a3ee8d68"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   StyleBox[
    FrameBox[GridBox[{
       {
        ItemBox[
         FrameBox[
          StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
           StripOnInput->False,
           FontSize->12],
          FrameMargins->{{10, 5}, {-4, 2}},
          FrameStyle->None,
          StripOnInput->False],
         Alignment->{Left, Bottom},
         Background->RGBColor[0.96, 0.96, 0.96],
         Frame->{{False, False}, {True, False}},
         FrameStyle->Opacity[0.1],
         ItemSize->{Automatic, 1},
         StripOnInput->False]},
       {
        ItemBox[
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Classifier method"], 
                   TextCell["Classifier method"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               
               InterpretationBox[Cell[
                "NeuralNetwork",ExpressionUUID->
                 "df702fc8-9357-4d06-854d-c965acc04380"],
                TextCell["NeuralNetwork"]]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Number of test examples"], 
                   TextCell["Number of test examples"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], "40"},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Accuracy"], 
                   TextCell["Accuracy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"55.", "8."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    55.0000000000000071054`3., 7.9662750681569294287`3.]], 
                   ")"}], "\"%\"", "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  TagBox[
                   TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                   Annotation[#, "Accuracy if predicting the commonest class",
                     "Tooltip"]& ], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{
                 RowBox[{"(", 
                   InterpretationBox[
                    
                    TemplateBox[{"60.", "8."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[60.`3., 7.844645405527375992`3.]], ")"}], "\"%\"", 
                 "percent", "\"Percent\""},
                "QuantityPostfix"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Geometric mean of probabilities"], 
                   TextCell["Geometric mean of probabilities"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.4641594659226853103`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0378565480912961549`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.3884463697400930005`3.", "\", \"", 
                   "0.5398725621052775647`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.3884463697400930005`3., 
                   ", ", 0.5398725621052775647`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Mean cross entropy"], 
                   TextCell["Mean cross entropy"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TagBox[
                TooltipBox[
                 TemplateBox[{"0.7675271092416309227`3.", 
                   StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0814692065102869956`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                  "RowDefault"],
                 
                 TemplateBox[{
                  "\"95% confidence interval: [\"", 
                   "0.6045886962210569315`3.", "\", \"", 
                   "0.9304655222622049138`3.", "\"]\""}, "RowDefault"],
                 TooltipStyle->{}],
                Annotation[#, 
                 
                 Row[{"95% confidence interval: [", 0.6045886962210569315`3., 
                   ", ", 0.9304655222622049138`3., "]"}], "Tooltip"]& ]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Single evaluation time"], 
                   TextCell["Single evaluation time"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"4.81`", 
                 
                 RowBox[{
                  "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]",
                    "\"example\""}], "milliseconds per example", 
                 FractionBox["\"Milliseconds\"", "\"Examples\""]},
                "Quantity"]},
              {
               TemplateBox[{
                 TemplateBox[{5}, "Spacer1"], 
                 StyleBox[
                  InterpretationBox[
                   Cell["Batch evaluation speed"], 
                   TextCell["Batch evaluation speed"]], 
                  GrayLevel[0.4], StripOnInput -> False]},
                "RowDefault"], 
               TemplateBox[{"518.`", 
                 
                 RowBox[{
                  "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                   "\[InvisibleSpace]", "\"s\""}], "examples per second", 
                 FractionBox["\"Examples\"", "\"Seconds\""]},
                "Quantity"]},
              {
               ItemBox[
                
                GraphicsBox[
                 RasterBox[{{{1., 0.42, 0.}, {0.8978700888752068, 
                  0.5214532201704827, 0.005084762522782647}}, {{
                  0.8978700888752068, 0.5214532201704827, 
                  0.005084762522782647}, {0.9091744743232819, 
                  0.7728144692269537, 0.4277701645673613}}}, {{0, 0}, {2, 
                  2}}, {0, 1}],
                 Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "False", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.4583333333333333`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.6875`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.5499999999999999`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", False, 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.4583333333333333}], 
                    Row[{"Recall = ", 0.6875}], 
                    Row[{"FScore = ", 0.5499999999999999}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["13", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "13", "\" examples of \"", "True", 
                    "\" misclassified as \"", "False"}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.5416666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.5416666666666666`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{13, " examples of ", True, " misclassified as ", 
                    False}], 
                    Row[{"Column fraction = ", 0.5416666666666666}], 
                    Row[{"Row fraction = ", 0.5416666666666666}]}], 
                    "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "False", 
                    "\" misclassified as \"", "True"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.3125`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.3125`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{5, " examples of ", False, " misclassified as ", 
                    True}], 
                    Row[{"Column fraction = ", 0.3125}], 
                    Row[{"Row fraction = ", 0.3125}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "True", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.6875`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.4583333333333333`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.5499999999999999`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " examples of ", True, " correctly classified"}], 
                    Row[{"Precision = ", 0.6875}], 
                    Row[{"Recall = ", 0.4583333333333333}], 
                    Row[{"FScore = ", 0.5499999999999999}]}], "Tooltip"]& ]}, 
                   
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" of class \"", "False"},
                     "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.6875`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " of class ", False}], 
                    Row[{"Recall = ", 0.6875}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "24", "\" example\"", "\"s\"", "\" of class \"", "True"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.4583333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{24, " example", "s", " of class ", True}], 
                    Row[{"Recall = ", 0.4583333333333333}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "24", "\" example\"", "\"s\"", "\" classified as \"", 
                    "False"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.4583333333333333`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{24, " example", "s", " classified as ", False}], 
                    Row[{"Precision = ", 0.4583333333333333}]}], 
                    "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" classified as \"", 
                    "True"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.6875`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " classified as ", True}], 
                    Row[{"Precision = ", 0.6875}]}], "Tooltip"]& ]},
                 Frame->True,
                 FrameLabel->{
                   FormBox["\"predicted class\"", TraditionalForm], 
                   FormBox["\"actual class\"", TraditionalForm]},
                 FrameTicks->{{{{1.5, 
                    FormBox[
                    RotationBox["False", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["True", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{1.5, 
                    FormBox["16", TraditionalForm]}, {0.5, 
                    FormBox["24", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["24", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["16", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["False", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["True", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                 FrameTicksStyle->13,
                 GridLinesStyle->Directive[
                   GrayLevel[0.5, 0.4]],
                 ImageSize->181.2,
                 
                 Method->{
                  "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                   Automatic, 
                   "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                   "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                   Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                 PlotRangePadding->None],
                Alignment->Center,
                StripOnInput->False], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             ColumnsEqual->False,
             
             GridBoxAlignment->{
              "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
             GridBoxDividers->{"Columns" -> {False, {
                  Opacity[0.15]}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], 
                 Offset[1.1199999999999999`], {
                  Offset[1.75]}, 
                 Offset[0.27999999999999997`]}, "Rows" -> {
                 Offset[0.2], {
                  Offset[0.8]}, 
                 Offset[0.2]}}],
            "Grid"],
           FrameMargins->{{10, 10}, {10, 5}},
           FrameStyle->None,
           StripOnInput->False],
          Deploy,
          DefaultBaseStyle->"Deploy"],
         Alignment->Center,
         BaseStyle->{
          FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
           NumberMarks -> False, Deployed -> False},
         StripOnInput->False]}
      },
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.5599999999999999]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], 
          Offset[0.8], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[0.85],
     RoundingRadius->5,
     StripOnInput->False],
    StripOnInput->False,
    LineBreakWithin->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  ClassifierMeasurementsObject[<|
   "Model" -> ClassifierFunction[<|
      "ExampleNumber" -> 160, "ClassNumber" -> 2, 
       "Input" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|
             "Input" -> <|"Type" -> "NumericalVector", "Length" -> 10|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["FromDataset"], 
                 MachineLearning`MLProcessor[
                 "FromNamedFeatures", <|"FeatureNames" -> {"Input"}|>], 
                 MachineLearning`MLProcessor[
                 "Transpose", <|"FeatureNumber" -> 1|>], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"NumericalVector"}, 
                   "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                   "ExampleWeights" -> Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> False, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "SynthesizeMissingValues", <|
               "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Distribution" -> 
                LearnedDistribution[<|
                  "ExampleNumber" -> 160, "Preprocessor" -> 
                   MachineLearning`MLProcessor[
                    "ToMLDataset", <|
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Length" -> 10|>|>,
                     "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Preprocessor" -> MachineLearning`MLProcessor["Identity"],
                     "ScalarFeature" -> True, "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                    "Processor" -> 
                   MachineLearning`MLProcessor[
                    "Standardize", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {0.56875, 0.48125, 0.50625, 0.4625, 0.50625, 
                    0.5125000000000001, 0.51875, 0.5375, 0.4625, 0.50625}, 
                    "StandardDeviation" -> {0.4952508833914383, 
                    0.49964831381682856`, 0.4999609359740019, 
                    0.49859176687947826`, 0.4999609359740019, 
                    0.4998437255783051, 0.49964831381682856`, 
                    0.49859176687947826`, 0.49859176687947826`, 
                    0.4999609359740019}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 3802836066599686302|>], 
                   "PerformanceGoal" -> "DirectTraining", "BatchProcessing" -> 
                   Automatic, "Model" -> <|"RotationMatrix" -> CompressedData["
1:eJwBMQPO/CFib1JlAgAAAAoAAAAKAAAAXuTX22F5r7/WgkQq5drZP+ion5ec
4Hy/m4cV4Z0p5L9xuBzUGZ+zv/35NRqHfrC/pTWsf5Lp1L88LDLmNITWv0t0
WqoA7du/5Nl0JYAasj8keSaAJKLWvwAefRovCtm/sa1Fmpo2bD8TGTM++x/M
P+qxYbhZ8LI/72QoELJA27/Du+69cnDhv+rxaUBM784/5sBgjKsQ17/bNiX5
/rGjP1bcul72b9k/ZV+F6H6n2T/3BceDii7Rv8BOJLTpZbe/G6fUlC8yqj9K
fZ08g1vCv/VBNj605ti/cnuklanc4j+jEvEKN/nRPzitU5akmHs/5XSjGAq9
078Fi/tr3QXAP+dbLDK3JtQ/XsYugtodwz8NXwTf2/jTv/JRW7UzeOQ/AnMw
npcP3b8BynzZNVm0P3FBYhUwocg/yw1OCb+ouz/mwBiNFSTbvznIinwzPt8/
ip5cBI7rwr/QAACw0gzSP8Z26dBrosQ//FpetFbmqr/7M7ZpRQOqP21AGJkp
Haa/zMsvoSPZmb/6zTYatWLlv4epktZ76ro/nkp0smqoz78NAW5RgwnWP1qc
RJqzONe/uacrv+Tr4T+oNYKgSK3VP2ijyltAoZ6/DtAOQuQy0j8/JcRRa0jC
v+6/GtmAiti/dnu9Jjkth78G5kuiOF/cvzdzwy2WPuG//RabBfFC0L90z5QT
H9jBvzAt7J1zncA/qeHyTeL80b+2On1WR+XRv0qb+d69U9Y/U2oEzO9b17/l
GtdKbI3Sv11tUvHfZ6C/FK9zWgJ+3T+LrhIIdAHZvztEp+HrBdG/PK3cR2kB
3b852EE9mfu7P+QvB/S5fMA/Tq6EQdom3j+9ucqxsYjDvzv/QDxWqtu/Cour
LZT2tT/IgzvvS2vHv3bi0LuxRL2/K5qd5jDw4z/qnn+N5VSEP7/UX/Sjo4e/
t2+0vlzqu78uZCT40LPXP5vQaZ0KI94/BOnyIkBK2b+wEMaI/fCrvwgcSflv
9di/4HzexD1k0r8h8DLstAHRv5+2ffHrIss/0ulb3qVL2D8pUd8qVsXgP9+5
K8Zd3c+/XTZQ3n94uT+3+LIO
                    "], 
                    "Precisions" -> {0.7257174478060948, 0.7980900832683177, 
                    0.8714991822739657, 0.8935443606188151, 
                    0.9304648215319101, 1.0709663859255598`, 
                    1.1255499499187143`, 1.2640914768101463`, 
                    1.3745785065496414`, 1.4571090277638326`}, 
                    "NoisePrecision" -> None, "Processor" -> 
                    MachineLearning`MLProcessor[
                    "Center", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.00009585191189936116, \
-0.000026002148434818574`, 
                    0.0004825802401201562, -0.0005366240962883858, \
-0.00022208729013047728`, -0.0003670023338188111, 0.00021840859062624424`, 
                    0.0006710405718560929, 
                    0.0008348456504142656, -0.0006369960470426359}, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Version" -> {13.1, 0}, "ID" -> 6590044052364615545|>], 
                    "PostProcessor" -> 
                    MachineLearning`MLProcessor[
                    "FirstValues", <|
                    "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                    "Key" -> "f1", "Invertibility" -> "Perfect", 
                    "StructurePreserving" -> False, "Missing" -> "Allowed"|>],
                     "Method" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|
                    "Value" -> "Full", "Options" -> <||>|>, 
                    "IntrinsicDimension" -> <|
                    "Value" -> 10, "Options" -> <||>|>|>|>, 
                   "TrainingInformation" -> <|
                    "Configurations" -> 
                    Dataset[<|<|
                    "Value" -> "Multinormal", 
                    "Options" -> <|
                    "CovarianceType" -> <|"Value" -> "Full"|>, 
                    "IntrinsicDimension" -> <|"Value" -> "Heuristic"|>|>, 
                    "NaiveImputer" -> 
                    MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.0000958519118993556, \
-0.00002600214843478388, 
                    0.00048258024012009935`, -0.0005366240962883885, \
-0.0002220872901304509, -0.00036700233381877433`, 0.00021840859062626644`, 
                    0.0006710405718561214, 
                    0.0008348456504143454, -0.0006369960470426414}, 
                    "StandardDeviation" -> {0.9994830176439881, 
                    0.9994762044040622, 0.9999165235575326, 
                    0.9996411381088086, 1.0008781861972393`, 
                    0.9999896043691929, 1.0002561936817158`, 
                    1.0003024538807717`, 0.999273305652646, 
                    1.0004398496085913`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 10, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4154342778301398384|>], "EMIterations" -> 1|> -> <||>|>, 
                    TypeSystem`Assoc[
                    
                    TypeSystem`Struct[{
                    "Value", "Options", "NaiveImputer", "EMIterations"}, {
                    TypeSystem`Atom[String], 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Struct[{"Value"}, {
                    TypeSystem`Atom[String]}], 2], TypeSystem`AnyType, 
                    TypeSystem`Atom[Integer]}], 
                    TypeSystem`Assoc[
                    TypeSystem`UnknownType, TypeSystem`UnknownType, 
                    TypeSystem`AnyLength], 1], <||>], "BestModelInformation" -> 
                    Dataset[<|
                    "Configuration" -> {
                    "Multinormal", "CovarianceType" -> "Full", 
                    "IntrinsicDimension" -> "Heuristic"}, "ModelUtility" -> 
                    Missing[]|>, 
                    TypeSystem`Struct[{"Configuration", "ModelUtility"}, {
                    TypeSystem`Tuple[{
                    TypeSystem`Atom[String], TypeSystem`AnyType, 
                    TypeSystem`AnyType}], TypeSystem`UnknownType}], <||>]|>, 
                   "NaiveImputer" -> 
                   MachineLearning`MLProcessor[
                    "ImputeMissing", <|
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, 
                    "Input" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Mean" -> {-0.0000958519118993556, \
-0.00002600214843478388, 
                    0.00048258024012009935`, -0.0005366240962883885, \
-0.0002220872901304509, -0.00036700233381877433`, 0.00021840859062626644`, 
                    0.0006710405718561214, 
                    0.0008348456504143454, -0.0006369960470426414}, 
                    "StandardDeviation" -> {0.9994830176439881, 
                    0.9994762044040622, 0.9999165235575326, 
                    0.9996411381088086, 1.0008781861972393`, 
                    0.9999896043691929, 1.0002561936817158`, 
                    1.0003024538807717`, 0.999273305652646, 
                    1.0004398496085913`}, "Method" -> "NaiveSampler", 
                    "VectorLength" -> 10, 
                    "Output" -> <|
                    "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                    "Type" -> "NumericalVector", "Version" -> {13.1, 0}, "ID" -> 
                    4154342778301398384|>], "InputDimension" -> 0, 
                   "OutputDimension" -> 10, 
                   "Log" -> <|
                    "Example" -> 
                    MachineLearning`MLDataset[<|
                    "f1" -> <|
                    "Type" -> "NumericalVector", "Weight" -> 1, 
                    "Values" -> {{0., 1., 1., 0., 0., 1., 1., 0., 0., 1.}}, 
                    "ID" -> 6072081202834183359|>|>, <|
                    "ExampleNumber" -> 1, "ExampleWeights" -> 1, 
                    "LogDensityRatios" -> 0, "RawExample" -> False|>], 
                    "TrainingTime" -> 0.111475, "MaxTrainingMemory" -> 
                    3204752, "DataMemory" -> 15760, "FunctionMemory" -> 35056,
                     "LanguageVersion" -> {13.1, 0}, "Date" -> 
                    DateObject[{
                    2022, 8, 12, 12, 48, 42.754424`8.383556037572742}, 
                    "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
                    "SystemWordLength" -> 64, "Evaluations" -> {}|>, 
                   "LogPDFDistribution" -> 
                   MachineLearning`TailedQuantileDistribution[<|
                    "Quantiles" -> {-0.9848310120311979, -0.9848310120311979, \
-0.8884471454831475, -0.7517462237678633, -0.6354660134088475, \
-0.5656403763149495, -0.511145001827811, -0.48625869883714107`, \
-0.4859572129774997, -0.45176085615485134`, -0.4334777402766434}, 
                    "LeftBoundary" -> -0.8884471454831475, "LeftScale" -> 
                    0.04819193327402521, "LeftTailNorm" -> 0.2|>], "Entropy" -> 
                   Around[6.194730281079952, 0.6114759665574782], 
                   "EntropySampleSize" -> 10|>], 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "EvaluationStrategy" -> "ModeFinding", "Version" -> {13.1, 0},
                 "ID" -> 895810465636885430|>], 
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {0.56875, 0.48125, 0.50625, 0.4625, 0.50625, 
                 0.5125000000000001, 0.51875, 0.5375, 0.4625, 0.50625}, 
                "StandardDeviation" -> {0.4952508833914383, 
                 0.49964831381682856`, 0.4999609359740019, 
                 0.49859176687947826`, 0.4999609359740019, 0.4998437255783051,
                  0.49964831381682856`, 0.49859176687947826`, 
                 0.49859176687947826`, 0.4999609359740019}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 5833576423783485350|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
            "Missing" -> "Imputed"|>]|>, 
       "Output" -> <|
        "Preprocessor" -> 
         MachineLearning`MLProcessor[
          "ToMLDataset", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal"|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Preprocessor" -> 
            MachineLearning`MLProcessor["Sequence", <|"Processors" -> {
                 MachineLearning`MLProcessor["List"], 
                 MachineLearning`MLProcessor[
                 "WrapMLDataset", <|
                  "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                   "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                   Automatic, "RawExample" -> 
                   Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                   False|>]}|>], "ScalarFeature" -> True, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Output" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "ToVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|"f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>,
                 "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 5750822634109734636|>], 
              MachineLearning`MLProcessor[
              "IntegerEncodeNominalVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>, 
                "Index" -> {<|False -> 1, True -> 2|>}, "MissingCode" -> 0, 
                "Version" -> {13.1, 0}, "ID" -> 6153537743509581873, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NominalVector", "Weight" -> 1|>|>|>], 
              MachineLearning`MLProcessor[
              "FromVector", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|
                   "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {2}|>|>, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "Nominal", "Weight" -> 1|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 335429500972439703|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|
                 "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2|>, "Key" -> 
                "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                False, "Missing" -> "Allowed"|>]}, "Invertibility" -> 
            "Perfect", "StructurePreserving" -> False, "Missing" -> 
            "Allowed"|>], "ProbabilityPostprocessor" -> Identity, "Name" -> 
         "class", 
         "Marginal" -> <|
          False -> 0.5123456790123456, True -> 0.48765432098765427`|>|>, 
       "LabelSplitter" -> 
       MachineLearning`MLProcessor[
        "FeatureLabelSplit", <|
         "Processor" -> 
          MachineLearning`MLProcessor[
           "KeyIndexSplit", <|
            "Index" -> "Target", "Order" -> {"Input", "Target"}|>], 
          "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
       "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
       "Prior" -> Automatic, "Utility" -> 
       SparseArray[
        Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
       "Threshold" -> 0, "TieBreaker" -> RandomChoice, 
       "PerformanceGoal" -> {"Memory", "Quality"}, "BatchProcessing" -> 
       Automatic, 
       "Model" -> <|
        "Method" -> "NeuralNetwork", "Network" -> 
         NetChain[<|
           "Type" -> "Chain", 
            "Nodes" -> <|
             "1" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
GpR+tOLK7GLh/zSU4aU=
                   "], "Biases" -> 
                  RawArray["Real32",{0.007586608175188303, 
                    0.004130740184336901, -0.003439494641497731, 
                    0.0011237405706197023`, 
                    0.0015705602709203959`, -0.006614836398512125, \
-0.0018645193194970489`, -0.0019555322360247374`, 0.003394663566723466, 
                    0.0054919905960559845`, -0.00010034607839770615`, 
                    0.012683391571044922`, -0.004204754717648029, 
                    0.0018647263059392571`, -0.004093781113624573, 
                    0.0025232837069779634`, -0.010073653422296047`, \
-0.00446350546553731, -0.0005600734730251133, 
                    0.0027902403380721807`, -0.006823718082159758, \
-0.006846791598945856, 0.0032366779632866383`, 
                    0.004454604350030422, -0.007528161164373159, 
                    0.002654435345903039, 0.009209441021084785, 
                    0.0034437868744134903`, 0.0028226024005562067`, 
                    0.003014068817719817, 
                    0.006908661685883999, -0.00495754973962903, \
-0.0019600426312536, 0.0005209469236433506, 0.0006473163957707584, 
                    0.0013040441554039717`, 
                    0.00005686868462362327, -0.0014400897780433297`, 
                    0.005742934532463551, 
                    0.0076113673858344555`, -0.003591280896216631, 
                    0.000705207756254822, 0.003198676509782672, 
                    0.0007772960816510022, -0.012217092327773571`, 
                    0.011351937428116798`, -0.0017649834044277668`, \
-0.006030149757862091, -0.006369924638420343, 0.001736971433274448}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                  "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{10}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "2" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[
                   "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "3" -> <|"Type" -> "Dropout", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "DropoutProbability" -> 0.01, "Method" -> "AlphaDropout", 
                  "OutputPorts" -> 
                  NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "4" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1: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
4w==
                   "], "Biases" -> 
                  RawArray["Real32",{
                    0.0026186557952314615`, -0.0016987576382234693`, 
                    0.0014968644827604294`, -0.003594791516661644, 
                    0.00006177173054311424, 0.003362583229318261, 
                    0.0002820208901539445, 
                    0.00363851897418499, -0.0010246483143419027`, 
                    0.009928206913173199, -0.004033091478049755, \
-0.002561482833698392, -0.004127171356230974, -0.0008917942177504301, \
-0.002043253742158413, 0.00002712264540605247, 0.00258741551078856, 
                    0.005019847769290209, 0.005651443265378475, 
                    0.0007637562230229378, 0.0010623190319165587`, 
                    0.005563205108046532, -0.001955776009708643, 
                    0.008689261972904205, -0.007955365814268589, \
-0.007604903541505337, 0.004579477943480015, 
                    0.0012351189507171512`, -0.005790797062218189, 
                    0.00014774220471736044`, -0.005985989235341549, \
-0.005370402242988348, 0.002337882062420249, -0.0027976972050964832`, 
                    0.004389017820358276, 
                    0.0014165359316393733`, -0.002496752655133605, \
-0.002623909153044224, 0.003312438726425171, 
                    0.003665399271994829, -0.004828959703445435, \
-0.0013859589817002416`, -0.0018373954808339477`, 
                    0.003334455192089081, -0.000723132339771837, 
                    0.0020369216799736023`, 
                    0.0006338009843602777, -0.0011910079047083855`, \
-0.008230804465711117, 0.0015584765933454037`}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                  "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "5" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[
                   "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
              "6" -> <|"Type" -> "Linear", 
                "Arrays" -> <|"Weights" -> CompressedData["
1:eJwBvgFB/iFib1JmAgAAAHMIAAAAUmF3QXJyYXlTBgAAAFJlYWwzMmwCAAAA
AgAAADIAAACFuCk+srunvdFpET5IMYE9GxuCPd1OzD3aaHE9XdbovULFbr6l
3Ng9SVU2vnFPQr5LPVu8pwm+PS9wBjyQTIk+dFDTPEXntDyKWdk9CXkfPl7B
Kz7JNxs+JZMSvrEJFz6yWUy+22BXvJ5Gtz1deu28y+/mveMy2D3eGxy+uIOC
vSc9BD27p/K9LLT+Owzicz3YfR2+/FgvPQH/fr68mR8+IysdPKmaBr4uYIw6
5Q5VPAoJtj2le0S9gdw9PZLKez4g1Ba+5/SXPefcML64OnK8SlScPfFmgj2b
C809sueWPK2TWT2FcQO+WdgovjV4hj1YtDs9DvewPFz3bT7g7Ks+H9cJPhhn
P74Asjg+/ib1vdN1WL2YWk++HymcvC681z2VUlk7kixEPaNv57yDyfQ90fz9
vJS8Tr6qL9Q7XmoPvmGoyjuIYQg+zzdJvgsfCj1VcZe9o2qvvADykbwvgDU9
J6uWvualST2WeCU+2SJ3PDpCRj5uCi69PoLnPR7lQr5Qwb09fV+0Plc7aL2+
1JG9zf/D2w==
                   "], "Biases" -> 
                  RawArray["Real32",{
                    0.0024223430082201958`, -0.002422342775389552}]|>, 
                "Parameters" -> <|
                 "OutputDimensions" -> {2}, "$OutputSize" -> 2, "$InputSize" -> 
                  50, "$InputDimensions" -> {50}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"]}, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{10}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, <|
           "Version" -> "13.1.3", "Unstable" -> False|>], 
         "Training" -> <|
          "Optimizer" -> {"ADAM", "L2Regularization" -> None}, 
           TrainingProgressFunction -> {Null& , "Interval" -> 1}, 
           "TotalTrainingTime" -> 0.90165, "MeanInputsPerSecond" -> 
           21294.2937947097|>, "InputType" -> "NumericalVector", "Processor" -> 
         MachineLearning`MLProcessor[
          "Sequence", <|
           "Input" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Output" -> <|
             "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
            "Processors" -> {
              MachineLearning`MLProcessor[
              "Standardize", <|
               "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                "StructurePreserving" -> True, 
                "Input" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Mean" -> {-0.0005023999945228452, 0.00007433176593497834, 
                 0.0006188508015755739, -0.00008477018728076658, 
                 0.0008792203394160481, 
                 0.000050793602720121404`, -0.0000839088388257775, 
                 0.0007638920487112067, 
                 0.0003070956565740468, -0.000670738065477329}, 
                "StandardDeviation" -> {1.0007197495535074`, 
                 1.0001870458459403`, 0.9994399444092847, 0.9993622913548977, 
                 0.9996632371621096, 1.0005274002904267`, 0.999976989224157, 
                 1.0004247198328566`, 0.9998659727781949, 0.999493083073257}, 
                "Output" -> <|
                 "f1" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>|>, 
                "Version" -> {13.1, 0}, "ID" -> 5627578033704932426|>], 
              MachineLearning`MLProcessor[
              "FirstValues", <|
               "Info" -> <|"Type" -> "NumericalVector", "Weight" -> 1|>, 
                "Key" -> "f1", "Invertibility" -> "Perfect", 
                "StructurePreserving" -> False, "Missing" -> "Allowed"|>]}, 
            "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
            "Missing" -> "Allowed"|>], "FeatureNumber" -> 10, "Calibrator" -> 
         None, "PostProcessor" -> MachineLearning`MLProcessor["Identity"], 
         "Options" -> <|
          "NetworkType" -> <|"Value" -> "FullyConnected", "Options" -> <||>|>,
            "NetworkDepth" -> <|"Value" -> 2, "Options" -> <||>|>, 
           "NumberOfParameters" -> <|"Value" -> 3100, "Options" -> <||>|>, 
           "ActivationFunction" -> <|"Value" -> "SELU", "Options" -> <||>|>, 
           "L2Regularization" -> <|"Value" -> None, "Options" -> <||>|>, 
           "Dropout" -> <|"Value" -> 0.01, "Options" -> <||>|>, 
           "NetInitializationMethod" -> <|
            "Value" -> Automatic, "Options" -> <||>|>, 
           "OptimizationMethod" -> <|
            "Value" -> {"ADAM", "L2Regularization" -> None}, 
             "Options" -> <||>|>, 
           MaxTrainingRounds -> <|"Value" -> 100, "Options" -> <||>|>, 
           ValidationSet -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "EarlyStopping" -> <|"Value" -> False, "Options" -> <||>|>, 
           TrainingProgressReporting -> <|
            "Value" -> None, "Options" -> <||>|>, 
           "NetTrainOptions" -> <|
            "Value" -> {LearningRateMultipliers -> {}, TargetDevice -> "CPU"},
              "Options" -> <||>|>, 
           "LossFunction" -> <|"Value" -> Automatic, "Options" -> <||>|>, 
           "ValidationSetRatio" -> <|
            "Value" -> 0.15000000000000002`, "Options" -> <||>|>|>|>, 
       "TrainingInformation" -> <|
        "Reporting" -> None, "TrainingFunction" -> Classify, "EMIterations" -> 
         Missing["KeyAbsent", "EMIterations"], "ProcessorEntropyShift" -> 0, 
         "PreprocessingTime" -> 0.3856`6.037682018726764, "LossName" -> 
         "MeanCrossEntropy", "BestModelInformation" -> 
         Dataset[<|
           "MeanCrossEntropy" -> 
            Around[0.7132941076513983, 0.08207784707816934], "Accuracy" -> 
            Around[0.5606106804399626, 0.1231054725977526], "EvaluationTime" -> 
            0.0009882117688026185, "TestSize" -> 32, "ModelMemory" -> 60368, 
            "ModelUtility" -> -1.3623460347423109`, "TrainingSize" -> 128, 
            "TrainingTime" -> 0.7943282347242815, "TrainingMemory" -> 398040, 
            "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
              Around[0.7132941076513983, 0.05803780225416599]}, 
            "AccuracyHistory" -> {
              Around[0.5606106804399626, 0.08704871447504557]}, 
            "Configuration" -> {
             "NeuralNetwork", "NetworkType" -> "FullyConnected", 
              "NetworkDepth" -> 2, "NumberOfParameters" -> 3100, 
              "ActivationFunction" -> "SELU", "L2Regularization" -> None, 
              "Dropout" -> 0.01, "NetInitializationMethod" -> Automatic, 
              "OptimizationMethod" -> {"ADAM", "L2Regularization" -> None}, 
              MaxTrainingRounds -> 100, ValidationSet -> Automatic, 
              "EarlyStopping" -> False, TrainingProgressReporting -> None, 
              "NetTrainOptions" -> Automatic, "LossFunction" -> Automatic}, 
            "FinalTrainingSize" -> 160|>, 
           
           TypeSystem`Struct[{
            "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
             "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
             "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
             "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
            TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Vector[TypeSystem`AnyType, 1], 
             TypeSystem`Tuple[{
               TypeSystem`Atom[String], TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType, TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`AnyType}], 
             TypeSystem`Atom[Integer]}], <||>], "Configurations" -> 
         Dataset[<|<|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[5.1745278727732025`, 0.710660934850662], "Accuracy" -> 
                 Around[0.44625604829418686`, 0.055180203926597934`], 
                 "EvaluationTime" -> 0.0011804791017922904`, "TestSize" -> 
                 152, "ModelMemory" -> 56272, 
                 "ModelUtility" -> -5.342420477746496, "TrainingSize" -> 8, 
                 "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
                 444792, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[5.1745278727732025`, 0.5025131661572743]}, 
                 "AccuracyHistory" -> {
                   Around[0.44625604829418686`, 0.03901829638375395]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0011804791017922904`, "MeanCrossEntropy" -> 
                Around[5.1745278727732025`, 0.710660934850662], "ModelMemory" -> 
                56272, "TrainingMemory" -> 444792, "TrainingTime" -> 
                8.221921916437788|>, "Index" -> 1|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.5455176631156329`, 0.26344121636134366`], 
                 "Accuracy" -> Around[0.538237052163241, 0.06146290488827804],
                  "EvaluationTime" -> 0.0027539657749461486`, "TestSize" -> 
                 130, "ModelMemory" -> 60368, 
                 "ModelUtility" -> -3.032111100078587, "TrainingSize" -> 30, 
                 "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                 371824, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.5455176631156329`, 0.18628107053313855`]}, 
                 "AccuracyHistory" -> {
                   Around[0.538237052163241, 0.0434608368379252]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.7132941076513983, 0.08207784707816934], "Accuracy" -> 
                 Around[0.5606106804399626, 0.1231054725977526], 
                 "EvaluationTime" -> 0.0009882117688026185, "TestSize" -> 32, 
                 "ModelMemory" -> 60368, 
                 "ModelUtility" -> -1.3623460347423109`, "TrainingSize" -> 
                 128, "TrainingTime" -> 0.7943282347242815, "TrainingMemory" -> 
                 398040, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.7132941076513983, 0.05803780225416599]}, 
                 "AccuracyHistory" -> {
                   Around[0.5606106804399626, 0.08704871447504557]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[2.877479549546502, 0.38858605004838054`], "Accuracy" -> 
                 Around[0.48303078358727053`, 0.0553376762000866], 
                 "EvaluationTime" -> 0.0009325096914738674, "TestSize" -> 152,
                  "ModelMemory" -> 60368, 
                 "ModelUtility" -> -4.159693500103897, "TrainingSize" -> 8, 
                 "TrainingTime" -> 0.5011872336272722, "TrainingMemory" -> 
                 295744, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[2.877479549546502, 0.274771831063705]}, 
                 "AccuracyHistory" -> {
                   Around[0.48303078358727053`, 0.03912964609618665]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0009325096914738674, "MeanCrossEntropy" -> 
                Around[2.877479549546502, 0.38858605004838054`], 
                "ModelMemory" -> 60368, "TrainingMemory" -> 295744, 
                "TrainingTime" -> 1.4328569182838289`|>, "Index" -> 2|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 8100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 300|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.6469707462070442`, 0.4678470098200977], "Accuracy" -> 
                 Around[0.46970158953087165`, 0.12379214994859225`], 
                 "EvaluationTime" -> 0.0009882117688026185, "TestSize" -> 32, 
                 "ModelMemory" -> 91752, 
                 "ModelUtility" -> -3.1590714144018075`, "TrainingSize" -> 
                 128, "TrainingTime" -> 2.51188643150958, "TrainingMemory" -> 
                 397088, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.6469707462070442`, 0.33081779320164034`]}, 
                 "AccuracyHistory" -> {
                   Around[0.46970158953087165`, 0.08753426868631149]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[3.7842704102204543`, 0.6679427217107834], "Accuracy" -> 
                 Around[0.5482043846458831, 0.06094984786979444], 
                 "EvaluationTime" -> 0.0007286039311515623, "TestSize" -> 130,
                  "ModelMemory" -> 91752, 
                 "ModelUtility" -> -4.781770803778026, "TrainingSize" -> 30, 
                 "TrainingTime" -> 1.2589254117941673`, "TrainingMemory" -> 
                 375896, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.7842704102204543`, 0.47230682796589385`]}, 
                 "AccuracyHistory" -> {
                   Around[0.5482043846458831, 0.04309805074102009]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0007286039311515623, "MeanCrossEntropy" -> 
                Around[3.7842704102204543`, 0.6679427217107834], 
                "ModelMemory" -> 91752, "TrainingMemory" -> 375896, 
                "TrainingTime" -> 4.526167090380248|>, "Index" -> 3|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 18100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[4.675985439182979, 0.5662912603643842], "Accuracy" -> 
                 Around[0.4605210292572121, 0.05557979016574277], 
                 "EvaluationTime" -> 0.0005803592023889151, "TestSize" -> 152,
                  "ModelMemory" -> 162320, 
                 "ModelUtility" -> -5.277154515730969, "TrainingSize" -> 8, 
                 "TrainingTime" -> 1., "TrainingMemory" -> 601512, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[4.675985439182979, 0.4004283903303328]}, 
                 "AccuracyHistory" -> {
                   Around[0.4605210292572121, 0.039300846523122095`]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.8112304544476486, 0.13894358697675882`], "Accuracy" -> 
                 Around[0.5606106804399626, 0.1231054725977526], 
                 "EvaluationTime" -> 0.003125, "TestSize" -> 32, 
                 "ModelMemory" -> 162320, "ModelUtility" -> -1.90781856606398,
                  "TrainingSize" -> 128, "TrainingTime" -> 
                 1.2589254117941673`, "TrainingMemory" -> 610848, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.8112304544476486, 0.09824795255364903]}, 
                 "AccuracyHistory" -> {
                   Around[0.5606106804399626, 0.08704871447504557]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.003125, "MeanCrossEntropy" -> 
                Around[0.8112304544476486, 0.13894358697675882`], 
                "ModelMemory" -> 162320, "TrainingMemory" -> 610848, 
                "TrainingTime" -> 2.573656764742709|>, "Index" -> 4|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[1.9285852429250843`, 0.6492543638659594], "Accuracy" -> 
                 Around[0.5303076501369324, 0.12379201079532379`], 
                 "EvaluationTime" -> 0.0012440849079796785`, "TestSize" -> 32,
                  "ModelMemory" -> 60368, 
                 "ModelUtility" -> -3.458660847734166, "TrainingSize" -> 128, 
                 "TrainingTime" -> 6.309573444801933, "TrainingMemory" -> 
                 388616, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.9285852429250843`, 0.459092163404578]}, 
                 "AccuracyHistory" -> {
                   Around[0.5303076501369324, 0.08753417029009174]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[4.251416473534061, 0.7820778441733018], "Accuracy" -> 
                 Around[0.511000315694987, 0.06081556351355926], 
                 "EvaluationTime" -> 0.0012545825726770717`, "TestSize" -> 
                 130, "ModelMemory" -> 60368, 
                 "ModelUtility" -> -4.982374472419596, "TrainingSize" -> 30, 
                 "TrainingTime" -> 3.1622776601683795`, "TrainingMemory" -> 
                 298792, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[4.251416473534061, 0.5530125470306977]}, 
                 "AccuracyHistory" -> {
                   Around[0.511000315694987, 0.04300309736211893]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0012545825726770717`, "MeanCrossEntropy" -> 
                Around[4.251416473534061, 0.7820778441733018], "ModelMemory" -> 
                60368, "TrainingMemory" -> 298792, "TrainingTime" -> 
                11.369217701071342`|>, "Index" -> 5|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 18100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[4.570761773346241, 0.747586201055562], "Accuracy" -> 
                 Around[0.5005419461081866, 0.0614169849836683], 
                 "EvaluationTime" -> 0.0007078621353105369, "TestSize" -> 130,
                  "ModelMemory" -> 162320, 
                 "ModelUtility" -> -5.248145453637503, "TrainingSize" -> 30, 
                 "TrainingTime" -> 5.011872336272724, "TrainingMemory" -> 
                 620672, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[4.570761773346241, 0.5286232722878775]}, 
                 "AccuracyHistory" -> {
                   Around[0.5005419461081866, 0.04342836656198421]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0007078621353105369, "MeanCrossEntropy" -> 
                Around[4.570761773346241, 0.747586201055562], "ModelMemory" -> 
                162320, "TrainingMemory" -> 620672, "TrainingTime" -> 
                13.030868074309083`|>, "Index" -> 6|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 8100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 100|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.570022988477733, 0.47056125103694063`], "Accuracy" -> 
                 Around[0.46808812170326913`, 0.055391654477629025`], 
                 "EvaluationTime" -> 0.0010729982529474953`, "TestSize" -> 
                 152, "ModelMemory" -> 99728, 
                 "ModelUtility" -> -4.667976437863389, "TrainingSize" -> 8, 
                 "TrainingTime" -> 0.6309573444801932, "TrainingMemory" -> 
                 466072, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.570022988477733, 0.332737051571846]}, 
                 "AccuracyHistory" -> {
                   Around[0.46808812170326913`, 0.03916781450227367]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[1.6244495740942417`, 0.48773046377476875`], 
                 "Accuracy" -> 
                 Around[0.5909137107429928, 0.12195270099035052`], 
                 "EvaluationTime" -> 0.0012440849079796785`, "TestSize" -> 32,
                  "ModelMemory" -> 99728, 
                 "ModelUtility" -> -3.172558737016106, "TrainingSize" -> 128, 
                 "TrainingTime" -> 1., "TrainingMemory" -> 495688, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[1.6244495740942417`, 0.34487751832639874`]}, 
                 "AccuracyHistory" -> {
                   Around[0.5909137107429928, 0.08623358185429224]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0012440849079796785`, "MeanCrossEntropy" -> 
                Around[1.6244495740942417`, 0.48773046377476875`], 
                "ModelMemory" -> 99728, "TrainingMemory" -> 495688, 
                "TrainingTime" -> 1.8809573444801932`|>, "Index" -> 7|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 4|>, 
                "NumberOfParameters" -> <|"Value" -> 8100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[6.033033423949699, 0.7752242879962036], "Accuracy" -> 
                 Around[0.45343777380296446`, 0.05538878083813811], 
                 "EvaluationTime" -> 0.0005377730260816514, "TestSize" -> 152,
                  "ModelMemory" -> 99728, 
                 "ModelUtility" -> -5.708634968507651, "TrainingSize" -> 8, 
                 "TrainingTime" -> 3.981071705534973, "TrainingMemory" -> 
                 447448, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[6.033033423949699, 0.5481663509826286]}, 
                 "AccuracyHistory" -> {
                   Around[0.45343777380296446`, 0.03916578253230296]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0005377730260816514, "MeanCrossEntropy" -> 
                Around[6.033033423949699, 0.7752242879962036], "ModelMemory" -> 
                99728, "TrainingMemory" -> 447448, "TrainingTime" -> 
                10.35078643439093|>, "Index" -> 8|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 8|>, 
                "NumberOfParameters" -> <|"Value" -> 18100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> 0.01|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 1000|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[8.21220490974844, 0.9380313896761981], "Accuracy" -> 
                 Around[0.45328643244984645`, 0.05573477005721432], 
                 "EvaluationTime" -> 0.0006231480990112045, "TestSize" -> 152,
                  "ModelMemory" -> 185360, 
                 "ModelUtility" -> -6.424714064252742, "TrainingSize" -> 8, 
                 "TrainingTime" -> 5.011872336272724, "TrainingMemory" -> 
                 766064, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[8.21220490974844, 0.6632883566058805]}, 
                 "AccuracyHistory" -> {
                   Around[0.45328643244984645`, 0.039410433855329184`]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.0006231480990112045, "MeanCrossEntropy" -> 
                Around[8.21220490974844, 0.9380313896761981], "ModelMemory" -> 
                185360, "TrainingMemory" -> 766064, "TrainingTime" -> 
                13.030868074309083`|>, "Index" -> 9|>, <|
             "Value" -> "NeuralNetwork", 
              "Options" -> <|
               "NetworkType" -> <|"Value" -> "FullyConnected"|>, 
                "NetworkDepth" -> <|"Value" -> 2|>, 
                "NumberOfParameters" -> <|"Value" -> 3100|>, 
                "ActivationFunction" -> <|"Value" -> "SELU"|>, 
                "L2Regularization" -> <|"Value" -> None|>, 
                "Dropout" -> <|"Value" -> None|>, 
                "NetInitializationMethod" -> <|"Value" -> Automatic|>, 
                "OptimizationMethod" -> <|
                 "Value" -> {"ADAM", "L2Regularization" -> None}|>, 
                MaxTrainingRounds -> <|"Value" -> 300|>, 
                ValidationSet -> <|"Value" -> Automatic|>, 
                "EarlyStopping" -> <|"Value" -> False|>, 
                TrainingProgressReporting -> <|"Value" -> None|>, 
                "NetTrainOptions" -> <|"Value" -> Automatic|>, 
                "LossFunction" -> <|"Value" -> Automatic|>|>|> -> <|
             "Experiments" -> {<|
                "MeanCrossEntropy" -> 
                 Around[3.1697124352322645`, 0.5842252170709464], "Accuracy" -> 
                 Around[0.515670025051118, 0.06149043644573219], 
                 "EvaluationTime" -> 0.0006124725700823033, "TestSize" -> 130,
                  "ModelMemory" -> 56272, 
                 "ModelUtility" -> -4.363456613895947, "TrainingSize" -> 30, 
                 "TrainingTime" -> 1.2589254117941673`, "TrainingMemory" -> 
                 275280, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[3.1697124352322645`, 0.4131096127310489]}, 
                 "AccuracyHistory" -> {
                   Around[0.515670025051118, 0.04348030458889766]}|>, <|
                "MeanCrossEntropy" -> 
                 Around[0.71315214729188, 0.08135402189964082], "Accuracy" -> 
                 Around[0.5606106804399626, 0.1231054725977526], 
                 "EvaluationTime" -> 0.003125, "TestSize" -> 32, 
                 "ModelMemory" -> 56272, "ModelUtility" -> -1.467224702434685,
                  "TrainingSize" -> 128, "TrainingTime" -> 
                 1.9952623149688797`, "TrainingMemory" -> 355120, 
                 "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                   Around[0.71315214729188, 0.05752598056203491]}, 
                 "AccuracyHistory" -> {
                   Around[0.5606106804399626, 0.08704871447504557]}|>}, 
              "PredictedPerformances" -> <|
               "EvaluationTime" -> 0.003125, "MeanCrossEntropy" -> 
                Around[0.71315214729188, 0.08135402189964082], "ModelMemory" -> 
                56272, "TrainingMemory" -> 355120, "TrainingTime" -> 
                3.753003305505267|>, "Index" -> 10|>|>, 
           TypeSystem`Assoc[
            TypeSystem`Struct[{"Value", "Options"}, {
              TypeSystem`Atom[
               TypeSystem`Enumeration["NeuralNetwork"]], 
              TypeSystem`Assoc[TypeSystem`AnyType, 
               TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 14]}], 
            
            TypeSystem`Struct[{
             "Experiments", "PredictedPerformances", "Index"}, {
              TypeSystem`Vector[
               
               TypeSystem`Struct[{
                "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
                 "ModelMemory", "ModelUtility", "TrainingSize", 
                 "TrainingTime", "TrainingMemory", "ExperimentCount", 
                 "MeanCrossEntropyHistory", "AccuracyHistory"}, {
                TypeSystem`AnyType, TypeSystem`AnyType, 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Real], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Atom[Integer], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1], 
                 TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
               TypeSystem`AnyLength], 
              
              TypeSystem`Struct[{
               "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                "TrainingMemory", "TrainingTime"}, {
                TypeSystem`Atom[Real], TypeSystem`AnyType, 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real]}], 
              TypeSystem`Atom[Integer]}], 10], <||>], "MaxTrainingSize" -> 
         160, "PreprocessorEvaluationTime" -> 3.59375*^-6, 
         "PreprocessorMemory" -> 49544, "InputDimension" -> 10, 
         "OutputDimension" -> 1, 
         "BaselineLogProbability" -> -0.6928423179977401, "VariableBudget" -> 
         True, "CheckpointingInfo" -> <|"Checkpointing" -> False|>, 
         "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
         "LastReportingTime" -> 3.869297370424875`16.34020709736964*^9, 
         "RoundPartitioning" -> 
         Dataset[{<|
            "TrainingSizes" -> 8, "TimeBudgets" -> 8.12172683094538, 
             "ElapsedTimes" -> 17.449253000000002`, "ExperimentCounts" -> 
             6|>, <|"TrainingSizes" -> 30, "TimeBudgets" -> 
             11.602466901350537`, "ElapsedTimes" -> 13.665400000000002`, 
             "ExperimentCounts" -> 5|>, <|
            "TrainingSizes" -> 128, "TimeBudgets" -> 16.57495271621505, 
             "ElapsedTimes" -> 16.218941, "ExperimentCounts" -> 6|>}, 
           TypeSystem`Vector[
            TypeSystem`Struct[{
             "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
              "ExperimentCounts"}, {
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer]}], 3], <||>]|>, "AnomalyDetector" -> 
       None, "Log" -> <|
        "Example" -> 
         MachineLearning`MLDataset[<|
           "f1" -> <|
             "Type" -> "NumericalVector", "Weight" -> 1, 
              "Values" -> {{0., 1., 1., 0., 0., 1., 1., 0., 0., 1.}}, "ID" -> 
              6049509919062986817|>|>, <|
           "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
            0, "RawExample" -> False|>], "TrainingTime" -> 48.925742, 
         "MaxTrainingMemory" -> 13959504, "DataMemory" -> 109616, 
         "FunctionMemory" -> 284600, "LanguageVersion" -> {13.1, 0}, "Date" -> 
         DateObject[{2022, 8, 12, 12, 49, 31.527207`8.251260478943298}, 
           "Instant", "Gregorian", 1.], "ProcessorCount" -> 6, 
         "ProcessorType" -> "x86-64", "OperatingSystem" -> "Unix", 
         "SystemWordLength" -> 64, "Evaluations" -> {}|>|>], 
    "TestSet" -> <|"Input" -> CompressedData["
1:eJy9lcsNgEAIRNd4swtvdmEPlmDi2dYtQe9KeAysJBujLMPwyTjv53aMrbXl
OcNzpmbZtX4/PaP3o3jRuKhRvrQvlt/Dqe67ypPi0nf6XZ2v2qfoPD0cmkfl
Uz1fy6r3tGo/LH5ZnKhF50n5UZzsfll+j6darxVP8/XSXxqXtSo9VOdLeanx
qr5QPlU6aN3P6qOXj+JU1a/OLaunNE/2fu+9p3mqeP2tU2q92f/L238DAVzg
ZA==
       "], 
      "Output" -> {
       False, True, True, True, True, True, True, False, True, True, False, 
        True, True, True, False, True, True, True, False, True, False, True, 
        False, False, False, False, False, True, False, True, True, False, 
        True, False, False, True, True, False, True, True}|>, 
    "Predictions" -> {
     False, False, False, True, True, False, False, False, False, False, 
      False, True, False, True, True, False, True, False, False, True, True, 
      False, True, True, False, False, False, True, False, False, False, 
      False, False, False, True, True, True, False, True, True}, 
    "LogProbabilities" -> CompressedData["
1:eJwVz01MkgEAh3EmamNJklsedKbmx8iwA7mcurSWVtqmrtz8WMYsjYkH1iam
pikTNdkKyZMfhfOgNbOpy4aY/MlqlYOQzBBpQ0IREhB7/SBRy/fw7Hd+Im/x
r5X5UCgU5kGknb9+J7kCDOiX1+YKaX8QmJqx00r8hChH2qthuXEqqnBYuGk5
0FBcLbWByqHKVt5sg15Hr5PVz6A0oVg8GLyOx7pKWgOxAPntZU1R3BLpYWOe
DfRcfVuTcRyNimzW1KSPqkWR42If0qPP1TEhiyEwTjkZWnbBQspvu2NHhGMr
LrjSTNo3rljFRoWbX0H9jr2Q3btXaJvIaq75VKNYIW3Ke72EeEb8tH1PC/8+
vyVRtAeJc4Ld0WYn6cv2s4tIP800WTUOUmr46CLOBb1NE8zPQOK7ppXytqG6
JGiUGNaxHzIn7C43wDrRssiNNWLnVWR1zb4bpWxOq/+DGXSq9X8lB9+eqK8m
qceJtcs9adl6E14oWYKWbivpGH9qGe989mhOr4WUyhDbIB47ejxRSVENFISa
TxhUYEYLY2+EbUHW7hvibfiGubCSJ7OZZtKgws1VVEfcTGyiLh6o7BmZdULt
raq9ytaDUD7lLQQQUOfPZzSHrpK+b7WbUben1bvZC+D8I8rPVK6jauu6gaaz
kEqnJ2yQ82I+3Ov6jPwhkfy81YuoriMWiXoObf0XiVQzAV2dUVcSqEUXPyU5
S+JBvkLDDPYxkz4XFzlg5eYkT3JdUGufOSSZJhSxzB2RSjd4I6Jw+rARQX4/
khyxdlJDepUFXMZAyqNZExIeztbf9zrRpTw2FcTxQrsxxMgVfcFgr4fa2OBB
gd9HGZOtxX8/83Rz
     "], "CountMatrix" -> {{11, 5, 0}, {13, 11, 0}}, 
    "IndicesMatrix" -> {{{1, 8, 11, 19, 25, 26, 27, 29, 32, 34, 38}, {15, 21, 
       23, 24, 35}, {}}, {{2, 3, 6, 7, 9, 10, 13, 16, 18, 22, 30, 31, 33}, {4,
        5, 12, 14, 17, 20, 28, 36, 37, 39, 40}, {}}}, 
    "ExtendedClasses" -> {False, True}, "Weights" -> 
    SparseArray[Automatic, {40}, 1., {1, {{0, 0}, {}}, {}}], 
    "BatchEvaluationTime" -> 0.0019392250000000002`, "SingleEvaluationTime" -> 
    0.004819, "Version" -> {13.1, 0}|>]]], "Output",
 CellChangeTimes->{
  3.86896617348654*^9, 3.868966311492532*^9, 3.8689668453138514`*^9, 
   3.869211547634626*^9, {3.869293774351564*^9, 3.8692937815692053`*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"7bb09724-29b7-4520-840d-674f4ad62edc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"First", "@", "classifier"}], ")"}], "[", "\"\<Model\>\"", "]"}], 
  "[", "\"\<Network\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8692938293476267`*^9, 3.869293870353177*^9}, {
  3.8692939195305443`*^9, 3.869293944513091*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"540517e6-021e-412f-a51e-bcd8ccbd5821"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.014925373134328358`], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.018686567164179105`], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                   CurveClosed -> {0}]}, {
                  FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                   15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                   103.}, {23., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5,
                    103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                   29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                   103.}, {37., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5,
                    103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                  FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                   43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                   103.}, {51., 103.}}}]}, {
                  FaceForm[{
                    RGBColor[0.549, 0.549, 0.549], 
                    Opacity[1.]}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                   25., 95.}, {25., 88.}}}], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                   39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{50, 10}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 10, "$InputDimensions" -> {10}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "2" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "3" -> <|
                    "Type" -> "Dropout", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "DropoutProbability" -> 0.01, "Method" -> "AlphaDropout", 
                    "OutputPorts" -> 
                    NeuralNetworks`ValidatedParameter[{"Output"}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "4" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{50, 50}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{50}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {50}, "$OutputSize" -> 50, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    "ScaledExponentialLinearUnit"], "$Dimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>|>, 
                    "6" -> <|
                    "Type" -> "Linear", 
                    "Arrays" -> <|
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 50}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]|>, 
                    "Parameters" -> <|
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 50, "$InputDimensions" -> {50}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{50}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]|>|>, 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 10\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ScaledExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    RowBox[{"\"ScaledExponentialLinearUnit\"", "[", 
                    StyleBox["\"x\"", Italic, StripOnInput -> False], "]"}], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 50\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    EventHandlerTag[{"MouseClicked" :> If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null], 
                    Method -> "Preemptive", PassEventsDown -> Automatic, 
                    PassEventsUp -> True}]]}, 
                    NeuralNetworks`FormatSelectedParameterChain[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, <||>, {}]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.869293832969639*^9, 3.869293870749839*^9}, {
  3.869293926735614*^9, 3.869293945170747*^9}},
 CellLabel->"Out[53]=",ExpressionUUID->"79d7821e-b121-479f-abf0-e41c242f671b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"classifier", ",", "\"\<FunctionMemory\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.868966450981901*^9, 3.868966454228724*^9}, {
  3.8689665175597897`*^9, 3.8689665219168673`*^9}, {3.868966557967691*^9, 
  3.868966625165139*^9}, {3.869293792603034*^9, 3.869293814925658*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"9ee23cf1-3366-459e-a97b-32b8ba1df410"],

Cell[BoxData[
 TemplateBox[{"290.`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.869293808448848*^9, 3.8692938154579077`*^9}},
 CellLabel->"Out[46]=",ExpressionUUID->"6d965a5a-4659-41b3-8743-dcf54ea641cd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HNM", "[", "inputs_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sort", "[", "inputs", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"Floor", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Length", "[", "inputs", "]"}], "+", "1"}], ")"}], "/", 
        "2"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"HardNeuralMajority", "[", 
       RowBox[{"1", ",", "4"}], "]"}], "]"}], "[", 
     RowBox[{"{", "inputs", "}"}], "]"}], ",", 
    RowBox[{"Majority", "@@", 
     RowBox[{"Harden", "[", "inputs", "]"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.869553653058096*^9, 3.8695537243852863`*^9}, {
  3.869553982557846*^9, 3.8695540703016243`*^9}, {3.869568810399126*^9, 
  3.869568813927146*^9}, {3.86956887292964*^9, 3.869568911831105*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"fed41e1b-3b20-4aa5-85f1-b173e03b95d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HNM", "[", "inputs_", "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"hnm", "=", 
      RowBox[{"HardNeuralMajority", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "inputs", "]"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"hnm", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"{", "inputs", "}"}], "]"}], ",", 
      RowBox[{"First", "[", 
       RowBox[{
        RowBox[{"hnm", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Harden", "[", "inputs", "]"}], "}"}], ",", 
          RowBox[{"{", "}"}]}], "}"}], "]"}], "]"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.869554080461699*^9, 3.869554186474312*^9}, {
  3.869554367649312*^9, 3.8695544052073402`*^9}, {3.869568799545018*^9, 
  3.8695688029514647`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"1e54ce77-7e8e-4660-8b33-57d9aa5acae8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"HNM", "[", 
     RowBox[{"{", 
      RowBox[{"b1", ",", "b2", ",", "b3", ",", "b4"}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"b1", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b2", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b3", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b4", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.869553726439802*^9, 3.869553842098022*^9}, {
  3.86955391502761*^9, 3.869553917265626*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"43daf2a0-b030-4703-b484-7db511a06cd1"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440., 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c299b150-0a55-4bbe-bf20-ef4cd4ee4428"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 251, 4, 98, "Title",ExpressionUUID->"e80ffaf1-ce7d-4821-a091-e123c51e05cc"],
Cell[834, 28, 779, 16, 29, "Input",ExpressionUUID->"e7550ce8-9c02-454b-9ce5-651d0f8e87b4"],
Cell[CellGroupData[{
Cell[1638, 48, 204, 4, 69, "Chapter",ExpressionUUID->"ff3102a6-3c5a-457a-910a-4abcf0a85217"],
Cell[1845, 54, 5343, 96, 116, "Input",ExpressionUUID->"a1d35da7-df69-4f5a-aded-2375da917235"],
Cell[CellGroupData[{
Cell[7213, 154, 233, 4, 29, "Input",ExpressionUUID->"b5a69e04-bf85-4754-84c2-66a1ec08c68d"],
Cell[7449, 160, 1027, 25, 33, "Output",ExpressionUUID->"b999af51-515c-4f15-a7fc-c32eafcd8b4a"]
}, Open  ]],
Cell[8491, 188, 8455, 201, 37, "Input",ExpressionUUID->"6656dcd5-3f96-4076-89bb-d35e7d524003"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16983, 394, 317, 5, 69, "Chapter",ExpressionUUID->"a83aa6fb-db66-4018-aace-2706a2be80da"],
Cell[17303, 401, 381, 9, 29, "Input",ExpressionUUID->"58a7a509-6e27-4603-86a4-437a1775943b"],
Cell[17687, 412, 623, 13, 29, "Input",ExpressionUUID->"2b9a254b-8e88-46ea-9c93-3e1f258901d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18347, 430, 355, 6, 69, "Chapter",ExpressionUUID->"b6f53683-da40-4a5d-9d7a-130f6c5ca4dc"],
Cell[18705, 438, 1650, 32, 133, "Input",ExpressionUUID->"0b6fe1aa-0068-42c6-a004-d876d189b254"],
Cell[20358, 472, 905, 22, 113, "Input",ExpressionUUID->"d1ef7b56-3413-4a9e-b2bd-d56f8df851c1"],
Cell[21266, 496, 622, 13, 71, "Input",ExpressionUUID->"4d6b2e2b-d152-47d0-aa59-9f7edf61c195"],
Cell[21891, 511, 933, 19, 71, "Input",ExpressionUUID->"0d4e47b0-8464-4926-818c-0d7d4ffc45d8"],
Cell[22827, 532, 474, 12, 71, "Input",ExpressionUUID->"43e7aec3-bc8e-4d9f-8456-36c63d8898d1"],
Cell[23304, 546, 779, 16, 29, "Input",ExpressionUUID->"a1c7e22c-cd5b-4bac-9b52-8543cdb194e6"],
Cell[24086, 564, 607, 15, 92, "Input",ExpressionUUID->"50dafd05-81d3-47c6-b057-b503ec79b515"],
Cell[CellGroupData[{
Cell[24718, 583, 182, 3, 29, "Input",ExpressionUUID->"3edf5a6b-2ad1-4dad-9dab-571328b9e6eb"],
Cell[24903, 588, 66469, 1189, 65, "Output",ExpressionUUID->"dc50a9b1-9899-40e6-8e01-bbdc24c52b0b"]
}, Open  ]],
Cell[91387, 1780, 788, 18, 54, "Input",ExpressionUUID->"882c0a7b-3365-4211-8395-9ae08e6dab58"],
Cell[CellGroupData[{
Cell[92200, 1802, 367, 8, 29, "Input",ExpressionUUID->"5383f8bf-9e75-433e-bd6c-7fbe18173605"],
Cell[92570, 1812, 1417, 22, 33, "Output",ExpressionUUID->"dff1666c-011f-4759-a542-a9fca819c008"]
}, Open  ]],
Cell[94002, 1837, 568, 10, 29, "Input",ExpressionUUID->"3027f0e8-46b8-401e-9141-ba3136b963d3"],
Cell[CellGroupData[{
Cell[94595, 1851, 949, 19, 29, "Input",ExpressionUUID->"8661e71e-dc7f-4de8-8316-f6d9cb134b82"],
Cell[CellGroupData[{
Cell[95569, 1874, 1225, 33, 63, "Echo",ExpressionUUID->"cef4bb61-322a-4201-b6c7-f69feb74ae61"],
Cell[96797, 1909, 1153, 30, 44, "Echo",ExpressionUUID->"9c35a353-f551-4244-a352-28d9536d82be"]
}, Open  ]],
Cell[97965, 1942, 15195, 268, 92, "Output",ExpressionUUID->"78e7d5a9-601b-47c6-a329-e715cd5b58a0"]
}, Open  ]],
Cell[113175, 2213, 13902, 195, 32, "Input",ExpressionUUID->"e3c08978-37d7-4772-8ade-495439d8bdfc"],
Cell[CellGroupData[{
Cell[127102, 2412, 347, 5, 29, "Input",ExpressionUUID->"88447c34-9b93-40ce-9b93-a538133472b4"],
Cell[127452, 2419, 522587, 10614, 68, "Output",ExpressionUUID->"91b25cfd-dfe5-4fe7-8786-80a99cf00ce7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[650088, 13039, 355, 6, 69, "Chapter",ExpressionUUID->"790cc1ff-a1fd-4751-9fa0-78e337587528"],
Cell[650446, 13047, 16316, 229, 133, "Input",ExpressionUUID->"f71442fd-e126-41fb-b56d-1c2abd8c9f07"]
}, Open  ]],
Cell[CellGroupData[{
Cell[666799, 13281, 456, 7, 69, "Chapter",ExpressionUUID->"306b98cf-6a16-4b58-bf92-e841969834f5"],
Cell[667258, 13290, 1696, 34, 92, "Input",ExpressionUUID->"9dfbfa0c-b8e2-42c4-ae5a-99e0b63edb66"],
Cell[CellGroupData[{
Cell[668979, 13328, 423, 10, 29, "Input",ExpressionUUID->"52bba437-b4a0-4114-ac5a-ca57f21e8e71"],
Cell[669405, 13340, 259646, 4700, 465, "Output",ExpressionUUID->"c49d9150-ff72-412f-9254-c71ff9d64d27"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[929100, 18046, 507, 8, 69, "Chapter",ExpressionUUID->"2690b326-fb91-4c09-a746-cb42f085f60a"],
Cell[929610, 18056, 1097, 18, 29, "Input",ExpressionUUID->"b1cb4866-8078-4a67-9f71-658ee449d7d1"],
Cell[930710, 18076, 966, 18, 29, "Input",ExpressionUUID->"01ed0e0c-636b-4c6e-b44d-fbd0e4dc3837"],
Cell[CellGroupData[{
Cell[931701, 18098, 823, 15, 51, "Input",ExpressionUUID->"448651c1-6ecd-4092-b372-99eea421b7e0"],
Cell[932527, 18115, 374, 6, 33, "Output",ExpressionUUID->"a9212437-f808-44f9-a8c8-63a2209235e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[932938, 18126, 1293, 28, 71, "Input",ExpressionUUID->"6dd644cf-0da7-47a9-a77b-1b4465ebc2d4"],
Cell[934234, 18156, 2180, 32, 56, "Output",ExpressionUUID->"758389b0-ef6d-4bb4-a4ac-0e8e4679c05f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936451, 18193, 570, 14, 32, "Input",ExpressionUUID->"46bd4ab9-a162-44ba-ae1f-a8ab77e98e9d"],
Cell[937024, 18209, 1042, 15, 44, "Output",ExpressionUUID->"29a44f59-dc87-4843-bfc9-a14ff27d4ff6"]
}, Open  ]],
Cell[938081, 18227, 522, 10, 29, "Input",ExpressionUUID->"7fff87c5-1eb0-47f3-bdd7-2ed2265a28b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[938640, 18242, 412, 6, 69, "Chapter",ExpressionUUID->"0a2ce80a-fe81-4612-966f-edb1d9a9f984"],
Cell[CellGroupData[{
Cell[939077, 18252, 742, 15, 29, "Input",ExpressionUUID->"3911ed4c-aaed-4c43-b0af-f520c100bb40"],
Cell[939822, 18269, 84678, 1506, 69, "Output",ExpressionUUID->"ed75754f-b9ec-4db8-96c1-d9b71427f486"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1024537, 19780, 386, 7, 29, "Input",ExpressionUUID->"457e49e2-b67d-4087-9007-af29a3ee8d68"],
Cell[1024926, 19789, 104080, 1924, 465, "Output",ExpressionUUID->"7bb09724-29b7-4520-840d-674f4ad62edc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1129043, 21718, 371, 8, 29, "Input",ExpressionUUID->"540517e6-021e-412f-a51e-bcd8ccbd5821"],
Cell[1129417, 21728, 26802, 533, 68, "Output",ExpressionUUID->"79d7821e-b121-479f-abf0-e41c242f671b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156256, 22266, 410, 6, 29, "Input",ExpressionUUID->"9ee23cf1-3366-459e-a97b-32b8ba1df410"],
Cell[1156669, 22274, 250, 4, 44, "Output",ExpressionUUID->"6d965a5a-4659-41b3-8743-dcf54ea641cd"]
}, Open  ]],
Cell[1156934, 22281, 955, 24, 32, "Input",ExpressionUUID->"fed41e1b-3b20-4aa5-85f1-b173e03b95d4"],
Cell[1157892, 22307, 1044, 29, 29, "Input",ExpressionUUID->"1e54ce77-7e8e-4660-8b33-57d9aa5acae8"],
Cell[1158939, 22338, 706, 18, 51, "Input",ExpressionUUID->"43daf2a0-b030-4703-b484-7db511a06cd1"]
}, Open  ]]
}, Open  ]]
}
]
*)

