(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1966711,      38629]
NotebookOptionsPosition[   1938822,      38105]
NotebookOutlinePosition[   1947598,      38285]
CellTagsIndexPosition[   1947516,      38280]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar", "FirstSlide",
 CellMargins->{{0, 0}, {-1, 0}},
 CellChangeTimes->{{3.9076528127622023`*^9, 3.907652812762217*^9}},
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a"],

Cell["Neural network research with the Wolfram Language", "Title",
 CellChangeTimes->{{3.907646982753051*^9, 
  3.907646996225133*^9}},ExpressionUUID->"8b1642a0-c2f2-4832-b962-\
da68c26a4047"],

Cell["Ian Wright, GitHub", "Subtitle",
 CellChangeTimes->{{3.8303528001076193`*^9, 3.830352822403953*^9}, {
  3.907647000130988*^9, 3.907647002337943*^9}, {3.907647198257566*^9, 
  3.907647200605158*^9}},ExpressionUUID->"75c0d664-a0db-4889-a1b0-\
650f7c83e5d8"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  RowBox[{
   AdjustmentBox[
    TemplateBox[{
      GraphicsBox[{{
         GrayLevel[1], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJBKJ3BkN/I8lTVIVMpp6LqqLrDC/lL+fHsH+1h/Alx
mqcFjj+A8xm+lT6YI7jVPreiaqnOYzU4P/KU0ZGN51Th/BvaqZKPIj7Yw/gP
3syz0blyzx5mHsO9rS01Fxbbw+yD8WHugfFr1m1Lqv+pBue/PmCp7HVb3QFm
HowPsw/Gh7kHxoe5F2YezD/o/kflqznYVkasMM1Vg/Mh5qk56DnLvH4UhuCj
2qeG5h41hwKQvN4Le5h5D2K9T7DbPoT7F8aHhQeMX6D9bfrdyS/h/AP7+OYY
L3pkDzMPxofZB+PD3APjw9wLMw/mH9T4VsPwPwBKz/oj
          "]]}, {
         Thickness[0.08333333333333333], 
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIvIGYC4uZAz7kNz5Qcpv+fUPf7l4LDaaMjG/XWKTsI
idgfu1Oq6HCVM0Mpx0LF4RRIXE/JYdE1k/cWrSoOC0E0qzJc/baWmgubZyo5
wMx7uX0983MfJYd1N+LL/OWU4Pph5jZB1a1ZC1TQr+CQt5hxD2uQsoP+f8W/
377KwfkqGnU9O1/LwPkR0Rv3v5GThpjzVcnhhezyFx7rJB2ivu681WWr5FD+
YI7gUlsJiPtaFR32HRRXC24Vd7AuONdxaZ4CnJ/D+XNBurE8nH8pP5793Ew5
h7tuzBXcS8QdwsH2yDn8Of3u5OFD4g53wOKyUHlBh99gcVmHjKvPs7S/cTj4
y4ll+RorONQ16/ss42J0cHUv+sm/UslBosfrFYvJf3uwP/mVHFb4OQgnHv5r
Dw6nNEU4HxxeZxTgfD1oOOzqZfsg5sEIDwceN9VSplmsDlNSO5JjY6Sh9jM5
bH5VvFW0WtrBoTJihelZBgf+KrPVdtel4eZ19T35JB8kA+fvBftbyqEt6vKe
xyIMDhD7JBw2bEuqv2nLBA+XG0KfHM+nsUDDSwzqHnao/aIOErInn9ov4XKw
uHY014RB1OHRy6mbeAo5HaQCb0nXPBSBmscBDS8RqPvY4HyYf2B8MbB5LHD+
LA7peXGaLHDzJhmW6yrKszqsFL7gcqNAGG4eJL6EHJbd38c3x5jToWG7Q9Mj
d0EHj4A/EsXXuR0g/hdw0DktcHzXDj4HuS85YbXr+B1UweEq4LCm+3YGQz6/
A1N+I8vRfh6HM9Z+FyfGcEP5bA5LoObC4hPG3/On/cvt67/h/Ihpin2lhT/h
/CcR4tsvMvywh5jPCbWfySFIfUHnhocsDrfA4cvloAUVX2Cjc2VWmiCcfxmc
LkXh/FVgf0vC9T8Hp38ZuPvA+ZNVweHb9LuT21t5ofkXlg8EHWRfPzKTYlCC
pmcRh+tA5a7HlaDhLe5wIFrB8aOyMjQ+peF8SHzLwfmQ8JR34LCdHTr/tTI8
/cPKh4qqpTrOdxSg9qk6GM7Ukpg6RdHhS19wiUq4ikPKmVjvE+6KkPJhHrT8
kFR0QC+PAPZc+cE=
          "]]}}, {
       ImageSize -> 0.027 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}], 
      TemplateBox[{6}, "Spacer1"], 
      GraphicsBox[{{
         GrayLevel[1], 
         FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
          3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
          0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJBKJ3BkN/I8lTVIVMpp6LqqLrDC/lL+fHsH+1h/Alx
mqcFjj+A8xm+lT6YI7jVPreiaqnOYzU4P/KU0ZGN51Th/BvaqZKPIj7Yw/gP
3syz0blyzx5mHsO9rS01Fxbbw+yD8WHugfFr1m1Lqv+pBue/PmCp7HVb3QFm
HowPsw/Gh7kHxoe5F2YezD/o/kflqznYVkasMM1Vg/Mh5qk56DnLvH4UhuCj
2qeG5h41hwKQvN4Le5h5D2K9T7DbPoT7F8aHhQeMX6D9bfrdyS/h/AP7+OYY
L3pkDzMPxofZB+PD3APjw9wLMw/mH9T4VsPwPwBKz/oj
          "]]}, {
         Thickness[0.08333333333333333], 
         FaceForm[{
           RGBColor[1., 1., 1.], 
           Opacity[1.]}], 
         FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
          3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYC4ksM95g4uaQc9P8r/v32VdohkyG/kYVVAQdf
1AFVPYLfFnV5z2MRBihfBIMPU7+EcQ+rkAgPDr40mnoEf8ur4q2i1XJwfq/G
W959BQoOXfLJ76IOQfkfFB1+x+Qe/Wck5pByJtb7xHElqLy4w5q1N+LL+pUd
wt/o71bvl3SY8X9C3e9fyg7zz646f/WaNJwP8y92vgKaepj9UnA+LDysC851
XJqH4BvO1JKYKqLgAAA6xp7+
          "]]}}, {
       ImageSize -> 0.027 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}], 
      TemplateBox[{6}, "Spacer1"], 
      GraphicsBox[{
        Thickness[0.08333333333333333], 
        FaceForm[{
          RGBColor[1., 1., 1.], 
          Opacity[1.]}], 
        FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
          0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
          0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
          3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.02, 8.7598}, {4.02, 
          8.3398}, {3.6899999999999995`, 8.0098}, {3.2399999999999998`, 
          8.0098}, {2.7899999999999996`, 8.0098}, {2.4899999999999993`, 
          8.3398}, {2.4899999999999993`, 8.7598}, {2.4899999999999993`, 
          9.1798}, {2.8199999999999994`, 9.5098}, {3.2399999999999998`, 
          9.5098}, {3.6599999999999997`, 9.5098}, {4.02, 9.1498}, {4.02, 
          8.7598}}, CompressedData["
1:eJxTTMoPSmViYGCQAGIQ3fo6cIccq7JD1VIdZ5nXzA4QvgIGP2dW+ZxFi0Xg
fF/RHq9XLeIO3zRi+g99lXOYf3bV+avXJBy4ri8usOWShfOrRNa5P6yShvNb
QPpbpRyerVN90iwHUy/lEP5Gf7d6vxicD7MfwhfB4J/QtJp0+r+sA9AwoIkS
cD7YOhFJh0sM95g4geYYgwGCnwYGUg77gqYp9n2VdgAaBjRRxkFvwoIfhmkw
/fJwPtBzQB8qwPkQ/YoOU76xxc84IwOR51dyUNn5p/1LtLQDODhWKDlsrv60
IeC1pAMsfCHuE4fz2UwEzWxsRR0AMJ+b7g==
          "], {{3.9899999999999998`, 2.4898}, {2.4899999999999993`, 2.4898}, {
          2.4899999999999993`, 7.4998}, {3.9899999999999998`, 7.4998}}}], 
        FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
         0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 
         3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
         0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmJBKJ3BkN/I8lTVIVMpp6LqqLrDC/lL+fHsH+1h/Alx
mqcFjj+A8xm+lT6YI7jVPreiaqnOYzU4P/KU0ZGN51Th/BvaqZKPIj7Yw/gP
3syz0blyzx5mHsO9rS01Fxbbw+yD8WHugfFr1m1Lqv+pBue/PmCp7HVb3QFm
HowPsw/Gh7kHxoe5F2YezD/o/kflqznYVkasMM1Vg/Mh5qk56DnLvH4UhuCj
2qeG5h41hwKQvN4Le5h5D2K9T7DbPoT7F8aHhQeMX6D9bfrdyS/h/AP7+OYY
L3pkDzMPxofZB+PD3APjw9wLMw/mH9T4VsPwPwBKz/oj
         "]]}, {
       AspectRatio -> Automatic, ImageSize -> 
        0.027 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 
        PlotRange -> {{0., 12.}, {0., 12.}}}]},
     "RowDefault"],
    BoxBaselineShift->-0.3416543244041976,
    BoxMargins->{{0., 0.}, {0.3416543244041976, -0.3416543244041976}}], 
   " "}]],ExpressionUUID->"376f2a73-bc68-4fdb-b608-b3b1705e8eb8"],
 " #WolframTechConf"
}], "Subtitle",
 CellMargins->{{0, 0}, {20, -10}},
 CellChangeTimes->{3.78802031357596*^9},
 FontSize->0.025 
  FrontEnd`AbsoluteCurrentValue[{
    WindowSize, 1}],ExpressionUUID->"82304148-2048-4796-ab46-715a0d811c28"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ee3ea2a1-973b-4e9a-a704-0d8a3c30d1be"],

Cell[CellGroupData[{

Cell["ABSTRACT", "Section",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.7257199329223537`*^9, 3.725720005948655*^9}, {
   3.72572008110417*^9, 3.725720088583918*^9}, {3.735906066467186*^9, 
   3.7359060766280823`*^9}, 3.7880100304206944`*^9, {3.788018566457625*^9, 
   3.788018567874702*^9}, {3.7880186005884113`*^9, 
   3.788018634852206*^9}},ExpressionUUID->"75e785bd-e551-42c4-b918-\
1ff722dfcee0"],

Cell["\<\
Wolfram Language provides an advanced framework for rapidly prototyping \
neural network applications and exploring research ideas. In this talk, I \
demonstrate the language features that helped me develop a novel neural \
network that learns compact non-differentiable Boolean functions.\
\>", "Text",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.725720132418301*^9, 3.7257201347705364`*^9}, 
   3.788018628487426*^9, {3.88254646115479*^9, 3.882546503012786*^9}, {
   3.88356385456744*^9, 3.883563885699174*^9}, {3.889705223579583*^9, 
   3.889705340734199*^9}, {3.9076472330165367`*^9, 3.9076472355676603`*^9}},
 InputFieldBoxOptions->{
 FieldCompletionFunction->
  None},ExpressionUUID->"932e9e57-52c9-4a85-ac72-ea4c898bd4bb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"720d29fa-744c-4cd2-a8aa-bbf8a1961d24"],

Cell[CellGroupData[{

Cell["Utilities", "Section",
 CellChangeTimes->{{3.907651550582347*^9, 3.9076515667110653`*^9}, {
  3.907652510091539*^9, 3.907652511352847*^9}, {3.9076527007672567`*^9, 
  3.907652701712016*^9}},ExpressionUUID->"292a6d7d-fa73-441f-9d91-\
0f2ac17c07e9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BPlot", "[", 
   RowBox[{"f_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<w\>\""}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ActivationPlot", "[", 
   RowBox[{"f_", ",", 
    RowBox[{"contours_", ":", "10"}]}], "]"}], ":=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"FrameLabel", "->", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"BarLegend", "[", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ColorFunction", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", ">", 
          RowBox[{"1", "/", "2"}]}], ",", 
         RowBox[{"Lighter", "[", 
          RowBox[{"Red", ",", "#"}], "]"}], ",", 
         RowBox[{"Lighter", "[", 
          RowBox[{
           RowBox[{"Darker", "[", 
            RowBox[{"Gray", ",", "0.5"}], "]"}], ",", "#"}], "]"}]}], "]"}], 
       "&"}], ")"}]}], ",", 
    RowBox[{"ColorFunctionScaling", "->", "False"}], ",", 
    RowBox[{"GridLines", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", "/", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", "/", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"GridLinesStyle", "->", "Black"}], ",", 
    RowBox[{"Contours", "->", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "1", ",", 
       RowBox[{"1", "/", "contours"}]}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MarginPacking", "[", "]"}], ":=", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "m", ",", "eps", ",", "thresholdLine", ",", "marginLine", ",", 
        "representativeLine", ",", "augmentation"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"m", "=", 
        RowBox[{"Min", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"eps", "=", "0.01"}], ";", "\[IndentingNewLine]", 
       RowBox[{"augmentation", "=", 
        RowBox[{
         RowBox[{"Mean", "[", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}], "]"}], 
         RowBox[{"Abs", "[", 
          RowBox[{"m", "-", 
           RowBox[{"1", "/", "2"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"thresholdLine", "=", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"-", "1"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"marginLine", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"m", ",", "0.2"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", "0.2"}], "}"}]}], "}"}], "]"}], 
          ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<margin\>\"", ",", "Bold", ",", 
              RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"m", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], "-", "m"}], ")"}], "/", "2"}]}], 
              ",", "0.3"}], "}"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"representativeLine", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"m", ",", 
               RowBox[{"-", "0.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"m", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<representative bit\>\"", ",", "Bold", ",", 
              RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"m", ",", 
              RowBox[{"-", "0.9"}]}], "}"}]}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Labeled", "[", 
        RowBox[{
         RowBox[{"Plot", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Callout", "[", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"m", "<=", 
                  RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", ">=", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "augmentation", "-", "eps"}], ")"}]}], "&&", 
                    RowBox[{"x", "<=", 
                    RowBox[{"(", 
                    RowBox[{"m", "+", "augmentation", "+", "eps"}], ")"}]}]}],
                    ",", "1", ",", "Nothing"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"x", ">=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "+", "augmentation", "-", 
                    "eps"}], ")"}]}], "&&", 
                    RowBox[{"x", "<=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "+", "augmentation", "+", 
                    "eps"}], ")"}]}]}], ",", "1", ",", "Nothing"}], "]"}]}], 
                "\[IndentingNewLine]", "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<augmented bit\>\"", ",", "Bold", ",", 
                 RowBox[{"FontColor", "->", "Gray"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"m", ">", 
                    RowBox[{"1", "/", "2"}]}], ",", 
                   RowBox[{
                    RowBox[{"1", "/", "2"}], "+", "augmentation"}], ",", 
                   RowBox[{"m", "+", "augmentation"}]}], "]"}], ",", "1.2"}], 
                "}"}], ",", 
               RowBox[{"CalloutStyle", "->", 
                RowBox[{"{", "Gray", "}"}]}], ",", 
               RowBox[{"Background", "->", "Transparent"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"m", "<=", 
                RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", ">", "m"}], " ", "&&", " ", 
                  RowBox[{"x", "<=", 
                   RowBox[{"(", 
                    RowBox[{"m", "+", "augmentation"}], ")"}]}]}], ",", "1", 
                 ",", "Nothing"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", ">", 
                   RowBox[{"1", "/", "2"}]}], "&&", 
                  RowBox[{"x", "<", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "2"}], "+", "augmentation"}], ")"}]}]}],
                  ",", "1", ",", "Nothing"}], "]"}]}], "\[IndentingNewLine]", 
              "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotRange", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"m", ">", 
                   RowBox[{"1", "/", "2"}]}], ",", "0.45", ",", "0"}], "]"}], 
                ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"m", ">", 
                   RowBox[{"1", "/", "2"}]}], ",", "1", ",", "0.55"}], 
                 "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "->", "Transparent"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Filling", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "->", "1"}], ",", 
              RowBox[{"2", "->", 
               RowBox[{"-", "0.8"}]}]}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"FillingStyle", "->", "LightGray"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Axes", "->", 
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Ticks", "->", 
            RowBox[{"{", 
             RowBox[{"True", ",", "False"}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Epilog", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Directive", "[", "Black", "]"}], ",", 
              "representativeLine", ",", 
              RowBox[{"Directive", "[", 
               RowBox[{"Gray", ",", "Dashed"}], "]"}], ",", "thresholdLine", 
              ",", "marginLine"}], "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImagePadding", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "30"}], "}"}]}], "}"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"AspectRatio", "->", 
            RowBox[{"2", "/", "3"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"m", ">", 
            RowBox[{"1", "/", "2"}]}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<high margin\>\"", ",", 
             RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<low margin\>\"", ",", 
             RowBox[{"FontFamily", "->", "\"\<Helvetica\>\""}]}], "]"}]}], 
          "]"}], ",", "Bottom"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MarginPack", "[", 
   RowBox[{"representativeBit_", ",", "x_List"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Mu]", "=", 
       RowBox[{"Mean", "[", "x", "]"}]}], ",", "\[Delta]"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Delta]", "=", 
      RowBox[{"\[Mu]", " ", 
       RowBox[{"Abs", "[", 
        RowBox[{"(", 
         RowBox[{"representativeBit", "-", 
          RowBox[{"1", "/", "2"}]}], ")"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"representativeBit", ">", 
        RowBox[{"1", "/", "2"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "+", "\[Delta]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"representativeBit", "+", "\[Delta]"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8896773697820263`*^9, 3.8896773805897837`*^9}, {
   3.889677550496909*^9, 3.8896775534605417`*^9}, {3.8896776035260763`*^9, 
   3.889677639708284*^9}, {3.889677673793737*^9, 3.8896777144009447`*^9}, {
   3.889677862855629*^9, 3.889677866923592*^9}, {3.890363388946463*^9, 
   3.890363400931329*^9}, {3.890363467417218*^9, 3.890363511798607*^9}, {
   3.8903637946540623`*^9, 3.8903638220722227`*^9}, {3.890363968626627*^9, 
   3.8903640295126762`*^9}, {3.907652661892764*^9, 3.907652670914823*^9}, {
   3.907653742236333*^9, 3.9076537431649218`*^9}, {3.907653781657866*^9, 
   3.907653836396386*^9}, 3.90765388681201*^9, 3.9076540647447767`*^9, {
   3.907654117549268*^9, 3.907654119453649*^9}, {3.907654160634701*^9, 
   3.9076541675090513`*^9}, {3.907654235256359*^9, 3.907654235945396*^9}, {
   3.907654277936311*^9, 3.907654280436499*^9}, {3.907654513338828*^9, 
   3.907654533708291*^9}, {3.907654681930146*^9, 3.907654732936647*^9}, {
   3.907654838635427*^9, 3.907654839580935*^9}, 3.907655237326929*^9, {
   3.907659006341597*^9, 3.907659010881858*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ad5bbb8b-5bbe-41b8-be54-977690ea97d6"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"4e8e5a7c-8b4e-47e7-a75d-3cb2b655ed51"],

Cell[CellGroupData[{

Cell["R&D goals", "Section",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308340990994*^9, 3.514308352103572*^9}, 
   3.7880179920575123`*^9, {3.907647394886376*^9, 3.907647397509075*^9}, {
   3.907647616536272*^9, 3.907647618390245*^9}, 
   3.907648446367423*^9},ExpressionUUID->"bf6b684b-be70-47c1-be5a-\
c3838a1d25c9"],

Cell[CellGroupData[{

Cell["Neural nets are differentiable for backpropagation", "Item",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.495209008234375*^9, 3.49520915653125*^9}, 
   3.495209919765625*^9, 3.4952106014375*^9, {3.4952106824375*^9, 
   3.495210832234375*^9}, 3.514307848543872*^9, {3.514308058576482*^9, 
   3.514308065607885*^9}, {3.51430841745117*^9, 3.514308419642997*^9}, {
   3.5149152616687326`*^9, 3.514915280523456*^9}, {3.514915328702818*^9, 
   3.5149153375415287`*^9}, 3.514915444638068*^9, 3.78801854468054*^9, {
   3.907647581800831*^9, 3.907647584191517*^9}, {3.907647728490912*^9, 
   3.9076477851743193`*^9}, 3.907647845253458*^9, {3.907647876472886*^9, 
   3.907647921594274*^9}, {3.907647965705711*^9, 3.907648363609281*^9}, {
   3.90764843934046*^9, 3.907648533197557*^9}, {3.9076487260406427`*^9, 
   3.907648740079743*^9}},ExpressionUUID->"ca618272-fd6e-4541-bd18-\
cb14372f17e4"],

Cell["\<\
Problem: can\[CloseCurlyQuote]t learn discrete functions (e.g. boolean \
functions)\
\>", "Subitem",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.495209008234375*^9, 3.49520915653125*^9}, 
   3.495209919765625*^9, 3.4952106014375*^9, {3.4952106824375*^9, 
   3.495210832234375*^9}, 3.514307848543872*^9, {3.514308058576482*^9, 
   3.514308065607885*^9}, {3.51430841745117*^9, 3.514308419642997*^9}, {
   3.5149152616687326`*^9, 3.514915280523456*^9}, {3.514915328702818*^9, 
   3.5149153375415287`*^9}, 3.514915444638068*^9, 3.78801854468054*^9, {
   3.907647581800831*^9, 3.907647584191517*^9}, {3.907647728490912*^9, 
   3.9076477851743193`*^9}, 3.907647845253458*^9, {3.907647876472886*^9, 
   3.907647921594274*^9}, {3.907647965705711*^9, 3.907648363609281*^9}, {
   3.90764843934046*^9, 
   3.907648539194839*^9}},ExpressionUUID->"2bb9d2a7-54e6-4fb5-ab31-\
31f983dffd07"],

Cell["\<\
Problem: net sizes can be huge (e.g. 16 or 32-bits per weight)\
\>", "Subitem",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.495209008234375*^9, 3.49520915653125*^9}, 
   3.495209919765625*^9, 3.4952106014375*^9, {3.4952106824375*^9, 
   3.495210832234375*^9}, 3.514307848543872*^9, {3.514308058576482*^9, 
   3.514308065607885*^9}, {3.51430841745117*^9, 3.514308419642997*^9}, {
   3.5149152616687326`*^9, 3.514915280523456*^9}, {3.514915328702818*^9, 
   3.5149153375415287`*^9}, 3.514915444638068*^9, 3.78801854468054*^9, {
   3.907647581800831*^9, 3.907647584191517*^9}, {3.907647728490912*^9, 
   3.9076477851743193`*^9}, 3.907647845253458*^9, {3.907647876472886*^9, 
   3.907647921594274*^9}, {3.907647965705711*^9, 3.907648363609281*^9}, {
   3.90764843934046*^9, 3.907648550498601*^9}, {3.907648583102675*^9, 
   3.907648583110379*^9}},ExpressionUUID->"678092c5-5535-45a9-af1c-\
c680fe242a47"]
}, Open  ]],

Cell["Idea: \[PartialD]\[DoubleStruckCapitalB]-nets", "Item",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.495209008234375*^9, 3.49520915653125*^9}, 
   3.495209919765625*^9, 3.4952106014375*^9, {3.4952106824375*^9, 
   3.495210832234375*^9}, 3.514307848543872*^9, {3.514308058576482*^9, 
   3.514308065607885*^9}, {3.51430841745117*^9, 3.514308419642997*^9}, {
   3.5149152616687326`*^9, 3.514915280523456*^9}, {3.514915328702818*^9, 
   3.5149153375415287`*^9}, 3.514915444638068*^9, 3.78801854468054*^9, {
   3.907647581800831*^9, 3.907647584191517*^9}, {3.907647728490912*^9, 
   3.9076477851743193`*^9}, 3.907647845253458*^9, {3.907647876472886*^9, 
   3.907647921594274*^9}, {3.907647965705711*^9, 3.907648363609281*^9}, {
   3.90764843934046*^9, 3.907648550498601*^9}, {3.907648584973206*^9, 
   3.907648592538129*^9}, {3.907648900006722*^9, 3.907648901454401*^9}, 
   3.907656046345456*^9},ExpressionUUID->"ce3d413f-9897-476c-8661-\
d74cf7352dec"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qm8VVP/x/HVPE+3QUWTMUMhSpGQeSZzSCIRMiTJmFlmmTMWkpC5jMkU
lemJKEMhlUpleB78Tfu/v2vvfdpn33Nvt7qnte/t8369fty9ztrDOdVZ+3fX
sNv0OaPHSRWNMQOr+//pcfzgXc4++/ghh9T3Nw4bMPCUfgP6nrj3gHP69ut7
duc+lfzCRn7dSf4PlQ0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAECx
Kuy9994XdOrU6ZtmzZr95W97RHqiadOmf3fp0mXRcccdd3fv3r2rF/9HCQAA
AADIZRPf+uuvv7hr167e6NGjvblz53pIl3nz5nlPPPGEt9dee3mtW7f+44QT
TtjX9d8bAAAAAChL6tWrt37Dhg1/v/32212neCihsWPHeo0aNfqnZ8+ee7r+
+wMAAAAAZUTFZs2afUfuW/YoB27RosVv/p9hFdd/iQAAAAAg7apWrdqzc+fO
f7rO5bBqNBbaj6td/z0CAAAAgLRr2rTpW48++qjrNA6r6Mknn/S23HLL2a7/
HgEAAABA2tWqVWuZ1lVC2bRgwQKvQYMGf7j+ewQAAAAAaVehQoV//v77b9dp
HFbRP//841WsWPFf13+PAAAAAKAMcJ3CYTWZ4PnAAAAAAIDiuU7fsJoM+S8A
AAAAlITr9A2ryZD/AgAAAEBJuE7fsJoM+S8AAAAAlITr9A2ryZD/AgAAAEBJ
uE7fsJoM+S8AAAAAlITr9C3j+eef9/r37+9dc8013v/+979M+RtvvOE9+OCD
heLRRx/15syZ4+6CQ3oGkUuG/BcAAAAASsJp7hY55ZRTvLp163qnnnqq17Fj
R2/33XfPvNazZ88oxysUFStW9AYOHOjkmvXc5EsvvdS78sornZw/Ysh/AQAA
AKAknOZu8sILL9g8dvLkyXb7jz/+8Fq3bu1NnTrVbkf575tvvmn7exWff/65
3W/77be3r40cOXKNX/d3331nz33RRRet8XPHGfJfAAAAACgJp7mbLFy40Hv4
4YezyjQOetiwYfbnKP/9+uuvC+07f/58r0KFCt4+++yzRq41jvwXAAAAAMoU
p7lbUZT7aky0FJf/agxylSpVVpj/KlfdeeedvUmTJnk33HCDt9lmm3mNGzf2
OnXq5I0dO7ZQ/S+++MI79thjvTZt2niNGjXydtppJ++5557LvP7WW295Xbp0
sdfVqlUre2xXc5EN+S8AAAAAlISTnC0X9QM/88wz3vDhw20+27t3b1teVP6r
dacuv/xy+9qYMWOKPfbMmTNtvS222MJr0qSJd9ZZZ3mDBw+2P6v/+NVXX83U
/eijj7x69ep5zZo186644grvzjvv9Lp37273v+OOO2wdjb/WMVSm3Hjo0KHe
okWLSvkTKRlD/gsAAAAAJeEkZ4vTPF+td6VradCgge1X3WijjbyTTz7Zvh7l
v+utt56dFxxFQUGBnTccjZMuTpT/Nm3a1Fu8eHGmfNq0abb8xBNPzJSpT7hh
w4be3LlzM2X//vuvd/DBB3vVq1f3FixYYMsY/wwAAAAAZYrT3G3cuHF2/HL7
9u3t+laRs88+266tLFH+27lzZzvOOIq2bdvaco1jfvHFF4s9T5T/9uvXr9Br
ymkPPPBA+/Ps2bNtvQEDBhSqN3HiRPvaPffcY7fJfwEAAACgTHGWt6kftXbt
2rav96effsp6TfmtcmMpbv7v9OnT7TjlOnXqFDv+OMp/NU45qX79+t5+++1n
f54wYUKmHzre16xYd9117WvnnnuurUv+CwAAAABlirO87aqrrrK52+OPP55V
vmzZMq9WrVrekiVL7HZx+a9ojq5ef+ihh4o8V5T/ar5wUjz/ffbZZ229Aw44
wObKuWL8+PG2LvkvAAAAAJQpzvK2ww8/3M7f/e2337LKNZ9Xc20jK8p/r7/+
+qxxybmUNP/98MMPbb0hQ4YUqqfnEsfnBJP/AgAAAECZ4ixvU/5btWpV788/
/8yUzZgxw+ajWoM5Ulz+qzHPm2yyic2jv/zyyyLPVdL8V89T0jpbGuucHJN9
wQUX2GOMHj3abs+bN6/IXHlNMuS/AAAAAFASzvK22267zeZuZ5xxhs1tR4wY
YZ+1e8stt2TVi/LfQw45xD4TKYq9997bzh/Wa4MGDSr2XCXNf0XPUtIzkbbc
ckv7bODXX3/dO++882yO3bFjR++vv/6y9dRvXalSJfv8X42L/v7770vhU1l5
hvwXAAAAAErCSc4m6vc98sgjo/zNa9euXWZubZzy4+RaVIoNNtjA23///QvN
H85F+bX20bOFk7T2dJ8+fbLKnn76afus4OjaqlWr5vXq1SszJzmifLpGjRq2
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
2Hr//DTV1ut11L7O33/awtDGAmnj/N67vEQy/12yZIk3fvz4rL7RM88809Z5
//33M2X77LOPV716dW/RokXO30Nx8dhjj9lrj+e/s2bNsu9xwYIFK3088t/0
hKFtBvLF+b03UTiS+e/sT571Xn/hbu+PxZMzZbVq1vC679Qxs/3dZy/Y78r+
fQ9zfv0rit132c7m6vGyKa+PtP3XK3ss8t/VD0MbC6SN83vvshwzZ870Pvvs
M/tzMv/NFf3797d1NDY6Ktttt928pk2b5qz/888/ezNmzLCxonW658yZY/uc
k+U6l/afPXv2Ct+PckzV/e677wq9liv/LS7mzp2buXaNm06+Hs9/o7oLFy4s
VK+4/Dfa75tvvnH+d6Esh6FtBvLF+b23i1j49cvenE+f9f638O1i66mO4v9+
fHeFx9T4Y9VVnrWy16Pr0L7L5r5ut5P5b66oXLmSd8wR+2S2v/z4KftdefmF
p+Ss/9P3k+w59N6LO66uX/X++8NbhV6b+/l4+5r6mlf0nqK6fy2dUui1XPlv
ST7bXNeezH9VV78LyPW+TDH5b3SO+O8Y1pYwtLFA2ji/9y6LMW7cODtX1wTf
aXbs8iWXXFLk+Gflf1Hd4mKbbbbJnOO6667zGjVqlHlN+aLK4tdx8skne82b
N/duueUWr1KlSrbeZZddZl/Tc53333//TLmiS5cu3tSpU7OOUbVqVe+8887z
TjrpJK9atWq2nsZ8HXjggZl+3cGDB2ddp/qrVZ5r/POkSZO8zp07Z9WvXbu2
PUf8vHo/3bt390444QT/PqOyrVejRg3vtNNOy8r1c+W/n3/+ubfnnnvquT2Z
c3Tr1s37+OOPnf/dKIthaJuBfHF+770mQnNE9V6VK+29+/aZ7+UaNarZscXJ
+jcPG+g1aVyQqVendk1bL57LXT30NNsW6dibbNQqU3edJgXekw9fW6LrUl59
Zv+efptV1e5bpUplb8DJR3q7dNu2yPHPujZjVtxej7z7Uruvnu988P67+G3t
8vaoa5etvE+njM26Fr2Xi8/r63Xu2M7WqVunln02rF4b98h13vqt183sX7NG
de/cM3tlfR6aV6vXJo0fYecjR3UbFtTzHrjzkky9BvXrZl3nwNOPseXJ8c+a
r3vlxf2z/hwU7bfYyH7mUb0o/9Wfx2Zt18/U07zo1567M1OvqPx39P1Xei3X
a7r8fqBWTe+SISet0u8xymoY2lggbZzfe5e1eOedd2zOuMkmm3hjxoyx+Z7m
8ka5WK78V+teaZywckqVPfHEE3ZboZxXuaB+1hpa2nfo0KG23iGHHOK99tpr
3htvvOH16tXLlmn9rOhalP/WrFnTq1u3rs0TVeeVV17xfvjhB5uf16lTx7vp
ppu8Dz74wHv44Ye9DTbYwJ5L/dbRMfRe6tev77Vt29auNaU1rQ466CB7rtNP
P93WUR/rxRdfbMs0X/nFF1+05cn8V+OhlevqPOon1nn1Xjt27GjrjR07NnNe
XYc+M9VV3/LkyZO9448/Phhf1r9/pl4y/1Wfr+ZPN2jQwLvtttvsOR588EFb
1qxZsxL1cxPZYWibgXxxfu+9JiLKfwsa1PX22WMH76nR13vPjLnR23rLTWy5
tqO66j9V2YH77mTzp8mv3u/17X2wLTuu536ZelH+27hRA5vDThg33Lv/jott
vqe8Orm+U6445cRD7XH1/2lvjPIeHzXMzotV21NU/qt+VY2FVj6rflT9rHjk
vitsnRN6HWi3df5fF7xpc3PlsnfceJ73+ftP2HMoN2zUsL49VnQOvReVbbpJ
G+/Cc0+wa0WpXLm8Xuu2Qwfv1WfvsOtMXTT4RHv+4485ILN/lP/q/Z90fA/b
H/vwvZd7zZs1tnW/+Gicrff2y/d52269mT2XrvOr/zxty5P571WXnGqPp89e
f34fvvWId+v159rcW+t7KT9WvSj/1Wem9/7xO6O9Zx+70dt4w5ZetWpVvU/e
e8zWy5X/jhpxmS2LPkftq7xe71e/h3D993ZNhaGNBdLG+b13WYvDDz/cq1Kl
is0J4+XqjzRF5L9RnZKMf9b6yuoHVd9o8tz77befV6tWrUwuqPzXJHJihbZN
jrHKumZdu/pcozLlv8pZ42Oely5davuet9hii0xZrvHPyfz3nnvusftF+XEU
7777rq2nfuSoTPmv+ps//fTTrLp77bWXvSaN59Z2Mv8dMmSI3X7uueey9tOc
arXP8c+bKFkY2mYgX5zfe6+JiPLfLp3aZ/ImhXIjlZ960uF2W+srK3dV/2iy
/095k+pGc1SV/2pb6xbH691y7TnB75EfKr4PeNHsV+wYZvXNxsuVJ6p8Retf
FTX++YqL+mfKtI60yp5+9Iasc2icr/qaTz7hkEyZcj7NKY6vMa3Pqk2r5t6G
67coNOZZ71v7RPlllP8q943XUw6s8rtvOT9Tlmv8czL/VZ1c62FFv4uIfr8Q
5b/Jz1F5dfwzSua/fy55z37G7Tbf0P4c3/f0fkfY9vrr6c84/7u7JsLQxgJp
4/zeu6yF8rsddtihUPmoUaNKJf+N1ohWDhvNn41CzwsyYf+x6kb5b3w9LcWO
O+5o+4W19lbyGBqrrb7SqK5yzV122aXQ+1GfbatWrTLbJcl/c4X6mm+//fZC
n4Xy3913371Q/QceeMDW1eep7WT+26FDB7tv8n0p1JesNapd/x0pa2Fom4F8
cX7vvSYiyn+HDjkpq1zjd1V+7JFBjqRxvtq+7/aLCx1D/ZYmll9G+e+bL96T
Ve+lp2+z5fExv7nisQevtvX0/+Rr6mstjfxXa0Qrp9X6WdFc5ig0Rlm5bVRX
uWx8PS3FjKljMzltcn/1n+u16644w9aN8t94X7ri/TeDe4brrzwzU1aS/DcZ
Giv+0dujvX337GqPp/m6Ko/y3+fG3lRoH/0eQ+On9XMy/43+Tpx1as9C701j
ovXaXTefX+T1lKcwtLFA2ji/9y5LoWf16jM74ogjCr2m5/6aUsh/oxy3uBg+
fLitG+W/33//fda16NnCxe2vPuCorvLfgw8+uND72X777bPy5JLmvxoffuyx
x9o8W33Vel25ePKzUA4b74eO4tVXX7V1r7nmGrudzH+bNGlS7HvTWG7Xf0/K
WhjaZiBfnN97r4mIcp3h1w0q9JryviiP1Pha1Zv4/F2F6s3/4sVg/ku4vnKU
/0b9n1FoHK3KNRZa28opTaIdGP/kcJsP6meNr06eS+OKSyP/jc/ZzRXqA45/
DkcfvnfWdeg6i9tfobHfqhuf/xs/hsZLm1ierChJ/qvfTeiYync13jk6n8Y/
xz+LKP9NzmdWHHVoMO5N/bvJ/HfsyGtW+N40Dtz13901EYY2Fkgb5/feZSm0
LpPWk+rRo0eh1zRH15RC/jts2LBM/hfNEU6G5tmqbpT/Jp8/pH5Q5a5F7a+I
6ir/zfV+ViX/1dxh5dbrrLOOd+KJJ3o33nijzWc/+uijnPnvcccdV+i8ujbV
vfnmm+12Mv/VZ6W510W9r5deesn535OyFoa2GcgX5/feayKi/Ff5bfK1eP57
503B/JUXn7q1UD31C+q1aF5olP8m865k/jvssgF2Lm08lBNGufYbE0YUOpfq
lEb+q3HLyh2jOcK5Iv45xOc3K6K+bOW4Re0fzeuN8t/k+1nV/Pewg3ez++24
/dZ2vrHyVY1HHnRGr5z5r/qGk5+jnousz0k/J/NfjU/XtsZxF/XeGP8MwBHn
995lLTbeeGO7tlSyXGtHmVLIfzW2WXWuvvrqQueI1rGK1ngqKv/Vc4U0tzbX
c3mVv77wwguZ7dLMf3feeWd7vORzmKI+3QEDBmTKlP/qHMnzKu9X3WgOcTL/
1T6ar7x48eJC+2rM9Msvv+z870hZC0PbDOSL83vvNRElzX/V76t6ylmT9aKx
0VEfcknz36JCa0nFjxeP7bbdolTyX611rTWgfpn/ZqFzaJzyivJf5X86pubc
JvdXf7hyT/1eQNulmf9qnS7tc+ShexQ6b8/D9rKvaUy3tqP8d8wDVxWqq/xf
83v1czL/ja5L45+T++n5SRqXnus5SuUxDG0skDbO773LWmj9Y31uI0eOzJQp
F9M6zqYU8t9FixbZOcbrrbde1lrG0Tnia28Vlf/edVdwj6FnCcXLJ0yYYNtg
PRcpKitp/hvl5ffee2+mLJn/br311vbZSPHn+KrPXOdTPV1vVB6t/xzPV7W2
s+Yc67zRM5CS+e8NN9xgt+NracWv76ijjnL+d6SshaFtBvLF+b33moiS5r8a
J6u8rMV669j1qaI6vy18x+u0zeb2OUXRvNPVzX81vlfnUY6mZ/PG99c1lUb+
++BdwbMazj7t6Kxza4yyzhFfMypX/qtQTqoxx9PfHZNVfsQhe9hjK4/X9srk
v1qDW2txx9cii+e/774WrLPRr0/2WlqfTXvcPp9Ir8384ElbFuW/+p1B/DnN
0bpb11x6ut1O5r86t56XVK9u7UwfdlRvv712tHXjz1kqz2FoY4G0cX7vXdYi
nof27t3bPtdWc11btGhRKvmvQn2tOr7Ktb/WPN58883tvpdeemmmXlH5788/
/+zts88+9jWtbXX++ed7/fr1s/NwGzdu7E2fPj1Tt6T577Rp0+zxtL/W19Jc
6GT+G607rbWz9Jq2t9pqKzteWefW85+i4yn/1fE1R/iUU07xBg0a5LVp08au
fR3vn07mv3qWst6TyrTmtt6bxlor79azkOPPdiJKFoa2GcgX5/feayJKmv8q
NOZXee566zbxBp91nM099UwgPcPn3tsuytRb3fw3Opf6Z/U8Ip1H6w5rvSrl
xaWR/yqX23/vbrZ8t1062fW/TjvpcHsOrQsVH99bVP6rccX169Wxz1DSvjqG
nk9sTPazhFYm/42e+6TnT0V97fH8V7+H0Gei96j51vosdW7lqttstandN5qj
HeW/Gue9VfuN7fXpOUjad/vt2nt/LJ6c+SyS16w8W8921jOJzzjlKLvvDp23
tPWied5rQxjaWCBtnN97l8VQ/6b6H9u3b29ztpNOOsk+v1bPAdY6WKqjHFfb
8X7i++67z5apjzcqu/LKK7OedxvF22+/bdfZ0vGVJ+66666FnmekvlgdL9dY
YPWfav5tlMfq+b59+vTxPvvss6x6moOresn99Qzi+HhlhZ4l3K1bN5v/Kr/X
fF+dX+tM63U95/i6666zOa/Oqd8TKAfW+73wwgttDh4dSz/ffffd3v3332/r
qb76ifW+4+fUuPLke9TzmTROervttrP7ac1nHS857pooWRjaZiBfnN97r4lQ
nqc5ta88c0eh11QefzaPQn2dyi31LF49P1frKClXitd5/vGb7b7fzxyfVa6x
uypPrgtdVOi5v5qnqrWq1Mescbz33HqhzceiOpqrqmPGn03U59gDsq574dcv
2zp69m38+H8vm+rdfsNgO49WOaL6PNWvmhzbq3113lzXqDHOylmVo+oYWldZ
ayPHnxGlPmUdY9aH47L21TOGVa61tKIyPbtIeajWp9bvGFSmebiXnt8vU0fX
pzrRHGZ9RjqHrkXH03h01dPvNrSttaqVs+rPTO/x4vP6ev9b+HbmeOrvVT3l
6fHrU9/viccdZP+cdZ6dunaw+Xa8b7q8h6GNBdLG+b03QRBuw9A2A/ni/N6b
IAi3YWhjgbRxfu9NEITbMLTNQL44v/cmCMJtGNpYIG2c33sTBOE2DG0zkC/O
770JgnAbhjYWSBvn994EQbgNQ9sM5Ivze2+CINyGoY0F0sb5vTdBEG7D0DYD
+eL83psgCLdhaGOBtHF+700QhNswtM1Avji/9yYIwm0Y2lggbZzfexME4TYM
bTOQL87vvQmCcBuGNhZIG+f33gRBuA1D2wzki/N7b4Ig3IahjQXSxvm9N1G6
ccopp3g9evRwcu6FCxd6c+bMcf4ZjBkzxttxxx29qVOnOr+WshCGthnIF+f3
3mmKX+a/6e284zberdefmyk75oh9vFNOPNT5tRUVfy+b6s39fHypHnPUiMu8
LTbbwGvdsrl39OF7p+r9vfniPfbPSP93/dmXlzC0sUDaOL/3Jko3dthhB69F
ixZr/Lzvvfee17JlS+/pp592/hncdNNNtr159dVXnV9LWQhD2wzki/N77zTF
km8n2u+bM045KlO20QYtve223cL5teWKRbNf8Tps2da7edjAUjvmrA/HeRUr
VvSartPQ6330/t6dNw1x9v4WfPmSt2W7jb3bYr+PGPfIdfbPSP93/fmXlzC0
sUDaOL/3Jko3XOW/DzzwgP2OJ/8te2Fom4F8cX7vnabIlf9OeX2k98FbDzu/
tlzx8Tuj7fWWZv47duQ19pgP33u58/c37Y1R9lri+e/iOa96r79wt/2/6+sr
L2FoY4G0cX7vnfaYNm2aN2nSJG/RokVF1tG43zfeeMObPHmyt3Tp0lI573ff
fee99dZbhY73/fff2+t5/fXX7c/J/VYl/33//fftMfU+inuPb775pvfOO+94
S5YsKfR6PvJfnVPXpc811znj8eGHH3qffPKJ/Zn8d+XC0DYD+eL83tt1zPn0
WZvj/rbwnZz5b1Hx9fRnbB72zYzniq2nPsy3XrrX++o/TxdZ5/dFk22up/HX
8fK/lk7x/jP5UW/qpFHef394q9B+K8p/f/zmtRWeOxnKe3XMV565Y7U/2+8+
e8Gef9nc14us838/vuvNmDrWe+eV+wu9/1z5b3Gx9LuJ9nw63orq6lzvTXzQ
++Kjcc7/DroOQxsLpI3ze++0xS233GK/q5555hlv/fXXj763vJo1a9q8Kl53
2bJl3hlnnOFVr149U69Bgwbe8OHDs+rtueeetjx5rvPOO8/uE+Vtjz32mN2+
66677Pn0s/JZvTZ9+nSve/fumfNEsf/++3vz58/PHLMk+e8dd9xh933qqae8
DTbYIOs9XnfddVl1f/rpJ+/ss8/2atSokalXv35978Ybb8zUGTBgQNY16fUL
L7zQ/qwcPqr3888/ewUFBV6VKlW8H374IVM+Y8YMW/fyyy+32/pdQ79+/bxq
1apljlmnTh3v0ksv9X755ZfMfkceeaS32WabZT5HxfXXX58z/9WfSYUKFbyD
Djqo1H5HUV7C0DYD+eL83ttVfDplrNexw2bL24V6dWyeZVYw/ln7td9io6w2
ZcP1W3ivPXdn1vGnvzvG26lrh6x6nbbZPJNvqf9SZVddcqq3QZv17M/16tb2
fl0Q5IC6loIGdTP7Vq9e1Tvv7N52Pqxev+/2iwu1t8q19dr8L1709ttrx6zX
Nt2kjTf51fuL/Uy23nKTQsf8/P0nvBN6HWh//mPx5Kz6d9wYtG3KXbWtfnJt
P3jXUG/H7bfOHKNSpYreqScd7v3z09Ss/a+/8kyvSeOCrPd4/jl9vH9/nubd
dfP5ha5Fn1mu8c963z0O6G7b0Khu82aNvccevDrrfBorfniP3b2hQ06y54rq
aq7z2pwHG9pYIG2c33unLaL8t169et5pp53mvfjii97DDz9s57Zqzo76GaO6
xx57rG0PzjzzTNuHOmXKFJuTaf/bb789U29l81+d+/DDD/fOOeccexz1fSoX
1zFGjRpl80X1iR5zzDG2vupFx1yZ/Ffn6d+/vzdhwgTvkUce8Vq1amXfY3zd
qD59+ti6p59+un2Peu3oo48Ofid+8822jnLzwYMH27IrrrjCe+WVV7x3333X
bitnjY6lvlwTtofjxo3LlCuXVtlHH31ktw888ED7uep3Czrn22+/7R1yyCG2
zrnnnpvZT5+18mK9D/0ZnHjiifbPJ5n/3nbbbfZ96TNVPu/671jawtA2A/ni
/N7bRfw87w2bHzVqWN/mSOoD1ppXNWpUKzb/VV6mPHL91ut6b0wYYfd78alb
vVYtmnkN6tfN9F/+8NXL9tjrNCnwxjxwla2nftW6dWp5G2/Y0vbrRvmv8m7l
isrJhgw83u6v/ly9dtjBu3kfvT3azsm9aPCJtp0YcPKRto5yvntvu8jWO83P
LdUXrb7U/y1822u7cWt7rntuvdCeW9eq3K9WzRreZ9MeL/Jzef/Nh7wLBgVt
6g1XnWWPqeOtbP6rcx9yYHfvpadvs7FD5y1t+SP3XZHZV7mvylTvw7cesb9X
0FpjKrvl2nO8ebMmeHffcn7mz0PX8ueS9wrlv7om5a/KZ2+65mzb160+4O23
a2/raTx3dE59Bro2/XkpR9caWhef19e257t029b530tXYWhjgbRxfu+dtojy
X62jHC+///77bfmtt95qtzUuWt/pxx9/fKFjdOnSxVtnnXVs/7C2Vzb/3Xvv
vbPqaczxJptskjl3FDp+rVq1vD322CNTtjL5r/LFePlDDz1ky6O+3Y8//tje
DyjPTh6jW7duXsOGDTPjknONf9bvDFQv2r744ou9Jk2a2HxVuW1Urutv27at
/TnKkU844YSs86nfV2s6q0/466+/tmXR7xpGjBiRVTee/+q96j0oZ1f/s+u/
X2kMQ9sM5Ivze28XEfXzPvnwtVnlUd5ZVP4bjY8+vd8RWfspx1P/ZjQW+rIL
Trb1kn3COr7yL+VnUf6rPDyeVyrfVE6s/C3ZX9q/72G2L/Xbz56327nGPw+/
blChvE+h89WuVdM74pA9iv1sovHPrz67fPzzyua/uvZ4PeWkKj/xuIPstt5X
40YNvK3ab5z1HtW3rb70KBfNNf45mf8qx9e2riV+TvWjt1hvHZvr6vcWKlP+
q7rKteN1tZ505cqVMn3ra1sY2lggbZzfe6ctovx37NixWeWa36vyq6++2m7r
/9q+5557bH9sPDRe2MTG/q5s/nvDDTes8Dp1HvUF165d29tpp50y5SuT/6rP
N16uPmUTG4esscTa1njs5HtUP6xe0zxk1c2V/6pvuWrVqpl5xV27drV9sMp3
O3ToYMv0msaPR33Yl1xyiT3OxIkTC123rkOvjRw50m5H+e/s2bOz6kX5r/qu
lfvqMyH3LToMbTOQL87vvV3Ewfvv4lWrVtX2J8bLo5y0uP5fPRNI++qZSBPG
Dbf5avL4Gvesvt/iriE6V8/D9soqV86scvXDqu82Huqz1GsP3HmJrZsr/913
z642l/vy46cK7d+1y1Z2THVx11Ua+a/6quP19LmprTvy0CD3Vn+vCcd+F3ct
Jcl/NZ5ZvxOIxo3H4+zTjs6M4da28t9mTRsVqte398G2Xq451mtDGNpYIG2c
33unLaL896WXXsoqVx+syq+66iq7rfHAJjF3JhmPP/64rbuy+a/6YZN1Nca4
d+/e3qabbmpzStXTfF39vKr57wsvvJBVrrHNKr/sssvs9llnnbXC9zh69Ghb
N1f++/zzz9uyJ554wluwYIGd96tzK7+uVKmSXb8res/q99U+mver7S+++KLQ
dY8fP96+NmzYMLut/FdtfnxOsCLKfxXqo9ZnpNze9d+ttIahbQbyxfm9t4vQ
PNyW6zXN+Zr6SIub/6vcLT7/V+Nu9959e9sHHN9nm602LfYaovz3rFN7ZpVH
OW5xccVF/W3dXPlvcm5yrtB6W0VdV2nkvxo7nTxulSqVM33PLzwR3MfoOcPF
fUYlyX81dlxjzXPtr3HUqjvx+bvstvJfjV9P1tPvMlQvuf7W2hKGNhZIG+f3
3mmLKP99+eWXs8qT+a/mm5pw7K3yslzxzTff2LrKf7UmVPJcUT9xMv999NFH
s+r95z//8erWrWvHDfft29deo/LFH3/80eZ3q5r/6hrj5cn8d9CgYJzXnXfe
WeR7nDNnjq2bK//V+Gy9b40lV3+6XlffsdaR1s9jxoyxOf26666byWE151qv
ffrpp4WuW3OG9Vq0Dpny38qVKxeqF+W/6n/WZ6vfE7Rv3551r4oIQ9sM5Ivz
e28XUVz/rOYAl+T5v5+895g37LIB3u67bGdzO803Gv/kcPua5t+223zDYq8h
yn/PGXBsVnmUf14y5CQ75zVXqC9XdXPlv8rxNLa4qH0VxY3zLS7/TebN0Xjx
ZP5749VnFzpuPP/VnGnV0/zl4j6jkuS/u+7cyatTu2bO/fXno7pvv3xf5rPZ
rO36heqR/9LGAinj/N47bVHS/DfKIe+9995Cx9CaWRoXHa3LvO+++9p5q8l+
yiOOOKJE+W+0vnKyv1ZrKKsfVfNio7LSzH+V25tw/HPyGPp89Pq8efPsdlHP
P9J73GijjWx/udbwUlm0DrT6eps1a+addNJJmfqa46zjaM2x5DkvuihYi+S5
556z2yvKf6P1r6Kx6kOGDHH+9yuNYWibgXxxfu/tIjSPVvnq9zPHZ5XrmUam
mPHPi2a/YuebJp+vo3WVtV+fYw+w2wfs083m0cl8UeNwtVaT1sQqKv+Ncr5z
z+xV6Lo1b/X+Oy725n4eXHeu/PeoQ/e04460BnRyf503vm5yrsiV//br08OW
6XlK8boDTz9mlfLf6HM+s3/PQvUGndHL9ulqLS+tx2VWkP9q3rW2c63frPXD
9Oe88OuX7Tb5b+4wtLFA2ji/905blDT/Vd+u+hU33nhjb+7cuZl6Klf+qfHO
0TN+ojG9Gg8c1dM6xZq7a0qQ/2otqFzXFPVBd+rUKVNWmvmv3peuUc9I+vbb
bzP19GxirRWtPukox1e+qn01Jzl+TM3VVXnz5s3tfNyoXM8hit5/lM8q1J+s
z3XLLbfMekbSzJkz7Zpi6623XmbNrZLmv8q3t912Wzv+WmtJu/47lrYwtM1A
vji/93YR7772QLA+5DEHZJVr2xST/yp/1evKMeP76fm8Ko/Wb9Y6x9pOzm89
+YRD7Hn1bKSi8l/Nld1ko1Z2DayZHzyZKVc+2G2HDja3jfJv/V/HuPT8fpl6
zz4WPK/g2CP3yVpbSmtuad999tih2M8mV/575cX9g9/7+q9FZfrdgebSmlXI
fxV69lTDgnqZXF6hnF3zk3fbpZPdjvL7+OeYzH91bm1rHnD8/erPuGrVKrZ/
Pioj/80dhjYWSBvn995pi5Lmvwr18Sr/Um6n9Yw1dlc/q082WqNJobWzlHsp
39M6xIceeqjN8XbZZZcS5b+ai6xjqq9UY5K1jrLyXG23bt06K98tzfxX8eCD
D9r32LRpU9sPrX5c5aC6nvvuu6/Q56N+3c6dO2eeM6T8OHqObzw3jj5njY9O
jku+++677fGVY2sO8qmnnmqPq3w7/udS0vxXoWdTaR5wu3btMvkzEYShbQby
xfm9t6tQP6Pev8ZC69lDWgNYc4KVMxU3/vm4nvvZ/VRfY5RVV+ONlQvqmT2q
oxxWz6NVPfUFaz2o6FnAOq/qFJX/Kt6b+KBdJ1qh3GzwWcfZfmPV1/N6onp6
jpPW4tIcZD1jSOssqzwar7zt1pt5F557gs3r1R+tZ+2u6Dm3ufJf9dfq2Uk6
l9aw6nXUvpk81axi/qvcVs+M0menOdDR56iyaH3mpd9NtH8euna9P62vnev5
v/p8VKb8Vu9X60zrM9FaZdFa2Qry39xhaGOBtHF+7522UE6oHFXP/omXf/bZ
Z7b8qaeeyipXbqvyrbbayttss83seN9caxfrmbjq89RzjDQfWPNhNYdX+0Zz
aNU3qe1o3eh4qI90n3328dq0aWPXUb7gggts/6xyUO0TPRNo6NChNk8t7j0q
n9Y+H3zwQVb5rFmzbLnWq4qXR9el96j1t7SGczy3jELP2e3evbtd3zneX6xx
y9o/XhZ9ntFaVsnQZ6P8Vvlqx44d7e8WNHc4Xmf48OH2GczJfdXPrmNr3nS8
XM9SVnlybbO1PQxtM5Avzu+9XYae/bvnrl1sbqn+UuVXJx3fI+s5tcqt9Dyj
aFvP7tW6T1rzSs8B1rN+lMPqebzxY2uOrZ5fG9VTv+vo+6/MvK71insfvb8d
k5zr2mZ/8qx91m/nju3sM4MP2m9n7+lHbyhUT2tJ6diaB6s5yfH3ptxb6z0p
D1aOmRzvnSs0llvXlRzjrXxVa1Urf9yje2fvoXsus88lVl2tNa06+vy0rfm9
yeMqJ08+o0jzmDV+Wdendbv02SvXjtdRf7Y+Q+XaenaxxkTrHPp/sp7W9db7
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
AJAutM0AAOQHbSwAAOlC2wwAQH7QxgIAkC60zQAA5AdtLAAA6ULbDABAftDG
AgCQLrTNAADkB20sAADpQtsMAEB+0MYCAErLAX5c4keVNXze7uF5663h8+YL
bTMAAPlBGwsAKC3v+PGNg/M+4cevflR0cO58oG0GACA/aGMBAKWhsh+/+fG4
g3N/58ckB+fNF9pmAADygzYWAFAatjJBm3LuGj5v0/C8167h8+YTbTMAAPlB
GwsAKA19TdCmHOPHo378bIJ+2XNy1FXOeqcf34b7zPfjfj/Wy1H3MD/e9uN3
P5aFx24We/2A8BiHxco29uOlsG4DP2r78bofR/ox0I/ZfvzXBH3VTRLnuzi8
tg38eDU857Hha9v78awfC03Q163x3nsk9m8cnusgPy4I3+MvfjwSXktJ0DYD
AJAftLEAgNJwjwnalB/9uMmPk/yYHJadFKun3FV58VI/rvHjOD+GmSBHnONH
1VjdK8P9lcue6seNfvzpx4dm+Vzfy8M6rcLtdn784MeMWNlOYZ0v/HjNjz5+
3ObHP368m3gfn/vxvB9z/XjZjxf8aO3H0X787ce0cP9DTJCX6xj7xPbfN3au
CX709mOEH/+aIJ8uCdpmAADygzYWAFAaPjZBm3JIrKyGH/PC1yIPmiCP7JDY
/+Jw/3bhdjcT5Iz3J+pdG9bbJtxWbrww/LmjH0tM0P9aP7bPOeE+40z2Glk3
huUdw22tH618Vjn2kbF6G5qgv1fHjefnNU2QJ38QKxsaHvOhxHWPCMs3NStG
2wwAQH7QxgIAVpfywL/8mJjjtTEmGLsct06OereaoE1qEW5rTec/ctTVGOmd
/Sjwo4IJ8t3n/NjRBGOux5rsHNWEZcpp102U72WWj9mW7uH2iEQ9bSsv3jDH
dT9ggjw9Oud4E+TKDRP1Dg2PfVCOYyTRNgMAkB+0sQCA1bWDCdqTnjlee8oE
c20jykE1Zln9tlNMMOb5l3B/jYlWTqvnB+t5RisaL7xRuN8bfvzPBHnojTnq
6Rzjc5RHOenh4fZ54Xayb1rzk98p4hruNUFuHOW/i02Qbyf1Do+9T47Xkmib
AQDID9pYAMDqOtME7UmbHK8p95we/ry5CXJcjVe+3Y8BfhxsgrWjlb9OCOu1
DI93wwrO2zOsp75nzTF+KTx+jVidJmGdy3Psf6HJHv/8pB8LEnVqh3XuLuIa
NB94Xvhzm7Du4Bz1rjGMfwYAwDXaWADA6hptgvYkuZZyx7B8WLit9Zg1FrpF
ot6uYb1Lwu3Nw+2LE/U0P1drMx8Ybt9sgj7fPcPtw8P9+sT2idajSh5L/cwz
TbBWVjQnWOtyPZmo1yDc/3ZT2Kbh+e8Jt48I656dqFcpPPacHMfIhbYZAID8
oI0FAKyuL03QnhwQK1POp/HLmgsbrcOs9ZLnJ/at7Mdb4f77h2Xqc1Wf7phE
3avCenuH2xqT/FXs9WomGH88LVY2NNznmcSxor7j6HnF0XOEc/Xdfu/HJyZ7
7Sy9P/VXa+xztBbX9eExHknsf1JY3j/HsXOhbQYAID9oYwEAq0PrUKkPVM/S
VV/qCSbIg18My+N9sVeb5eOau5hg7LNy2CVh+baxug+aYJ1ord2s+cXXhceL
ckvlzcqtRyeu5+bwWJ3Cbc371TOZvvFjuAnWzhpign7oV8PjyP7hft1zvMdT
w9dGh9eiuq+EZYNi9d40wVjo+eH16lzq09baW3pucDx/Lg5tMwAA+UEbCwBY
HdubYFzvJiboS9VaV2pb9Bzd5FrHWidaY6D/Dut848fJJnhmko4Rzz1rmWBt
5T/M8ucKX2qW56ttw33izxaWdmH5leG2+oOVA7c3wTOBvfAa9Yzi6rH9zvBj
th91i3iffcPr9cJQn/XesdcrhcfV2lca9/1FWE/reGnub5UijpsLbTMAAPlB
GwsAKG25nm8Up/HNyecDFUV543qreB3RelSXxsoam2Du76rSfODKOcrbm8L9
wcn50CVF2wwAQH7QxgIAyqtoPap918C5TgjPtVMpHIu2GQCA/KCNBQCUV9F6
VKvaD7sy7jLBuO7apXAs2mYAAPKDNhYAUF4NNMGaV2vC+SZY86o00DYDAJAf
tLEAAKQLbTMAAPlBGwsAQLrQNgMAkB+0sQAApAttMwAA+UEbCwBAutA2AwCQ
H7SxAACkC20zAAD5QRsLAEC60DYDAJAftLEAAKQLbTMAAPlBGwsAQLrQNgMA
kB+0sQAApAttMwAA+UEbCwBAutA2AwCQH7SxAACkC20zAAD5QRsLAEC60DYD
AJAftLEAAKQLbTMAAPlBGwsAQLrQNgMAkB+0sQAApAttMwAA+UEbCwBAutA2
AwCQH7SxAACkC20zAAD5QRsLAEC60DYDAJAftLEAAKQLbTMAAPlBGwsAQLrQ
NgMAkB+0sQAApAttMwAA+UEbCwBAutA2AwCQH7SxAACkC20zAAD5QRsLAEC6
0DYDAJAftLEAAKQLbTMAAPlBGwsAQLrQNgMAkB+0sQAApAttMwAA+UEbCwBA
utA2AwCQH7SxAACkC20zAAD5QRsLAEC60DYDAJAftLEAAKQLbTMAAPlBGwsA
gHsFfvxugnY5it/DcgAAUDrIfwEASIdRfnxjgrZ5XrgNAABKD/kvAADpsKMf
C0zQNv8QbgMAgNJD/gsAQHrM9ONPP2a5vhAAAMoh8l8AANLjDD/+Df8PAABK
F/kvAADpofWulhrWvQIAIB/IfwEgvSr4cWTdunVfrVWr1hKTvTYwQRBlPGrW
rLm0Tp06b/g/9/ajigEA5Jvn+gIAADm1qV279uft2rX7+d577/VmzJjhLVu2
jCCIchSff/65N3LkSG+77bZbVqNGje/8f/ftXX/xAEA5R/4LAOnT2r8XXnrt
tdf+5fr+nCCINRMPPPDA39WqVfvZkAMDQD6R/wJAulRUvy+5L0GsfaEcuEaN
GnMNY6EBIF/IfwEgXY5s3779L67vwwmCcBNdunT5uVKlSn1cfxEBQDlF/gsA
KVK/fv2J9913n/N7cIIg3MSoUaO8goKCt11/FwFAOUX+CwApUrNmzWVaE8f1
PThBEG5i1qxZWhf6Z9ffRQBQTpH/AkCKVKhQ4Z8ff/zR+T04QRBuYsmSJV7F
ihX/df1dBADlFPkvAKSL8/tvgiDchuH+DADyhe9XAEgX5/feBEG4DcP9GQDk
C9+vAJAuzu+9CYJwG4b7MwDIF75fASBdnN97EwThNgz3ZwCQL3y/AkC6OL/3
JgjCbRjuzwAgX/h+BYB0cX7vTRCE2zDcnwFAvvD9CgDp4vzemyAIt2G4PwOA
fOH7FQDSxfm9N1Gy+PLLL72WLVt6F110kdPr6Nixo9ejR4+V3m/kyJH2+idM
mFCi+qNGjXL+ma8tYbg/A4B84fsVANLF+b03UbKYNWuWzVNOP/10p9ex7rrr
ejvssMNK73fnnXfa63/qqadWWPf444/3GjZs6PwzX1vCcH8GAPnC9ysApIvz
e2+iZJGW/HdVY2Xy3z333JP8dw2G4f4MAPKF71cASBfn995lOZYuXeo999xz
3qeffupNmzbNu/rqqwvld1OmTPFuvPFG7/LLL/fGjRvnLVmyJOexpk+f7t17
773ehRdeaOu/+uqrWa+XJP995ZVXvNdeey2rbNGiRfYa33vvvazyOXPm2PKv
vvoqU/bDDz94o0eP9oYOHerddttt3ieffJLzHG+++Wahch3rmmuu8W6//Xbv
iy++sNersgULFtjX4/nvjBkzvFtuucW76qqrvOeffz7rOC+99JIdY123bl27
//vvv5/1Gd166632M7rvvvvsOVz/HSgPYbg/A4B84fsVANLF+b13WY7Fixfb
3KFPnz42X9PPVapUsfmf8s5jjjnGltWpU8dr1qyZ/XnLLbf0Pvvss8wxlEOf
fPLJXqVKlbwaNWrYObKVK1e2dffdd99MvlyS/Hf//ff3qlevbvPYqOyZZ56x
+2266aZZdZWPV6hQwfv444/ttvJtjW1WXf2/Vq1a9r0oF47vlxz/PHfuXG/n
nXe2+xUUFNjPQXHEEUfYsih/jfLfo446yqtWrZoNE9wXeAcffLD9HFSvSZMm
mXJF3759bfkNN9xgPxddlz6jihUr2mOMGDHC+d+Dsh6G+zMAyBe+XwEgXZzf
e5fliPJf5a6as6r+ygceeMC+duaZZ9rX1Fepeip78cUX7bjebbfdNpPvqR9T
9ZQDK2dWmXLK/fbbz5Y//fTTtqwk+W+UYz755JOZsug6lOsqL4/Ku3bt6rVr
187+rD7gRo0aeW3atPEmT55sy5RDK6/Xvlq7Ktovmf/26tXL5qLqs9Z70ns4
55xzMvlrMv+tWbOm/YxUV+9zr732suVPPPFE5pjJ8c+zZ8/2qlat6h144IGZ
z2jmzJle27Zt7e8W4vk+sfJhuD8DgHzh+xUA0sX5vXdZjij/VU4YH9c8b948
25e76667FtpH/ZjaR7myth988EHbV6p94vU0Tlj1hg8fbrdLkv9+/fXXto/0
tNNOy5S1b9/e69atm91XubbKvvnmG9u3e95559ntSy65xL6uvuL48fSeWrVq
5W2zzTaZsnj+qzHUOs4hhxxS6Fq23377nPnvoEGDsuq9/PLLtvzSSy/NlCXz
33fffdfWib8vxcSJE+3nN3/+fOd/F8pyGO7PACBf+H4FgHRxfu9dliPKfw84
4ICs8vHjx9tyjUe+4447skI5p17L9RwjzW9V3jts2DCbO6ue+lX1WknXv1Ju
utlmm9mf1d+rfl/136p/V33UKo/6nN966y27vccee9h6yrWT16vcV/3bCxcu
tHXj+a/6bHUczRVOXkeUUyfz30ce+f/27gPMiur84/jZReouRRG7CEEsQUSs
2Hs0mthiFHuJGmMXo8a/EY2xgr3GhhEUDbaoUWNJ7EaxN+xRo0aNRDCJUWO5
//nNnbPMPczdXZY99xx2v5/neR+Y2bkzc+/unXfemXPOXFOx3FNPPZXOt7W4
wq1/p0+fXho6dGi6nO6dH3PMMWndbO+hE3MXhvMzAPCF4ysAxCX4ufe8HLb+
3W233SrmT5o0qaIPa1EceOCB6bKqKw855JBSv379mn42YMCApvunc1r/nnTS
SWkt+/LLL6d9Y1W7qv2w+tgOGTIkXWaHHXZI7+va16imbGl/bdvpfP17ySWX
pD/T+3X34+yzzy6sfzUGWH651tS/Co2ZtfPOO6f9f+0+qa+wxtAK/Xcwr4fh
/AwAfOH4CgBxCX7uPS+HrX/VBzY/X/1vNX/8+PEtrmOfffZJl9VYWbqfasc0
tuuY0/r36aefTpfTOMyqF1daaaV0/jnnnJPOf+6559La8oADDmh6zfrrr19q
bGxs1f3UfP07ZcqUdJ1at7vc2LFjC+tfd3zs1ta/NnS9QG3HjzjiiNLCCy9c
eE+ZmLMwnJ8BgC8cXwEgLsHPveflqFb/6l6pxoTaYostZnuNajfVpXqOkKZ1
33eZZZaZbTnd19S6zzjjjHR6Tp7/q3Ghtttuu3ScZI1/pXnPPPNMU52tf2+/
/fam5bVOzVObYnddujetfre2Ns7Xv7qvrDGY1c7bfV21/r9tqX/1TKftt9++
9MADD1S81vYdVi0c+m9hXg7D+RkA+MLxFQDiEvzce16OavWvQu2NbZ9aO081
7LLLLpvWjPa5Q6onVQO//vrrTcvp+brqr6t16zlF9rWmlfXv4Ycfno6/ZZz2
xoMGDUrrcq1bfWrt/KlTp6bjKw8bNixtN23n6xm9WofG57Lz3PGf9XwivU89
J0nP+tU4XnbMadPG+nebbbZJ90djPGs/H3nkkXQbqovt+M8KjZllcuN6EW0L
w/kZAPjC8RUA4hL83HtejubqX43FbPvVauymUaNGpTWp6rr8M2tVH6u20/1O
jUOl16g+Vg2pWtX2LZ6T+lf3lrWs1qOa1M7fY489mu4Bu6+57LLL0uW1j9pX
O97UyJEj0/u8djm3/tWzh+yzmmxoGftcI9131nJzUv+q5rfr0jOPNM/W1Oob
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
fi7y6FefPJ6+9shDd2+a98Pvr1fadMM1gr+vavHZRw+Xnnv02nZd5xknH1bq
07shzQGrrzIs6Pv7z4cPlZ7/y3VN0w/ffUX6O7ph0rjgn/3chiHHArEJflwI
FTttv1lpvvm6BNm2am999v9858/BP4cQcf8dl6bv//ILjpvj126y4eqlRRbu
3+Jy//3okdLQIQNLhx+4c/D3G3sYcjPgS82/z/vssU36nf7i40eDH1t8xsE/
3TF9n5/8bc7z6P/++Vj62r123app3iorLV/67nLfCf6+iuLjt+4tLbXkoqUT
j92/3db5+rM3l+rq6krfGbR4ek1+8oSTg72/D9+4u7TkEguXTj3hoKZ59956
Ufo7uuqSXwX//Oc2DDkWiE3w40KooP6dN6O19a/OifQZU/+2HIbcDPhS8+8z
9W/LUVT/xhxvPn9Lur/tWf/eceN56TqvvPj44O/vladuTPclX/92pDDkWCA2
wY8LoSJf/7769E2liZeeWLrv9kvSvFi0/Nczppb+8qcrS7/9zQlp3vjX3x+s
uu63Xrw1bdv7u9+eWnrjud/P9vNq9a/aZD1674R0G3+67eLS5/+ofv7y7COT
023o2ugTD0xM9y//c10vfv/VO9P/v/vyHaXrJ55euuma8aXpb/+p2c9F29T+
f/r+AxXzNa35uq+an6/1vf3SbRXz/v3Bg6U7bzovfR9PPjip9O2nTxRuQ8vl
538zc2rT+9f70zxdF/77a39sWiZf/+qcQNes/3D9OWnbqfz61U5Mn/FPdt86
3Vb+XFCvu3bCKWm8+PiU4H+LocOQm4G5tUCV+TX/Plerf5Xb1KZUx1fluubq
42cenpweH5UXdQzXsTn/84/evLv0wet3peu89Xdnlf78h9+ky6gtso63Wkb5
7ffXnpnmwXem/aHqtqY9cX16HL958hnpeqstp/uVymO6L6hcOSf1r/ZT7Y6u
ueKk9PhfVP8qz9icaUNtyJWL9Zn98ebzZ8uLNpTj1K9n0mUnpucH+dytn9mc
qnymz1X1nvt56rPS/r385A0VP1O75wf/eFm6v2MO2iVdl95/fhn189G5gHKh
m1eLQr+7y87/ZbrO35zzf+k69V71O9P/3d+38ms+/2v7mta+6f8P3HlpU76v
tk2dk9x+w7np39RLU6dUrFufsfblqMN2b3p/1c4TFDo/0PvVZ/aPv95T+P70
Wdu/G33mt005u1WfjY8w5FggNkGOBTGErX91f9CUj01pqL+Jewyfev/EtC1t
fjn1mVHecHPEzj/evGI5xfbbbFxRLxfVv6qthwxeouJ1qvPu+v0FFdtQ/5hh
y39ntm0sO3SpNK/b5XYbvUVphe8OSa8Xd+lS37Rcr549mu13q1yi5XUOlZ+/
/09+lL7+7NPGVMxfY9UVSquOnNUfd8JFY0t9+zRW7NvIEctWXAcoav+snK/3
kH/d1luuX1pnzZVKo1Yb3rSc6t+FBiyQfoZqu2WX7de3d5pDtcw9t1w02+ej
cxPl9N132nK2n6271sgWrwt05DDkZmBufZ7EpCTWcebX/PtcVP+qPlH7WZM7
7i2x+ELpsTj/WuU+9zisUC7527Tbm5bbaov1SmutsWLpR1tv1LTMpecdWzrt
Vwen/1c9q1xjf6acctJxB1RsS/XQZhuvWbGdbt26ln79y59VLKe6TPksf7xf
bplB6T6YVtS/uqY6cIlFml6r9ajOMi20f1bOWHSRBSv2r6FXz9Il51bm/Yfu
ujwdSyS/3IAF52/KR/o9aJ76Giun289DOUc56dgj907fd/71P9h83aZ+zVOu
Om2234eu2etnrz1zU2nlEctV/Ez5V7Voc5/JemuvPNs6dZ5z2AHl8yH9bvLL
X335r9P59nxE29X06SceMtvfywbrrlJxPVrX5o84eNdS9+7dKpZTf2vVz6r5
3X356wu3FrZ/1jmOzjncv5njjt6nomZff52V07+tn+2zfcWyC8zfJ71WQ44F
Or2aHwdiCdW/JjsH0DVxzdM11oUXWqC02KIDmurV9165ozR/vz5p3xQdj+0x
+HsbjUpfr2vbdp2qc+vry3le1xl1bB9/0qFprttys3WalnPrX10bV/22zNID
0zpY83TNUjmqZ8/uTddKdU1UfXW0j3aflWfOHffzdH277rhF0zZ0vtC163zp
OY+ue+ratu7J6vivbTV37V81p84X8vO0XW1D5xx2nq5Z2/eraW1H5xZbfG/t
pnvCOr/SZ6zrB/o87DyTq391TXnwUoul5ww2v+bPw9z612T1vvKYPmddU25s
6JW+Vy1T7f6vzgk077zxR6afpeLis49J91n3EkL/TYYKQ24G5pa+Q+8k8UES
ryZxqCnfE67599mtf5VLdHzUdVM7HqDuP+q4qvn6uT1u6litePy+q9J5yoNq
k6r17bfXdk3bUB7o0aNbmhdUD55y/IFpzWTr3/4L9C1dceHYNO+ojlRuU66w
29I90bVHjUjzm+4HqsbV/VF7PfrCM49u2patVY85Yq80h2g7ym/ZZ95s/Tvj
3fvSvJLP88obtg5trv5Vjll+2cFN97OV0/SZKa/aawE6P1C9qfxl1//0Q9ek
19F13qDt2/pXn9e2P9wwzUPKQVr25LEHpD87aL8d0vMB5SRdn1ad/f1N10qX
qXb/V78bbUfXg3XPWZ+p7nva85C7b7mw6udS7f7vnNa/+iwO2PfHaT2uz8de
X1ZdbF+r6xmap2voeo/6O9Pfi+Zpe9Xu/7r1r84TdI9A9x50TUDL6B7vnrv8
MF1On6Xdpupf7dvwYUunv2/9HepzVQ2ucxFyLNDpBT/3DhW2/lWbpvx81bMm
u5ataY2lqWm1F8svp2O2cqiuQ2tabbiMKe5PdGCS20x2D1LTbv1rc747tqNy
kHLmHjv/IJ1WXtA1U50vuNtQ/s2Pi2zPD9z7xz8/ZLd0fn6cRTdUs2sZ2w5L
5yya1viQqp1tW2v1G9J824ZY94H1mbhtpG0/I1vvuvWvXU/+WoJC+6jatKj+
1TlGfll7zmfbPBX1/7XnUfYczIbuaasdVei/yVBhnGvvBEHMVXyd/TtT/9b6
++zWv6pbdRxVzZJfTrWb2kDpHpmmVcPovqNqC3edqrFUU9hpe+/VzYu2/j3z
lMMr5ttjvNqhalp5SdNa3t2Wrr/qvqvu56mdsupLXQvOL6PaRzW11tFc/XvR
Wb9Il3GP7+oLpPnV6l9tV5/ZDtttWvE65STlR9ueW9d+tR7dX88vd8t1Z5VW
XGFoWnvZ+lfvKd+/SnlS703tj9z9tp+j7slquqj/7/lnHJXOU7vx/GtVx6re
L1pvPtRuXa/XZ2HnzWn9qzYA+eV0DUO1t2pwTet3qOv1+mzdflDb/GCDtI2X
/l/U/9etf3W+oGnV7fn1aBtaf+/GXk3nHvpb1bI6L8svu+OPvpfO13WJWn4n
s+MBgHjU9BgQU6j+1XVE95isulZ5T/WjpnV8X7B/v8J17L3bVulxTTWXroHr
/+p/4y6n3Kifjft1+ZqoW/+utOIy6X1ZnUu4oWvQusZbtH1d01QtqXMN1aUj
hi/T9DNb/7r9lO29Ynt9vyh0HqRltKymdS1ebdlsOyybk9X2zV5LtXlPbZ/c
96BrDPnP1K1/Vd/rtfb+cD70/t36V9fG3eX0LAyt07YBL6p/bR2ufKz7vZou
2mZnC0NuBuaWvkNfJDEjibeTOMxEcv9XdaLaNBXlF7WZ0X3hovWoPlb9pryl
+8T5Wkf1r9o1ueNl2LrNtmOyYWsZ9Y/R9C/G7NlUy7j7ZHOXrr9qbAtTpU7W
vVDTQv07evvvpfvpjqWhGlHtZpu7/6s6XOvfcL1V01zo9stVqI2tcm9zvw9b
/2631UYV83W/WPN1HuF+BrZu1/OJtGxR/av1aZ7yq/t65WHd/2zuGVjtUf/q
erq7Xn0etr2bPjMtp/zc3GfUmvrX3lsu+n3bNgr2Hrzq36Lfi73+nx9TpBZh
yLFAbGp6DIgpVP9We/6vcr1te6T6Tn2fipZTvx19hrr/aa8DFz1v1taTuv+o
abf+tW2xqoVqT7surV/ti7WP9udqg6Zavqj+dfflguyasXt+4obua9scpmu0
au+ta6Y6l1DbJuVVbdM+P9HeI24udK6gZd36V/OLalqFrmG79W/R+M8nZPWv
7WdcbfxnnX/peoLdJ91f13lE0ThlnSUMuRmYW+r/O9lE2P/XPt+1Wqh9sH2t
2ijpWJ/vu6s8qeOzW/8W1Re2/n3hsd9VzFdNpvlqE61p22a1udB1Y11PNrm6
OR+qDU0L9e9G66+WtkMu+pmuCTRX/6pG0v3CfL9V5dpzTj+iaRmNbaHrC839
Pmz9u++e21bM13NtW/oMbH4tqn/1+2jp9WrnXG2/2qP+PaGgrlXbd52j6P82
16ueb+4zak39q3My5eui19v2BfY+v+pf9Vlzl7Pt+XRtp5bfSUOOBWJT02NA
TKH6d/HFFpptvtpVqU2Y8p6mVVNWu/9q61i1Sz7r1DFNOdtdTn1ZTS5XuPWv
1m/7GRWF7UurnKPzEuVt5Qn157XtfXWO0p71r/KEznl0P1znT7Y/j8aeUL1q
x5h65J4J6Xz1h9K0rtFWex92X93698fbbpLe/y3qk6z+O+1Z/9pQOzadP+na
vpbT76Da2N8dPQy5GZhb0Y7/rLbLqtOqHZdtW14dE1XraewH3fNVrWPH1lXO
cetftVlyt93a+teOS6R6u9p+6Z6t7fdq+8vmw/adba7+1bVbvSd3PGOF6rTW
PP9XY0yojbH6udpr1bZ/snKT2ho39/uw9e9P996uYr6t7dUXttpnYN9bUf2r
2l45utprFe5zIfLRXP3rjsNt2x679e+v/u+nhZ+rrX/1+zW5+9jVojX1r9qb
6Tyh6J62/j60rO3zTP0LoAU1PQbEFKp/dSy1NZkNjRWpz8W2t1IdqeWKjpfK
l6oNlWPssbro+XX22Gz7Vbn1r/r0qq2Se81VbbM1rqHtizz2F/tW5CAb6vOi
cURUK9p5c1v/qq41WW7Wv3ZM7P/7+d5pDa5crnMBe16hfdX5kPo8uetSLlW7
I9vX2q1/7bUD933p2rU+l7bUv7pXrWnlc7uMrmHr83Rfa+9FuM+k6CxhyM2A
LzX/Prv178YbrJ4es+14wjZ07NaYUvb5r7ZtqMYzzi+nvi06Duvap503t/Wv
6kdN2/7A+dD4UKrz1HdH9Z+2recquMvZsaebq39Vn5lc/rKha8qaX63+1b1f
te9y+zfrPEB9ebRt+1lr2r3PqjZfyslqN12t/tV1B83Pj1tpQ/urXKvnUGla
4yEbp/499Gc7pfPcsTAU6hOlaxhu/658FNW/dowMtz2U/k5MG+pf/c2pzZjO
t9zldA1EuVy/Z9tGTucb9udu/Wt/l0X3GHS/Qr8He55G/QugBTU9BsQUdvwr
5R5bw+lep65x61zBHh9traZxG/P3B23/HOUgTasG1tiE6iucr6OURzTuhe41
276mbv2ra8ua1n3Q/DZsrWq3YWu8/PhX2nc7vlZ+XMO5rX/tuBVqO6bzHPsZ
2XEa1XcqPx6oQs840M/yY5/odfaZUHp2Y/4ztfWvngOhnKl2ZHZsKn02dozt
ttS/+qw1rf5fdhn7OeXrbO2frqPrd97cM507chhyM+BLzb/Pbv1rny+jtjn5
58aqPtJ81TaatrWP2uXaZZTX7DgXGqfCzp/b+lfXejVekXJmvhbRGJCar/43
tnZT/lANnK9FlUPUTsu0UP+qblQdqv6wdmwkvSeNa2WaqX9131s5TmNU5+83
2uvCti+TrhWo7tIYFjZHav32urn6RlWrfxWbbrhG+j7UlsvO03mIxrJU3Wj7
HOsz0jrsWGUK1cZaRv2U87lLz0PQtnVdvbm/k6L6V9fajVPXah/URt60of5V
aCwsfZa6t2Dn6fVqP2/7ROletdancyO7jFv/6nepe/kahzP/HGZdV3efsUH9
C6AFNT0GxBSqf1XfqT+Pcp7ODVSjKhe5z8e11x01VoiWs/1uVJ/lxzrWWB2q
f22fUh33VVep/Vm+3ix6/q9td2S3YZ9xp5xsj/XKEapHlQN0vVP3LVUzaowo
La+2UHacj7mtfxV6dpCWtde6FcrlOp/Q/HzOVqjmtM8V1H7r2oJ9prHOoexy
Rc//Va5TPtS5hNoi6z3q3EOfZ77dXWvrX4V9JqN+zzon0DV95USdS22+yVrp
56fPTtvUWJqh/yZDhSE3A77U/Ptc9PxfXavUPD0nQLWajs+a1rHVXpfVdVvV
njq+Kz/q+Kjjt8a/UPtp5R5bP89t/atQX01tS9vUtV/VLzruazv5+7VqP6R9
UG5WTadt6xiuGtG0UP8qdH9br9WxX+9dx3yFxl5urv2zfS/KycplGq9Y+6u8
YtuFK2y7LK1TedeOS23bgjVX/+oesNanHKTcpryu/KbpfD9j1dQ6jzBZPrO1
pJZRrauf6Xema7ma1u85/7zmoiiqf9Vuyj4rWc8VVm2tz9q2kWpL/at74/ps
tB6NL6426bYflx2vUtf99Tr7/nQuVfT8X/1fv0u9X10X0TmY3q+uzeTvwVP/
AmhBzXNzLKFr3GqXrOvQamekY7LqUjdv21A/Fo0ZrNyr8wvdsy3qU6T1qQ2P
ri/r3qP6zbrtmlU3ql5znxOkdj3ahnKH8q3qQ7evi66BakwMLaNcrvMJLaNx
D7VO21dYOa1obAqN+6z5777c8vFf15e1rPpg5efrGrHmF/XDUZ5WmzaN9aHc
pGf+uWNiax/1enesMH1Oavumn+n5EVqXcqHWY5fRve+ivkQ6v9Lr8udCqoXV
pk/nOMqnmqdrDrrvoXMFnUvp3rodz7qzhiE3A77U/PusukbHQrfvp9ruqA2M
xhFS7lBdmL8frFBdo3GVdX1Qx03VG6pNNA601vn+q3emy+kYn3/Gqw3dD9Vy
bv9RXbvVfLetruarT4qusSpUTxWN2aR7ouono2vK2i/VRjbnuWM7F8Wzj0xO
37vacalds/KAnmOUfy6SnuGQf+6wzSsHZZ+ZcrLOGdQf2F2/cqT9bHWPVtd4
7c/0e9B+3jbl7MJ90/UHtSdT7azX6zzE5qt8vDR1SnqdXOcf+fMUvTe1vdI5
jOpnPc8vf3+0Wuh6h/bLfUaQ8rDma326bqK/G/1ONM9eX9bnp+n8+7Shvwu1
OXDfoz475V1dR9AzgdXuK7+M7pUrH+v9aZ9UG2sben/55fQz3X/X/unvWOcM
7rmI/rb19+Lum8Yt0Tpr3dbLkGOB2NT0GEAQRaH8qpxva3cbyrlq16RxR0Lv
Y0cOQ24GfAn+/SYIImwYciwQm+DHBYLQ/Vf9LarNuL1XrrZbuu+r+lf33kPv
Y0cOQ24GfAn+/SYIImwYciwQm+DHBYJQaFxLO56JDT3jWG2bQu9bRw9DbgZ8
Cf79JggibBhyLBCb4McFgrCh8an0jCjVvOpf7T6vg/AThtwM+BL8+00QRNgw
5FggNsGPCwRBhA1DbgZ8Cf79JggibBhyLBCb4McFgiDChiE3A74E/34TBBE2
DDkWiEpdXd037jMSCILoPKHvf319/behj0VAR0SOJYjOHeRYID6NDb1m2uf5
EQTR+ULffx0HQh+LgI6oS5f6D8mxBNF5Q9//Bfv3/SL0sQjALAv273e/nmMf
+vhAEESY0Pd/kYUWeCj0sQjoiOrq6m6deMmJM0N/zwmCCBPKsSuuMPSV0Mci
ABVGrzJy+f+EPj4QBBEmVlt52H+7dOmyU+gDEdBBjR46ZMn3Qn/PCYIIE2uP
GvHtqNWHHx76QASgQn3fPo2vXnDm0d+EPkYQBFHbuPDMo76dv1+f13UcCH0g
Ajqo+q5d53v2rFPHcA+YIDpZXHjm0aVBSy36kSHHAjEapP5/1MAE0XlCtW/v
xoZP9f0PfQACOrhBSQ38j3NOP4K2VgTRSUK1b/8F+ny+xBIDlg59AAJQ1eB+
fXu/turI7342ecLJpXdfviP4sYMgiPYNfa/1/Vab5+y+7+DQBx6gkxjco0f3
F1ZcYelPyLEE0THD5tg1V1/xq8UXG/Be3759h4Q+8ABoUZ36AWosnD69G2aY
8vPKCILoIKHv9aILL/hw1t+3zgCoJX3nRvft03hv78aGT0wExwSCINovku/2
zIFLLvJ4/3799jDkWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdzP8D9B78Xg==
    "], {{0, 532.}, {960., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{549.75, Automatic},
  ImageSizeRaw->{960., 532.},
  PlotRange->{{0, 960.}, {0, 532.}}]], "Text",
 CellChangeTimes->{3.907648695740745*^9},
 TextAlignment->Center,ExpressionUUID->"286d981c-f97a-4983-9116-b6ae4176d855"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"016e1f7e-f3e1-448c-9705-967db89e19ec"],

Cell[CellGroupData[{

Cell["Hard and soft bits", "Subsection",
 CellChangeTimes->{{3.907649454032201*^9, 3.907649457598331*^9}, 
   3.907655850271763*^9},ExpressionUUID->"04b07168-763c-4c67-b697-\
17e5b4652bf7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hard", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", ">", 
     RowBox[{"1", "/", "2"}]}], ",", "True", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Hard", "[", "x_List", "]"}], ":=", 
  RowBox[{"Hard", "/@", "x"}]}]}], "Input",
 CellChangeTimes->{{3.889597859665268*^9, 3.889597888682642*^9}, {
  3.889604700010132*^9, 3.889604710049111*^9}, {3.8896053055035*^9, 
  3.889605308251544*^9}, {3.907650782662614*^9, 3.907650801408882*^9}, {
  3.907650857299073*^9, 3.907650861219469*^9}, {3.9076566339249907`*^9, 
  3.907656662501676*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"d817ca6d-f10c-4af6-8fa6-f05ed14be1b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hard", "[", 
  RowBox[{"{", 
   RowBox[{"0.2", ",", "0.6", ",", "0.45"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.889604712999065*^9, 3.8896047184658823`*^9}, {
  3.907656640108514*^9, 3.907656640266943*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"0421380a-7502-4fe0-a886-00cf4d918e52"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "True", ",", "False"}], "}"}]], "Output",
 CellChangeTimes->{
  3.907650734508642*^9, 3.907650803011375*^9, 3.907650862670793*^9, {
   3.907656640663392*^9, 3.90765666389717*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"d9b8d4f2-982b-4c9a-8253-179dc9dfcf0d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hard equivalence", "Subsection",
 CellChangeTimes->{{3.907649454032201*^9, 3.907649457598331*^9}, {
  3.9076495929324417`*^9, 
  3.907649593850841*^9}},ExpressionUUID->"38778cd1-87ed-41f6-82a9-\
438d0a3c281f"],

Cell[TextData[{
 "Harden(",
 StyleBox["SoftNet",
  FontWeight->"Bold"],
 "(x)) = ",
 StyleBox["HardNet",
  FontWeight->"Bold"],
 "(Harden(x))"
}], "Text",
 CellChangeTimes->{{3.907651022937126*^9, 
  3.907651078250511*^9}},ExpressionUUID->"d4740ff6-87f6-474e-81f0-\
0f0541ead6a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"6eecc84d-54a3-45fb-92aa-6ee4c71cb9fc"],

Cell[CellGroupData[{

Cell["Learning to AND", "Section",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308340990994*^9, 3.514308352103572*^9}, 
   3.7880179920575123`*^9, {3.907647394886376*^9, 3.907647397509075*^9}, {
   3.907647616536272*^9, 3.907647618390245*^9}, 3.907648446367423*^9, {
   3.907649821011033*^9, 3.9076498243857317`*^9}, {3.907649910303081*^9, 
   3.907649916997631*^9}, {3.907652379709683*^9, 
   3.907652387250379*^9}},ExpressionUUID->"95f72a91-1693-4056-b05f-\
08363e869a36"],

Cell["We need a differentiable version of the boolean function:", "Text",
 CellChangeTimes->{{3.907651636255324*^9, 3.907651650513094*^9}, {
  3.907651787165771*^9, 3.9076517878218412`*^9}, {3.9076519599578953`*^9, 
  3.907651960207889*^9}},ExpressionUUID->"e419f08a-b75a-4a33-b0b5-\
d0339a4c7d75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"And", "[", 
  RowBox[{"x", ",", "w"}], "]"}]], "Input",
 CellChangeTimes->{{3.907651698185232*^9, 3.907651763258169*^9}, {
   3.90765190711415*^9, 3.907651908041142*^9}, {3.907652395699979*^9, 
   3.90765239606313*^9}, {3.907652448446084*^9, 3.90765245152072*^9}, {
   3.907652530650538*^9, 3.907652531211441*^9}, 3.907655519771057*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"483a3616-9a88-433f-ac04-6f0e755a7431"],

Cell[BoxData[
 RowBox[{"x", "&&", "w"}]], "Output",
 CellChangeTimes->{3.907655522144554*^9, 3.907656667651619*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"cd34bcfe-29f5-4ab1-8ab8-e7e78d8e0585"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<TruthTable\>\"", "]"}], "[", 
  RowBox[{
   RowBox[{"And", "[", 
    RowBox[{"x", ",", "w"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "w"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9076518232579517`*^9, 3.907651867510783*^9}, {
   3.907652457209485*^9, 3.907652457660099*^9}, {3.907652537278452*^9, 
   3.907652537783722*^9}, 3.9076555271934566`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"a6689b11-4824-46b2-8a6e-bdfa45a310f2"],

Cell[BoxData[
 TagBox[GridBox[{
    {"x", "w", 
     RowBox[{"x", "&&", "w"}]},
    {
     ItemBox["True",
      Background->RGBColor[0.87, 0.94, 1],
      StripOnInput->False], 
     ItemBox["True",
      Background->RGBColor[0.87, 0.94, 1],
      StripOnInput->False], 
     ItemBox["True",
      Background->RGBColor[0.87, 0.94, 1],
      StripOnInput->False]},
    {
     ItemBox["True",
      Background->RGBColor[0.87, 0.94, 1],
      StripOnInput->False], 
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False], 
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False]},
    {
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False], 
     ItemBox["True",
      Background->RGBColor[0.87, 0.94, 1],
      StripOnInput->False], 
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False]},
    {
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False], 
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False], 
     ItemBox["False",
      Background->RGBColor[1, 0.85, 0.85],
      StripOnInput->False]}
   },
   AutoDelete->False,
   FrameStyle->GrayLevel[0.5],
   GridBoxAlignment->{
    "Columns" -> {Right, Right, {Left}}, "Rows" -> {{Center}}},
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {-2 -> AbsoluteThickness[3]}, 
     "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{Automatic}}, "Rows" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.907651874412833*^9, 3.907651910726404*^9, 
  3.90765245844696*^9, 3.9076525380915937`*^9, 3.907655527795405*^9, 
  3.9076566708373823`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"f3e3ef28-ab45-4926-816c-7e174ec2ad10"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"eafc3095-f318-4531-97de-5b528efa8405"],

Cell[CellGroupData[{

Cell["Product logic", "Subsection",
 CellChangeTimes->{{3.907651550582347*^9, 3.9076515667110653`*^9}, {
  3.907652510091539*^9, 
  3.907652511352847*^9}},ExpressionUUID->"782b2a85-9bd7-417c-bfbd-\
9ca05578cfc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ProductAnd", "[", 
   RowBox[{"x_Real", ",", "w_Real"}], "]"}], ":=", 
  RowBox[{"x", " ", "w"}]}]], "Input",
 CellChangeTimes->{{3.907650434562171*^9, 3.907650482205029*^9}, {
   3.907650530196126*^9, 3.9076505471567*^9}, {3.9076511044682417`*^9, 
   3.907651133038216*^9}, {3.9076512069573936`*^9, 3.907651219981452*^9}, 
   3.9076512784031267`*^9, {3.907651341193797*^9, 3.90765134378265*^9}, {
   3.9076525421644993`*^9, 3.907652578577387*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"10e029df-ea41-4afe-abb8-5bd9371c5e3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"BPlot", "[", 
    RowBox[{"ProductAnd", ",", "w"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9076505602702217`*^9, 3.907650606523389*^9}, {
   3.9076506656780252`*^9, 3.907650695251112*^9}, {3.907650751370657*^9, 
   3.9076507758999367`*^9}, {3.9076508109945107`*^9, 3.907650813276668*^9}, {
   3.9076508696099367`*^9, 3.907650889009583*^9}, {3.907651151401148*^9, 
   3.907651192638577*^9}, {3.907651461743928*^9, 3.907651512624567*^9}, {
   3.907651609932867*^9, 3.907651611390089*^9}, {3.907652568628127*^9, 
   3.907652595972711*^9}, {3.907652884739913*^9, 3.90765293458611*^9}, {
   3.9076533293518*^9, 3.907653342599554*^9}, {3.907653537405314*^9, 
   3.907653540369816*^9}, {3.90765386158637*^9, 3.907653867221286*^9}, {
   3.907654081338025*^9, 3.907654081504961*^9}, {3.9076541334999104`*^9, 
   3.907654140694104*^9}, {3.90765419116926*^9, 3.907654200037426*^9}, {
   3.907654247969018*^9, 3.9076542481216993`*^9}, {3.907654297847398*^9, 
   3.9076542990779457`*^9}, {3.907654586812331*^9, 3.907654638064322*^9}, {
   3.907654853072383*^9, 3.907654856685422*^9}, 3.907655245845134*^9},
 CellLabel->"In[14]:=",ExpressionUUID->"7399db73-99c8-49dc-814f-e8669a849f26"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w$$ = 0.495, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w$$], 0, 1}}, Typeset`size$$ = {
    191.24609375, {2.87109375, 9.609375}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`w$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`BPlot[$CellContext`ProductAnd, $CellContext`w$$],
       "Specifications" :> {{$CellContext`w$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{222., {39.0234375, 44.9765625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.907651183897867*^9, 3.9076511933580847`*^9}, 
   3.9076514463109283`*^9, {3.907651481535091*^9, 3.907651513424822*^9}, 
   3.907651611966391*^9, 3.907652596614832*^9, {3.907652894053721*^9, 
   3.907652935354447*^9}, 3.907653343187105*^9, 3.9076535410098133`*^9, {
   3.907653868017933*^9, 3.9076538952409143`*^9}, 3.90765408227501*^9, {
   3.907654128806085*^9, 3.907654141280047*^9}, 3.907654200775177*^9, 
   3.907654248622446*^9, 3.90765429991059*^9, {3.9076546059649487`*^9, 
   3.907654638755199*^9}, 3.907654857266444*^9, 3.907655246515993*^9, 
   3.9076566750468616`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"26fda732-5588-44e6-8f5d-04e5a61a0b1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ActivationPlot", "[", "ProductAnd", "]"}]], "Input",
 CellChangeTimes->{{3.907655265040512*^9, 3.9076552683173323`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5b40228a-b1c5-4029-b3f3-f80cc79f7839"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
76A/4hrEQchfXXV7Tvmh4FxoHjvFoUXyQQ/HT9GDzpE/PavoQ3/EUXw+6CuK
SxCnIK7g+5J3h+IV0Lf/2OacsT2zQnFPoepv+lcb8S+D/KvmO+Yx/SvPq+9L
Ak/T/2ZLeiiuQH/EQeb5D7usX1v25JC+YD7r/crLg7O+73l/jopj+d4ux5mA
IUfIFfESYMR5fO+S4yrAkPePdTr8UKdDnoo78F3wb3yWWPY38T3iXr5fCT0D
X/h+Jfhqxs92qXt72WPd78TvwfF8VN+KU3E01i30ylwPTrWOzH08HYdDD/He
zDd0HDqc4kC8N9eT3hfYPtZxU8KTLlovbnk/FOfzfUbE2WY+UKjiUN5vW0Xx
59Vpjf6Y1qhQyRP9ZnRsdqLv9BLLflrPquUfmH2HW+VBfL8ReQ3sBOsx76dB
78EHVcdLy21f/hm9b9X0nrKnyLKfhX6wq2yHAEMP+T4i6AZdvP+E97AvpwLr
Rt8vNOP1/aof7DbbIcDIe3g/CXoL/XltQdylFq/6lF7ge8iva2mZg/YpPPC+
9bsVNj58j0/+Ophw99Y+JyVl3TMzF/f3ydQ//nBkN86QlZJ45cdVPqlVZ/5L
9xfbpEeL5M88l+zy3OGPTnQ/fkGefLrsKZBOjj6tHX0uSP4Dh/3/iqRmWVi1
7oK0vvb7iSZdiiXuhQ2LKta8IB8/tK3jO7PyVNt8Y6mnbjWPPOebXnvw2jx5
+cev72gy1SMDDzyx7rlX89Q8mBfzYN4vr7jvHdzcJzFdP+6+Jdouu+6vP//L
yyWyb+fKnK6xhQoP4AU8gNfHO785HP1zkWrXuw8063/dH6+ua3FTzZFFCi/g
CbyAJ+bBvLf1s1WpvFa34Cv4DL6Cz+Ar+Aw6QBfwAF4XXT2/mOYokBNrH2pV
adlP0rfrgg/em+WQy5+53jp/608y7aftg5q2y5L7kz32qPKnpKVtUSvbomx5
PWbPgJg9ifLh+Ka31TjskVqNmo6fOSdR6s9ePPKrRg6Ztq5n0+NDUmXyjpce
b9DGIe9P+cdNX/dLlY43RXz99na3rO3ZeMSdnnNS+MzY/PeS3FLJvwpsp8+p
eTAv5sG8zUZ8d3uFnzzyQnqvByrPypSzEyLaLtmdL137/L1+1Ihcqbt04ezx
vd2SVP7dTvYHc9Xv6HeqxhdLpm0qlpmT3+rpm56v6AYfQDf4ADpAF+gAXft6
XMvfEO+RUfvOr6i5oUDRBTpBF+gEXsCzdECVI0tLi+W1J2IfHLPJrfACnvgd
/VaVHzr+zQSP3Hqhnr3zJ8WK75AD+AI+AS/gie8wjhm/6Lwfef03IbuAepoZ
/2m7BBj98B3sZftD7udHTbKrFr9fHRz1SOk4u+xMetc9sFeRnJo49Hzj96z3
wYJ27IDkpJd7qPtJn6SPHNf3jyP71fslIT+/9PeYp1/+0Ccvtrt1x6UZ+lzk
x1U8zXYvR73IJzeF6kezGt61snEnnyR9/8+CXW/kSr++7zZ3bHaLc+Ke6Cr/
1ve9GjyU3bTSNIdEV25+tUN/j6TXv/fLQl+BLG7WKnNyfY8sDbQO9R3GQT98
h374DnSALuANOoAn8AaewJvrRqb/1XwFn1GHgh1H3Q/yQ71zbUh+qLPh/f5b
Hur1xUmPVPiq74qGPi0nyM3Up/1qHIzbYZZj1ZWKThmcNPFo1y/1Oajbmg+u
3XxwvnSOvni52alsmbfvoeHvrdZxLuKOw9+9P6L/NrtU7rB8d3GyjsvM+3h2
mVwWDkwqkKTO/Z7c9XahXPrc+dqfVwpU/b3dm8/375vuX+8VHh3e5GqR/BFo
86XFynd3JTTX+2B/9620onWmT2y3jhvn6G4Xz46NezctyZMBcwY2/bSn3ve4
p+7lMYMbuaTRq1EvH6rhj7+8e9a+2FbvS6wYdWXZqCv+9smYHnUXFMnhT59/
7/Um+hxO1BP3LRmW65QXvnl/5fpaPnk+0LqUHzbPp/nk9LKidzefdsqUmolX
P38iWWbVm9Ptlc5a7tCDX2fffPfUdoXSoV6Lt2sN1HEan5OqUWfhmYdvckvu
KzFHUpKypc6lUTMemaTzBMQ/S15M/u5aXaeUD9g1fY4M8VTJ9UpRS/oXy9cj
8yPKP6bjJsRRT1zcNqxprr7P1PvXXa9sXeOT/Dv+cie53LI+8QFb/xr54lfW
EVMidVyPOH9JCMZ+G/IC6PP31TqNrNjQLXOObe1+cI6OIxFXrjTWR7FEtJ1X
XWoVyu4aT39c74SOS/kcWGFsSo/qD/rzjqYVf//pEb/dXJS7vU31Eml8tkvD
s130uR/ERXxOpt/qVmm2Ph55qswdP1AgaeuiOmaP88dj33qeHNFD3yd6pN1n
mx+7VCTVfZdmlLzhlaezOl6ZX9V6f6hOrbLnqLKjlwJx7hFlrz52N29TedtB
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
AKJ6XA4=
      "], {{{}, {
         EdgeForm[], 
         RGBColor[0.2875, 0.2875, 0.2875], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
RXn2PxMae6I=
            "]], 
           PolygonBox[CompressedData["
1:eJwtk7lPlUEUxee9N9+oDdEIaogaSVzAIC48oKDRgkISxaiVigUNDUvBIs/l
WWjAgITCBQutsPIPkKBBG220MHYW4JYYqWxsXID4Ox6Kk5w75858dzlfTVf/
6b58COEoiOBRFsJ0LoSL8IfwZxw2FkIogqEUwk1wDF4mpwU+nKwNEh+CD4Aj
xL94tEEcjKAF8Jm3xsF1+DKYh/eiH9Db5K/ne9XrQlgk3seVW+g9ydoC+d3o
DehbOd9N3Ey8E/07ehvxDvjB5G//5X5FMsTVwyC8DFoLrkm1dYBx9ErOTsH3
834F71ei1/D+R3gn710A88RbQIb2lfzt5J7hzjb4LGcz0TPRbP7nEG8gvzfv
HtVrRnwe7R3oJB4lZwD+G8zBv4H6vGdURe4mMJxzDVfJL4GV4LPL8DHyS/A/
4Dl8GjyAR/JfRc9Es1GNZ5NrVK0b0d/Ad2XetXpW7y8Uo5XBB/jS2izGQBv3
f6zNXt9oJw7kdMBfg3PEd4hrg3u6C5+KvrsKXsL7OSvlPZO38BPJs68CP9Ev
ES9zf4j8EfjmzN6RJ+QNvaG3RkF15h7VqzxbR/wYPM15pzPwJnAl2DPyjjwq
r+obC9EelBfl6Rtodcle045q4YeTa9HMF8ndm7w79bwH/iS6d3nwfbQn5I0i
+RPRHpaXV9GL5H+J5iugkfhkcu+qUbXeJm4v2APywkRyrzqbTN6Zdqcej2fe
uXYvT19L9qi8qh1+ivaUvKV/Uv9mc/K3taMm+L3MtcpD9+H/AE/Webc=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.36250000000000004`, 0.36250000000000004`, 0.36250000000000004`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVuIV1UYxc//nL13k1DjqGnj2Dijps44jU41k015jQSVsmwMMk3zIV/M
gi6aZulYXscb2mVEwcqkgh5CIQ0REbKHQUR88X6pkIZARZ9KzH6L5cOCtfb3
ffucs/f3rVM7763pC/Msy5aBAA7FLFtUyrL/4BdZeD5l2S50I7iJrkUfhU8C
NfCToKbwWhu1regcHcCf5B8BJR6wmfgg4qvRzex9hnjlPVk2gLVyYt3ogei3
0fPRt9HD0evIn6h3QVeh57D/fvT36CvwCeR3oAeQN4p4E3gIXg0ehdcTn0nu
K2AH+T+y/jP5g9Cz0dXgCu/3HWsniK0CdfBTxB+k/rXoZ9WCWeT+BN6Bt1Lz
DbGl6CfRDdT0RNehb+Z+B71LJfoS+jLoD68kZyXfV1CzDt0XvRw9Ef2pNDhL
7jnQD95AvJN4E/pv9tyJHpX7m/Rtg6PPtpG1buKHwG30M8RXUb8d/TW6jPhR
+EFwCz0NvZfaL9Hb0RH9K3w3OICuQHfBe5OzBP00+33MflPQ7fAV4DB6D3p/
yXfwLbwPGF/4GYvh75PzD3vVE38PPhcMLnyHusuPwK3cPbEM3gHuo3YyORuS
v0HfUgKj4RvBVHgZmABfAZ6idiy6HV7OM1vgzWBx8jvr3U/wjIrkM9ZZn0T3
gr8Ofsv8TvPgI0FX7h5oTL5T3e1o4kvQHyTz4+T01F7J76Ie7pPcc+q9Btbm
U7tRd5S7p9Xb48mJhd95nN49eVZa0RuouxA8e62sfUhsQfJeb+gOqa+Ijqnn
1HuLkr/1GM8oVy8mn1UZ+b3hn4Cs8AythLeAO+SWiD8GvxzMdcePo1cn16pH
1+hbed5XilGzJ7kH1YtbWBsS3aPq1U3oWvRL6M7MM9UG/yX47nWm76KvBe+l
nnuE/H3ottxndDp4RjWrb1JTR/yH4NmsZm1m8gxpluRJLcRnaKYK96x6N4vO
vUbOEGLrk3vpBUL9ieXRszwQvJo8M5qdtdRXRc+IZkXf/ES0J8mbJlG/hdim
4L16sPYs9X8Fc82sZlceJa9SDz9A/Zjku9Wdj4X/ETz78kh55VZ5BrVLyV8b
PIOaRc38iOgZ1Cxqxqai79c3lFyzDd4LJHQ9+nP4Z9FcnrKe2qugvLAHyYvk
afI27aG95MHyYu2hvTYHn8UdcBi+Lfiu5eFH7nqsvHakPIv8mui7lyftgA/j
GTdye+Dw5DPWWesfUYq+E93NdfAwfHe0l8pT5C33Rvd6N+iSP0WffTu6E95E
zb+5Z1yz3hEck+fJ+zTTmm31/O/o5cneIE+SN2lGNCvypHPEn0v+t/VVj8Cn
JXN5vLz+i+Be1BlOQb8I+hX2VHlrVfJZaG168j9L/y55yt7gO9XdauaadRbJ
/0717MvJniRvkgdeCvZUeatmaHK0x8hr9M3ng+9EdyMPlBfG6H+ZzlxnPzT5
bPWP07/ufzHz1R0=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.4375, 0.4375, 0.4375], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFl12wl1UVxt/z/t+9z4AXwoEMMz0JHGrCD8pmUs+JD6VOQTTAHPAiCAUt
rpDAYaAvTMAaAyZBBT0VNpPOpE0X2U3ZmGNT00xeqKGMM9EFHBEQa4iij6ue
n8/jeLHP2v/1rr322ms96+Ncvf7ulZvapmlW9DVNT3QZf8T4nn6f0v4Nrcu0
P6D1fq3V+nxfaZp52t8qelKypWuaE6IHatPsE/8q8cfE+6fO7pT8Iu0Xar0m
mSHRqVoX9O0/PdN7JTOscz/T2qf9zdIzSfuTkvu16IDOjYjukuwk8cYl87J+
f6C13Wda80+L3tWzPd9qbMuA1hLtP6c1OXveNrXPvD9F309El2ot0VosHdv1
hm9KZrroKn2fkrfjm705f6Sz7T+WzGzt39a59fp9VZ/3X23sP/w4lju4a1W1
T/m2obFf3ojM1ySzQ+uv+j67WNdbne0eiM0jrf2yX/ulxTp5BzZcqnVOuub1
25+Lit+DvZ9t7MdntX6g/cWeZbc0tvdvsf+2apknOsf557nrL8X746IboVp/
FH9cdFDrzsb6sIF3Pd/5Td/v7HN8hx0vdL7noc64altj65PFcfuD+L/X2qz9
YdHntEa13yu6UzIfluxNooN64wPaf7D4DGcfE729dezx2Yf6Ha8D4k+0xisY
ww78gj8n9Wwf/iUZ7tY6Jv7B4HlQ+rd09h1+A1/o4b4XqmPxhWJ/T0T/lMSC
d+KbafHJY7Fzhc7NbY2xS7QWiD9f62j7Xm6QO//NHpyt05nZ2t8u+jr5JN4v
O8eN+IEV7uTuy3LnuWBsXet7ljbWh15i+7B0rdT+EdGjxW9/sfjcxWB4vDNG
jog/Id7JnvOB/P5Xz3H6d+SRG0ruw+fOkcb38h054vdb0aGeMdQvuqfP+Ult
4B3cCyaoG+Tfa7JvVL9nid7R+j1L8y7i/U6s9e2s9leLHpbOR7WeboxZcgYM
v1rNX1Vs27qcPdTzGeQfqtZ5Snfv7nNNoB5RXw5FBrsWvWtb69/gH0whD66w
F3kwQ05v11or3rHWZzm3JHUH/Z/peY+OV1tjAjzMLMYRebOg2l8LRX+k9XF9
P9e5BoGRm4vxMyO1iThOS/wO9lkeO+FND39mv7893DkOc4OVtxKLa6Rzj/QM
t67TM9IPVgcT6Jgn+ojkbwPjxXl5bWucvKI1p+e3E3tsI76PFsscFp1bjBfy
nrgfTD0BDwOx40xwPas450ZSly5N7cNHn+h37bxB9H3VOf1gtR3gFpvxKXtq
yhp9e0nfvlRchw6mz82ofueh6jPwiPUY79TZP1ffiz3k1xXFe2xc02edv0pf
fSX78zr3j571fqy4Lny9+J2D0YNdE7ENWc7g04H0zc2x/3zecj762I8X17or
g4Gp8fOS1vl2PPEfj29/V50XF6mZxT31p8U5Tf7O0e+V1bXuiuq4XUhNuCF+
vib8y4M36tDs1J1bq2vr4uraBp7pQc8U14TfBN/zgxtmCGre/sR9KO+lPhEb
MHe2z+/ZmPozFJuu77l2Ub+p1cN979X5+bmXs5yjbu6v7k30qH25m3u/Ueyf
64rlkKcXzEz9+V/yeE1i+mXd+5X4ihynf9MT3+3r+HlVZzlkbqyO7f3VcxL9
hT7Dd+SYX7a11oN/n+ls90fk7936dk/nOejJ6ntvLJbbkdrydno6MXqiOGef
LMbhEe2fEn9rZz34iDmNe7ENHICHX1Tf9U7Oi3+ffi/Q/tuiE6lVzGgLk6u8
EYycSO9jLgPzKzJrjKZvboyt5Oj0zFf3Sk+f9su1/2L124klcQSvazJjMB/h
zw3pX/QusDJfZ6p+fyr9FDvRuyjxJc7UOeodOUY9R55eQy99KXfMSy3Zmf5O
HE7kHWsT63XJkTerz2xPrIkd8vR1egg1nzdfTK8jFsyop+P/bcEpZ4czz+zM
jLE1cbmzumZuqMbgpswkxPDx6OEedOLb64LbH1brQBd86h+zDf0I/+LntvgN
vIW8p45uSR6AM/C2WfzV1XYPVuNxW2xenDmQefDFzAyXFNuFfdzxZuc+/Xyx
n3bEV2BtLP5dGx/iW3J5LDi8K3tisTy4RYa6+3j0n8isj8zx2LNL9JbMYcy/
1xbr+7t0LUvPYF6bXBKDat0rEt+Xg1n6O37dld69KfUG+8mb3cmLz/fc5+gL
8JBnFodujf+PZhY5Bj6r3/zRav/i5/3FNXJZZlBqJL2fekXdon5RG5kZwD+Y
nlYtc1N61/LYT67zdmzj/yFiN56z2IqdZzv3C/rb/alFz6Xv0/OZhfZl7hmu
/t/r2fRaeJODJe6ndo9mxiPnRtKP4GMzsnui81D66ZziOYcZhzdemZ7FnP50
+iXYBsfg+fpiDIGl10WHins0Mwv5OpI6f09yB98zA55JjtCX6E/k2PrqmfMO
0VOZpZmpqTPwyWn8vTc+542fjp2Tovt0Zrbd8cN3q2W+Uz3T4etV6eP4YXX6
7/H0nunVMrdUY2dK8PNUMIcPmAHxEXV2VvoO/QfeaPjky4Xg/4Fq/uXyzYOd
9fK/0f8BFG7Zww==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVtMz2EYx9//4X2b3LSEEhHKplpxoxTJoUwyWnRDJRZXZS7M5rCkhlYO
UUobbjJk2bjDZs2tC6dqbtzUMs202czYbD7fPV08+3+/7/N9D7/n9M9sbKlu
jjrnmrA49tk7d5iFSvBNFlYnOPcr5lx2xLk8fJeCczvgY2gWgK+i6cCXwFop
fBj+mL338c+iz2V/MmsnWMuBX0OzG+0E/hTwR6wPvpczIviH0L4EJ+N/C85i
/2/8J9k/CO/BuvA7/KPgV1gJ9Bxrp9l/B6t1phkE93F+Nft74OXgLvQV+KdY
W8bZH9FMwFs47xO4Gc0p8Bf0x+H9WB68E36DvYvhSRFbGwDnY4Pw9fC77H0K
3wWeYe05+tvwnKjFSLG6gqacu3dyZ6rO5g0prC/Hvw6ejn8S/RS2FDyNrwFc
j73GPwZfAn6Pvh6eiWYmajFX7PfDB8HfWDsQ7Ayd9QT9Vm8xVWxfwKvgaVhF
zN6kt9XB3+FbDZ+G78POO3tTNXgC68dXgWYc3Mt5N8FR/G/Ak9i8iJ3ZiX++
t9jmw1vg+XxvGpo1aIrxbQ1WCzXcUQa+jlWhnYdt0/u9xV41o9rJDZabQ1hO
sJgoNqrZr5x7g7VkfN1YD3i5N6wY3oJfhI/AC7A2bzWgWlBOldsLaEpjljPl
riFYLA7irwM/w0qidsZ2/MXw9oh98xT3bwnWC4nwkmA1p9pLxWbwr2LPInAS
OIe7M7Ef6DMUc3wZ8OmYadLh//SNMasp1Vb/XC+pJ9Wb27x9yx/1KDzqrZeU
w4PsbQ3WG/qmNnC2t7f8hK9Cfz1usdedunsj/lZnOVKubvHb6OyNemuBt15U
zap2twfLlWK+UPnx9i3qefV+IfwY/iZsSL0P7wC3Y6Pw2bjNFmkewIu81YZ6
Xr0vjbSq6UpvOVAuslhrDFZzqj31eC/8e9x6UTWZpVkWTKsYKpbKiXIT4JuD
xUyx0zffUx8G6x311ArNN2+9PK7ZiH9TsL3KeTd8BPsQsZ5Ub+7x1luqkTdo
H6hGovbN+va1wWo3G34UXOatN6UZAj/y1tvD3PcQfMbbbNCMOettpmq2ambW
gP/GrRc1M2uD5VS51Qzsw3ck2F1648hczSXN5XSln+vJmM28RG8zVbNVPahe
1Bv0lgHNfPh+b1gz4FOwnCq3mhEb8BUF+2/QjC0MNuM06/SfcRn+HwapuO4=

            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.5125, 0.5125, 0.5125], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
//8Rrjk=
            "]], 
           PolygonBox[CompressedData["
1:eJwllFdI11EUx3/6+98blUGDoO2IsoUVFk2ftCwaViIZFJVpw8CI6qENRhoU
DVMrzcocZSZG5EsURMuIerM9nzJKw6ABGdTny3k48P2edc8995wbn7NlWUF0
EAQ5SARpcEGQiuJqGARrwDOQmqgg6IluP/gpTgPAt9BlwM/CC+G9kFZwb3Sb
sHUgT8DlHh258shdBh6H/MT3FzIePMEbjiU2uYfFKHYXujZwNTIN3ITuPD7n
4VOjraZK+HriH5M7kTM2gKuRHHAuMgXfSaoxymIUexz5Bs9HjoG7yTEM3yNI
K7F53nKNQTz2u/BicBVnLIInIdvAnnx7nN1Zd68j32xnPVKvauGzwLud+aqG
yeA/+A8hXwe6BHK/RJrINxzdK3An9j7gGCQdXhexsxWzHL4OuRlYD3PBj+QP
bib/HPIvRNcf3x34VGH7gUzHvhndFfl7u+tt/D/h/wJeobvD28ALkL6h5fhO
7Cvdifij2O+Au9D1C81HvvO91bqR8+aB/0bsLkORbPhpJEu1q6fEl0VsFrrg
Cbz3XGe1q8Yb+H7SfMGXYi+Fd8Dj4Kvg5+ATneGVehP4ZSQ/tJpU2wl4hnpJ
voHgEfivCExXAr/k7a0U0+CtBtWiM0bhmwjvDu1NmnUXdIOxTSRfJfgXuhT4
IXzuEX/f2y4chj8Ej8anFJ4JPwU/46036kEF+CSyJLSaVNtYzvsX2gy3kHst
uswoq0G1bHU2q/KRr+6su2sGNYtT0MURl6Q3cLZD2iXpZNMOa5cbkXZiFzur
XTOt2VaNqvU99xsErvW2O/GcudfZm+vt9Sbt5Lzobba0YzXgVGe7GUN8IXgn
MgReph0GP/DWmxTsv1UXNX0NrafqbaW32VCMYj972702eA78Onx7aD1X70uQ
7MByKFeLt9zXsKfjX+CtF/qDejm7k+6mP+gLsR+c+WpnPoLTvM2KcqZ6m1nN
rv4E/Q3aUe1qJzLSWw/VS+3gamc62bRDz8Fv0R2MtprTwAec9aYIeQeucDZL
mpHyiPVYva5C9oFnOvs79Ofp70t2ZtOfcMHbzmp3S7G3g+sjhvUn629u9Lbr
9fi8xp7lbLf1pz/zppNNf/YbcLGzXmvmipzVqFp1B90l1tkuamY1u/8BmuLE
Jw==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.5875, 0.5875, 0.5875], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVl1Ml1UYf//v+57DTfOqzYuu+phEOFyDvCrkwhJnW04RYRMoWAG5BbIF
0mbL9UH2abRlZYFYiBV+DiyLPuxL0Fi11hbYZmarrNis1bqotN9vvx/z4uw5
73Oe5znP+T1f75XNHWvuSZMkuYCVYS3Fx0AhSUqxxmKS9IB5S0iS+jxJurEv
B78cMs+BXo01hbUQ3ytBI+QaQe+E3jrwrsGaSaTXY13qULcd/CrQe8Hvx74D
tBPrYezX4q41WI34bk6ls9l2KP8M9gdwxybslwXpbbJul+0shs4IdK/Amkj0
ng7LfA2dWdDpIN+HsE7gfE8qHcpvxHdnKrnhVGcT9rkvlQ/V2Pdjv9/2n8T+
oURYkD+I/fkg+6N4z75MdohRTyr7JyFTh7MHUuFQUdD+wUR0q/dtuXQo/yVs
3gC5t4BBWS7/6BvtDluG/jCO3dgfAl2QyvbxXPZeAu2FP5XgHwb/NFZJJhuX
g/d+QW/twh3XE1/QBuhswNqG76P2gb7QL8rwPcSAdxNnxoo2iNV9kMtw1hvk
R1smrCqC/ByC/buxP4N9UqQ8bMl09npU7vyZK/dqM+dQJjt8TzHOnkrl04tR
Mi9E5S3xpS/v+W30aTpXfPbkwuBpn89AZyf234A+lumtlKMfRanwXIGzq/A9
lyvWlNmVCB/qLCPOUfnxTy7siTHfTT8X5cKJvpNH/1uj8L8L9CbgsBf8UeyH
cmG5G7yTUX6eiMpv5jP9uTYIj+ejMKBt6jAHn3UebrVN2uZ7+VbmWw3oZEE5
zHqdK6hmiRFzgO8aB/8Y7mrCdy38GSkodqvA/yBT7lyMkmkPqh3ymIczriXW
EeO/OnXtp+odtH9/ELZbgvA8YX+Y8625cuJb2B+A/VNR99I+7fL+EvvwG/sO
6DtBGB+yn7yLurzv5qB8nMyF/WHj0JUqTtQ5FVR3s8Y1s8/sSYOs3UQ5Sr8u
BvWYrwqqwf245wDWu4l84TffcltQHJh3NeZT5qegGP0I+muU7jnQllTx4l2M
Cd+80f2TPZH80SAbv0D+SKo48fs87rgOcnujeGPmL08V6xpjvM44/275VVGy
PKc8salML+XJmPvMOdy7g70yVz3tcL9gX3zUvZF0m/ebM32zLr4L4p8OwvsJ
1wb7CvWZD3/nkv0kKteWuqcMevbMY9BiHP7KVffsSR8GzYoB8Jbkej/zlm9n
XU86P/j2t4Pixzg+DrrPuP9hXfbWMedao/OZ9cy6rovukfaZdquN50LPE+by
9kwylP0+6L27cuXLcmPN/kFZ5sf6XH2N8bgxqDcct3yNc4y9jD2t3zOCe/ZH
zsf6/NJ5vfm0T3zpJ/tTg3t4VdC8PBg1N1hrfCNrfL1zos/9krrMU/aUavM3
OE5Tfut8r1hi3MqMY5PnUpn382cTrvF2zzb2rmL3Ri7WMOuX9zT4rlnX5htR
tbrIsX/ZfenWKEwqXNevRM2R3aCPuFb7QIuLhOkdQXnAfMiCbNT67f3+r2FM
t7hHvRpVuzXmHwvKxY9AmzL9u/C/5UjUfH0TdEVQDYxj/3lQr/kC9DLPzs6o
mmftz7HHB/Xi7UExaXNcmKetxpA5whhxhrRb5oznaq1xY72wZ3FWfRaVi9NR
vLXm01d+s456PaN3RvUjxnsyCuNi4/yp5+LHoK9F+TESNavYryqNYal7b6v/
T5p8F+dWt/tDn3sC/9c6fEYMiC/jMecezxnSHPT/9DPu+S+o310APRuUNz+A
rg6aa1Oc/0F5OUtcXT+M+WL70eP/ogr7yf+yYf+bHfUcPWt7Vc6l8Vw+lRSp
B3EmsNd0ujczRsxN5h/rbkGmGBBnxqrW8eJbS43DoHs6/WH+3J5Jnr2YOche
Xh1la6UxXmz5Ov9j/MvajtItdx42+t+AcW6yTfpN/zdB5n/P1YWr
            "]], 
           PolygonBox[CompressedData["
1:eJwllFtMzmEcx5/3ff/P0411ZXPhitkc5oboytIFytg0W40bUcNywVsXhQvT
zNmU2ZzirbDepJRD4cIh56IYN8iQ2eTQhmlcJD7f/S5+2/f7OzzP8zs9k0o2
Ld8Yd86tQCLkrneuBMVm8B3w6+BcT8y5VMK5N+BGJAUvhZ8B/8KnCf82eAl4
lEPysT9CVmLfj24QXIzsA99HN18Y/wfgl0gdeAFntHiLUax0r8DDSDu4EN03
cBk+3fBO/EfBF9Al4RVILvx0sLdlY2+AD/OeycSuRtegu9GVJyxGsVnebMVI
vfLBPwv/KvgV+Fvse1QPeB74HnIR+1xkBN9j+BwBF2E/AT4eDGcRk8K3GT4D
exm6c+CEt1x6VSPwULDarYIHeC+8Bp5D/B/O74HfjJnucbAaqpaqwT/4GHIb
vAT/Dmxf4Dec1ewreDu6mfg3I9WqD7LTWQ3asQ8E620u8X+57yw8I249noPv
R+Rg3GIasS/yVptK5DK+6WC57cA+D1s/ksR/lnqCrYmYemyH0X3CthuZCE4j
I+A+fGrxvcV9Q/ClOjNmNftBbLl6CJ6Cfw14bbBaTSdmveqt8+GZ8Hx4R7BZ
UM7KfQ3yImZ37gJfC9Y75XQ9WA7K5RBvXKj+BptNvXkZvIHzD+CbifSAW5FG
8ATkOTiJfxW4DJydYTOkWaokfra3HJWrdkS7op6r9zrju7eclftR+GfZI3vL
Xvh7+DtvWDOoWUxH5jse6QcPorsUszd+AF/l/i0J08nWGWx2tXO/I9sZ7U6X
+u1t57R7qlF7ZDOkWVLNO+F9+gOc9VS91U5pt9SjU5HlqFw1M9u8zZBmST19
EuyNeqtmuAD7umC908xqdjXjmnW9uQv+E14atz+oG//FwXqrHc4DT0VXgC2B
bAXXepuNQuXkrUfqVQXyFJ7jbfZ1ZhvxJyOb1Wr4gLcd1a5qhjRLY95qox1q
BT/zdpZ2Xrt/Plis/ogW/VXBZlt/3sNgM6HZ0J9Z5G0mNBv6AzfA64K9XX/G
NP1FwXZFMzQO/h9YqMxW
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.55, 0.55], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNlk1sVlUQhu93v++cJlSXJi5MiDvEmLgokG7UlhiMbpQFti7AtBRsBRRh
ZUuC0WjSRsVAXRhNhA1CUEqI0PpT29oqtT9gjZiIaDEuFFQoxshC0PfJvKYu
bmbOnDlz5uedOff2tqfWbiuLojivr6rv60pRPCbBsPg9olskvEuyevFbxb9Y
BN1ivkd0Wa0oVlWC3mH+tTJ4bHSlorhbeivrimJKe7dK9pDooynW53NR9Eq2
XvpNWs+JHpXtI6J/pND/SvybstEmOqC9V8RvEP+yaKt0pnVuQXSpdOfFT0tn
s/i92h/Req32RkUvip7JIT8tOisb+6V7UPS5FHHuTuE38RDjIccPf1b8beLX
VSIH25wf7nzc9/Y7PvwkNmJskc3vxL8l/W9FJ2V7r/bfrkXcGxw7Z4nxQd9z
WN834n/U+T7xF0TvL8MP7M9qvV3rmRT5Ju/k/0/xHeLHJW8Wv0P88UqskZ8R
HRQ9SY0lX5ci5+QeGXvEskPyWfl8s2pXr29C8iU58o7fB6RzOkUsxIS/71fD
5zHRIdsi7nbXsEN0k76djrXd8d6XItfvyf7lSsSFb8uroY/NjbU4Dz6v+9y5
HPsd1lkwHq6mxTPUq7UMnrPgcdD2wcct4ptF67S/Wt++Imqy3hhbWQnfwECu
RS6REcOd2u8S3VWNflhle+ANmy22TY7Ix1Ln9pL8HpD+RdHRFDi6Sg3FbxW/
RPluLONe7tpUBu13b6L/UhG4o2+JCwwsqy3uH7ZOr32gXsQDPsE9vUWuWB+v
BubA1lSOHpvMUZ+2/9Vuo/P8T45YeuXvhzni/0T0aA6/D6TIU6P9BhfLjY3p
auCMONeUkQdieDdHT92T4p5W99rvOfxqp7Y56k79sUvOyQlx93gufSCdbvEP
pKhXs2v2TA5c0TfEBS6xRX9Q9xbfR6z0F/Jm4wFd5PTJk9l1z9Fz3a479++y
P91l3AWW6ZsVsjPunmuoRexgnfrem0K2wnLufbYaPlMHaka9qBM8dTyRY2Zc
8/xAj/VQjrODOe7DLngbzuHjCylwjx/nJP8rRd8OuCe7PP+Z1/TJ0zn8arD/
xMN5zjaVMd/wh3ej1WevyGan+FPUsQwcgseJFDj+XPRYNc5Q9wuebydz4JEZ
R/4v58DllRz9OuTeWcihU9O5IykwdCPFGvm89m/Uwr8vc/QIcc04h9Oen6fs
ZzXFDAGf5GCN/eLcsRTn5lLEj4z1vLHL+occd3HnNc/yLyT7NUecv+V4L/aU
izOEPICrz1Lg5VAt3jl68vsc+5utA37G7T8zasSz5UQtZPhIjSbcU+SSnm/y
/OEM+vtFX9X6J78L2dgmhnHnFozTA+D8oH37SP78LP51fMgxJ+hj9JhzxA4G
ev0G96Xopzr31IhnK3fxfuBnvWPM7mPeJXSZk//Na3zA30a/Xz2exeQQ/DJH
wOHHnj/MIWZVv/Gz22/6gOQPp+ihWe8TC2tmfK/9Z26/4dnNPnrMB/b77Bt3
zvjeZu8h/zsFJjpT1LLf+aOHxvzeTHnWcleD31pyft1nscE8ASfM7UdS5G5W
/v/i/FMHctPp/HQZg8PGdr/jupQilnd0zxM5sN2Z4z0nBnCy2v8G+xzLqH07
69qSw5s8L7bnmP873eNz7otJ0TH3+acpMIvP2ET2vPv/X6Hqagk=
            "]], 
           PolygonBox[CompressedData["
1:eJwllElI1VEYxe97z3uFtGXQIoi2RdAuWjS4aKBVuSht2ayppbZKWkhBC6EQ
qUVQpJsGXmhIljZaWKgvny50UVHSsFAbrKhoUfY7nMXRc77p3v/3ffet2Hu0
siEbQtgCSkCeP938r8E4H0MYBi/QtegR+LEUwppcCHWZEMrlA434WsAk/Dk4
CD9PzjP4Fep1wNuwvUOPkF9B7llqjMKbVANeAOWlIbzCth3/JfRr+Ef87eSe
oUYXtWax9eDbii0fnaPcMdCMzkXfvRoMwCdAM7wK9MOL5HcQewj9h3pj6McZ
28bhbcQsVyxYgJeC4/CV+A8n90C9WIU+gl7E+fXkD2ErgwfwJOce1So2OVY1
VGsfmCJ+M/pb8h111z3gXvSZOls1VEt31t0PgJ/ctwfcgC8DU9LUKINfp+Ym
YufRvTmf8QVeg206429aQFehR9EV6LfoiWQ+iK0S32f0LfIn0TPJPVKvNNMh
/N/Rq/E1EHMT/+JS9149aNcssV3IeoYF+L/oWekOf+GPsJ0kfi36IXxDdK06
kEevR9fn/E2t8A/gHLyX+PfRPVKvdMdPxF/mPqfQ+9UzfC+Td0c7vEv3BQVy
l+L/Ae8C67Ku2Unum2SferI7uqfqrXr4Fd+d5N3VzvbBx6NnoZ0uwjdG9141
u/EPJ+92J/4d+MqSd0NvqI/aRbAk653bGf1N+rYT5PQTew3/xaxjFDsbPRvZ
5uBPo79VMxiEXy3xWer5DPpuci3tvHa/Mfmt6o02JfdYvVaP1WvNWLPWm5rT
viTv+m3wC//p6Fm1oAfwTSfvrnpajW9btE9vVG9VOcrVjv6G30/+LdDMH8D/
A3NDp3Q=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.6499999999999999, 0.6499999999999999], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1VTtPlEEU/Xa+b2YTEelI6LTQQhr4BSRKYQEFmAg+ChcfQTFr4iOh0kY7
G40xayzQheASMFECoohiADFqBDQGG+MDofGBsPgINnpOzqWYvfPduXMf5565
u6nleGPWRVHUgRVjjeNnIxQtqSh64qNoO+RqEkVzkBmsKdhk8L0f6yJsh2Hb
BP1j6GdCFF2CbgqyNcg+DR9noSuD3SC+61O61wX7Icg89M3QFSCrEsUtx34C
sharErqtWL3QbcFagS6LVeeUE/djKeXDXGssTq3tz8T6HjMd4z4M0o9AVsCm
ECsv1j2fUg7d0OWc9EXY3cX3QdTS57Rfy7nFMKGPbvPDuu7FwuR+rG/at8FP
G+48h5+dXjV+88KTuDH/n0F3D0F/HbID6w78VMPmgcWjJO70XzQMmMOI0xn1
G9I6O+2FN/PqhL7fejaK/W+c9WB/JEg/EKuXy0H7A17+GHvY+lNtPWI/mFsd
9p9g/xJyr1cdGeMGz2+YTR66AcgFL9x6LAfa0BdrfJuoBxe8dOw79cT1JlZ/
pPzyViP7c9WprpO4s4yz9Wlxps94dctpz7usod9qZC0Fy6HTySf1H4Jyboa/
U14YEkvmS3ty+k0i3swF+e41/wtBee4zHIgBc8tbLc3G/5zlzHvEhnfpp9J4
vmj9WAo6z5l/+hkyXpHvGeP8Wm9YC2PyjDxn7/ie2a89Xj1ir5hL3jCn7LR9
K+Q1p7dCm0rL+XIsnJnLZsgXzI19iHWXuFF2mZ8Vr33RK/du692PoBxnE90n
b9/h+5jXu4uD+FVlfGPMnMX9Y1wlZy965VGa1lwhr65EmlPEY9r4WG/vvdGr
hlfQb3M6o37Vix9/vXhD/pzwqp+zg/OCb5Vv9pkXPjxjDPKC8yhrdczZGzzv
xQ1yZNnwYo1LNrOypluy2vm9YnvOKdbDWoaD9ue84uyy2Tfp5If3iVm9U1zG
bzN+tjvtqWOtFTbHZo0jtyHHbR4yFucQcSEmnw2jf/bO560uflP/OohfY4Zh
g9O8pr9Jw+gp5HQijhcgm2yWvcfdw14z8VfQnXLDmbyrMXx3e3HrY9B8ZH7f
IR8F/ZeMQpakxcN1adVcMBwavOIy/qKX/5lEMSYs51TQrHSc64kwLQniH+tN
gjBuNwy/enHxC2RZWpiXYu+D5hXnFv/nmMfRoDPapMy2aBhy9pGrO7zyGTT8
/wP1JhHa
            "]], 
           PolygonBox[CompressedData["
1:eJwlkr1L1lEcxe/veX73PqCEW9BWQ/0VgWBLgw4apL0NmYn1SA0VNNVS0NCi
uERDL0YqJaiYr5VBakRUaltQidlSZPpY9DKEn8MZDpzzPd977/fl7mo923Sm
EELYC3IQUgjTBB6DDH4shtBfDGEH+ip8JZm/zkI4jD4BRvFHwBpejm7OHNtA
v+fSPeRXiJ3HuwZa4GP4FfxB9DOenUD/RK8n3zVD7Ae8LTr3IXf8gS9w33Z4
IxhF/wOD8BHyH8CvgBr0Zc485fx39GzmM2vwZWJ3i65RtZ6MfnscbOKdAgPk
HsfvUD9gFb6TWEyuQbXozb/wbaUQdsM3yDmHLoPnRc9Qs1RNqq2P2Bf0G9AN
7yXWiHc6+a0y+WV4IXn2molmM06/BwueoWapGlXrJGjHHwb1ePNgDH8V/37R
O9PuLkTPvgG/hlqPRO+uDv2Z3Orks+vEquDXo3tVD+qlBdyB3wIf8H8lv60d
apdHo3vTm3p7EfTA6/H/54a47viE9zK614tgCf6W2L7MM1mA9+eezQ38b/gD
6JvwDvWI/kjObXKHyXmHN5O860fcMQ2vkHOP3F7tJDpHuYptRveoXl9xppp5
DOX+a9r5b/kle9ppFzoreXb6A53o/frvmf/YFHctJc9Sf+wA3ovoWtXTHPxr
dC+aSVN0TapNf/BQ9Aw0C+1Qu+wDtQX3rN7Vk3q7RP4T/Y1krhzlaifajWbS
jN4CDRqR1Q==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.75, 0.75], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJwtlD1PVkEQhfd97929Fho/onYU9tBIAv+AWFFoBWqjaAFGLNR/YKKJNiZ2
YKNUREyURBNEwRixgldthEQL0VILP/mw8DycKW52dvbsmZkzs/fImfHjF9sp
pav6Kn1d2nxopbQou1VSWpedtPbVKc3rbEXbOwJOyh7U2fec0l3Z37Jx4Mdk
vxbmbPD8lf+hMNvyb2bzb2TzPQ/OqhFWdhG2kT0izC1hpvUNyL+ldUw5dMQ7
3vL6Nmx43sv+JJ4h7Rfajgv3i+B/pLsvtc6I51XlM+7mYkxdnC95d4S7Jtyy
9qe17m0c60o2Zik437Rtg0cPdJiS3V/77JKwR2tzks/+xv7dxb6liHVMvtWW
udGPPTa5kvOm8HOVa3ucHJNz7n4t1gedDjWOeTs7n4no0UZoPpLN86wyLzrB
id2jPLv1zUR+5Lmn+N5A4C6Edq3GeHo63HLP6F1TrOt8aHuvMh85g8WepRfZ
uWfxjMZc0btfxbU/0Pn17Fn8Ld/T2vide+Jc0fdR+97a+lIHNjkwN6z4dvod
GhCXOMQjN+qjT2h5v3Ku5LlWm/tJbexY4OvG/dql9XI2Zi006And4Oed0APm
cT5m4GDj/YHGGoNHN7D9gZ/Nnp1O7bmnjnbjO9w93PhdMR83s+eS+fwifX4U
a4Vm9Gk55oSZ6oq3sFHc93/FGlIXOp7Ifs/viueGXPYp1o3sHP/Iv11s4yP/
udCKWHMxS4vRg4XQnr4Qt4Ru6EetfaE5Pt4AdaId+g/GzEyFvR5vgrfGTDAb
7eKziZgl5nMo/jPD2b38XFzfaNQIdjLeJhqQM/WsF8c6mZ0DtVEX874cvORI
LSOhNf5T2bzwM7fwdUdPl2IGyJl7vXF3K/SnDz+Le3Mu/ierkf/5bJvz/4gm
z44=
            "]], 
           PolygonBox[CompressedData["
1:eJwlkrsvhFEQxed7zL2a9YhHpxD/i6gUdEsluyqxCv4EnVZJw9biUSiEEAkV
n0eCgoSNDoV4ZHcl/CZTTHLOnDPz3XvuNzRdG59LRWSYyqnuKDKfiJzR7AF/
BZFB8D29GRXppfeI7zoT6QMv0rsEF1QnvASvJd7rgufMHzJ/QGXglF4F/cg4
WKmCfaf4A/iN+TW0VepVvQyvoE+An9mxAd5h5oYDp/BR9AY7E3AMvvsYfRv9
KvjsGPofvMWOEfQ7eBO8rD57gf82d49568w0mJ1Ux+vUE7wZfPc+vAUu8NfF
z/yOtxQ8O7vTHlpF/VuW4QfaN1WGb8J/wAl3Psk8M8vOzmBnscw0eGaWnXlm
0dvqs7t4tvD+Bj+L7WyDO6JnaRnH6G9ib/OAf0E9M8vuHH1J/U52N8u0DJ9S
1yyjF7Sq+ttbxp/wgehvb/9IP/gfqaFUKA==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.8500000000000001, 0.8500000000000001], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFUrtOw0AQPMe5u6RAAvHqkJwU0OQT+ACaFHwCEm2QG/gukJAiBBQgJFKC
eCkuqAx8ALGBUDDDrOTitLtzs7tzu5ftHeyOWs65bZwUJ2s7VybO7eOMvXNb
uCyAVYn8PBGnh3MH/hh2AnwhCPtKhHcZA38BNgO2Cf8V+CCIc47aT151j2Av
0XyDvRA/puIzj1p2WtLDeh+mbQJOhvgN/tAstdESp4aRF78bpYP5p8AOrS/7
v1u9aycsN/0n4F+BH4N0TY1DbmE+76mNGo/b4sy95tC3WXB2nNt6lK7S6n+a
7tzeVyRNbfZj/R/0vsA7v2HnQTP6DZoN8zlP5pLDPO5haHfsXVmvZ694YLn3
qTjsXVudpSh80XTepNK6gvgB/nLUO2rL4xv5DzjfGLWPTlRMnG/p2z8hthq1
17XY9Gbf0vj/f8byO0F76dne0yg9Ldgad2fwq9Dsm7kBd7fAfdT8yJnajImT
9wdn1WxZ
            "]], 
           PolygonBox[CompressedData["
1:eJwlkbsuhFEUhfeZ///PGQkJ4tKIZCh4AQ+hUXgE/YyOZ1BoPIhCIiaCQiIx
rRAJtcsDMDOMwreyip2stdfZl7VPZ29/t9eKiBWiJrZKxDrgM0X0mohzYo0H
H/AueBl9Ez6EH8APG+Mx8QyeyRED9C/4NPiHuK4itsmdoo/hr8m5X3BDv3vw
DvpZ4xrVPpCbQxvCL8Gr6EfoLXJ38A78GF7D35N7ZHCbGFTOScvUvyXXVPAJ
NS/JPUdos8WzNuh3gjYP/0Z/JLdQnJP2BF8s9iAvt9q39s7aXZ77tXfUrje8
n9C/nX1L3XAKfIE+Sr5hH/yX/VY30W3kSd7koTDvqvFt9Sf6m5I9W57kbal4
N+2s3f8BP78/ZQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.95, 0.95], 
         GraphicsGroupBox[{
           
           PolygonBox[{{241, 245, 225}, {603, 595, 232}, {1464, 599, 1463}, {
            970, 707, 595}, {237, 595, 210}, {1545, 707, 1544}, {637, 759, 
            232}, {241, 249, 233}, {759, 603, 232}, {595, 707, 210}, {595, 
            237, 232}, {1398, 982, 1815}, {1389, 594, 1461}, {1390, 603, 
            1845}, {1845, 603, 1468}, {241, 233, 232}, {1495, 637, 1399}, {
            603, 970, 595}, {636, 233, 224}, {636, 637, 232}, {245, 241, 
            237}, {233, 636, 232}, {249, 241, 225}, {982, 636, 224}, {237, 
            241, 232}}], 
           
           PolygonBox[{{1243, 224, 599, 1464}, {1461, 594, 210, 1240}, {1240, 
            210, 707, 1545}, {1544, 707, 970, 1801}, {1468, 603, 759, 1581}, {
            1581, 759, 637, 1495}, {1399, 637, 636, 1494}, {1801, 970, 603, 
            1390}, {1815, 982, 224, 1243}, {1494, 636, 982, 1398}}]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1389, 1461, 1240, 1545, 1544, 1801, 1390, 1845, 1468, 
            1581, 1495, 1399, 1494, 1398, 1815, 1243, 1464, 1463}]}, 
          FractionBox["9", "10"]], Annotation[#, 
          Rational[9, 10], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1201, 1531, 1783, 1782, 1417, 1787, 1788, 1784, 1786, 
            1785, 1454, 1202, 1543, 1542, 1795, 1794, 1421, 1799, 1800, 1796, 
            1798, 1797, 1458, 1208, 1549, 1548, 1809, 1808, 1426, 1813, 1814, 
            1810, 1812, 1811}]}, 
          FractionBox["4", "5"]], Annotation[#, 
          Rational[4, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1207, 1242, 1396, 1806, 1397, 1807, 1293, 1793, 1388, 
            1539, 1540, 1541, 1239, 1420, 1387, 1536, 1537, 1538, 1453, 1780, 
            1381, 1779, 1382, 1781, 1416, 1778, 1380, 1528, 1529, 1530, 1451, 
            1765, 1372, 1764, 1373, 1413, 1236, 1762, 1370, 1761, 1371, 1763, 
            1279, 1746, 1363, 1516, 1517, 1518, 1232, 1460}]}, 
          FractionBox["7", "10"]], Annotation[#, 
          Rational[7, 10], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1186, 1509, 1352, 1722, 1412, 1726, 1727, 1723, 1725, 
            1724, 1447, 1193, 1478, 1479, 1477, 1273, 1743, 1744, 1742, 1361, 
            1231, 1192, 1515, 1514, 1362, 1745, 1278, 1759, 1368, 1757, 1367, 
            1758, 1235, 1523, 1522, 1521, 1369, 1760, 1284, 1777, 1379, 1774, 
            1776, 1775, 1238, 1200, 1527, 1526, 1641, 1640, 1287, 1642, 1643, 
            1482, 1481, 1490, 1457, 1206, 1547, 1546, 1803, 1802, 1425, 1805, 
            1395, 1804, 1394}]}, 
          FractionBox["3", "5"]], Annotation[#, 
          Rational[3, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzjlOQmEUBtBLVGzchJugc1iCUrgAOykcWIG0sgejNjTPoXKsBAsRBTWx
ERuHQhQTQmJiIeh5xcl373f/l7zJxZX8ciYi5tkcjaiORdQ4p2/fzUZMmxM5
JUusc2CflXtyRu7LHbntmzf5yonumLt05tvtQt7Som7f4sX8zJG3h/zormSD
OnNuTV2FjvmdG/01A11bPvHIgtu9LqFnvmSEU87oevNFh08+SPRDBvyyxJ9+
Q5bTmRiPKMicXHWbMK/JIs30f3jgH/MDPBU=
            "]]}, 
          FractionBox["1", "2"]], Annotation[#, 
          Rational[1, 2], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzjsvg2EYgOFHQv0OU1kxWimpRGIiJk3URowkjIw6qmOV1GkgcfgFqMXu
kJQJi6SSikEjrm+4cj/v871v2o7c7OhMS0RMkG6LWGCejVREp67pOkW2nYut
EYPmITJ8Ope0x7cd7dYlFtl37tVd3aNMyXnLm2Hzl2a1rod6xAF97lTtNnk2
P3Fif0zD7kIH7M61X+/sXvWFGhkuffuxv9Fbrhmxv7er8G5+S97aV/m1G9Om
jusjD8lvunNql26PmDQvs8I3DXJ8uJfSKZ0mzx9nyf/wtsvbOfMqBa74B/YM
OnU=
            "]]}, 
          FractionBox["2", "5"]], Annotation[#, 
          Rational[2, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0DsvgwEUBuAjcUmYJRbXph3cSljo2MbGIBEjcUlM7Q8gkfAHaLUSghgk
LAZ/wKWrTREJK4mYDSbPNzx5zzl92+9L+1dK88WmiFin0hzx1hJxx5f5Vn7K
g9aIXnNF9siy3KeTAnn2uNct09cW0a13zBE1t5Rbxnyo18W324ysUaVurzKg
l9b7MZ+6Z80nclRusck4I3pj8ix5jm7aPmXeJkfWPi3Pk47PM/a8eYddPnin
wI3f/9Wpyzn7g5yVj24XLNr/kneTKV54pcGC3rO8lFcsJ/+dfSm5+841q/Y1
BhlimAnvM8mGXtHeLkuyI3kuDZ74B82UNMo=
            "]]}, 
          FractionBox["3", "10"]], Annotation[#, 
          Rational[3, 10], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0Dsvg2EYh/Gn4vABSJCWKh0krcTmfGhXFg0W4tAPgNGIwSkUiUSZsRgM
NYogYTGazEQihn4Cid87XLnu//3c9/M+eVPF1cJKLISwhrvaED5QqpPR3RBC
Rb5V/9WHsIwiFrCERXxH2fk81/Acx/idp7mKG3ek5A4kMYsZXOq/YcLMkzzJ
17hCDr2+n+eEszgKmMKFnVf0RbNyf7THVb0eddpeWf2CjJyVs/wrpzkln6qf
0Sln5C7+kePcLh+rH6N/4d4c8mjCERJmkmZOnJfV52hGm96B3gO2o3dhAI3Y
wS5azO1xK+/zp9lB/uIhPuQRHsUwxjGGkv6ZnU31Fjai98jruHdW4X/OOzOl

            "]]}, 
          FractionBox["1", "5"]], Annotation[#, 
          Rational[1, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzzkvplEYxvEjGYzGNjHGGhJmvIqX1/oJFCSWoJJoNNOYUdjGXhg7Udga
KiqJQolYChWVTmEZEolqmvkC83uKf/7nuu77PE9Oad9A58+kEMICBpJDuEUa
fqSE8JH7+TvXpIaQQEyuwDck63v56EMIX7kcZQj6Hj7U36HYuQjd6MK+7gbN
9q7kFj7APo7ldnSgFf/stXG9Wdz/GzhfzsNfsxbe4WvEzHblSt6LzihBpXul
nGv2Ge92m3idL5FvtiKvYRVvuhxdgXvLzueY1f9GI17lbJ6Lvmev0N6Kbst5
G9nI0y3ozjBlbxo1+CNn8Qw+RW+xt6irk1+4lhui92JJ3rCziXR8sTuvO8Gg
eRxVSMcQTvXDPIJqPMgZPIpfyPCNBD/qM3kM48jUT3AWT/JT9GbnZ77ge/wH
6eA6sg==
            "]]}, 
          FractionBox["1", "10"]], Annotation[#, 
          Rational[1, 10], "Tooltip"]& ], {}, {}, {}}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[1, 2]}, {
         Rational[1, 2]}}, {{0.5}, {0.5}}], AxesLabel -> {None, None}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           TagBox["y", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox[
          TagBox[
           TagBox["x", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}}, DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox["y", HoldForm], HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox["x", HoldForm], HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[1, 2]}, {
         Rational[1, 2]}}, {{0.5}, {0.5}}], GridLinesStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.2875, 0.2875, 0.2875}}, {{0.3625, 0.3625, 
              0.3625}}, {{0.4375, 0.4375, 0.4375}}, {{0.5125, 0.5125, 
              0.5125}}, {{0.5875, 0.5875, 0.5875}}, {{1., 0.55, 0.55}}, {{1., 
              0.65, 0.65}}, {{1., 0.7499999999999999, 0.7499999999999999}}, {{
              1., 0.85, 0.85}}, {{1., 0.95, 0.95}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -112.5}, {
                    Rational[15, 2], -112.5}}, {{-7.5, -112.5}, {
                  7.5, -112.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -90.}, {
                    Rational[15, 2], -90.}}, {{-7.5, -90.}, {7.5, -90.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -67.5}, {
                    Rational[15, 2], -67.5}}, {{-7.5, -67.5}, {
                  7.5, -67.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -45.}, {
                    Rational[15, 2], -45.}}, {{-7.5, -45.}, {7.5, -45.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -22.5}, {
                    Rational[15, 2], -22.5}}, {{-7.5, -22.5}, {
                  7.5, -22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 22.5}, {
                    Rational[15, 2], 22.5}}, {{-7.5, 22.5}, {7.5, 22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 45.}, {
                    Rational[15, 2], 45.}}, {{-7.5, 45.}, {7.5, 45.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 67.5}, {
                    Rational[15, 2], 67.5}}, {{-7.5, 67.5}, {7.5, 67.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 90.}, {
                    Rational[15, 2], 90.}}, {{-7.5, 90.}, {7.5, 90.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                  112.5}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -90.}, 
                    Offset[{4., 0}, {7.5, -90.}]}, {{7.5, -45.}, 
                    Offset[{4., 0}, {7.5, -45.}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 45.}, 
                    Offset[{4., 0}, {7.5, 45.}]}, {{7.5, 90.}, 
                    Offset[{4., 0}, {7.5, 90.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.1\"", ShowStringCharacters -> False], 0.1, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.3\"", ShowStringCharacters -> False], 0.3, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -45.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.7\"", ShowStringCharacters -> False], 0.7, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 45.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.9\"", ShowStringCharacters -> False], 0.9, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Red", ",", "#1"}], "]"}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{
                    RowBox[{"Darker", "[", 
                    RowBox[{"Gray", ",", "0.5`"}], "]"}], ",", "#1"}], 
                    "]"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["3", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["2", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "2"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["3", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["7", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["4", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["9", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.907655269192649*^9, 3.907656680102954*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"87505a36-9f35-4d5a-8f06-e56163c73cb2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Product logic is", "Item",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655474746076*^9}, {
  3.9076555428608522`*^9, 
  3.907655543145595*^9}},ExpressionUUID->"5e9cf78c-5571-4707-99c4-\
9f1c161ab468"],

Cell["gradient rich", "Subitem",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655480227624*^9}, {
  3.9076555456086817`*^9, 3.9076555470290318`*^9}, {3.907655706177855*^9, 
  3.9076557087927103`*^9}},ExpressionUUID->"a0ff7a7a-957a-4ffd-9e39-\
93debdc51b9f"],

Cell["but not hard equivalent", "Subitem",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.9076555022756443`*^9}, {
   3.907655549116544*^9, 3.907655549376286*^9}, 
   3.907655714688777*^9},ExpressionUUID->"0877ec4f-4dc8-4859-982e-\
814190c2138e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"a5cb05e6-1cd4-4170-8bad-e2077e1bfcc3"],

Cell[CellGroupData[{

Cell["Godel logic", "Subsection",
 CellChangeTimes->{{3.907651550582347*^9, 3.9076515667110653`*^9}, {
  3.907652510091539*^9, 3.907652511352847*^9}, {3.9076553122562017`*^9, 
  3.907655314379054*^9}},ExpressionUUID->"8a65901f-6744-41cf-a44d-\
b16041c5e158"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GodelAnd", "[", 
   RowBox[{"x_Real", ",", "w_Real"}], "]"}], ":=", 
  RowBox[{"Min", "[", 
   RowBox[{"x", ",", "w"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907650434562171*^9, 3.907650482205029*^9}, {
   3.907650530196126*^9, 3.9076505471567*^9}, {3.9076511044682417`*^9, 
   3.907651133038216*^9}, {3.9076512069573936`*^9, 3.907651219981452*^9}, 
   3.9076512784031267`*^9, {3.907651341193797*^9, 3.90765134378265*^9}, {
   3.9076525421644993`*^9, 3.907652578577387*^9}, {3.907655371536799*^9, 
   3.9076553813009853`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"0e6166d9-9bd5-424d-a913-3421d64d474f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"BPlot", "[", 
    RowBox[{"GodelAnd", ",", "w"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9076505602702217`*^9, 3.907650606523389*^9}, {
   3.9076506656780252`*^9, 3.907650695251112*^9}, {3.907650751370657*^9, 
   3.9076507758999367`*^9}, {3.9076508109945107`*^9, 3.907650813276668*^9}, {
   3.9076508696099367`*^9, 3.907650889009583*^9}, {3.907651151401148*^9, 
   3.907651192638577*^9}, {3.907651461743928*^9, 3.907651512624567*^9}, {
   3.907651609932867*^9, 3.907651611390089*^9}, {3.907652568628127*^9, 
   3.907652595972711*^9}, {3.907652884739913*^9, 3.90765293458611*^9}, {
   3.9076533293518*^9, 3.907653342599554*^9}, {3.907653537405314*^9, 
   3.907653540369816*^9}, {3.90765386158637*^9, 3.907653867221286*^9}, {
   3.907654081338025*^9, 3.907654081504961*^9}, {3.9076541334999104`*^9, 
   3.907654140694104*^9}, {3.90765419116926*^9, 3.907654200037426*^9}, {
   3.907654247969018*^9, 3.9076542481216993`*^9}, {3.907654297847398*^9, 
   3.9076542990779457`*^9}, {3.907654586812331*^9, 3.907654638064322*^9}, {
   3.907654853072383*^9, 3.907654856685422*^9}, 3.907655245845134*^9, {
   3.907655389432102*^9, 3.907655390024225*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"032eb2ea-bbc3-42cb-a315-af78565a3f51"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`w$$ = 0.455, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`w$$], 0, 1}}, Typeset`size$$ = {
    175.05078125, {2.87109375, 9.609375}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`w$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> $CellContext`BPlot[$CellContext`GodelAnd, $CellContext`w$$], 
      "Specifications" :> {{$CellContext`w$$, 0, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{206., {39.0234375, 44.9765625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.907651183897867*^9, 3.9076511933580847`*^9}, 
   3.9076514463109283`*^9, {3.907651481535091*^9, 3.907651513424822*^9}, 
   3.907651611966391*^9, 3.907652596614832*^9, {3.907652894053721*^9, 
   3.907652935354447*^9}, 3.907653343187105*^9, 3.9076535410098133`*^9, {
   3.907653868017933*^9, 3.9076538952409143`*^9}, 3.90765408227501*^9, {
   3.907654128806085*^9, 3.907654141280047*^9}, 3.907654200775177*^9, 
   3.907654248622446*^9, 3.90765429991059*^9, {3.9076546059649487`*^9, 
   3.907654638755199*^9}, 3.907654857266444*^9, 3.907655246515993*^9, 
   3.907655586137981*^9, 3.90765668406326*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"2dc87873-9556-48bc-a74f-62c200bf1c10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ActivationPlot", "[", "GodelAnd", "]"}]], "Input",
 CellChangeTimes->{{3.907655265040512*^9, 3.9076552683173323`*^9}, {
  3.907655581306699*^9, 3.9076555818467417`*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"ccd4aa02-706f-4341-a095-0e23b3ce6991"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJytnV2MZVlVxycq4gfwII4S1Ac+TFAkCjwoaLzgA0pidEICow+AovAg4CeY
CJgoGMXxAZgHFU0EJ1E0I4x24JKiYIDq7sLb3QM1VT09fbu6uuvWnapbVd1z
qzBR8UFx+uzzWyv//6491TN0pZOd/9n7nLPX99pr73P7OW/6rde8+Ztuu+22
Z33nbbfdaP3v7ue/+rF/JwaKlwKvD9/+2L+z1r8auOtevxD4UrkQ+P++fuPv
auAPdfdvBX7eDXj3I4E/1d2+E/hnuxfuBR53z78W+K3dBB8NXP4ODSedR7dL
gaFX+1cDQy8YesHQC4ZeMPSCoRcMvWDoBUOvyu3QcMrxaDqzVXqXjN4lo3fJ
6F0yepeM3iWjd8noXTJ6l4zeJaN3yeit9fRoOSad3kIvGHrB0AuGXjD0gqEX
DL1g6AVDLxh61e4ODacdHq2nSxVd2p+tynfV5Ltq8l01+a6afFdNvqsm31WT
76rJd9XkW/uZo+1wqZKb0wX2FnrB0AuGXjD0gqEXDL1g6AVDr/rNQ8PpR4/2
M0uVXrrcnC6wt9ALhl4w9IKhFwy9YOgFQ6/GhcNBK04c7UeXKrtzvXS5OV1g
b6EXDL1g6AVDLxh6wdCrce9w0IqD0Ot+0/2K253rpcvN6QJ7C71g6AVDLxh6
wdCrcf1w0Irz0Otxwf2m+xW3O9dLl5vTBfYWesHQC4ZeMPRq3nI4aOUx0Otx
z+OC+033K253rpcuN6cL7C30gqEXDL2alx0OWnka9Hpc97jnccH9pvsVtzvX
S5eb0wX2FnrB0Kt55+GglYdCr+ctHtc97nlccL/pfsXtzvXS5eZ0gb2FXs2r
DwetPBt6PS/zvMXjusc9jwvuN92vuN25XrrcnC6wt9DbWkdA79F5p+dlnrd4
XPe453HB/ab7Fbc710uXm9N1WLVlvvdEW+hZjLZMdznact9KtN1td5+P9ue6
B42jfVv3oI1oy/VJtIUf02jLuO1oC39m0X6we9F+tM/t3ns92jLPebTQdZv9
cf3ocTVfGMf9ig+r9/p1f6/qz0G0pf/uaPW+u6v7fFzrOf4ef07rPcqP+j3o
SUuPsB/v5zp61dI77M371Q5XmnqKfXo/19Hbll6rPWc/19Hzlh1g/97PdbWL
2m7wF96v1ydNO8O/eL/mx9OmXeKPvJ/r2GnLjjVPy37N12ZNu8ffeT/X8QMt
P6F5Q/ZzHb/R8iv4U+/X+D1v+iH8r/drvHQ7OWF2MLQ27YKW60W/TkXrdqDx
amXwm92FB6J1vaflerl/LVrXc1qud+z++sPRul7Tcr3oxeVoXY9puV7mtRmt
662ui6b9/LaidT2l5Xp5T7aul5qHz/r3ZOt6SMv18p69aF3vaLle3nMtWtcz
zbPm/XuyLXK71+LCvVWLvhU9+UKFvUXfCp9GFfYWfeuGPf/BCnuLvpVpPFRh
b9G3Iv9LFfYWfSvyvFJhb9G3IrdJhb1F34rcphX2Fn0rctupsLfoW9GT3Qp7
i759spvHfoW9Rd9e1c3j0Qp7q/q2aHnTMPRP/dk9hk+EHqn+rdhzV8IPqh87
ZfF22fzY2dAj7sNv8VwwfhA94j78Fs8F4wfRI+7TODq2eLseesR9Gk83Amu9
a8v0b9vygm2L49umfzN77szi9sz0bz+eC9Y4vWf6dz2eC9a4fC3uU7+1H1jj
8Dzu0/g3NLkuhr/hOnJEH5AT8lQ5nA//4HVE5AdfVW6PBP+1brVldZxp2K/X
KeAvdMMf/Dv8IT8HY3++7vP8g+tqD4tBFxi90/5JYOjQ8duBkTuYeYKZDxh5
g/H/Gj/GIT+1t+WYH1jj/nLMD8z8wKp3y5bPLcf8wO6HwC2/o3nL+Zif+o/t
wMwPzPzAzE/fN2/KVfk0jnimej6NfvUn45gPmPmAmY++b97UK5ej+1HXO5ez
89X9qs53YvOd2HwnNt9az12vXI66PpvG+8C8T583b9qR663rydFySr9PvMfP
8H59/rxpt24nrpdH68WkGVfcD7jduZ4frWeTiq+tuOR+xu3a7ehoPZ5UcnM+
qh87CD/sfs39iNvt0XYzqfTE5Qb2uKnzOKjy+HI982jiWCtv9TwRv8xzNY/K
uAvGz/Be8hyPs2Dey7zQY+al66wdqwvsBP3Mm/zB4+TR8sp1t/t5XefU62L3
Y9DTWrd63QX6lM60I83/63VkSw9oj9bHYczf463StVnFC9WbzC91Pu5/cv9H
+X7B/O66+aWrgXWfdNH2ERdtn23R9qEWbZ9msarLaJ100do8ZwAfdd992fL0
Zdu3Xbb8cNn2/ZZtX2zZ6k7Ltt5fjvmCmS985nqL76oPuY+OPmu+ez7mD2b+
YOYPZv5g5g9u5aXOV8/Tfd8bvdV8fBzzAzM/MPMDMz9dFx5W+YzL2fnm64aW
HrueON993aH0TIyeidEzMXomRs+ksiPXU5f70XyeVPuw+And55zaPuDU9smm
lR27nbjeHS3nSbXu8n1S/BbzATMfz4/cLl3PXa9cLs4XX/e1/JT7Abero/V4
UvHd6W75QfczbrdH28mkkqvz1dexLb/rfs39xNF2Oan0yOXo62Zw8Ytnoi1h
8aGqftlN47F1KXmS1xNZV5V4txMteZPX78jTy/MXotU8bbHPrz5n46bRki9p
3Sj7mZ/mJVtV3PY8S+vgo2ofrMxvrR/Pftl584Ob/fjNflzmc74vo3Uk6kR7
Pd+/GPQTh8k7kVt537nAn+7e92XLw8iz4QfrjEeCX+o3ZiHH0p+43D+L/Io8
52J336O93HO9ofo0sXx3ZvsWs5ADeqJySn0qzz9V1eXRn6LPp4N/hT913VXz
gGFVh/W8v9y31Kybeh7pdVRfFwz7/KNV9/S8E36Afd3g9U+vs+v+5HbIX9f1
ntcm9v1Mr3N63ut1T1+nqD9eq/ZB4Cv25nYH1vNxl0PfCz0bwR/f19DzlbXd
gnXfKvcVNL7VdgxGD9wu1U+lnfq+A3wFY2fYXeHXSfOnK6H3ik+EH0Gv4TsY
feQ+MPKAz8gJvoJ1H3sjsOaH2yEHtWv4n/6p4PlA6zVz22ech1zKPA6s3p52
hjx0/3Uc2Pe9kQfv0f30ebWPpucXr4Rcy/grMR/4S/xFDmD4rfFrI+Ixzwcf
fV53FvEY/QXDP/jB+8Fqf1tGT567hT88H6xxbhz2qHq+Htj3kXT9c7GyD82v
0h64n/mC9VzItdAT32dWO839er1/PeRJfNY4caY6t4596Dpj0/L+rYi3fu4P
fdY8L/2q5ofp5/EX5b2cA7sQ/rOMfygw8vIWuks7Cf9Y3pO4zOda+L9Cz35g
5uNteS759MMxH5U/eCveB73qr/P96AeYOK75wWrEe+j1/TDdR0//pH5oJ+jx
/Smvv/F+jb/TyGvo1zg+Nb/4SPBF46afF8l8E/0kDngcQv/IyzzuqB/eiryJ
+WIHpV2OeeFndV6Zdzh9XPdzIzxP9aGO10p3xlvoULtZqeKfxzONTxlveD5+
gucTH/Dnal9pL/hjzxcYD58Zj79iPPGE8fodxaati/cszzpreetZoz/PUxX6
M6+HLn+O18E171wPfvr5KF8nwCcdN63q5sQd/CV6on51Xp1n8nUFcvDneJ0d
+8VONW/Peo7bReFXrkuKHHydd7LKS4hD7oc1rk6rdR1+yvMW4oD7XV2/rdg6
87zFizVrU5/L+3bDj+g+Ft8vZIt8yv0nYr7YY+FL7utgH+iZ8ivrF+p3RmZX
Wxbnt6v6BvYO5j7o0bxsL/rRIzB81++VrkW/7ldsWR6yZfzYMn5sWX66E+PB
+t56na3v2a/o4DnQyXjdb9yyc1E7MS/kCl0uV60L13T6viN6WuLXQcQx/BB1
ENXfrJNoPjeOOKfne9p1EPjLPLBfr1vhB7BHr1PhN/Q5B6G30MN6l/kjBz2X
uRfzIx64Hwarvx1Fnqzjtyo/6/kPWPUs7QS+6rmmnUpPNI/fCTl7fc7tTO1o
WNmJ+xGtt+b3J/AZ/mp9/Yrx4arFh53QI13f+Tmo9NfQi9y1zr4V+qPxI+sD
5Xn4/fXAZfylqi5X3se5qMQf6G541PiSda/Cj8yL0Sudx1Xzm1u2ft6yOvtW
JQfk7Hk0zyl29WBVr8buwchR6+MrgenXevmK7cOcjfxE6x/b0Y8fpV/PfZy1
evuKndM4a+fTVsy/nQ0/qHnpPPr9HDHXwfAJvun3BxuB0UvdX9+weL1udb0N
OyeyHvPT807z6Pc6kvJ5o/JDLbmBdZ02acpR1xej8GMtuer5opHFvY0qb9Vz
p5csj8z8R/P7WZVnYg/c39IrPX80snpkLVets1+K8X5uWv2Zz3u3qcd6Xmlk
56xrPdK86VKMb9mBnk8aWf241kPNsy411nfzys40Xzxo6jFY6/gHllfNq3WH
x7Vin5+JlrzB2zKedcRnYzzXGVfmM42WPMNb/S4pxx+9jzayOsQo3lvy6C9V
+3c+TvPxheq+Qs9S1HdY57TWPbpPQt62YflmnjfWdVnWF1rj9DuEvE/r52cs
r1yJ/MzbwgfO3ed6ieuM4zrjdH9lx/LO3cj3vNW8MNdXuh+T1xlHPEGOmk8v
Rj6t69YHY7zGocXgi+7fPlStJ8H4I93XnZlezkIuWmeeml+bBp90/H61HgXr
fO4xfCLkVex5aPWcYegr9ys+YevOoeXJWW/ifsUnbF9raHX4YcRFff8k7i/0
bNr7JoHhG/crPhF5GuP1+55hxEGd/3bcr/uKQ8vrh6Hv3K/4ROgD43V/eBjy
5H7FJ2zdMLT1+TDiBvcrPlGtM3S9PqzyLvitefOW+cPMM/T7k1HMV/OWa4FZ
12ieXu/zadwbNvf9WnoPZnzLDlTfsh7LePQNrPqV9U36tY62Zvq0GvyjX+Pr
munPavCXfvRH79+P8bqPuBb6ovdfj/G6n7RmdcK1yAMYr9+NrUVeAG75EV0H
Dpt+xfe9dH2f61Stf1w1PLM67J6tg69Z3pt5UcuPaV41bPo1r+upXLIu39qH
bvlBMO9r+UXeT7/qXepxS8/1O+yrwU/Go39g/b77avCbfvRP778e45EH/eif
0jeP8chL539g9NZxQM9tD5txwf2e2uHU7KK2+1Yc0fMow2ZccT+r+pN+o+VH
vC6sctk2/16fY/B1FPR4XNN1w7AZ5zxOqN+ZmV+t/Zzuw8xMb1IvW3qKnDxO
e5zV+vGwGXc9zqlf3Dd7qv2w+yXV67STlh1Bj+cNHve1vj1s5gEep6HH9ytb
ccL9KvTo9zubTTuHHq+T+zkHXU/XdXSw2ve8yjugj361nzqueZzQc+Rzs5/a
L6mfyfU047V+mvuyrXNB0Ak+eh07NX90Jsb5OUzdJ5hafcXrR/ndk59/4Hpp
l+N9Ba/G+7ROxfu8/p/fCeu5q1EV5/Tc4Kjy43reYVT5WT2HPqr8lp4LH1V+
QM9xjyq70nPXI5Obn89cNf29YP513fxl/s6c18nA+jtslyo/pL9bdqmya/2d
r0uVXah/uWr+4mr063dAa4Hp1++C6nNG+r3DMOhmvH5vsGlynVb6pef31+z7
gM1qX0PxsDr/qef9N6t9BMVDO0+/Zuf3N6t9Bz9H5fdTh+V+sJ+7wg67YY+t
n9S/1Xm11nF2+3rK/VHPK3zOelyRe9a3wKXdCHlgh8xH66h53pz9S+6jrqvn
bBbMz00t/8o6VZHjftSRCr/O2XNWm3rtekY9r4wn378Q8+E8merfcvjr8prT
UQ8Fl/fld8ZaX+JcUWLyU/ZNtH41CX/CvFlfgVlf6br7QvNcJ9i/U2id6/T1
hf5uTn2uU/cdch8GfXX9ZV76uxzsI+Q5TbDvB+s+xDToAEOH/g6if0+wG9jP
9+p9j8b+JtjjBnqCHhV5fcn0fGRyORN8Rr4aL/M8JPTpPtG22V9iP2ek5zyv
hJ7hN8r8Ny0OsD5bsvrrF0P/weg/coQe5Fj0Ns/VQp+e889zRdgL2L97It9E
Ln4ul/wTvWM+6B1Y9/PWm3rq9Q78vPIrz03r78TWeun1ZD/HrPn5zH73rNZb
/R2hq1af2Aw5g32c1g/qcWD0Rvmw2dSjohcnbZ/pZOgL9g/fvQ7Dc5AT72W8
0pn1OtXzbaM382T9zj3tS+Wa+gjW+v885OLrBOK4rp8PYjxYf2/3ssWrdauv
XAp56L7sxPLJrYi/5f4818J4P2dFfs949N7P75Z5nw2+0a/fZ+TvbOs++CTG
6++xroRd6PN2bF94J/qVzytBP/36+60r4Q/p13PTK2FHuk91GP3Iy3/nj37y
k9ImPchV84L1oId+3Sdct+8aNoI+/36EfuijX/PQjaCPfs07N4I++lVOl01O
V+33wTYt7m/ZPkDqAXLX37fYtvOV2zFfPx+u64kDq0cdVHoD5n2Mh279fe/L
0a91rMxv2ffj+ciJ56udbVT2rXn+ip0/eiD8P/fr71Nfjn7uR87cr/WIDfu9
58vRD31g4jz+mvVDke9nQ3/xh6wn2OfH7nkOeQ7PI58jHwBrvpPnzPTc4dTq
HMTTjP9g4n+xhzyHRtwo7z9l36Mth92Sv2l9Ydv87XboAfmXf7fY2mcG67np
feNvfs8OZrzW5aehD3oOwX/PLeWr9bPFwLpun8fzVV8SK/8uhP/X88qTeI6e
D55GnCHPg79uDyqfcyEfsJ4jOdfn2SOz8+2wXz2nMbO4z3nAHVu3zkJvPO8H
My/0Hr3xvF3fl3k7eRT+VPOAq/3zHza+XLA64YXgi+rFzL7PmMV6F/qYP/YK
fWq/uZ6FHjD6pvHwVCVH9/suJ/dL+HWtoxxEvk+dubz/nphHGXev+aMTgTn3
U+aV3wUqnts6IzF2ovWwg6ALDF3wl9b1puWXwPCf1vWo5ac8T/Tz+vpdbH4X
CP+YF/zzefp3qT4P/35V10Hrtk7J+EA8KJcvVt9h4t+LXl+3392ijvRQnH/i
Oli/O2CdjB/eM7+8F3Srfp83fVszP7tvdYu98H/wl/t5PnG00HO6Oo/MODB6
ovb7oK2H8C/pb7Q+vm3nKlPPtI43Dj9EfQJ5aVy6Zt+nZfz175Y1ru1WeSt+
kLon+uLrXMbp/n/eB/ZzC/Cb70Hdf+q6Mf0l8iaOetzW7wLmkZ/gr/R8Tf7u
HFi/u8rvCpG71vX9vPzDwf+jv+vP3zclLuDXoJP3oM9qP1+w3zOeVnmM0rEX
WH/PIPXL5QRGrmon581e8ncw4Bd6SevXka9+f5etX8fOeJ/Gv6RH19GnKrvV
+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
OvkuHv7xHTz8+n97z4cl
      "], {{{}, {
         EdgeForm[], 
         RGBColor[0.2875, 0.2875, 0.2875], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVuIllUUhrfz/39r9keW4WGsTPMiScdD3amRd2VYV0FXFaSlUmEh6pR1
UxEoeEAoNVOz1JnR+XXGGTWPo5jO5JiCo6jg2AkU7IB2ZaKCPi+vFy+sd61v
7bX3On0jZ3z46gc1KaUGUAbP16b0cSmlP1FOQR4PTiG/jW4Ncg9oQe7Px8eR
n42UnsCvE92v8Jk5pQN8/z58FvLw7IM3VFIajH1X+NuD4BL8KTCn5BgTkE+C
bfBP8fkoHFOxB4C3dDfwEvJezjtdpDQvfNc58BXwK/A+7K/B58I3wps4qxGs
5i7LwRrkQXyzLDuGYlXhJzh7AbornPcJugbkhrC8EPsW7EvQDURehW4pch26
mrJj3kXeiG4nfCjPHovvOngVPgQ+Br4B3gavg9fD38vOVScx30WeDf4qOYfK
5dfhWF+iq3L+XPjVkr+J7BqoFsrZKeTR2Adzdgu6tdib4K3I28H67DvoLtJ9
B98c/nYr+BbeCPYgP8o348Jv1ttV8wWqB/bmsmMolt6gt3Sg+wHbfOUUeRT3
n4fcgv1H+G6wKTsnyo10m+Fbwr7t4PtsSFYOt2JLejO13AV6Ct9Rd1VOG7EP
xL4W22TwCvaH4CuQh4In4Q/Dv5IMxsBb8T+K7zCOfgb/R7CvxjYOPIe9L3zW
RDAN3s73P5fd4+r1i+i6sO0DZwr3kHpJuj54ifM+R76ATze2MvwL+H/wf7Nn
QLMwFbzJ91V0h7E9zvkTOL8/9uXYyqCmcAzFUg9/w7cPYl8KvwO/md3j6nXN
2GX8X4ZPqvhNepveqLd2Y9/B98fCvrfADfjB8N2ugb/hk/EfW3HOlLvR8BEV
51S5HQGvq/iOumt33L+r7oDtfDiX9WCS7h/O/XDwNLwnXJsh0hV+s97+k3qU
+DvC8hH1NLwjfPcu0AZvhR9C7lR/wPfCzyL3yge+P5z7c+AYfDz8sWSfFvgf
4dy/AF4v7CPfM2BP2Ee+58E+xeaN71Q8cw9kz5BmSTPcHO5p9bZmpqp50f4r
O6Zi/4b/IXwHoavPngnNxizOXEz8RYVl7TTttt7Cu007RrvmROHe107SbtIO
0y7TDG7i/F9qvbt0R91VPaveVQ9cxL4N7NdbQFP2jtSu1IzOx1aDz2cV5/Bo
9sxr9uXTnF1D1VI9cS5cQ9VSPdEbzqFy+SL4PVwj1UozszNcQ9VSM9ce7jH1
2nVwIFxD1VIz0AafXutdr3+Q/kWjar0b9Y84UvifoX+Hcro7vBO1G7XTV4Z7
Wr19WzHDPaZeU88eV29l11o7RbtFOVFuVLPt4R5WL5dAF7wruxeUI+Xq/+yz
NdOa7X+y36KZ1+z3K+yrGdWsvlE4N9pR2lX3AIlh/XA=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[
         0.36250000000000004`, 0.36250000000000004`, 0.36250000000000004`], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFmGmQlcUVhr975879FkCgiIlkMSCKCi6YKn+4ACmTWCkX3OLuiIiAGpbS
cUAcgVSFqiwwQqrEAZWoiIqirIO4BpBZAEERHdckDoqgxJQQzaqJeR/OS/Gj
b5/v3NOnu0+f5e3uf/2kiyeWkyQZoJ8a9fXVJJlcSZLlJX1nSXK9+H/Jk6SH
6DtEf79Iku6iJ4suic7VL9G4tWqHi/+wvo+U/GGifyn6eMn0Fj1P9Lmi+4i+
X/Q1onuKni36dNH3qD+jNkkK9SOKoM9X/6LaGvG+J9l305jvHPG2aI23SeZK
fS/XmpeprfN3vfpXtf4Jklkq+gXxdmjMOerfVb+9iP3dLp0PiZ4hmVHS/bLk
J4u+SnJXq00R/ZrkmiXTIPoayWyTzB3Q+r9OrVH065K5TzJTRV8rmffVeqFD
vK2Sv7029C0oQmed/t8s+lIMrzVsFN0m+pQs9KJnh3RuKGL9A8Uvq12n/9ry
WB/r2S6Zivjj9f1P8WfLBrPUjtB3k9pJkqmoH1oEfab6Pfr/IbXeGttqelcS
/SLzoR80H9uu51zE7yoH/b76YaWQGZLEN7YfKt588RaoHSdeczW+e5VibU3V
8I85pfgP/gLLHFuOBv+wUsjO9l5mmW7XXCtKsc4b1S8swv4jZc/FkrtMdN9y
2B5/RH6m6P7ifyX5RtF9Rf9d9Gsa86X646RjpNpPOTv1m8T/QvwjRXeKrtGY
00QfVcTY/urbZfPHFCwv49dF+NvVkp1bhJ3qRdcXsZ5b1d9SxD4+En9hOebq
rf43Rex5Xxp+gD+8pHP8Ut8/Et1d9Gb5z62Sv6Ice5tlO4wsh992ar4HpGea
6Os07ni1c/E1ja3PI5Zvy2MfC5KIVf7vKbmXStH3Mv1sHv76nPq1ecTDM+rX
5BFvT6tf7TW1qH8+j3h4Qf2Laq+I/oP6ndXQe7TmWqfvV8Vfr/5htXbN84T+
+4Ha4eKfnsde2MeJkm8R/YnGX6b+A/Ulrw3ZvdXIBdPU36m2UvzV6rvUVqlt
0Jn0k/woybSb37MU6/lYbW4pdPI9QHPtlM3GlcIPb9C4MzXHD/OQ/cTyR4vf
V+1tj8VWjH9L30eIHiE9HdVYG/MiC3+4+Jfre5vkjklC38fe10E5ZMaqP0vz
/ljzdpVCX10SOpgDmetFN2tva+Qjo0UvEL1W9Kf6f7z+b0R/Kcbx/b7+WyeZ
Pt3k05rrDf13AvsVf734H2SRu8hbg8Vv0tzztYa71PdR+0IyXxcxFr9iPGd7
Z22M6y2Zv0nmf0Xsvd12pu+wHe7VHDdI5nfO3x2WwRem14Zuch15bpDWcLL2
dZG+l0r3z0VfIblLRY/BTqLPEj1J9A2iR4q+WfQFokcgwxjR49TfpDZR9M3q
x0nmJ6LPFn0i8tL/iOgJoq8V/6o8Yh37/VbtJPEvpJ6JfwJnK3pRHrmbOnC8
ZAaLf76+HxB/iOiLRS8TfYroS0SvFD1I9Hmi77cv4S/EArFInSJH4HutzrGc
zRs+i2FZ5Nmh6k91TjzMNtrhNUwQb6/Pm1qaO98tcj4nN7aov6kUNl+odbSq
fzQNP+1wHPXoFvm3m/pqHjmN3MbY1a4F94q/Uf1ix/NG+zOx2mm/ml6NmNxa
CruSi8lvyOH/jFtoHuucov6v9l18mf3sLAW++NTnAQ65Va1B+qZSQyuRH4nR
Kd7/HMfuUUngCPI5OQ5s8on1c/7Uwq+81pedZ2aax7n/MQt+i/Z4l/WikxzD
N7mCs9liHdS+sWr9RT9eE3Q3tR5qY8ynVr/p+CW+mY+686js2aH+yTSw1VuO
+eZKzNXkGkr9ZG/9nH+IqW9nwd+v7welp03/L0nD/qfaT8hnQ71+bMZaqdHb
sljrpizq9VCvk7qNjfmu5KFnhvqBSeg/Vv0+yXxWG3sbbv34LbWImtSZBK7Y
bdyArV63z4IBv7Cdqd34JH7VnEdeX6T1T9KYiWrjvY5x1k8OwG/AhI22H77x
odbyQW3YgvUM817usSw1jjzd07l6qNeNDD5JLLA/Yom4Pi6Jtt37JUaXO07J
N0+69j5sbEH9HecYZp1gog3GSKyL9RGDu4qoZ28UYTtsyBpYN3Kcb1s16Bs9
dqf5+D4xAE7FL+40LiLGprn2cS771br7/2mWubsS4xlLzql3HK20HP6MvffV
HlrXPuvpU43v7j6rFueBsbYzfs5+lxtvr3L+x8/JZ23OP+Sh1uqhfcFnbxXZ
olZ9TRHxscpjV7uG46vsY7r3gj9Od25hvmXey0Fc2OmxLa4vXc5d0LtNo7PB
NjnKe8fnuBd8oxp77u6zf9W+wX2lxr6Eb3Q491KHR5cDD1B/8LmK8XbFGOtu
xzJzLS3HWjudN4bbt5njFedS8u4Y5w9qXaPzYy/HAnrAxeQlbLLT2IRzHO3c
SQ5ZnkeOWmU83Ne+yv2gy/WCcSs9Fnu/6fzA+U+0TR6Xnk3iL0sjJuGzPu5T
kxyn+Ah2I5fQY0fq1ljvAz9vsw9w7nPsx6x/SBa5YGoWGBes+1Ua+WJzKfIH
2GGr14rdNzmfPJmHzIo06t0K55NzjBfZF+fY7rgGb33s+kuuJS/jbxvzoLlX
UcfAIwdqWW1gnoO4CbzDesA+jcY//8qjxnAPbjfeGe6cB6ZhneUi6hn3Zurz
PPtSXRF55HDjN/RQp8hbC10fzyuirnNXxqfuOZjTysFH5owidHK3BhuDfUf5
nKkrB/whDbtxnnuNL19IA9MOME7t43PjHFen4T/4ETX5v5WosyvTsDm2b89D
P28DrXnY9Dn935BGbliShT8yvs64dLzpz9LAM9x7Ps2Dz/2VtYz2mnfr+yXt
5SP136wEPdq1usnxRVzONk1twc7UhafywJBgSbASuA3fWZEHThvimsD9B3+4
Lw+aO9P8PHyIdwIwznnGL9jvIp8puYF72EDXCt4ajjXGucw6P68JbAz2532i
3m8SxPrl1knN4Q6Pf/Le0OA3B+55YG/mAA+wHvz5nXLECLH7+zzWNsj3V+or
tXVQETY58KZSDR8j9qmZMy3DWU6xv5FfGm23fkXo4c2Gt42pft/g3WKK3y4W
54GHwcXUz/Nth4fyoMHF4IURtgn1l3ikxpM7L/RZrMojrof4LniB7fBYHjQ4
fadzFf6wNA057o6p2ofi3eL7EP6Bb4BpiQH8/7Q8sC3vRtx1PvdZ0DgXzoq7
0f6aODPuMPCvlM7OIvi98sh15Dnm4z4xwfTaNHLmBt99sRNxTw5HfozzHOfH
2Y313YQ7CmfBOWBz9trhHMV5c+74CPcu6Ks0z640agfvB9Qu6gq1ABwMtiNv
g20aKofwHliZOOT9gtjYLB23pYFNeJ+YYYz3dhbrRGeT+3mmqVO3W89gyf9M
8n/OAneCXbp3CxwJntycxb4n2T7UB2xFHeEtAd8hFqekURe2ZlHDwSWsm3xz
iXMvbwzECrHFGwN2IeYes89xj0mKyJvt4v0jj/zSKvqRNOL2Xsc0NPEIHh3m
mssdt7lyCGNTU8lHxAUxUXcwLpL4npeG7FKt+btZYDkw3eP2dTA4+uY7VtvS
WBtrnJtH3M7h3cNvGM2uddQ0YvlZ3/FbHdOtxgOcw91+g+0yvjrwvpGH7z2T
xn28zjWKOzX1ijpWctyxnv/kkcP/nUcsXO48tDENu2G/dY6DbY7pNuMfzoQ7
EedC7G5yHSa+242VyIubXZd5KyKHkdueT6PW7HXe3eKa/qcs9HJXfiIPvdy5
mQcf4162IAssdlIWGIO61N8Ye52/wdp8U7cK10Pq49dZ4K1vqd+Shb/hd2AS
fLWH8/cr3iN3K+omWI53QPLpjjTel6nZ76VRd6gzxG3FdZjvLx3L0E+nkdPI
bbuy0Pkh89sH8IWmNPD0I1m8C1PLu8S7zvtl3ydnETfHZJHXBvjdqSGPuN5S
hA7eisG3+43bGdPXdZ2aPjsPH5ql/hd5yPPGPMAy6MSX33FN4W2qxfRkz9Vg
nMX5cXboWON51/jMuDdf6RjFH55KI6dxx/114btHHvFzIMekkSfIF+TL94qI
Hd6fHvT98UBO8xvIqCz8nXwHn/d6YuJXReAM8tPkNDD+bt9TqG/cL4jj3q6B
+AdYmHscOJwcz37x+xOKeB8eXIT8Yo/B/mAPahG691g/du5nG3KWnMfsNHx/
u/M578VglDfTOAPO4rUi8C549TtZvM0Re11Z3JX2+O5MfgD7kiNOyYPmLe0I
YzZq4v8B6cZP6A==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlnlQllUUxt8Pvs/3vReZ0com2mmmvTGXbHNrsw3Fcps0FSTSlJBJCDPb
Zmqm/oCaZiIlF0IxVFxQUdxKESHBMDEx0iktrJnKpixbtanf4/GPM5znPM+9
73fPPedc0nMKRs1MCoKgEotjV/ggeJ7AqVgQ7AmDIMsFQS5EGrHJ+GOxx8Ae
PAb/MPqH8ecTO4LfGQXBAPAnrN/E+mNYD/BSbBL836z5F20+eDDcm87WlqIv
A/+CXZtke8Th3gnPcWhKwIfAyXBl2ED2WwLeBR/jb6+UIPgTzdNw3xNrJDYB
O5UcBLMS7IV+u35TzDQn0BaDU8Bz2L8YfATs4BZiw9HvDm2vYvBf8N9yvl3s
dyH6/nCZxEbix+FH4F8Nvx2/hu81sH48ml/R/4adB98DO4m/AzsaWUzcTuxr
8HqsLWZresJtZv0hcDZ7Njr7pr49Dz4Hfyv2OXwOfDP8FNYfw7+gWxD8wffv
JzYM/Rk0w/BXof8YfySaavA92FD4n4jdjX8Z6zfCNWGvgJPZI8FZZoOHsLYK
a0SbAV7gbI3WShP3ViOqlXHgQnCTs9+u37iFtbO8cVXERoNbveV+LLgFv4TY
dLS1WB/l2hmnHNTDtXurhbXg/fhFukPVI7gIvjs1cB36cs6fip+OJo3vzSU2
FP5e9L/HLHYVXIa3WtKdH4af6O3uVbNHwUvQZyofrFkBvk85i9se2usDYrvx
h6NZDF4Jbo7ZmirwDGwm+i56q4LzTAPnncOh6gn9RaoX7D/4PGIF8NXcbzf8
y531TinncZxnAngyfE9i4/HP6Ez4X2Cpukvsh5j12D/4d2GD4hYTtwb9HvxH
0K8EHwCfBpeAb+DsfZz1bi7f74tfB78XPBr+S35fYWi5biB/nd56Tr13dgag
Xx5arkaAK8G14Bbwo+DV4PW6c/AocC045q23ThBrgkvjG0/hd7F/F9zr3u5a
d/yG7sZZrlWDy9CXO6tFzYCl4HrWl6uXNH/wW7AVydbjz+oskeU2FdyKfwvr
2/Fn871ybz2iXkkH3wS+0Zv/Gt94gPUVzs6mO6/WbIA/mbCevzmynCg36sEh
Ogv6/LjVwHT8caxZlWQztQD/KzRjkizHG8HrnOVaOdoQ2kzRbOnNnoO95US5
UY1fzNpB3rhS8EPo70TfK249fIfuMrKzKgdt+N9ENmv2aX/1emSzpBNch7/c
WW1oRqzW99l/IPu/SywjtJmv2a9YJlyNs7tVTa2Ff9tb7agmT4dWo6rVB9Fn
wS1zNnvUIzXwa5zVgmpknWZzZLNRM1CzUDNbs7uFM21A+ziaQnCRfpO3nlBv
qIeOw/VHs193DT/Pm0baVuUEbmJoXDE235vJ3wtfr97y9lsXsV8m2n7EPo3Z
N8vgUlJstuiN+hl+Umi18xz2HnwWeC7+C9hivTesb2Pvz9jjVmc5Vq4bOOPx
yGaqZqt6NDe0GXV2VoGfDK3mVHuaOVNDu2PdtWb6NN23t97Vm9gB7s2e3WNW
k6pN3ZnuTm/UjNDeXL296pEnQusR9YretO/wt6pm0B4gNgD/mdBmlWaSZlNL
aP8bvMoeV7J/c2i9q/8ZksA7lS+0HcRudzbztF4zbyr4fTQvJUyzA/wRtg//
IPrb8N9yNsvqsEtZO4X9X1btgGOR7am9Fatkrx+dvX1607ehvSayt1c9p97T
G6i3UDnJjuzN0dujGZqP3zeyt05vTin4oLdv643uUK9FdlfqqX7wC/X/UcLu
dJuzHClXc4gt0PsXmi+NtKoJ1YZyugXtJme1qBpVrarGVGv6nyoPPxt7MWE5
Uq6UE+VGsQrw9d5yr5ndjrbOWW+oRlWrqjHVmmpwkbcaVC0qxx/CXRLZ26oZ
q1m72VntawZqFmomaDbof6bzwf8DWD5fzQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.4375, 0.4375, 0.4375], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
            "]], 
           PolygonBox[CompressedData["
1:eJwllXtol2UUx5/az73v806hEISsBMW0i+i2ruqqbS5rRsvUkC5zuU2FwhlK
VlDMypRsloo63QiRiDAiJN2W1SroD1dmSs2cmpfp8gZplz+66dbny/ePA9/v
Oec9z3nOc855R9YumtFwZQihEckhfTGEM4Bp4FPg7WkIa/JCqEbWgk8hpdg2
wvvAvyAPwzfBT4M7UuM56OqSED6CrxZHNsHPEfM88R/Efhb8AzIVfAzdj+Cr
kFvhnYNCOJCFUMT3+0lwO/xr+F7s92E/gv/34L/RXZMfQgW6efi+hyzJ8zer
Oe909F105hnwu9ifxd6BvIb9At8PEPss/lOw/QUfRrxh2Ovhr+JTcUUIu7Hf
JE6MVcQagL8CPoSuHd9ZyDJwV3QuPfh8Az6JbgO229D1pj5TZzci2+AfIqvA
M5G3sLWlrq1qWgvfH31X1Wgf+Ffyu0S+0+Gl+DYnfhvVWLWegX0XthJ8ZoL7
kULusx771Xz/duJcdabO7s5c6z4JeE907qrxt+ByfGqCa6RaHYh+q/vRdYML
kRHwLuRj8BPEvwPbKPgG/J+E3wkfDW+Gz4WXwMfDt8L/ie6VyfB/wdXY74KP
gW/GPgf5BF4NrwE/hGyDz4ZXyY7/RPiN8Fb4U/DJ8HHwLfAa+CT4zfB34J9G
++qMXeBziWu5h/sdxZ4iL8Pz4RFcgrTAq/jmbvAX0bEVsxP8J9+vpz+68T+B
/Td4L7VdAH8DvjO6FrfjvwP8eXQuyvkzcB4+C8H3oMuBRyIvwcvgo8CT8CnK
eeaKiV2WulfVA+qFggJ6jPNaeOMh4DHomvAdjn2s7s/3dXz/E7pFid9Yb92C
7rrUOSv3Kdj/wF4Ib9X7oSsCPxpda73BM4nvpLvpzIvw9ui31Zu3gR+Pfqvd
8IXY61LH1kxptn5Hl8O+gzsMx9aCFAf3UBHf3oLPm/AK+Djw/NSzqBnXrH8V
3Tt64y/BgzUT2BvI6T9iJ5nfrkFvmPlN9baa4fPYe4jXhv8KYjRGz6BmUTO9
HPvizLmrZkvUe9G9qB7uAL+IfyX++8i/EPwdPu2DvAO0C8rgH+A7AV05eF3q
3ace2Uj8tZlz1Z1194PRs9TLGT2qX+JeKea+A/hej89KbO/zTSd8KTIb3IXP
c+DX8W/Keadpt2kGNYu6Y7t6EV4ZvNNPgo8jfTnrjoEPR5/9APwQ+OdoLJ+j
0TkoF+2wofDSzHdTj9wLHkrPXc73zj6u/Ra9K5XTcu2b6F5rRdaAJ2TuLfXo
ePBjiXejdpR2VX/02/Vrx0bvfO1+1WCZejnz3SvR1WeOqdgXyG8IuCp6VrUj
nib2DZlnQTM9Wrszsa96Rr0zuMCzo55Ubz6Pz8HgGr8Anhrdi9oBC7Bfjs5N
O/GSbNGzqp6dj70x9S7XP1P/ztrMuWonz83cc+o97Yhc9D9E/xL10F7sJ1Lv
atVUtS2P3g3aCfOIXxq9K7Uz6hP3hHpDO2Iitkcy73714HTwtalnTT2r3m1K
3Lv6R+pf+T+3fRSY
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.5125, 0.5125, 0.5125], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
/H/QAs9QozM/v52IGdk8TZ7Du517/wOM+X3c
            "]], 
           PolygonBox[CompressedData["
1:eJwllVlsVlUUhc//89/ee26NGqcaihqhQnhQQREcAUEThQcRTUTFRArFKYoK
pS0JUTuYGKME41CCiUYBRzTREBPEVn0BEQRERcoPCKUDxYAWhwct+q2sh5Ws
ffbZZ9hn73Uurl00+7FiCKEVlMDaPITeQgiLGVwHrwUzkhDOwr4ffioyCfsF
8AH29WkIj+D7leB+fFMZG4cvYWwyvJGxatZ7Cv8y+LegC76Xsc3wk8SPZe5N
4NXUMYodzxrT4Dfm5u3gU3gTc0YQu7QihGGVIQxhb8Degr+M/zXsV7A/ASuz
EHaA9cNCGI7diG8ne+5n/y7sbfDbibmB2Er2vA2+gjmP4puI/TSxTdFnXw4a
4NfgfxBft+6AvYk5y7FPEPM5/BzGuuGPM3Yu/GrmPwD/hfk/YC9kzvmcpw3U
wq/D/zD+o/i78TeD5+A3s0YrvmvBQ/h7GTuArwU8D5/E2Fji/8E+VvCb/Bed
A+ViFWOriN2c+mxN2oP5Cf7j2BlzIvw8Yo5gP4G/Cv6hcoCvGtTA14OV8FHg
MviP0XfZR8yu6DvoLlVgAXwKWAYfYL3p8BZQid3HEZ+BbyFmL/EbWe8qzjaK
Nf9irRHYY+AbwOuJa25e7hpRrSjmG/hLmWtFb9xO/OW5zzaEfSl8PpiJ/Sb4
LHfNqnY1tgD+R3Rt9zH/K+L/xF6C3Y/9deoaU62pJmbBl4I58OHMWQIfjM5V
D/M7mT8H+w3s08Bd8I+Z83LiHpgCfwu06G04/7/KHThAbD/2YfgluXOtHCgX
vzM2WHJN/wafnzm3M8AE9hvQHRL3wJX4OsGz7P03dgf8VmJWYJ/CvgX+PTjI
egsZm5T6zfR2Gtut+gft+CrALL0n+AheDeZF76m91aODqXtAvbCJMzSw30ns
J4vWjC/xF+nJ+gr33C78e/AfLrkH1Atl7J6Se0i9dCg6F6px1XpXdG+VWe8n
eBXrpTo3/mbW26f+LXiN/cofOB1+JpiLv0f6xdkWMf8i1Qo4ptoHU+FD0W+h
nlHvaA/tpTP+DH8799vqTmukP5ljVdOq7XvBGSXvqb2VU+VWmrIDuzd17taB
JuIPRveuzqyzN6fu3ZFgAD4R1BWtiVuja0y1djd3aITvzp3rGvZfzN6HmH92
0TVXh6+cuvb0hnfq7tKDkjVF2tKWWkukGa34GnKvvQZshL+Xu/brmf8+/J3c
vaGeeFe9RUxSsoaPhI/O3avSBGlDX+ZcS/O+YK/+zNonTenAPpr6rnoDvcW2
3NoqjduuXKs+Cz5zH/x4tFarB05Ea4a0QzWgWshya5c0Slo1IXNtqCfUG7PB
5MQaIi25MLMWqiZUG/dFv41yODdaI6QV6vF6+M7Mf4tqWLUsjZJWSbPrMv8Z
+jvKnO87+PZorjfUW6askSbWWGmt/kj9lRqrgK9mjQsKrqHR+lsy/1X6c14k
viO3VivnnfAx0bUtDb1HtRj91ypnyt045tQk1hxpjzRQWqix8fA9qXtbmjAd
+0j0XyMNkha1Za4tnak18x+ov1A5vEP1l1pLpDFXYG9NrTX68waYPy2z1kvj
pHX/A+ozJv4=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.5875, 0.5875, 0.5875], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
WI+tl7tP5X7/A6zlgcU=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVmIl1UYxs/4X77znZmy3NE2i+wiL2RGk8osCJ2/MuKCzowzBiq4zAhF
aTmjJZHbWFQXpZA2GpRL0XIXlTrTXhi4XkQSQQlqi0vNuCQI/R6eLl54nvMu
Z3mXM3rxE3MeHxBC6ECKyN4UwpZSCBMhD+UhpBjCiyWv7UNXDW/D7iX4e/Az
8K8KIVxCSuBOfB4Ar8N/DTiytgnbjcg72I9EVuM/CD4K/Br6p+AT8XkdfBb5
GnwFKYOXYzMD2wPYLAP3IO/Cy8QfTfyfsxAehrfAG+E5Pl3wzcgebH9F3wBe
iL4V/VH0HxE7wQvVITQnx34Em/ngm5Cn4TXwm8G7k2NNwH4S/nfpTuAzrN0B
noZU4N34TGevXuLvIv4r8Aq8Gv9V4Bz7GvCtyXfXe98CbsDm/eA7zIVfh08h
IUuJ8Ra4n7WB5RCexGYesRey31L2W4YsAtdLij5DBXwAm258R8DHwg/CdxZ8
ph7wv8QbRbyR8Db4tui3764KYSs4QzZwlqusDcd/M3xcwTnaBJ7J2mxiz0Fm
gd9Ozm0d/EH4c/CT2Laytg58Dbmt7Ddox78WWUW8ecgL4CPIh+BTyGHweWL0
Easd/5fxfTY51g/4r1Xuk2vvfmwmYzuXNzqEroW1TnR9SA37FYjXSLzPkDcL
fpP90TWgWliELAD/g1wq+s66+/r4/9mQFvA59L9V+UwXZItcLbon1BunM++t
nCg3fcjlomtetd8Pv1J0Tao2VaOq1VakCdzFWkOV33gLeITyXXKPDAc/lvus
uqPuqjvr7jrDl5l7QL3wDf6/R/egevFjauh28EbtCe9CVoIvELOK93meeFOj
e1y9rjN+Qby25LdWz7WDh+WuhR3Ip9j/mdn3MPpfkntUvXoZGYrtVNbq0O3E
Zgp4SG7dduST6JpWbfez30V09yXbjtHMAf+dW6c319uPx+f4ANeMauee3Lmp
QRZE17hq/Vv4H9E9p967m3i1xDuRGatH1CuLc/fOT9g0oZudu5bVg+pF1aBq
UTPiGPgiMYq81znOMA3+Xea3Vk2ptjozzxKdsQ5+KPNZ1HPqvebcud5P/Jno
hhLvmeAcD9N8Ur+AV7LWj74+ei/lSLkanDyL5DMoeeZo9mgG9sJ/xKe25J5U
b05IfstXsR+fnCPlagbv+VfmGaJZoh5Rr3TkntWaaXeqvjWfyq7J5ugeVC+q
RzvwvzF5lmlG3qDejq61k8gk1V7mWaI76W5ak04z7Q1086N7U3torxXRs0gz
QrPiLHIe3++xH6t+jc71EmQM52tKntUfsH9j8szR7FEP9xJ/R7Stan5D9MzW
7FZPfo6+Ev02yqlyq5pWbevP6clco6pV/WkH4U3RZ9EM1ixeHp0rzVDN0hPJ
vaU/bzW6e6PfWnfQXfQn6G9Qjh5NrgHVgv6kJfD65LuoZyrg/wCmlfAo
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.55, 0.55], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
53TiiXMx7Z5kOcQI/9XZj/8F7O4mJg==
            "]], 
           PolygonBox[CompressedData["
1:eJwtlVlolVcUhf/cm+t/7olD1Gi1SZBiQalDHzQR+lSHRK22Vmk1Sh0o2ESN
iQoqNLlxgGqrUDAOUGstEcQ3x7YIQimCRps6YCgoGB/qQ0udjYJCqX7L5cPi
rn32Ofvsf5+9133r8+Z5TZkkSQqgGJSFJDmYS5I/s0nyHF6ISbIY+zA4A9+d
T5IeDpzCvoB9GnTAPwMt8EGc2Q/v5vwzeBP778B/5UwjvIs9P+Ofy1prmiSd
0bH6cvnb+H/B/gH7I1APL7B2DP4V/jb4F6yVEWsOayvhQ7njEPw68f6Dr2VP
I/w39qyB/8Se7/BPBvPhX4KKjL+pDb4iOpa+Qd8yDaT4q7BnwFuJsZW7x7HW
Ar/PHb8T/w9wmfy3Yy+A7wTr4QdAPbwSNMKrQHfGa/KpBq9qgb0a/jVrdfDT
YBvxhnBnKXdvZs807EJwrQrgQ/gYcBHfe2A7/qdgLLwW7Ievwl+hWKAefgd0
wi8qZ/yPsC/Br4Cr2JPBrKxjPIFXc/9o7t8LjsNXB39LK5gF/wA8ZO993Qkf
xzcMpz5d+B+oFqAYvha8A58evLcFuwa+GyyF7wLvc9/o4Ldqwj6r98GeDT/J
/edks6cXfzN2O3YD/vKsc1bu47n/Te6/jP04uIfUSxew7+pbU+emN9PbRWI8
LOJXPQcfAB5h98MeCC+J9p0BUzh7JXVs1Uy10xvprXKgDrsr9V2qsWpdGh1r
EzlPxbcO/Jv1DOTJ7R/sHvgS7WHvrdSzNhV7EfaN1LNTjT0T+3bq3v4YexV2
nxLmEvvHPswafBh3ZosdMyF+KXYeex/7T7B/YIn3ak2+MtYeF7nHhsK/J/5B
fBs5f0T9gj0y4zfWW6un1FvL8O+VHqSeRc2wZlk9qF7UmbvwXeRwM+OY7fCF
wbXaDD6BT+DMiyL32CT4yehcNeOaddVEtSni/N+p30BvoZ5eGdyT6s2JoAZ+
FLTDR2ktumaqnWp0nbODsfvn/MZ66+nRsy1NkDacj+415azc94COYmuctK4q
OrZyVu7SAGlBA2s7sXdEc/Wserc2OjdpiLTkU/UDfAprC6PfWG/9P/t7yK8u
2ifNk/apx9Xr0pwW/MP0hjm/md6uIVobpYHSwv7q2dzrnoZXSh+xe7GHwzvJ
aXnOPRjIfUG0Fion5dYard3SRGnjDPY/yLimqq1mWLMszRkL7wDN2CdAG/nV
gC0Z5/hGtAZKC6Vp3wTPgGZBOfaL1jBpmWIcCtY4aZ3eaJBmM1hbNdOa7Vr8
WzP+pgr83eqBrL9J33YvWNukQdIiaZ60TxqxIrjn1HvSpPnBM6RZeoH9F7E3
sPZt1pq0J1jjpHXSnNnwUcHaJA2vDtYwaZlqNDN4ZjQ76pkDqWuu2g/mjvJo
jZPW6T9iG3v3Bc+S7tTdI/Ludf2H6b+sN1iby1l7V9oWHUs1Vq0r885d/9H6
r67Iu5f0n6v/Xr2J3kY1uob9EvAX9Z8=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.6499999999999999, 0.6499999999999999], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
6B+LAleP
            "]], 
           PolygonBox[CompressedData["
1:eJwllEtIVlEUhY/3V+85V9AKkh5aWpE2qVGPSfMoAzGCZkE1sPCVNSqVBOmh
E+0xqQSVCIMG2UwnlWlFT3tQGeSgoMKKwsy31rdZg82/9llr73P+s9e5hQeq
y6oi51wpkU5MeudeppyLWLwHfpg4dxbcAfkIfIrYn+HcDdb2xs5dIbrSnGuH
Px+c20k4uHJ67AJ30GOUpRr4SvKDxKpIPRrpNQ8/jDYfvpReDxL16qXnIHgA
PjeSZgGcT30neXOmcz7LuRPUrEc7QL9h9NmstcNtRDMBN0PNW2rz6Lmb/EKi
s+2AXyB/YRrqm8nH0OZQvylSj0XgxUQbeRP5EnBmlrBn7T21k7H22k5kcLbv
9J/kLHfIt9CvOdF/aWT/FnAr+gbyPmIrfD0xjraIvA6uyKv2Jj360f+LddYR
Iof+ecRl8BnOEHOWNV696okCcCUxBl8AP0v9E+qn4CJ+c9HXxprHcc5TS6/6
WHs3kTcEaUxrM/9Br4S8lV755F9ZvxjkBZv5VfJnxDT4HPwv9Efhj6VrD5t9
v91ppBnMes3YZn2NvAJ83wubxrSDxPWUZm6zX0G/uZQ8OUH+22tWtufzWB40
L1pNFXgf0UN+hD1qwK/Rd8NtQP8KfJdIg59lbTm9D6OZB5egLwnyvHnf1laS
3050N+aBHvBq1roj3YndzWfql0Zam6N2hDw7kkenvTxqXjXNJ7i6IC+YZ0+S
7wnyZh98WdBMbDZ2Zh80Y5u19fyI/lusWdyyRwtfbTXpuvOaIA+YF0bxzxfO
W+zlJdOYtjzWf7c7tbv9Cz+U0p3Y3SxjbSaltXHyQ0F3aW/W3u5wLO+bB6fg
/xAtkd7QENw28seRPN4Wy4PmxWLyCrjNXtjeiL0VO6Od1d5cIVyn16zsTXSB
f3p5yzz8lH5VQd8S81cAf/B6e/bNeRPrG2DfAnsDJXCXgt5OL7HWvgWJsP3H
d+B1XndvZz6N9j+YQ7N2
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.75, 0.75], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFlstvVVUUxk8f55x9Lok49JGgpTBwoHBlYPkTLKKlcL1tJwI6gESgkjiG
+iAICEIjOlGh5VEFEqgkWjGCr5EEMBRMRBwBE3ww0BYxgt+P9RkH+6519157
7bXWtx6nY+W63rWtWZbd1GrTGtDPZ1p9LVl2UOt38QdMb5g/lbJsr/g/Rb/S
GhX/tWjZnmXXxO+VnsE87oyIvyJ6Vauhu19KbkT8tOiE6B7vHymy7LBWt3Qs
F10m+qz2F1VZ9qT47ipk4dG5RjKrxZ8Rv1S0LtmjWdiHjsdE8yrenS6z7AHx
+3S+SvwK7e3SGtf/h2XHpwrAbNGV2tuhtVBrjvQ/JDpLa7b4Dv8faom3junu
zCpicqeMd95sD182aX+7+DnS+bhjiT1N6egrwg5ie8D7g7p/WXt9ZdhCHIkh
MdjuOLwkXce11yuZEe0tao/7T+mt/dpfXYZd2DcPqndPaKW2kO22PDZOOObn
Zcty4bRKey/q/knp6RFdW0ZcG6J3JJOJjop8lIc92DWg/f4isDxUhBw5saEl
cAIjfG16nzcfyeMM+8gZ8GpYH/y0fN/fFnZ8k4L/NkVssPFn0Y26O9/xPyd9
Z/PQ12P7/0mRS/g86jwpi7h/2L5gb91xOmos0InN6/XmsGRPt0YuX3E+N1uC
J26Ppjh/Q7HvcP5cq2XZ4jL03TLudefYiPMI3D+vhR+vi+ay42Zr+A0WU1pn
dXbbvhOD5H18WJsiB9eL9otu01qgVbUF3qXW7TJqb1j6d4q/KN1dKejLOp8U
fbUW70zUwu8N9h1/V+fhJ3lDLL5rjTojfuDwdAqbe1LcBY9fsojnRuPyt3sC
vYFaWuE4vJOCf1923V9FXtBLOp1L5DHvDVkPNdrvu/g54FrivN/4NWw/NhCj
88Z6id74WHvrUuT4ecf2wSrwoA9tTaFzuIw7yIHNBdmw2LjvKsOGLcZ0gW3o
Nz9u3+lB2EDveq6I/zvbAxfw+VAyXaJjLdFfK+v5oIy+8677z0LLThijJSny
9m7OOqewg76xwDw2dPkuPDjjA1ifMI7gSa1Rw9QbOF91fhfOHWKOTYX1zzfP
/jOy4xS9NsWC/7WMe8kylfWgoyoid8mV5Pwlz+kfx/LoafTUS3nUBrPioPOw
y34SK+qbe9T2UC1y8fkq7Jrf8r+dB83TY5gR9JnR9uiV9D1qrbA96Mxtzwbf
B7sfpP8LnV2shR+FfVnmmQSmzIW5ngXkLf9nOQbkLnGY6/3j7hvkA/6y1+n9
efYNv8jlc+5j985QfUhmpuhvZZxtLqN/H3YO/BdT7N9dhC/oup6H/fQ+9H2f
B07crRvThnv7xlrcPWcZ+hd9jHlIj+Qt+uch92+weK+M3LwluqWM/N5cBSZr
XHe8jQ2j7ufgzntTrs3S/Sy5Hvm/xjKdKfB6u4q8ID+oYWQry9MX0Ys8cV3u
2ILRUs8R7s32XWKAj8SRuu83XuDXYb7uGTbmuQQOJ/1dwRvkBvcG3KOwrek5
TmyavrvNPYq6nCqjn94zI3oJsaWfMNvBlzNwAwPiv8N9khrOPHexaSrFO3y/
UKvkE3qQ63KvwMamc3jQM4JZQf2zT3zqlh/33NztnKEXfZJH7V4W/SmPuP2R
AsP7qvAPn+/WYy3kz9QC6yP+ZqOmmTG8Rb9hPlIP6MPGMX+TJPeIG65PanOy
jO+DH1PUNvn0guiWKmbxVp2/Uov+/FotdF623j3+5mh4LvAmWF90/8Oeps+J
T+F6OWVMO50D5PsR5zw5eN111Ot5x9xDjjjs83dI3TrRP2l8se2SY/iXZxCz
iPMLlsHG07bziRT7b0mmt4oevVR0k/3F70vGhRj+C8fNhbI=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlMtLlGEUxo8zzXzvOwPZokXRIrRatGid/0FUSDURpKuSFg2EjkKrNklp
OtpFpctGoyaDhCgp6AYlVLtQgjIoLAiqRXSl1Cy138NxceA855zvXJ73nK+m
qaXQnDKzLcgyZDEx+542+4Ysj2Y3gtlp9CbkIr4upKHK7BkfbcJXh0yij2bM
nuTMroN7iW1A+okdQBrTbpNvgJgSsZepNQj+BP4sTPF14BbkFr7arNk/fMeR
ffgnsB1DvxC8l2v0MEjuGeQDuEhML/4j+OvBL+lpM3o3/gfgdmQEfDZ6rQpy
Dv1M4rGH8V/F/xu5hL5I/ZV5z6ncH7FNJ96TelsLLgXPoVzirBp9G7IVvJFv
6og9iozTexFbO/oXcoyBn+N/B95N/B58N7HV4zsQPXYKXEqcI3GlnNvxVdPT
EPUT8GziNVTrHvVfgN+DpzLO4Z/E31BvKc4XwCfAEXxHnBI7iTzM+BvoLeYS
51Y5lKsIHiZXIzWr8s6JuKlg+0VvbcG52IBtnvjH4Ar4Ef5DfHsQuYK+F7/x
7YzmSbttGn1V9Fzq4RXfvw4+y0nm68DXge2t+Q50oj/FP5x2Tps1X97fRpys
QB/P+Wz3sb0JzrG41s5+JX4UWz++/ch59Lng3Kvnv+g/iM9m/Y12gOeDz6Ka
C+g92ml6a9MM4PXIKfAINcZyvmPatT5sZWK7o9+KvilHn0mzaWcz0W9Gt6Mc
ndE5ElfawdXRORf34mwNeCjx3nWTus1dwW8jEvOTXDvBsymfQbPUgu+m/CZ0
G13Re9MOaBf0jb7VNwX85bB0u2nnSm+qt71NjdawNGPGd7YQnQNxoRvTremG
dEv6J/QlvqPaVfVQE/xN9Db6J/Sg/weDF6qx
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.8500000000000001, 0.8500000000000001], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFVUtsTVEUPfddzz3vtn0JxvoY1EMiaUpREm1SExO0Q1XCGEVMfOLTj1LR
NjVggggxKI0wRlrmGPhGtIk5CSZaJNbKWk0HJ3ufffbZe5+1P2flwZ7OI4UQ
wiRWitWchNAAwTfwD8A/xHoRRLl/CX4D6DhWE9bXPIRG6M9lIXQUpUed5djX
weBe7I9ApxNnh0CfQLeCNQOdA5CNe38X/FxBe9qYsN8nqfiNWNdjCE9BH4N+
iDp7C9qfyM96rBr4/bUY57BTC/6Z7TD2545tJ+6tSHXWm8gm39QO2VSi2CqO
5Q34+4jtYFGxPzMOtEm/xGsK/J+CcGu2vXHbPIlYfhf1hgnjybf0+Zx3q/C7
CqsF+1nb4Fvon5Qx8E0/sQawvxr1vhbQs1H3T4Cuw2qF/FIm/zsKytEG54q+
GGOr88t8MS+MZyZ33nF3Bn5GFoWwDfsrUfRzlL1G27wMvT2g96Le1DFvB3en
F8v+F/PEuAf2J0Hv4F6xJoTTkL/H3XrsV2eqlzLeUQX9HkRXmz/k+jmaS79i
Oe9UXWfEh3JixHv11vmE/SmszYnkVftiTsqZ8sg71O9OZKfGd3leZ51a812J
aK3lk34764q1QTnxmc2EFfvjeyZsiTF90D/rlfXEumKtXczFD+R6B+NgDMzz
L+edi7EyhorfyH1nVO/8zIX3F+NPnvlg/lhvlLMWmNsZ6xAbYsQ6/Wh+c7Kw
J06zRfGU38xUBzfgc1dUvf6A38FSCKOwewl0P+TLwK8FfzSq1/5C5xj4leD/
5Yql17XJOXDXs4DxnLYvvo14dblf2BffnIsu1/QS+GlLVTvEsSFV/w6m8sVe
ZV5WmB+B702g5zPhRdw6ouqCNlhLjGPOvXc21RvXe8bwnP3I99BmD3vO/Uv5
61w4EA/GxfhaHOdS83w/Yzsepct8sJda3Ndbo2YFsWeN3XY/P4rqN+peydTH
vEtMGOMfz47tjofvZGxtni1l83U+b7V8PsesL9K5ouL45BpgLXDWkjKuvlw5
68+lyzvMF202GIc62yc/nWq2brLOduuRr1o+EhXLraizdueRPbTTs/pM1Hwu
lITfrlQzvd02aWcsU11NuNaee16vKQn/fVGzhD07mSzklXE2udY4J9njA97X
e2bM12K3dYZgcww2L5ck22v5rPEbcK+NepY+9v81FBVvu3FgzvodS9mziXfb
jCGxTEvCMQEdzjVrD+fyTx+sBfZUX7LQ+/TZ67j6HVuze2nKvT+f2y1RObyQ
adbz7qtcMU77XzyXye+wa3/QPfXWf/E70LzkfOaaAaz7st9Z8X/KeMdc80P+
R8ZxtztKdzhqv8f/zAn/caOec+xJYtXo/5h5S4xPTUl9wn65lal+mQ9iypyW
nVfOLPbM7qhaIU7XcPYf+cEjjA==
            "]], 
           PolygonBox[CompressedData["
1:eJwlkr0vg1EUxk/ftt7bNpFgsdFBfEVi8pkwW1RfmwTRXVtGkqK+Wx9NDSwY
JAajTdKBf4CJbv4CurcWv5MzPMnznHPuOec+9yYzuSDricgwiICDuMhaVKSH
YBHuxUTeQiLfYZEwPE8sIP9KLAdfcSKdHOwAA+QDXyRFbRJskPuhpkX9BPVT
6DswGbIzg9Rn0cfU9oI8PM35efgo85vKiRXQLXQA3/Ot13abSDRBP/QTugau
yVdAf9hmXMLfmT/D2QrzPuAXxNrJN7jrGfwkZrkl6kv0GkJ3Raxmmfwpuoqe
pceIszN6NkFtN/Nf6PkQNc/24etgLGQeZeFfznbdAhHqp9F1zzxRbw5BBv4I
anHzXL3X2BH8k/rnsPXcYWYiZm8xjo7Dy77trjuWYraT7qYzzvV+vu3eBxrw
BWJNzzxVb6+IFUPmURnd8s37OXALTzvzXu+od11E/3nWI+XszfXt1bNVdMnZ
W2jPKudvnPXSN7pH7/q2u75Rgdyms7+if0D/Qs7ZX9A/oH/h17fddabOVg/V
S/Wkjv4HbUxTBA==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.95, 0.95], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNkztvU0EQhce5vvZeu0gZytABHS6hCf8AJXQBO4KKV0JFyUNIQZF4/QL+
BEhxKvMXEolHhU1FYyldLCFFYr6cEynF6s7uzD1zzpndy/d31reXImKUq8p1
p454lMFKHk7z+yD3qxmPSsRy7q80EV/y+zjP1/J8M+PnuXZbEXU/ot+OeN3V
/+AcJeZBJ+IWGFlTZa7dVTzuKN7vCOPXknDuZvww1yTjLf9DPXnwB/mdZ/5J
LVx4vTGHv5X4XYd/5me14q+VcsQ7Pel81pM+sNB4mlz/5TrJtZ25jcw97anH
25Y4kDsO6UI/NWilBp3gwGu90tmko7qh9aJ1FspRA+7VRno/p8eLUA099ip5
QQ24Y/+7Zly04B/n534eOP5dq4a+fL+5Hmz8BB/PNu3biyI+rzJ3237Qa24d
q/YeH/EfX/GX+FJfOO+KvIcfvbgjG74n1MLhjFdLM6Mv94l4WLQH7zDEZc/a
6TlzL/jjEdxaLc3rT8gncKl/2RWP70V56hae7cLzg8vUd4M9PjHTn0X92qmp
10h/v5HPle8qGriX8EQz2j8U9d/1+chcDt331Dw/FnH9VMRhcgFv5Hr6sD/2
2xn7XnFHli/onLh+y/NGA5qIz3AaveGlRnrQ9aNovtPzGdc6x4cTc6XvwDMD
50bR25vnW3hvvcycPec3nR/4/TLvFd95FvGReQ6t617R/buW3P4D2+qYdQ==

            "]], 
           PolygonBox[CompressedData["
1:eJwlkDsOQWEQhYdL/PfeQketZAfYhKDzSqi8FaISj6gULiuQWANL8eqUGovw
TaY4yZl/5pw58+e60+okLiIZkAChL/LzRHpJkRg8ciIN6h1owbcpZhh8IypR
n0CT3h7M4QXfZtOgQ30Gfc9mjvAN+ip8hP8xEJmBOjyL3ygwKK/xNoGXne1a
oCnCI96G9K7U65Rl1Kwfag9+Z+YLv4GXM41q9YaDs4yaVTOs4G1nWTVjHv0F
z4FnmabsejjbpZ7q/XTmrX+QDEXGgWXVTJot7luWClg6u1Fv1T8N6P0B/BMq
zg==
            "]]}]}}, {{}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1953, 2671, 2672, 2668, 2670, 2669, 2702, 1919, 2261, 
            2260, 2263, 2820, 2262, 2821, 1921, 2106, 2796, 2107, 2105, 2189, 
            2840, 2188, 2190, 2141, 2346, 2143, 2344, 2142, 2345, 2206, 2191, 
            2192, 2164, 2174, 1920, 2703, 2314, 2315, 2305, 2307, 2306, 
            2172}]}, 
          FractionBox["9", "10"]], Annotation[#, 
          Rational[9, 10], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{1874, 2161, 2813, 2162, 2158, 2160, 2812, 2159, 1873, 
            2041, 2786, 2042, 1949, 2200, 1951, 2223, 1950, 2199, 2225, 2186, 
            1938, 2221, 1939, 2187, 2267, 2766, 2767, 2439, 2440, 1930, 2218, 
            1929, 2212, 1931, 2442, 2441, 2093, 1928, 2030, 2783, 2029, 2131, 
            2127, 2801, 2128, 2126, 2130, 2802, 2129, 2745, 2691, 2692, 2690, 
            2694, 2693, 2748}]}, 
          FractionBox["4", "5"]], Annotation[#, 
          Rational[4, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVzT1KAnAcxvGfQ2QF1tBguWR1hzxDKoQROKuDglh7Sw01NRhim6vnMLMb
RIEHqAv4RqH1afjyvP1fspXLUisREUWU1yOuUNuIqOJ2M+IGF7oWXpMRI6yw
xJmuiRd+iB98o6g7d7+EgfvHunt+xOf4R3uftukJvcYhDvDpTJYubNtbETtI
YSY/2OZ0zVt3GDv3Juf0p3IePV1HXulT8u//O/QJXRzZv+zv+EBaN9Ht+mNK
B9jThVx3d5+f6eZ4RkZO2Bq2Av8HbUwrdw==
            "]]}, 
          FractionBox["7", "10"]], Annotation[#, 
          Rational[7, 10], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwVz7svg2EYhvHXol9roZHGQEQiYcHE/yBYjB2tesCoBzuTsjFgMfMnSKik
TmFhYGAgqbOFMPh9w9Xrfe77yZOvfTPF6UJLCCGHrshPMoSnRAhLqRAeOdUW
Qq8so/vDg2xWd8+RrkfXKf/BnSyru+WErluXln/jRjauu+ZWXRodaNftyfdR
sV9FxU7DXOaKfgo72EZVdslXqCOyvxAjT3IBOeSxpZ/nORQxaD5wd4DH0PQe
5U3k8GvO8wQm4282L7pb4xKX3Shhxbwcd3YO+Qir8ho27O3GN3ndvIZjfR39
3s+6jP/d0De9T/iFh3RvfGp+5TN+52H5J5+bP/iCv3hE/g/E5z8L
            "]]}, 
          FractionBox["3", "5"]], Annotation[#, 
          Rational[3, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0DsvBFEYBuCjIsu6W/dCiw6rddtxKYW1WoU1K6GicCsXtUvhR4hCROK/
SHQSEhK7BZXnFE/e+d6ZM3PmjGztr+41hBBSksYQhjIhDNPPIAMU9L2yj25y
9LCg75RdtNFBO/P6rGwlQwvNzOkrTSH8ud6VZVJ+zTty1v0ab+a6vONGf8sh
11wxo6/Kcw645IKqviTr1m/KNYr8mNdlTW7IUcZ5N4/F91j3yav5Q67oEr7M
i7LAMt/mJXkvJ5ligmnyPMSzIolnE5+N63mkGL8d9xH3RoknyvHf2aZCyjPH
nHDEGae88A9xCDBO
            "]]}, 
          FractionBox["1", "2"]], Annotation[#, 
          Rational[1, 2], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0DkvbVEchvGFmFtDh0PQqNC5NApDJAcRxJAg0VIoOLe7F6UPIBqJe02f
wHzQSBSGKDQahTExU0r8dvHkWe/7X2vtrB0bGe8cSwkhTKMnM4SR7BCGMYRb
OZETQhcPygPox7U8qo9zr9yDblzJXfo27pDbEcel3Khv5Ra5GU24kKv1zZzM
CmEPuziWH7nKnh3exhaO9A8c0+85l0SJdRlKMYXfSGAywt4LeyZ4FjNYQEX0
Di6P3sSV3MfT+IPC3BD+cjVq8eiOGk74fprZmXUqn/MJTjFlNmffs7te8IQ3
vGLR7BtX5vP8y/4i3MjFnI676O1mG5znTD4yrO+j/6Lf5AJdITKt3zmpr+Ml
9/xDlv5D3o++wf91y8jWf8oH+npe0a0iR/8lH+obeE23jlz9D+6TR2M=
            "]]}, 
          FractionBox["2", "5"]], Annotation[#, 
          Rational[2, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0LlOVGEch+GPQgHvwgASC7YEZA2g2LPdAAwjpTZsHXtHMFogNVaGNSHE
xBtgHXZEUFbZEy2gkAQQnimevPn/Tk7OZJ5G3tW8TQgh9FGSGMJZcgjnHHPK
CcX233rEPoccUGTf1T1+ssMvCu1bus13frBJgX1dN1hhjVXy7Uu6zAKLxHhh
n9N5ppllhjz7m6QQrp+E0KgRovxzN2iu55fsu690gI/2QR3TT/pBJ2in3z2i
77VDt1jwboxO3+uix7Mv9m79rL3aY+/mubvLfcGOd871ta2cP+6XWkYFf92v
dEhvvXvHDff8Z9j+mEQekUwSI6SSRgrpPGOUTLLIIIdsximjnNL4N+O/g0mq
qKaSWmqYop4IdUTj/yVfaaaFJtpo5RsPOMpWWg==
            "]]}, 
          FractionBox["3", "10"]], Annotation[#, 
          Rational[3, 10], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0klLlWEYgOFXEhpMcFhZutBtLhzKCYeyQUQ8C83AIY9DKSgq5MpVbYPE
ggZzduEfcEzLAfwLCu0qM7fm0grz+hYXz/vc7/nO+RYnu2uoYTAhhDDPo4sh
DBG/HEI7w1dCeEajNkCL1kxcayem9dOkPSSm1VOn9RHT6qnQyqnVenmg3SdX
u0GN1sM97S45WjZV2lOqtTskaheo1J5wW6viD6fR72jdrF0KYZUjflGodbHi
vMwhPynQyjxXyqbvzdJeOO865zuPul8wX5l55gjXyYie95lr5om7q0khJJPE
sf2lu99mou96ztfofeyLznnkM6G98bm/0fP2f2ay+ZoxMqP3dL/HPinaNy3d
b3w3F0nVztw1ezbN+Yd2wFL0Oft/dy3u3ppL9mUKeGdv1d+bK/ZVCvlgb9PH
zTX7J27y0f5YnzDX7RvcYjL6H+hT5mf7F4qYtsf1GXPTvkUxs/YOfc7ctu9Q
wry9U0/w3ucAElHI
            "]]}, 
          FractionBox["1", "5"]], Annotation[#, 
          Rational[1, 5], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0clLFnEABuCfJprZQoR4szwUuaR1TLE/IDt1rcCENAsSUdP/oCCNDoVL
i7nva4VZXswFPzNQIYm07GCHyrN6y2cOL8/3vjPMzDeTUVJx9V5cCGFK0g6G
8F9+J4VQeSiELSanhJCeHEKq/Ybtl+0aN3mdJ+xXuK5f5ncW8bi9gGv6RX5l
Po/Zs7iqn+UKM3nUfooxPZ0LPMkj9njO64FzjONh+57nmtV3OMNdJti3OaX/
5Uf+4wH7PD/os5zkHOPtM3yvT3OCnxjsMfdZlBr9fhTHeu01jHFBvsiS1NoW
+Tm6jyQ6/65U2pNYJrekVFodv8NyuS1n9Gn3Oc08+eN3LpulWHb0myyUS/JN
r3LdJ6xmtWtUyUP9gdQ5Zzl6t/LIXi9PnTdgf8bHeoOsR98r+hbSFH1j37rd
8Ua/O9jMTD5nJ1vYxRfM4it28yV72MpstrGXr9nHduawk/3s4AC7eI49HGQ3
h6J3zFz2c5h9HImen3kc4igHOcZhnucoxznCNxzjBf7wv99yg+/4k9mO7QNb
wW0l
            "]]}, 
          FractionBox["1", "10"]], Annotation[#, 
          Rational[1, 10], "Tooltip"]& ], {}, {}, {}}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[1, 2]}, {
         Rational[1, 2]}}, {{0.5}, {0.5}}], AxesLabel -> {None, None}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           TagBox["y", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox[
          TagBox[
           TagBox["x", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}}, DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox["y", HoldForm], HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox["x", HoldForm], HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[1, 2]}, {
         Rational[1, 2]}}, {{0.5}, {0.5}}], GridLinesStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.2875, 0.2875, 0.2875}}, {{0.3625, 0.3625, 
              0.3625}}, {{0.4375, 0.4375, 0.4375}}, {{0.5125, 0.5125, 
              0.5125}}, {{0.5875, 0.5875, 0.5875}}, {{1., 0.55, 0.55}}, {{1., 
              0.65, 0.65}}, {{1., 0.7499999999999999, 0.7499999999999999}}, {{
              1., 0.85, 0.85}}, {{1., 0.95, 0.95}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -112.5}, {
                    Rational[15, 2], -112.5}}, {{-7.5, -112.5}, {
                  7.5, -112.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -90.}, {
                    Rational[15, 2], -90.}}, {{-7.5, -90.}, {7.5, -90.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -67.5}, {
                    Rational[15, 2], -67.5}}, {{-7.5, -67.5}, {
                  7.5, -67.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -45.}, {
                    Rational[15, 2], -45.}}, {{-7.5, -45.}, {7.5, -45.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -22.5}, {
                    Rational[15, 2], -22.5}}, {{-7.5, -22.5}, {
                  7.5, -22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 22.5}, {
                    Rational[15, 2], 22.5}}, {{-7.5, 22.5}, {7.5, 22.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 45.}, {
                    Rational[15, 2], 45.}}, {{-7.5, 45.}, {7.5, 45.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 67.5}, {
                    Rational[15, 2], 67.5}}, {{-7.5, 67.5}, {7.5, 67.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 90.}, {
                    Rational[15, 2], 90.}}, {{-7.5, 90.}, {7.5, 90.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                  112.5}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -90.}, 
                    Offset[{4., 0}, {7.5, -90.}]}, {{7.5, -45.}, 
                    Offset[{4., 0}, {7.5, -45.}]}, {{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}, {{7.5, 45.}, 
                    Offset[{4., 0}, {7.5, 45.}]}, {{7.5, 90.}, 
                    Offset[{4., 0}, {7.5, 90.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.1\"", ShowStringCharacters -> False], 0.1, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.3\"", ShowStringCharacters -> False], 0.3, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -45.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.7\"", ShowStringCharacters -> False], 0.7, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 45.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.9\"", ShowStringCharacters -> False], 0.9, 
                    AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 90.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Red", ",", "#1"}], "]"}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{
                    RowBox[{"Darker", "[", 
                    RowBox[{"Gray", ",", "0.5`"}], "]"}], ",", "#1"}], 
                    "]"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["3", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["2", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "2"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["3", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["7", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["4", "5"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["9", "10"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.907655269192649*^9, 3.907655593087879*^9, 
  3.9076566889939213`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"1f3aff42-4f69-4c41-8346-4c91eb8ff296"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Godel logic is", "Item",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655474746076*^9}, {
  3.9076555428608522`*^9, 3.907655543145595*^9}, {3.907655604429858*^9, 
  3.9076556049574537`*^9}},ExpressionUUID->"262ba17e-cd5e-491e-8e04-\
f458dabc1445"],

Cell["hard equivalent", "Subitem",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655480227624*^9}, {
  3.9076555456086817`*^9, 3.9076555470290318`*^9}, {3.907655720630828*^9, 
  3.9076557264120626`*^9}},ExpressionUUID->"b2ac080c-f40f-4d9f-9564-\
19eacd91afd3"],

Cell["but not gradient rich", "Subitem",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.9076555022756443`*^9}, {
  3.907655549116544*^9, 3.907655549376286*^9}, {3.907655729531062*^9, 
  3.907655731530757*^9}},ExpressionUUID->"fef13bc0-32a7-4c59-b519-\
6b48aa5b9e49"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ad7c2678-ddde-42f9-87f6-a30dbe887e1d"],

Cell[CellGroupData[{

Cell["Margin packing", "Subsection",
 CellChangeTimes->{{3.907651550582347*^9, 3.9076515667110653`*^9}, {
  3.907652510091539*^9, 3.907652511352847*^9}, {3.9076553122562017`*^9, 
  3.907655314379054*^9}, {3.9076558077196503`*^9, 
  3.907655811136427*^9}},ExpressionUUID->"d91d3830-5ac4-48b8-bd50-\
d9784b5dee9a"],

Cell[CellGroupData[{

Cell["\<\
Idea: pack the hard-equivalent margin with gradient-rich information\
\>", "Item",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655474746076*^9}, {
  3.9076555428608522`*^9, 3.907655543145595*^9}, {3.907655604429858*^9, 
  3.9076556049574537`*^9}, {3.907655961576016*^9, 
  3.907656019329152*^9}},ExpressionUUID->"75e21ba6-3150-478f-a168-\
d5f4702ecd4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MarginPacking", "[", "]"}]], "Input",
 CellChangeTimes->{{3.9076558828802843`*^9, 3.9076558872901087`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"3bb78c15-5ea4-42f5-b389-d517cc3313f5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 0.6950000000000001, $CellContext`y$$ =
     0.31, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 0, 1}, {
      Hold[$CellContext`y$$], 0, 1}}, Typeset`size$$ = {
    216., {98.18684375000001, 82.}}, Typeset`update$$ = 0, Typeset`initDone$$,
     Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`x$$ = 0, $CellContext`y$$ = 0}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Block[{$CellContext`m, $CellContext`eps, $CellContext`thresholdLine, \
$CellContext`marginLine, $CellContext`representativeLine, \
$CellContext`augmentation}, $CellContext`m = 
         Min[$CellContext`x$$, $CellContext`y$$]; $CellContext`eps = 
         0.01; $CellContext`augmentation = 
         Mean[{$CellContext`x$$, $CellContext`y$$}] 
          Abs[$CellContext`m - 1/2]; $CellContext`thresholdLine = 
         Line[{{1/2, -1}, {1/2, 1}}]; $CellContext`marginLine = {
           Line[{{$CellContext`m, 0.2}, {1/2, 0.2}}], 
           Text[
            Style[
            "margin", Bold, FontFamily -> 
             "Helvetica"], {$CellContext`m + (1/2 - $CellContext`m)/2, 
             0.3}]}; $CellContext`representativeLine = {
           Line[{{$CellContext`m, -0.8}, {$CellContext`m, 1}}], 
           Text[
            Style[
            "representative bit", Bold, FontFamily -> 
             "Helvetica"], {$CellContext`m, -0.9}]}; Labeled[
          Plot[{
            Callout[
             If[$CellContext`m <= 1/2, 
              If[
               
               And[$CellContext`x$$ >= $CellContext`m + \
$CellContext`augmentation - $CellContext`eps, $CellContext`x$$ <= \
$CellContext`m + $CellContext`augmentation + $CellContext`eps], 1, Nothing], 
              If[
               
               And[$CellContext`x$$ >= 
                1/2 + $CellContext`augmentation - $CellContext`eps, \
$CellContext`x$$ <= 1/2 + $CellContext`augmentation + $CellContext`eps], 1, 
               Nothing]], 
             Style["augmented bit", Bold, FontColor -> Gray], {
              
              If[$CellContext`m > 1/2, 
               1/2 + $CellContext`augmentation, $CellContext`m + \
$CellContext`augmentation], 1.2}, CalloutStyle -> {Gray}, Background -> 
             Transparent], 
            If[$CellContext`m <= 1/2, 
             If[
              
              And[$CellContext`x$$ > $CellContext`m, $CellContext`x$$ <= \
$CellContext`m + $CellContext`augmentation], 1, Nothing], 
             If[
              
              And[$CellContext`x$$ > 1/2, $CellContext`x$$ < 
               1/2 + $CellContext`augmentation], 1, 
              Nothing]]}, {$CellContext`x$$, 0, 1}, PlotRange -> {{
              If[$CellContext`m > 1/2, 0.45, 0], 
              If[$CellContext`m > 1/2, 1, 0.55]}, {-1, 1}}, PlotStyle -> 
           Transparent, Filling -> {1 -> 1, 2 -> -0.8}, FillingStyle -> 
           LightGray, Axes -> {True, False}, Ticks -> {True, False}, Epilog -> {
             Directive[Black], $CellContext`representativeLine, 
             Directive[
             Gray, Dashed], $CellContext`thresholdLine, \
$CellContext`marginLine}, ImagePadding -> {{0, 0}, {0, 30}}, AspectRatio -> 
           2/3], 
          If[$CellContext`m > 1/2, 
           Style["high margin", FontFamily -> "Helvetica"], 
           Style["low margin", FontFamily -> "Helvetica"]], Bottom]], 
      "Specifications" :> {{$CellContext`x$$, 0, 1}, {$CellContext`y$$, 0, 
         1}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{246., {126.0234375, 131.9765625}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.9076558879424*^9, 3.907656693308475*^9, 
  3.9076590209484587`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"dbedbc52-41e0-4b64-8d85-b60cbca82aba"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DAnd", "[", 
   RowBox[{"x_", ",", "w_"}], "]"}], ":=", 
  RowBox[{"MarginPack", "[", 
   RowBox[{
    RowBox[{"Min", "[", 
     RowBox[{"x", ",", "w"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "w"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907659136842668*^9, 3.9076591551238737`*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"c0d670f2-9306-4278-b306-3cfae51cf98b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"DAnd", "[", 
   RowBox[{"x", ",", "w"}], "]"}], "//", "PiecewiseExpand"}]], "Input",
 CellChangeTimes->{{3.907656097539749*^9, 3.907656106009643*^9}, {
  3.90765619038373*^9, 3.907656206336947*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"283a52ac-ce6e-4dd3-a417-d4cc8e28f222"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"5", " ", "w"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["w", "2"]}], "+", "x", "-", 
           RowBox[{"2", " ", "w", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"w", "<", 
          FractionBox["1", "2"]}], "&&", 
         RowBox[{
          RowBox[{"w", "-", "x"}], "\[LessEqual]", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "w", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["w", "2"]}], "-", "x", "+", 
           RowBox[{"2", " ", "w", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"w", ">", 
          FractionBox["1", "2"]}], "&&", 
         RowBox[{"x", ">", 
          FractionBox["1", "2"]}], "&&", 
         RowBox[{
          RowBox[{"w", "-", "x"}], "\[LessEqual]", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "w"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["w", "2"]}], "-", "x", "+", 
           RowBox[{"2", " ", "w", " ", "x"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"w", "\[Equal]", 
            FractionBox["1", "2"]}], "&&", 
           RowBox[{
            RowBox[{"w", "-", "x"}], "\[LessEqual]", "0"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"w", "\[GreaterEqual]", 
            FractionBox["1", "2"]}], "&&", 
           RowBox[{
            RowBox[{"w", "-", "x"}], "\[LessEqual]", "0"}], "&&", 
           RowBox[{"x", "\[LessEqual]", 
            FractionBox["1", "2"]}]}], ")"}]}]},
       {
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"w", "+", 
           RowBox[{"5", " ", "x"}], "-", 
           RowBox[{"2", " ", "w", " ", "x"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["x", "2"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"x", "<", 
          FractionBox["1", "2"]}], "&&", 
         RowBox[{
          RowBox[{"w", "-", "x"}], ">", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{"2", "-", "w", "-", "x", "+", 
           RowBox[{"2", " ", "w", " ", "x"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["x", "2"]}]}], ")"}]}], 
        RowBox[{
         RowBox[{"w", ">", 
          FractionBox["1", "2"]}], "&&", 
         RowBox[{"x", ">", 
          FractionBox["1", "2"]}], "&&", 
         RowBox[{
          RowBox[{"w", "-", "x"}], ">", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "w"}], "+", 
           RowBox[{"3", " ", "x"}], "+", 
           RowBox[{"2", " ", "w", " ", "x"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["x", "2"]}]}], ")"}]}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{
  3.907656107099607*^9, {3.9076561909335318`*^9, 3.907656206984342*^9}, 
   3.907656703487465*^9, 3.9076590291069527`*^9, 3.90765915900255*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"1eeefb38-1461-45df-bebb-ce0a3c4a2f80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ActivationPlot", "[", 
  RowBox[{"DAnd", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.907656157207438*^9, 3.9076561727759733`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"f9eabc41-5852-4ca5-baa1-2ec791beb4d7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1: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
GwUacsSPS9Tvt+Vl6vDuHzj9hp5tim/JiUlgeMaSbVeajVXPbxVdvLTfOQVb
8tJBaTa8I7SeY+5z9Rx4e/DWySkOA7/bXtn4Vtv66ndSEA+u4Lu1XPMg9fuA
9c35qf3clM0XR4T1UL8PaPWj7hF+1btD5UfGfIdWHN8t6eOrLr8PGDT5RuQK
Y77Tqw6YVPjaDbsfP5puzi+Dxxtgzk/Blh8TZetFdQ6r5bFIQy+p3+f7w5xf
Do8D48I4MC6MA+PicdjjAp6AN+AJeIN+Xdj26StFhyk+AF/0PHi4Tq53NOWl
Tau+e0g025kpzYdn+jaItscVTS1fq9d8/hBVj3aLTDmRSj1MuaHOmQSFVftm
yyJ1f/j0K4UfP9qu6tHO0gs5tp5Q504WmONV94d/aI5b1aMd/KvbJp48GY8z
Tfx4cj3awf9aEbcqwHuBP+PV8/jci78l+3M92nFet22voIT9u+BKJZ+zBtzA
1tcLbfjPzSEN1t1Rz5t+8PfMWi9SGJ7RNrlFx7uprNcs+mTZ9FH7oqiX94ai
Hey/31NXH6nsp+QA5ALsuZ5vVO7rlqbkAuQE5Ijun2TY/WfY31f5NLBPAr+m
kp07JtADcz0r+wZ2FeTgh4+mTXHmXeH5wA9D3nLmi8FeQtndlCOq3pIz6h5D
2IEDpyzeMW6Ng57Y40A7vHfTXI85/L1p5npVz1GPcaG+xNHkr535YA3EONE+
yVzfWdQ8qfVjZ36YrAfsXf/+nhsTj9r2tcrje3PRqqY5Tw/Tol3d5pf7xfWe
lAY3Fzfu20vVox3q0c5a1yoOt9Jex3mmHFD+VHFH16VvGXpqyONRjiu3lX8M
/8rqJ8uWQ4qvMI+SJj7iGb5W+dorzvwj4Ke8adeq+0dAnxKmXav4RNrheK+B
sIdfd3zb6+5YZQ/3edytwotOis6gewsT//H8/mCTTgn5jhvvB5j8qux2jDP9
rW0Ha6xL5vpTwu/Is9cxnm8x9VUG9w//Cn6XtylHrrG8uWP7V0Nsv6vFGv8h
vQup+wKwrj1N/yeLyo9sv+UDd5UnAj562PJZmb3fH6DtqV/MnRN3kOPl4JdX
F/z9WmmfYBrax3Ng4B8qbwJ8YvGBw+YLFV/HvPa+ciStgIfyP4AXxJ2t/qPt
/qNFPCLV7j+VSpj9K/mOOFUFc145dM2cp5Lft/+s5Xk195JLHtTM358vDjX8
nI+WN6s7aZs6r/TC1n+/JOxe8dTwe+aVudjyycBzVOr1lT3fy1TnbFJnnPn7
iAG3vH33w637LnD+Q/HK8w37+zoFb8007G91vqflV3Paf2/Aqf+UjY+bps77
oB/0i37QL95DP/ye3Q/4AHzx9r9VnhejAGr9xvOVjZ4HcJzb0fCLAwMrqHvE
Xpl17+a+g3fo6INn6b4NZN56AtV+peCyt1IT6F/TX1Z56IgbfvH1umMjZqh7
xO79eNfAu7pnZ8LmWuFHS6h7yAtcGTcyrEc2ZW5d2aLjN5t4H98/pMtPtZb+
7nJuA+3O2PQdb/aXS9VM/1vlA2BemOeWnbUHB/7heq7i0YJ3GvXtpUrUh6SV
nPZ8ZywlLLxF4z+JZbzI8xaX088tKPdLDFW+dbq3W5o6f5Fofl+dvzhtx/es
uIYqUb+61ZtDbgxLpA0lZvjM/SiR8Qy8FzLx5HoOw4orqBL1oAPoUsfsD/dc
qHMZEWbcRJWoB93keY3z73eu0rZ+Gn1XpaOhn9Vz0JX9BJuu+r2QwfTGN1FL
n7a+TX2WxiXGTQsS+4bhNt+F09elXirfPCiM9zHBh+DLzSY9FX+iRD34Enxq
jU+dn7D4Re03oh7tYGedMPGabONfnZ/Q/aA827+MpBjTv4yy/cYU249Msf3d
dNvfTSc/M16QaccLMqlfx/cMOzabfh7XzrBr4V+6k5et16HHodchX6GX/7D1
MPJh8/OTGpj2h4KtuFGCbV+o96wyif2lcqb+dPDzoraeH63FOZXeh56X95ZB
78POk/dCwu6z9JKqn2+OM52/f9C0v5T/082cZzqPNz+/8LbwC+EHpuUzb2/T
/lDzBh7gD27bT26NS0ax/3dw6YoPvnmo8nUtfGQL/KtxzrPnlSbmAbkfZOsp
6CXoqTO23K9n66lFtl6y+OOGbZ8kc78W/pJ5HA3NcajnFp5SGD5g4jeF24MO
oMvaNs64RRR1muqMYxj8bsYhUmm+GZdIpWgfJ5/n0KnBTr7PYTtD3lMDu6Pb
lElhR0u45quiPtX0/5R9AbsDdgjqYYdk3PuqbfjoeGrTeEc7qqFK1MOuwTo7
Y9s122w7B3aLvKcBdgz0cY+eY4cvccPvuV+nh5f6PY38y4fr0Q71aAe+kfmL
VnwhjvkIfAU+Al+92eftvgX77Wox5XxIvZhu02lh6q1XLwYPoxWNLodPrzKP
Wu0a+0pO2lyqFZTUZlnn5Synhpn95NKr5jxyXfLpgk0/OZffQz+oRzvLr1b5
BIHmcyUPUI92Ft5UvoE1H9f7DtEOdh7svh4mH6j8MCtu75ofZtl7CsZ7aIf3
ZDvYjcVtO/Id206E3Yh9FKu/ZPt9ld9l9X+aKi7qXKxbOZWvZe1vqHyt37/L
+a1rd5Wv9eesYnm5LcKo/qt3qE3pU9zPUNNuV/lQh95rerJ9iMp/mjHoyOzM
mSrfybIH8btuQeRjxoFUfhPWKdYt1inWLdYp1i32RWQeG+YNPKC+pRlPSaLi
ZjxFyU/IGewTIW6AeWLewBvqe+89+ful105RwO64X5bPP8H7QogrYN7AA/CI
eq+F324IMOoH+9Rb9XOFUJZjlr+txjfIlpPYp4JfBbyDDqAj6v9Kmr1pglFf
b3i55dGGfY19LOxrgU6gG+iOeprmlvCSUT/j748jRhcPZPlz88/R2f2jdrM8
g9yD/LHiWA6WEzIfypIrqkT9J2YcMNn2i5P5O/gu+pX5T1b8UOU73TLbZdI+
M55zx17vMXacLM2O76XZcVCVjwS5BDmFuBH4AXEi0BdxQ/AfxoFxYRwyfwly
baEZx1D5SxjnB2ZcI8a2T5Rdu9Ied65pn6TZeieX93swD0su51C1IZUK7WsQ
TXE7kv/tGxTFJerTU5x2XSr5L4o37DxVon6nue5yaK65DlWJ+s4Bzri3J40d
89uf3zW/yiXq1w7o+9X9X/3phV/up59fu8El6iEHLD/2NsuBVmY8NZztPsQT
Oi10ji+efkh3jk+VqD9prqdommSup2g6+5NzvafS2vLO9Z5KGea8cijAnGcO
LenmHMc1Kh7qHJcnDS/m996GvzwpefHAqs/qeVLJ8I6rSx8IoIpTOq3/OMMY
716nXxxANco4/WR/+smOUyIukGvG+1KFXZbK63qeGd9MU3EWc52n8fOPTfs2
jd9HO7yHdq/a76WJ94AnxGEQB5ppx+XxPMiOy2OdWfovmfelEY/qZdvl6Ad2
KeA/7P0KwNttO7WB+A6++5pzn2ZTPOU6922+U/OTcSTEgwEDz3gP/Yx95NxH
i6YaHzr31aLs+lTKMdulko9zP/XHHNrj3E/9NIdCTHnoSbtvvFvxROBVqj3P
Kd/8aW2WU775u5y7QP5XRTM/TJ03RF4Q4KCrn2xyxmdxDhH1t+z6/M7Vyn5R
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
nWzbfddsO9CLS9RbekPdH4DSwqcndTfttwCqZNpvgVyivr65jxEo7hMIoIA3
3sl9tXwALTDXeRZ1M9e9KlF/07Rrsmw7R5WWfanuBwZdQRfQyZon7PR0m+/T
6ZrJd+k2X+FezkxaaH43k7qb48gkp9W1fdQBckKtvtzLJeqdXvmwjfvJ6aV7
nTjEJerrv7qh7J53D9vr5iCXQyqenjP37X1s18POX1jymrHugynt1l+GHAjh
EvXWfqm6vxWltZ8aTL+Y43fY41cl6rea/Oqgmya/qhL1lh+l7lc9bZcWXzuo
vWlXx9AK087G/UZ3qJu5DxhDC8xxRlOqOW517tQaXzTNNOMxafS7GY9ReWhW
nn6aPY5U2x9S925Y30+17flc255X9nArU27k2vPNseer7i2w9h1zaKC5z3GR
MvyfGnL4Mpeot/az1f1z0017zI9am/aYKlHfw9T76j66vqbdd5ECTTvwPP1i
7p/jd3QucGnto56jh6Yd6GvbhdephLmfre7PRmnlC1/n99EvvoPvol/9e77c
L76D7+r9+hLyUirbeSqQ99ADu0y/7bTtx53kEvXW+vemHub69+IS9da5oJv2
OaFALlEPfQE90stcH6H00FwfqkQ97A/YJZbdkGTbEapEPeQA5ALWPeQA8mwQ
R0bcCPZmD5PPo9husfwwdd8M4kqIM1n74cpOwTk5nJvDOTmcm0McCvaqpQ+V
nQI7k+1OM1/pKtspsCthP/5hyukbfI+hlW92m/Wdlaeg8mvr23mG2J/AeWTE
4xm2/Z/D5n6cuh9jkTlfFcfHOSvsU+BcEM4J4ZwP7Fmc24E9C7sL88M5HZzb
gd0FOwzncnBOR+6b4jv6OWB1XmeruV+WIvIG1f41/FjsS0B+ob8B5j6RygvE
c/SfYtarfWv9PGayy7lhfb9D9QM4VcuHUXFgfAd0w74a4jl59r4ovo/9FH08
6bxvh3PL6I/3fez2n9qw3CdCe/79cO17Kk5r3cucwXoZehp6GHrZyndR94Vs
M89hxlBz81xmDOsd6CFLXyo9tN+Mp6fZ8fQ01jPQO5b+U/cfWH5Rru0n5bJe
gZ6x8s6UnoHesPKjLrJeGGzmI/na78fb76sS9db81P0jiNPq+34JYh9NrUfk
zWL9WuNJFPtsiYLODn7OsIjD4PvImwBfMF3zoTPkAOSCvu+qzvlz3NReV1hn
+a1TPidp83N5O28A48C+OJ4jTyDWthfQDngG3jkurJ3zjmc5D7kPPQC5DjkP
OQ25DbkFOQ05DLmsr5cUzqO647n0XK9GizjeOjuh/jcp82fy/Zm7GvoXLf3e
Kd5P7JaRPaHR3DP0LHqV8ad+7wX7gtXe7HKow8vevJ/YYNaAocdW+fA+X/Uf
Np6dv+UmPx9SZGnL7d+o32Np7z9r/IIRoZz39Xh23KPZcVGUl1RmyF9fHuXv
oBxx7u7Lb9Yz9OT30eN+q3ON/ZoSY94/fOR4JMO1u3x/c0HtSB5H7x+rtdsS
FsDzbtSt4/GBe47zuTGUyx9vv12knCGHF9YPOBSYwuPGeIdf/KLfi66GHK6+
+dfhVb24/tDjTlMqL04Rv4eSR+X+Gr+w4cxMxv985/QeZdOj77ZV3D4whNu1
C27fcjP/HlsevXNi4/57T9PEPe15VP5iwj+jgrJpYNF6s48H3CGKWN+w/Mxj
5LEqvvV8o32p0nXb7ClwgloW/C3l38VxVKrOlMFV+1+jvvEr9q88mk2dP947
40Edw356VO1Qlym5lFzQ/5PeVT1pxE/Bf0yYlESJc0aW65UTQKsufdFjV68U
avdHvW9+6edPF355Pnncrlx6uf7nMwsuD6FB47NipscY6+Oe3+qU05E8DowL
38U4Xtx4NWbQmUjq0L/BOw+M985+28Lj2xYGfar9Y/wl8HcxDnwX43hypkjN
A4MzKXLs5BeDbqXQllVxh7x/yqWvnl0Y2qB3Cs8bePB6Fnv1WWwuFVtdwPhL
p8Fb23Zsbby3ICls7K9GP8AD8PLS98X21FqdQucik/qtG5PNeAGeMG/gAd/F
OPAdfPe3EX2NP196y2+i8XeJqtgl6if0+vnTbRtu0+cVBv4Y8pkfdbDL8Xa9
JR8CafN3cybP+NuP4+afjTt0deCoKC5RP2fN6D8H7zlERWNjPvWa6kE13jpW
7NkbIXSmzeOt1QeHUct5HvPXVDPs1ddjA2u0T6bmnyXf3989jR6c9Nzwxkep
NDxpVnzJ+Ax6q1ufjT9dNOzIl18sad4wmx4uq3W1zx+ZVLR2/5pZlbLJc13T
2L5/Z1K8z7Nl4w/4Gv2Gprw/exf9Nqnuxkl1/aiM+W8XtSy+pvOnjiDqHrhq
QovG56lNuUYzEoqHU3ahKkN+v3mdAld82MzjbjTNLvyozN0OwSrf4e8T8w/k
RbJ++Kxl4uNPclNo/Pp7xl8m3TP/J53j/EN6+7z88SH1OwenPx/j/GM51X6E
49m1Mnvp6ul9HV5kX+Z6yLshxX4z/tTvMH90N6KZ/1MHlWvpO2pN5Sv00kdP
Dsfs2U+byhcK7NQ0iBKfHZq1sf1vNPy97z/NrphAX+9bWzt85S6a+/rH817/
OIHK2/MPOJpl/CXSGx0mluswcT393LHgO0UWZ1GfSs2/T9qzi/oG7B0QsDeL
atrtQxt3DWvc1UFv23yyL2J7r2n9kunw4r3v/Lb0HK2suurxzz/voiZZY7/2
MfBe2n4PePeY6X52puHHxsz/MHr+hzfotQ7v1SnxWgadejS4eNE/r9P+Q85/
GdS7p/PfdZ4H5vWwpP/9/h+fpxXuR+Z1Sw6ieeenDjla5Rz1unq56kvhwbT0
ySfhywdH0MgTB461uxVMvsM+MP4iKa/4MeMvmNyvf3Hk+hf36OfwunPC696m
1KTd61Z9eZ+KZdc6vTE4iGof/XF8m83xNMX477nQW/T6zrhdkUHXqfuwclue
lQinXva4ephlBHU3y2R7vBF06MXHP114kkqzOhaufOXXcJoy95Xpc19Jo6Yd
FzTuuCCcOp4Y+MOT3HRaN+zinYdxYXT0g8CTHwRmUMrHKx0frwyjn20+C7D5
DuPEuDFOjBt0BZ1BV9AZ88C8QGfQHXQEXZ84stKN0dD6NgMONC+WREerPT1R
7Wk6Xbro/OegCmZ7w18zx+ugjk9GH5oWZth/7Z4FeY5w0Htrnvb/IimHRq7r
2jRmuIP5AnzSW+ANfAC+AN6AR+ANeEw0pGbRHAf9PS0z7sicVOYb8BH4BnwE
PAPvwDPwjnlhnuB7rAPwPdYB5g08YN7AA+YNPEBuQY6NPxubPdWQW2c7FWhW
zJBjkFuQY2PqB1f8xpBbp7weDnUYcgxyEnIT9kdRn1+2rGtzmOUI5ArkKOQq
9Pmf+zYfWdUyhFK/Okh7nyfR4E9/MlgpiWo3Cun7V7tkurvzcOlvq6m89SVn
fl8Y/lESNe128t7z2CwasLX9Sx3HqfNdfUb7fjb71AH2mw+u3Lh+Q0Ywy8Nj
XXrvez8snUv9vFwW+dctdaNuKVWi/m7f+lsHDzLsmt1eVw/kOainzS8F7H/4
nl/w4k86rBnJeuVF2bqtn390gu2qddcu5nUK2ct2tP+KToUWVz7FdlL0005f
J6Tto7fD21YJb3uP5S3k+6TvOt6MfdOL7bIyyU3WR319hceZ1+RaVOHB3mzv
HG5UcIHfH1fo3713rmwttJX14vEDTYo8X3qBYcRnq0avr3P9QiDL8xodDv4V
nXKDtpUZ//mlN6E3fKl/3t0Cm/70YDpuq3Km6D9jfBk+aPL5HY5nQN/UN+Nc
IYwn4K1nh7r9fvD1Yb0CeofP/6rJ3uXqd/qSLlYrdyMxnPEKPP+7rPgLN6/b
bOfiuxgH8AY8UmvnvyCmC77rnjrj99QZ96nU+EaXbuVFcvuoD8r/NeXAZsb7
3Cajrg8qeYHHCTz+2fK28afwCLzCPr4Z6PznYHpfmDn3aNWd6veAguI/HNZo
uvr95Z62PML6enPR0IqLDD8ZfAM+2vH22ogvQnz5O6AT6DZ7y9M31tYKF89x
74qxfsqcGFQ9N4XXQ/0/D1b48+BGHhf4CnwGOqKfBmcevvJydwfzHb7jI76D
9rALYCdAL0JPQi9CT970HWv8pdGB2Xf2z77joNgSV+JLXEmjz1qFt2sV7mC9
AD3x4kTTays+z6FvQ5+M7/z3GoreHJr50Zc55PZTpaHn96/herRDPdqVqNY7
OrNGLjXtmTVocbX5NODkVP87tXJpYbVrhsk1j+vRDvVoBzkEuQQ5BH6H3QV8
nJsVeHZWoGFX7ypn/OXQxD8ySwZOiaKLC0v3HrglmjwuzDveqo3hxxYqF7Eo
NJX27d+8euBrORSY9/6Zfbty6MaSx/03jbpGYwMGrUttfYXmnx54v/joAMpb
Va5Lyts3KLa1z1fh7ydRgcW9fqxyJYlqbn+nwuF+IfTO5rCc8FNnKX7KyHar
nkRQsZ8f3D7+5nXmq1PNvvt9mMNBh+x1gXXC967Wzfs6ODiS40oOv63Lvr2X
Qquc052u7s0c8b3bB10Nu/PRiswrEw07tHbv0uveX5xO7Rfuu3OsnpLjkOt9
+g3+fvZeda/yOv+1K2fGKj8SeAGegBfgCXgBnoAX4Al4AZ78nWp0QBaZ5sm8
dGpzN/XXgMRsqvsiKLl0eCYt8F67yHttDr061KPEUI9MquafuPTBmhwa1f+V
8AUemZxn41X4/HDvseq+9shyYY2mHUwhr+0RZw+9eZn3RSdtL1ax5W9+4vda
79CKDn8nbPsiis/f9y75WY+A15BXkU4VJhQ0/lKp7SuDFteKukS9Jhb/qUCH
63TmUbOXe/3kRz+MeP2yd68giizx0PeNTQf5vOyjtLW/tn6h7lWGnoZcgR6G
/IaehXwD3kGHwcMmr+o8J4Y+Tio5o93949T5XnjXe+H3KOLtkqFvl/QiX6cZ
8lYuTTIduBBuh/fQDu+9f6/y17WPZpGj86OX1y9x0MiC2cMXumdT3OpmxpsO
7gf9rqzm+OGfZZcpM3pB7Gd9vGn77btnf5l+mbwv9fNIWO5Nhd7/tXxMkB+9
++ObLd4ZepNm38sc9OiCH+0fs+/6N1E3qU92mf7ZZWLp42bOf1F0eFPbX786
dodCEsLcN7WNooCye/3L7jXml9O/WU7/KPrpSKVr3jdj6GZSscVBvaOoiWlu
pZFpbr2VSk+abVtaOSKNVg5IfqtN1VSa9ElO014t0mjkrDl7hjRMpbE1p4em
n4uljrHJR3bWjiL3tukvle5zl+pNWRi9740oip7lUbzZjnvU2dBSZf+MpBIb
w8/HXrtLv1+s0qVAiSgavaFj6uFe6RQ94UWPxSVTqfKny6p8uiydXjH/pdKS
CWfmTm2YQZerj79R+Y8UemZuKKXT52YiSwplnhlk/LnzeVD+nap+bVq8meDF
fjL0GO5nadPI+S+Qz4X3P/ZXv2N/hdLjnafvt3o3hM+Hept6NoXzNRG3gT6Y
8aTk5353Qun+pS3TezWeT7vHTD7/UZ9wmuk5btWZV38gny8uGX9J1OTrgm98
XXAKdSjpH1KwuIEXtxfPfix0iqInfWu4vKm0p+uSprXunKYak+aMWXI3lcaY
du0pOjHkdNtSl2OpzfTIQWGpXhQ70f1EekImbSrdJjP3TR/avMnr7ODGWeSR
8utnAZ7e9Jrnzb/CFydSSM1Z308fe5M69flhetleDqreYLxhKQTyODFujBPj
PmNQ64hXNtVe0OmvG0NCeZwYN8aBceE7+C6+g++afL0t0+KnbQ7GA/CCeQMP
mDfwgHli3pgn5o1xYtxL1nc0/tLpyL07xl8262ecz4Te6vdF0vPIsv6GXljb
qtJ3F3n/BvZFu9KF25YuHEJxPeoM/DbYl/kEdEecTsYZV0+4XmnC9X68v8K/
k2zHDWUcD3FDyKHav3Zd3736JYrt+cXrLZsY6/zs9EnL6vjR+T1B90rVDmZ9
5BP7qmHJpdPcIhfKNvj0Eo/71PA5R95v7Md24qZBM0tuWKjyuTDPlE51bk3r
aeiJ2Ncr9H1H/k6FL/XYkxf3ffdd3M8/59oe7uR3jvV8nRolMztvv05Xd3sW
qBZg+MlNkzudyDHszFrLHnn0y6DgcVXeKpCdQn3d//T7KCaDStf33utu6E+M
A+PCODAu5JUPdX842P2hOvffuuaqVjVXpfM+3ZW3f3/5lFcmOQadaZq2KofP
NZX7pNu6C7MO8e9g7P3h00KJr4dwXhP2sb5eMvPS49qpNH/7xFPBe9Tvir65
p22lPW0PUYVpE42/s9Toiw0FyycfpB8HfHy37ZBzVKpb/J0fqx6m9ye9tHbB
rpN2vCWEypn6NYyqV73+Iq1QCMUs2+nRy/CDWx784mW35iH0S4sJXzUeFEqv
026f24Z8yfIc0KJ+VCjr08vnll08twz+VzLbyaAL+OpGpxp1VmzbQ/FH5px9
fs+LBi5vVO5JqUCKH/pPl1bHL7j4QSHfpTV6+GYoNXn45pNXZ/u6+DXwA450
7ZIQ+9Ehtut3vVWvUOvml+jHcalTx6Xep0djb/899nYktX4cv+C11sHsn8Qv
bWL8BdO7VfrVrdIvhvtBv5P/ut5m+P4DtHjKom93z79PaeW/GvcgaR+dajtn
+KKxcfwdfPcdp7lZ5hLVOOcM2DrYbl8dOq7wntMOtisn1f7O+Euhfx6+NzI4
wcF23a7LC/8ua9jR11+uUHmAYVe3t+3ou7ZdjX7Q73hD+lU57qBaz1Z7L12W
QXu9P/9k7B4HlTq0flbBZpk0aEJSixHLHEwn6HHodehx6PUHX3/a5+yBFG7f
YPTj2HK7U2hvlykvdgVk8bgxjzc/GXLWr18KddvVy+P1Abn01dL6zT68pM7p
gI+d3sH+2YovK9l82uTLSUGjOl+gVclTr1Wqc5DtMNhl3yxbfXWkYUc1bTG6
zB+GXQW7AnYG7ArYGbDbYMc1Grj5aJfeQfRT7uVH939SdgfsENgdsEOwzmpu
C730+HW1LrBOdnwwrtixweHkM6VAvccPginny+zwL7Oj+fzKS3WzP28TkEzr
nWrg9SSma4vaTx01P0klp5bud+w652Fhvu9khH4yofFuluuQ85ArkPOQ65Bz
kOuQ85B37V7v2jik/Tpq5XR7/7xJ5U3/dBP1NQP1IVTdVGjLyWTTp8FU1BlG
nLCKKpn1d+0432FybG349PG+uxTTZcLqJq8fZns6yDPsyD9Dd5FvqenHThRK
pAurxgdkObbyOtj08verjT/KcL9i/CVShUEJbwxK2EB7228t+0PnJFpt+2Ub
e6x6tXaEg9o51W7sEua7eSGfVRj44y6qmNnu29mjsulG68aRv/puYb0CPQN5
3vHDT59vqXKGop6X7rm+bRgdWDFqu+M9DyrV4uXzycfDKHPAjDYng85QwW53
VsxdH0kjbD29YUId4y+CenhtN/5O041CvUOC1ifS6uN3w4oGXuZ987ysZQci
Y85S4E3nvyTasdn57zz9ePWbqVe/SaEtvzn/eVDHY1c/frN9Cs3wXpVR9pQH
fWtuCGwjp9RrPCmA9SD0IuTQvOgelSbleNMKj7deC02NorYegZ9mD/WhMRce
5B6pEU1dwo+2z+7sQ0uOPV567PEdMs2/Rt7kjEZVCY+hhZ8cWPDJAW+mK+gM
uoLOHcaeMf7Okmlm9w9hOfdKtVl51165Te+evz9r+9pY+vZplcsNPW4T7S/5
4502cTT/y8ppp+cF0dGNWy42qHCG8Q48Aq/AI/B6NKTSkZBK1+mkGS+NoIrl
C9LnGd48b8wD88I8MK/GZjw3mDJMOzmK+RJ8Cr4En2KcGDf4Enxa2bl82q5m
PgUfgi/Bh+BL8AH4YvQo/8M//5ROz5aXNTShkuedBjoFrYN2ONVxSi7NeLf6
4f49HMwX4BPwBfjk3OnNxWuWM/zV9Y/frPVzCq3f6RXy4eQcu0yhB9eclHHQ
relTnjQclMrfxTiwLrBOYKfCbg2ovXXsSf8U8nl2pNakOZm23E+hTedCLxcc
kcXjxLgxDowL48C4/tx8/7uZO5JpWtvoIkMrqLgF4hiQS7DrII9g122//3Bf
s8vptGD09tllIjLooRmXS6eKpnzK4Dgh9smhd6GHoXehhyFHIVchRyFXoYeh
lyEHIReRNwC7osG9S5Xf/8CDLpTd1zilrZIbkCPII0C85c7VNpe6DfOhfi2i
AgunRfE6xbpFHgHmhXWFdQa5CDmJvAX495AzkDvQ89D70PPQ+8hrQFxW7uND
T0NvW/NeSw7n9lDrHN5XRHwb+4iYL/pDHBLvoZ9Zow6/tuJMDt19EtynWqVl
NNunysQOd9ew3Yt6tMP6eWv9BysbFFlM0Re+G55eXf2ul9m8fy7dMYrMdj9x
O7yHdngP7fAe8los/hpFZnhwbS4lmX7kJJq68fTzrQY8/2n1eWerTaL4ItO9
Cnw1it/7uMv68ztfPkAfju2X1ba62mfFviv8dPjt8Mvhp8OeRZwffIY4fbn7
V/8IHRnKdhLwjLj70L/nxhQaGcX8XN9zVE7jWgdpUYvMpCmdLlD1iFfmLTDg
Wgt6/+3e8QJNfvS+/wXDLvnq6OY9Ew07ZfSjr1KL/BNMcVvChy5/P5yWp7/o
FX/0AjUObrr5C8Pu7u3xz6S5Iy7S0rWDZh95158yQnot7zjLlw5HvvxsjWF3
u8WNrfLkli91j4l9o8v7IRxnR9z9g3LBJ/4Zl0S1XxvwWYvuKu6OOHydpW7v
Ln0nnZo6twvDfKnplO7NpnSPteOqal8A+wQt68w79/XkYTTpi0K+H50Np5DD
3xp/J6hP40zjL5qWO83BD0+yH6bv28RRzXec/7yoSb/dxp/ap8G+zdxGrV4K
XO3l8rsviJNjnxzrB3ETxFGwT4A4+jkRR0dcHc8t+udSwTUvtS9eOp33FeBX
Y18B64rP4xWf2OvnT5W9Vcq7/qve9T2Z75eXrNf0XLQn2yfOKPDvqf5sb478
ecM/PVP8WM9tLBS3oVBcBLcPNjdEIrhffOdmr8Il60y5Sp+P7P3V3L0JVP+P
vs02vXOVam8PHLk4NIEejPTZWmZ8JLcfNDVmxMaBkfRwxd6Js79N4O/w/kr/
05/1Px1BmVefG38OymzW/9efT0XQVUObHC2YRGXDvmsY/HUKObHi/koSz4Pn
5ex+qj/5hJ67cqJxCo8bzwd363XIUSuCisVvOn6gQAod+2fomoZ54TR+w+QC
Mw6rfvEdmZcEPAFvv2UXjmp+yo/+dm4TN0ljOoAu/juKzan970Fq98EbJ3r4
ZFBYxW+XN/A9QBsq3CyRUiST6QI6NQv+vtD2pp5069N1W14bovLpKvpuvvZx
o+lU6ft/Ju9cA3k3ieUS5BTkEuQU3kM/eA/97HoyxXvY0Ut8T3K3sb23Pv/p
EtX1cO/6opUvfbKndsXxI/z4d/22fnbLbeQ3hl42y9u0aLHzXzRNn+b8F0WD
88oNyisXTZ/sn998//wo6u4086ZCHql2eA/t8B7bz4NnfN/ojST2i+AnjUnp
+umGtanU6dcVP0Z3TKUuk9ffLmXAF778olWGAbcOH3Q2oZ267xrt8B7a4b1y
bX84cuWnHCpZtNa0peVz6Ij34wVVh+dQ5R3HHvxTKYf2F+jQolVZdT822uE9
tMN7DV51LhBPMtlyxhXa/Mfop8MneNJOz+XD9268QqVm9Tb+rvA91GiH99AO
753fVfnCrsoBFG3nMfiG9N3fZZw/zaYmgy50ukHVe6337VD7Bt9fjnZ4D+3w
HvzDoWW/LfDk7u8UYgZYbtC4Zxf/yo3cwf5wpWpTO5R3P09rqcWlpNtBtCZn
eOs9Lc6z//jIzE88y3kxyJMptDdg9vSRweRd8OWjX005x/5x/51F+u0s4ks3
5+cFzs8Lowjz33W+V9o3veF144/zXpAHs77iLyNfvBRBhdOmHTgz+TrL8d2L
rnZtMDqYLif3v5LcP5qumGUwPevX8ECRe15Ez7PTD2zaQ6+t/Mg3paMPpZQO
L3F03G7Oa7fkxj7W081tvf2g2xjj7xpVGOP5xhjPvXRyRYONZ/7ypH79X8t9
Um2fLYfTqYjZz3Ga1rzIR/vj02nRxu55k4ofpetF3qwwfEA8zSzp3ND3pMo/
99i46Uw83TO8glYrPKn/3esD717PpnB736TXw4kL+qwz+MmMk13jOCTs4nom
XyTRUVOfBFAf009LpmWGmnR7N4DMbYsOqbTbCS69wXLHs/8Lg6TXKbDJ3I9y
66TTHlsvN63TrcJb/2TQhx/9sO+lYsZ6r3a3VtDb69juhl02r96x4d+1UnFQ
PAe9As8UmpztGUwFvyqwpV5kOI1d7hF2OD7Y3p+IJHN7d3+wkvtRUwZGTblF
5rJfHE/37zn/3SLTrcxOoLvmv5t0puHjr26uSaDVH1/6+/d3bnHcFf5jmfdP
lH3/RCKdHVLCY0iJSLp5rOHVgH8TacvgEYZkjqDiZv5jMj2IvGpgIILl9DDT
oAun7z5yRszSaMSCZYbkDWd81WrpVaOlVxiFzCrQwjEyncoY3uD+kuGUnOL8
l0GtDy5scXBhGMcbLjjdocRQ+vvl9Uvev5dJgT4bckq+G0ah44/9WqBJFjWM
KnXzTKEwmrV+ao2392bThJP+hmcVSu5O8yQki/b09XPr6xdK1f/ZMjO18G32
q+GfLFmZtnhlWjydmdzgm7Nbd3Oed3uvB1uCB+9ivILPwHfgM/Ad8I72wDvo
ALyDDsA76HDY5LtIWug0hyvG0w5TXkWS6Yb9Gc/8snb7X2/Pq+dguoBOoAvo
hDz0XZ95dx9SNInG93n4tu/tsyz3YdfGVPjmyKmPUpjvsQ7A91gHoDPojnWA
dQG6gw9Ad/AB1jHWNdYx1jXWEfgE6wjrCusI6wp8hPbgI/AV+Ah8BXr3/HxE
j88N/7piz+X7X2m0h/cBvmw35GnGxF0ufAcYfAc+BN+BD8F34EPwHfgQcghy
CXIIcol/z9XM182h1pENf/Qc52D/7MsNP7TsPkLFNb7Y8bDTjofqdwzGrcns
4hmfSXfGul3YujGb7ZBheyp4VkzPpl+6T9xdyZFL5jZXmAE337Sg+aZcesP0
c7Pp0zYH3733Vi49PrIwrvPjbLo498KKSx/l0rIyoy9GPMzmftAv92P3i37Q
L/pBv+gH/SKvHHZfo1+XFrm16yRVdYa7qh3mfVfswy482OxK10Gh1KLC61Mu
Nlf7qtCT2FfFPiv2N7APxXZZh6ozktZk0qsv8l57kZdLt846HZ5MCl7crMb9
5bkUZJaZNHfHglGfvpZLe9LeWLFsVyZVKdHrz3c/zaWNw37xbr85k54M/uLP
rr9nUWT580GFX82i9ub+trqXD/f4rTgwudz3BVU7vId2eA/t8J4pTgZGUfWi
898uOj+Y5r/m3CGJotlO9MwKZj8Mfhn8MPhlONeAfAXoc/hpzc8Gzwn6MJ4a
b3IG1PayHNTj30ouwm/COQbY2bC7YWfD7n53unNhZ9Icc33v5XWH/jF/fR3G
8TkL+InwG+EXwk+EHwS/CH4Q/KIxQ3I3VYp2cLwe/uInjn8dhWpcZL8O5yrg
B8AvgL+Mcxzwc+D3fHFuXedz61LYzoNfAj8F8hVxBOSrmGR8LZhWfnbK+Muh
T8Mftw1/HMLnNBCHwLpfbgYGQznOgLgD/H2cO4EfB78Ofhz8Ovhh8Mvgh8Ev
g9+POADGiXHX2zrmzpK399L3deb3mGrwTXiN9240LbyH6jdvXHDT1HjKy3H+
i6R9zrSggHt8DofHacchEJcAXUAn0AV0yrxw1PgLpPumAeygYts8jb9s269R
cpLjxTa+IDc9t803NMxJKmxwX3K5NI5zIO5xybDCr/b3431bnCOC/w98n3am
p41R54jwHPb2+CV34/q9k0nmNlhWCpWvPufWyn4ZNKtV4QO7annTgNcKjh7l
n8XnjsB3OYv7HFttzGPOkV1tzxjzKrYpITTCGPfQdhFbinRUcQvEMcxwwM39
HM+C3Qw7GnYz7GgznalvDHkPdbtZpEkwhS8JbpHX9A5ddrqxZYPpnTYlP9wc
Absxgu1I2JWwG2BHAL9eVdKn7oldw/evvttu9E9pZeZzifqChe7d7DbiAM2d
N27kwYaXaIxtt8KODVn4Lg2JC7bLcJbLkNOQy5DTkMuQ05DLkNOQy5DTCTtj
z0zyyuRxIy+trZ2nhrw05Kmt21/6F2deWuc3slo489Qmbll/f2lhFQfFPXft
TXsshzb+kxu1tUgOVfkx835IRA7NdKtj/HnR9rh/jL/L7FfD3qrr9X3TpRMC
aPXuSf86DmyjpUuejSlZMoDKrwooOeHL7VTu29qFg58E0uhB/y5ZaKyTTkM6
LJ/6z01a67myYvYf5+192VD6bfw/xp8HubUp7FdvhQE3GdG1b3dfuvW8SOKG
smG05VkJn/dr+dLsV3Y3PX0xkja+UajWpRAf3tfJGDi5dRHD31js892L9JD7
tMQscf7lPpUc1+Dc9fhIim6x7+W/V6p7uHYvqb1llFs6uRV9frTufPt82Tz7
PooBWXSqya73XklNpXUDFlRd1kr9/hXwCLwBj8AT8AZ98yTNeSDCGM+llc0b
GHZvB69jG92nR1LMF6MMSzKeujqLhZE8ronTs1t9diGF/mjw7JtRhn5Z2Ovz
pOVHU6jD5Ze2ta2VRWOOR1f6wCOFSpVY4R7+1yXq0WD/Lzf/8KFmT9pVPz/X
j5okTOryTtMglhOQG1i3WMeQQ5BLkBuQI1Z8KZzSzbz8FNtOzKBHZplCvRss
KLVjUCZl9Ly503t/Ost96AGcjx0aeveTJZ0jeV8I+0TmtlBiJpnHQC6nsN1X
de4m4y+F+RB8iXuFdwd9s6dIWiafM83b+NfPfXMdTIeF46ICit3OJN8fy4f1
7RLF8v77Lfu+31Jb/a46vtfXGcb/Np3jFohjgG/Bx+Bb8DHiEpCb4FvwMfgW
fIy8fsjbu4f3lVgYvZcGrSoUdnifMZ/Sh3fferqHPglJHxdhrOvI1x3G3z6O
O1j8t48OrCpm/Hny7whGrbhzeP7XqkT9S7t+KTXMU/ndmPdU0wxz8HngmbMq
lHLzS6dCE3el1Cyt8k6LrX0wsXXBVM47hdxZu+7zLys1T2e8AY/gA/AF4l4r
WvtVnuKh9MvkISHzPnvFg+23Jk4zr4+PilduH7jmRp8UGvb9gLg+lTYyPaz9
39vq99u/enr6q6fr+VzwnemN5xx/cE7kZyXRgb7XEkrUTaIan47a+vpRQ/6/
P7lyvw+TbLtkmFX65/J76Mcajze93LN8YomFyNu9SUE/OyNnfmSa9f86qNGg
7VeWR6XwODFu8CX4FHn7sF9Bj4pVE8pUTTjBeCx2+I3jvTy9+BwB9nVgR9Qs
u+PZ/g6BbL8i7x96HXoe9ifOOejnCSL4fZwLgN4HnXCuBPYOzmHAjsS5EOxf
wG6EHYlzGnju5xQzmRkMW/PNpGn7vx6/OFydE0beN86t6Od3PclhnnPKZTsS
fLnlt9URHR8nkP83o1t5NI+k7G9GFnheLPH/lHU2QFFVURyfohmGcdykoAKM
wQhhKh1YPmQM5ywsEjO0Io6hBIFgVDpAIMRkIFhojSAD8tESASbyIQjTIphj
4EcZuiQkCw7L8pEILLtvv0IFGTCjx2P/b2dq5s3c2TN33r337T3nnnfu79xH
HUezT3n4DpGsps/PJ8lIS54Pc28Wz9AjbuExkjWHj8xQbVNvaGiUkeQPY5NP
6fV8HhfyuvY6F7ekqzXmcorCfllUtNuZ6HKVjIpu60naKr6m2mqixF1doo3d
etqlehqieqrj9QfjXfv2bIxCxvDcMThkcMfgkMEdg0MGdwwOGdwxOGRwx+CQ
wR2DQ47h4hlGc3zUfA5WtHE1Ph/NUEPhuupzIwbSfus/n5XCUELZ4d6lezMU
oYrXHXoyxT93/A+CZEnrZL8lDwDzkp+n5rhbKZf4rqGSwUN20x13eX3AvIce
/HeepN4S28Sz6wz4LuyvIY8eegK9wb4X7MgqL95GTmaOYzVdTUZcutpICy9H
PchR77SdPiV90wBtq/0qSSxSkGg85E/puIKcyjou7whT8HLUgxz1rh8Y992c
NU2btpedtRFaSsgdOQOipcm8lTeTKRqq22+InNNS4Qp2wep9WoJ7ZoK7jgqq
h09UDzNk53Nw+fhrOva9eUNyvIrh5agHOeqBewAHoZllWAutI848dzO0TxPw
uCZeRwE1zYr37jAkqu92leToaEduHruCMpQbdenBmi8NdOavEeE2WwOVt72/
4LrPQFaFtonLL1nkqAc56oFzB/cOzh3cOzh3cO/g3MG945wC7NuCewcHD+4d
HDy4d3Dw4N7BweNcAti9zCefurqNGolLNwllSHKw+UMrLxPlv3sjsz3AwkHj
veWCWzR7mehAqR97MbweQa+gR9Ar6BH0CnYAdgF2AHYhK2p37yWpkQQ51bFj
E3r66Fx6RHm+kdIESyc2TLH2aGjO0WvISAtcqadH9zQulf0mapLcUFq36Pk4
K+KuVu6pz7qnTlDGSnqz1LJvin3UGC4gc9+cTz9EdWbuUmjmMPMFb22VaQ20
yEw2Fpye4blDcIjgDBEfRVzR33pO5nXY8n2jzDvyAXEl/AcDBX3eGe58jCGx
Oe/H3ZwHdKtFW2H/qoHO7o/M6M1neL8TfijsCOwK7AjsCvx0+O1nzH59ndnP
13TNVr1coyctVzL0Dud3G+iitD82KIvh/QT4DchDRV5qZnqFqI39vfl++oLz
M2q6spKe64RzNtVUxwR6VjpPk0/fm+fXh6tJ3Fryc86wnsptRl38yxne74Af
Aq4JnFN70MkjRx2mqWhxce+Wb9T8vudAmrdHYaaS35f8pz17/LFYw/tX2ojf
PUJesHw/vWf0E5Xbnqv8vp5ysM3kuVFOcUdKu64JwImq+XNY6+OKq+KKLSXk
q8+BoRJf5pVOe3YdO1avivT+//mikCvDn3vw01od7cwOa5SNMSSo/EHoFGag
uajO0SuOBvq7qODFdc/LyLah4QOBYyvVhkb/+HqEguQTc9t9LihovbZZNOB0
nYJLq6u+v3iVtgitrPzCTVTxRtLMnLOJqhrG5AF75JTSqOoscuihPzROeXfD
NCQJKA7+OFtDwyeDb/c5tNIa+y92DrLtTBwvT4tLnKYMyW6Ni880BX4W+F0P
26/lUK9lb7afuC/aUcnnqZ9R0oBwZP7810q+X+jnYuJvTb+y45AmR9+0YseF
+6Id9Av9xDgwLtwX7aDfGMe/Bq7Fug==
      "], {{{}, {
         EdgeForm[], 
         RGBColor[0.2818067236278047, 0.2818067236278047, 0.2818067236278047], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFlU9onFUUxW8yXzMZJ8n3zdC6qoJQcBGXVXBTsc24MFMVafxTEUUJddE2
/RMxVXBl0p0V06wKIlbaiC5c6kKUQAuuFKVoiYH6Z1PtxtJMrAltzy/nQhcv
78377rv33HPPvXngtalnD/dHxBdaNa2rAxHdvoiezr1mxK3hiMlGxFIR8Z4M
VnU/XvP5Pp33aj+S9wdkf1v2y/WIvpGIDZ3X9fa0/H0jmzXZ/HiP/ujb4mDE
vyP+dm8VMaG1XzEm2xF7WhHHtkQ8oX1Fd78VjvGffl/S+XvZ9hSjq7tS7vbp
94u6f75ynL0Zq5tnsM3W/HvzrBw3lPT/uda14OBlxZwo/PvL0tg+bvvdeMYi
79n00x2KGFUONeV0VrE/09tPtRcy/Fzn/W3ncVRrQb5mSuMnj1bmBL4ZcTQ9
aN55w9tz8nNVvl/V252y/1rrGeEak48xfT8k2xvCEImXPH6qzNfP2v9Rjn9r
7ei3LfXUFmt1czdfd+xucoXNwfS5UHfu3P9aOm6ndH6LWi8lZ+TUnzzP1u7q
gu9o40H5uVyY6076IY9b4u07aeXioGuBHTbYHsjagB0doceLYbzw/47evDno
u3FxdU3fn9T+tu4+FI8rul/VvoHu6l5rmS/6mhuwVj5qm5uHS3OFHok5pW+F
9lH5mZLNW7K5UhnbyQH7ONFwDHzzHj/nlNcLpe3/LK37aw3jh09yhVN66ZOG
76htJD/b2s59a9v5EQPMYMIH9QPjct7NZx3hZEfy1ctacE/twAy39DVYZhIP
ejyYtcPfet6fyJzmk7PT6Yd9Ic/LWQP4R7PwfiHnBv7RMNxPpq9e+trEo7q/
3/Q7+oDaLSVGdABOuIEr4uFrOv3fX1lXX1Wu4cm0P65crmyxbpk9bzSdE7zS
z+i0p/vOkGv2kM67m675NvnaLrutlWvAG/qI3tye/TmbmkbbxIRT4p5qmAf4
wI4ZxUwgr6U8M9eoObMEH0vF3RzYb7b87lLak++F7NMJfXtX+Pe1PNPARL/u
bnlGPS0fYy3n39OcOK/fj1KTyjPneHKClpkn6LkmDl4ZNnb6nTmCZiZTj9QL
bRzLt2jkaJ47Lff7dcU6U1hzvEWr6AU9gAlsT1WOCf7pnBkzOh/W3ikcF5/c
0W/cL2QsykA9O2nzbdPzAk2MDvv/B33wus71Ifd8rW0e58Tzoco+aQz+l9Cv
a8J8dmSzvPFLae7BxIxCv8wMeAfzdHJFP5PjI7LfpTiXh91DaGAu58DvI67N
D6V5IYfH9W5XZfyPaT/fMl87ZfNcZQxgIeepjMV8YW4wP9DrRPKBBv9KHbKv
5HkxOQM/XJ7JOlIv6op+9jStdXTeJ/z99J7wf6D7U03Xjf/tq03Xv5f64+0f
pbWEpu4ARUMsJg==
            "]], 
           PolygonBox[CompressedData["
1:eJwlk8tLVHEUx48z18fN69x7B91JELRrmQQtHEmdFj1UwkkqeqCEbkrIEceC
li01QldBD4s0gv6BiKKF0CKCImoyoYeLIjctnKiU+py+i8M9r9853/M95+4Y
Hj9yPmNmBSRAhlvMDkVm2W1mq9jv0a82m002mV1CbufNlvk+xbeFfguZq5PP
Y1u8rxE7G5ptIq34RhvMqhR/kZj9xO4h/h3fzbzE9Z2AuIHeTWwXNZaa5O+P
wcV3nPfneL9BfIz4Qqgep9CzYJxFXwHv7pS+GfVso94Qb44Fmu0oepX8AaRC
/jryNWd2sl7DB8QzkWp6rZlQmB37caSEfgU8H9BXkVc+T04x7zGIPQO+R3B3
Efxl5HSLOHTuHGMn7z/SbwLpBavFmq2CfRi7ixrFQDme65gc2xnsb/T6iyxh
30fuEOsg5zp6L9KJ/QV7ivn38uwz+j18DwJx6Fy+jcXFADnv0B8iazjakTZy
94Fhnn2WsLvR+xLpzpFz9Rz7TSAOsvCbYKfoj7Nmn4i3JqrlPo+VE2EpY0+i
H+DNeoNqVGJhduw+cwH9Nz2fBco5mBcnzo3P7LNvwmch0u7+hKrptS+TUyK3
IxVXfgN+C3cTcXUCezv6fnwX6jVjMdWuRqh5LdTOGiP9A3777ptln4vkTIf6
BwZT9frPKfj3xLpd38FiqtuqRtq935iBeZQaK4266VpOu3cMPeS/TnRLvgPf
hd/2k2b9T37j3ruGbyMUhpexuPZ/7ge1xsity4kL71GM9A/6v+dvfqWa3Tl1
bv8BwYeNpA==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.34375, 0.34375, 0.34375], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmH2Q1lUVx3/L8+w+++yyz3N/j7wsgiih1bKAOAIlE9VCQlMDKwGxjYil
k6bJS4xQ7sLQYIKN6wz8l00TWqagy8sfNA0Y2aTjjMlik6Ob0IysTlm8hFYD
Lqj0/fA9MzTDwz2/e88999zz8j3n7oQ7Vn9t1bAsy56sy7KCxoOlLDugXy66
SxPzGrLsTTH0tmTZguFZtkNzt+jXUZ9lnRpnivFO0ScqWfZZ0RfF+xmNXcUs
W6P5JRrn5KY7NE4vZ1mz5qZp7w7JrG/2d0Ozv6F/lrLsA51/h8afau5UU5bd
qH2nNT7eYhmPafxI3xckp65oHT7W2S+Ini+dXxT9D+m0SvdaKDmrNa6o973a
9N97Wj9d8z3m6Dek+ed079tFL9Tagw2e567/DDlFyRkj+rh0vU46nM991lBu
Oy0OWxVqpl9Olse57Mc26PqRxotVn3lM8v4d9Ica2yT7Fd3t5gbfjXufEf+g
+BZIRpLMTn1Plq46Jpuksb1k2XcXPf+M+N5qtq7oyQ+bYfP1mr9S8+2N5p0S
chinBo1tOJtz5zR6P3ufrtoehzROkYzJioe3ytYb/bnTh032DfuPiX5U9HuN
1hv9R2js1d0e0e8T0vda/SYW7Zd+7blK9PeweZNjjni7T2fco99IyblK+yeI
Z5zG7fr+ruY/p7FHczdJ/36dsUDCDmnMpM9x0Vt1j3eSz+Ts8Vq6RuOvtede
0cs1PqXfomGO6UeC52LFcpD3g9z8YyRzn2R9X+tbNfYnx8uImu/D3oUF2/Jo
0fZsrZk+It4d2n+D1tslr6b5Ac3/UfO/TD6LM49rrg9fau8mfe+ULVbpjp8U
vUn+myv6atE9omc3Ol4mNTtmuCf3naRxt3i+LBl/05lbCpaLzCPSbT85I7qo
tZd07hLp80wyf4/GPyfH8hat/1V7d4t/Nd9F2w679evco9LtTKPtSu5ht9fF
/696x+Epjaf1079shdb/K2Kx5OwUz/uin60z76ngPxk0/M/GN/Rs6TFN+76A
7SWnrPNmab5T83dp/ql0ef8Vmn8+91m/w3dV48FXZO8h7R2pvQPi7U6Om10a
B8u23xvaszXwjZgmV9Y1O196Sl6fOMzjQNDbtPa66E/XOR9Y4/vp3Dwzq7b3
Y6IfCt9uEr1e42u577JEPOf0XW1wDJ+NeMYfxE575CbjpKCJJ9Ze1XigwfLw
5dqCc2hswbFFjL2ica/29em3Rjxz9T1P819Mzp/rxdtWZ8xfVrC9Ziffb7p0
mymeGfqN1u/nNft8R8026S75vssjh/ok52HiUN9bku+Kz9APWx0vmx9Mpj6A
jdQLaLFnO+M7BS6BU2Ab+AsvuE4eko/LpcMb+E/0gMZR+v6ObDG6Zt9iS+Lk
+bLxApsslc3XaW0d+KzxNv20lJ2pd/wQd+AcWHBB84uSMerq5LhZqrn5+u0u
GSMXam6lZP4EnM9d/8DjbdLx1qLxeledMYz7g2M3i+d+8c/T2KtzxhWcbyNr
rhk35o4X8o2Y2RCxSsxiD2QS72AOeAN2UDvBFrB6VJyDbk0ay42u62M0tjZe
jgN8QK39as21jJpGnuED4nmjZG0oOD7wLbYR26UcPRk5uzh8XsqcO2ANOvVV
XUcn11zLOecWjd+Unt8Km9+WTJ+vON65IzG/PvK8gZoo+hj6JMcQ8/i0L2IK
TCPu18c8OLUucgEfQ9+P3cBPYVZ/2Vg42GAZdyVjxq+0/qDozZrbrHFuzTxz
au4tro069ZeqMW6g6nwFH4kzcBbdwVH8cCTi50TV9YK6cb1q5uEW4w22J66w
C/5sKzlOwMUzEYfkelvk+9Gq9XwuNz86YP8/VX3Wf6T/j4ZZf+y1P2IHnGfc
EvWOmrky6ia1pLscdV77F7X4e1/JeAFGUGPui/p7pfR/oMX5dLRi3enXyCHw
nRgAew6XnWvvFp1j+Hqq+McP99ofJGPqcGPB5wNnwBvqPf5Bxgp9l+lNK8Yp
dOlIrjO90T/Qw9GvPFq1/8FB4oG6NKXFODWffqTZ976nZB5iY4ia2eK8BLcH
A7sfSrbV6KprxZ6C8x682Ro2nEBtbbFdWL9QtO37Jf9wyfYHh4gZYgdfk29g
2orAPrCMXBwTeTq/6lw6lBsLVwf/7shbchZ6T+AOvsNv+HFi8BOf2GlN5HVr
YDZy1gbO0Ictjzy8Pbnn2hE1g1zfGHFbF7rTr9ZXnSsdsvf4ZNs/mVwXWkN/
9GuNs8A2MBwcQXf0hueJmvvBx2vugciTyblrCLWEONged6IeUXfpfcAzaiJ+
AHuxAX7HDvRuOwuXaw8jGMW+2bEXvlGhZ/v/zYGL4CM9HG+fpsDJZYF59DMz
AkvBQ9awRx59Mnqcj5o1Onjg3Rb0nvAZPCOTsX6PbDkxWdcnknOmL3D1ZOQ+
eU7+bA87gMndYZ+vJ9eVZcl1lHnO4r3SEW+Wubl1OlsxFoPJ5EVn+Bj/dkSv
0xl3XRY9QH/EAnFCPvREfeeN0xW9QVdyvf9Gcr4ejpxFRlfIoSYtjHM3xDnY
80TRfNDfTq7tdyb/oO9OjtOxIQd8BdP7w/74bFfYeUb4lB6Q8zirIXpH+sZZ
JdcVYmd08GMr7MHdh6JevBR9AuszQ2Zr0OyjNo8LffjeGbnJ+6w9YmmoYqy7
NfoxsAa9liTre65iPYYijrkr+I2v2yKu4Ptt7hg4mLuW3xD++kUyPoATYPO+
iCv8T3xwr3u1dlr8H1Tt0w1hZ3CJvp9a8IBw71MV14DOsAN+ol7Ac+n9EG9K
dPpS9AT04C9XjHe/qVq3jRE72HhWvL+oA+h5Ka6jjqAn582N3G6P9xFnvB1v
jHeiB54V/gLH9kaf0hX9EfZ/v+IYfbXqmkftu67mvCK/XkuOL+LsxbjDx5Gz
3c1+O4ELP2z2mwqdqDHUmjejZ/t79G34vDdygT7l3ahl9HrYC1utit5vMPdb
7ZqKsYe/W4ytOEbaom9Hl/1V49XvK65lJ+LdRFycjf4HG5yL/rWz0fT86FGu
iF7gXPAzT+05Fr0pb9DO8Cm+Yo14IyaJR3JkMPm8t5N93h9+3xj944Wo42vj
7tSZaeFr6tfB+BvRuOAhV5njbyhgKf0rfez03PWwP2IPHflGT2xMD4Od4WUv
skcFbpPfW6Omso/1g8HTFj0wfdGaqD3k49J4j/MupyZvjrq8MvnuvBd5K9D/
bYkYeSHiZHe8j4jVRfFGBUd4P4H1l3It/p6CPeqTa+RNuWN6TryjeJPQK+zV
+o+b3PeAjyNzY/QIjVOG+28o9B34GAwCf6g/B8OGvLnpXVeH/7gHdiOGDkSv
+D9DYH77
            "]], 
           PolygonBox[CompressedData["
1:eJwllm1MlmUUxy96Hih44Lnv5wm15TSIXGFgtdBVWzVB0NV8S3xJUUpTcwX0
wXzJFk0X1habfSs/BGYD3ND8YOtNw17W1pJsOTWlTbCtpst8qSVIb79//w9n
+5/rnOu83eec6y5d2fJY83UhhHYoCX0dh7AgL4Q6aDgTwiFoAQp/5IbQB/40
Y7wC5eF0CNPhn4NfAn8Fvov7a9Bfd30IS7MhzIWvT1qnGt2n4Kcgq4QWI58X
hTCIfAg6gayYszncb0R/DPg0Z78gexJaDv4THz05IdyNzgzsTYX+Aa9Cfxp4
H/JRdPclyAXcwtlbyA5wNhZfS6CI3K7CD2JvJT72E0sdfA38B5HvjkGnAVyN
fCjPMSrWRdhrxV4vfC78/fA54H+J4T5wPWf56G/kbAP22qDt4PehTcivEtMe
4s+/IYTV2F6Ffgn6bchfQXd61rblsybrGBTLiM5i56Bc3iSGJuwNYG+E71at
esF3QSfAtdyZim47dInYTnIni71HoC/hZyJ/FDwZ/dGEdcrB59OupXLKxV8n
OpeItQOd/diqRCclWSqEvBtDqOKsTPa5043sE4jjcBH+IPh35G0Jx3gFXAdd
RtbD2YHIPaJe+YqaJCPHrNgv4vNtZNMi21ZOym0XMfXmuCffAVdD14K/ob5l
D/wDwd/gGPozuH+Bu79CH8F3ZG27sohvAa5F/huy48TzA3gk49p8QY4fYusn
zn5MuGfUO7dwVobsNqgEvJt6/QxeBi2CL4F/gdo8iI9mqBU8SWf5fE/4z/Bb
WRjCGfjj+K3A3z0J11S1LcbGbPJ7XT0IPqV+Ip9S5BPghzL+9tvJfxB8BHvl
KddsCMWx6ExAt5/7l/E7D344OOb5sWNW7E+jP5b8d0Tu3dOc3QRflfHsNRPD
Oe7fgf4AeCvybeCtsfH/M5b2jtCuUE9twtac2Hc185r9OuTrcz2zNRnPnGZv
LrVowd94bGwg/jvh7yX+Ec7+KnBPqjfHRZ4NzbBmeXLs3BVTOXg++Z9RjfNd
43FZ56adoN1Qi7wPezuwvw55J3xeyvWugt8Mfxj5G8j74NvhzxW439X3B/E/
Sv2+hf9OvRh7V6mn1dtnY8/mLHT2kktxxrO4jRh6kT8ce1dpRh4C/018AwW2
vQtckbXuPOx1R+459d6t0ETw4bRnpQu+E/52+JdT7qUm4p1FvCMp5/YsdDJy
L6sn1ZuaWeWinlBvvIT+zYXOdTzng9y9UOBaqIZbYueyBf0XwXmRd5l2nnbf
Us6WwzdCI9j/OONZ10xrtjVjmjXNlGZrFPubU471mXzXemaRsWoe0DmU4zej
CduHItdCNVft13K2Numdsgb8Xuxdqp2p3Tk99u5Wj58mnomFzlG5HVE++C5N
uzaaycfRb0h6h5SBF8eeXe3kevCx2LN3ini+BzdCTyQ9gyvAz2OvNe3ZVs+2
4uu1Avvqh2bjvyJtrLovi10rvWF6y/bErq12lHaV3ky9nZqRWmpXwf27Cj3L
2hFTCr0ztCsG4bdzZ2Pwm/IqeL1iAu+FumP3+udF1lXPq2fUO8p5ifoP+c4i
z5pmrD7j3SsbC8Hvxu49fZPd2h3anwn7PB/Zh3xpJ56Fn5T1bGiHdcBfS/ut
Vs0aYv8j6F9BPaPeaYtcW/1jJLh7NPbu0T+B/g2ORt5d2oFD3J1MvfuLvLO1
4/Rm6u3UP8LC2P8Q+pdQj6yG/yb2W6c3QW/Df0wOOTA=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.40625, 0.40625, 0.40625], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
bI3/LeKP+CX++T+iUAVr
            "]], 
           PolygonBox[CompressedData["
1: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

            "]]}]}, {
         EdgeForm[], 
         RGBColor[0.46875, 0.46875, 0.46875], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmnuYVlUVxs9892GY75zzYSpGiReEpwwcMOXJyi4IAloJihewElCRi5GA
iGKCIKEVioplGlp281JPXsgLyAyKTFkhg1YIqGmilcpNzXoU6/3xLp7648ze
3z57r7322uvyrnXmkPFfG3VhIUmSN/WnqDYvJ8llevqqP6Rbkpyq5yz97l9J
krv0XK/xmdUkmaFnR1OSvJgmyRStPUVt/1KSLNecNU1ex/oztXZyweN9tHZZ
LUk2qn8kc7ThKvU/qfFjy6Z/jNrXmpPkHNF/Wr9/F21f0Vim51Wtm6b5z2rt
V/S7Q78vKblt4xzqt6t/lPrNovWK1t6m/nSNn65ndZPpPRM0O0X/JfW/XjBP
vO+v+Sdo/LEm8/z3Zq+Bb+bC81N6N1hzjtWzS3S/miXJfRp7t669dMYxWrNT
8yapPT360zXnIs3tyryGtUeIfkHrRsW+l+hcs/UcrGdqwXMe17u5onFjzfOg
PSloInPkfbjW3tJIktc151a1CzT+nMbP0PgU0XhUc5/V7xd0TxNF92S1b2Wm
vTFPkv0rnjNC89/V/FUa/yBrNe8fovk90fymxhfp+afk+rLWLhadr0BHe11f
sezH6t0nxdv3tP6eonUD/rZq3R6Nv6F5I0uWf7+C95xT8L6XZ+6fKZpjtbbY
ZN14WfzdqPGJGn9Uc9arP1/9vuLrCD2bE+vFTRqfo/5GtU/peSl09cYY39Qq
et11nmbfM/pws9pxovHTstf/Q/vu1rNO/f30/sN65uh3q56nNfa86FzQkiSl
us90scZ7aM4pTV73tp4tmvdl8ddTZ3tBvG/QWIee78c9Hxl3jX1MrNhGRmfm
Z5Tagp739a7cI0nWap+i5twg+Y8pmpcmrZ8lurdo3UVq11XNL7Kqaayg/j3q
z1N/vp4E2ai9t2QdQJ9fC52+u2h9WNkU9xN3hJ0iJ3R+d5yJPdBNdJTzPine
zhX5X6l9T3x0w67UdmndhmbPxWbvLfp+esdadHu5eP6z3v1N6w/XXn9X+xs9
27S+j+i8kvsu2BPbXFK0rNkX3Zod/Tc179d6P0Py3l2yTe6zrcFhOytS+4qR
aheL9tV6emqvF2vuP9LktUsrno8PXBxzeEcff/iL1Dzsrz2bdB9donmlxual
1kl0k7ucGLo9tGF/MURtoWG9vEpz2zT2T9FdJJof1PgU/V6q8adE+9KKz9fW
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
            "]], 
           PolygonBox[CompressedData["
1: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
2BseuzdphmiW/A8Vhga9
            "]], 
           
           PolygonBox[{{4107, 2823, 3489, 1372, 4402}, {4399, 1370, 3655, 
            2814, 4098}}]}]}, {
         EdgeForm[], 
         RGBColor[0.53125, 0.53125, 0.53125], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFmXmQVdURxu/Mm3nvDQNz373GyIxJLARFNCUg4BIFNYkVNolL1OCKGGNA
GKMowgyLVuIGwrBrSpIykVSCIFiVCoKaiAsF4sKAIlEQDDOWYkTjEssqxcr3
42uKP+47fc/tc06fPt1fd5/XY+xNFzVXJ0kyWj8Fte1VSbJIxDmij0+T5IDe
786SZF85SR6rTZKHxfcnfXta9B/V/kbfVonulfobPPeqf0BDktzVLUleq0uS
lbXmWaz+h4oeuzrm+EfQvStJ0r8mSfYwX32S3KexD2jNRzXveMmzWe28zGv/
N/M6K2OtTGMvlpxHVbzGGvUvUrtXa78p+l96Hiy7PVl8szV3z65Jsr3Oe4Cf
eWdr3nWi+2itD7XmNO2ntdoyl9WuEs8wrdFH9FC1T4jnn9X+Bh/8LZp/ccHv
Z4v/B5rvDD1PikbRG/T9VNGDpJ8ekmGbZNgjup/6n9O6g7TW2trD+3giZFsb
NP2z1d6v54eiG2v9Ds33dcE/R/McKfo00RO17guaf5Do5VrjOsn3rNo5MfZH
nFfok/lHSVc7xXOrxq3QPIOL3sPr2vMu9d2Tej/0PaX2Ir2XxLNV+usueq/W
ukX0bXp+L55b1fbSfD0L3ufP9T5A8wwR77SSac5ltd7ni2e71nlOevmd5Oih
9wni2aPvN3CmGjtb/GPF+1qeJO+KniW6rdprsTbyIWeNvu/qojV13p9orjs1
doV4jtX320X/QfRktS9L/71Ef6V129TOC51cn5nOsEHR56lvpXgXqG+hnh8n
1i/vnOmFZeuUsQNrvdY9iXnhYfwLkuUUnXtHncfMrfW50LbF2HmS/RHR+7SX
lsz0VLWNku8Y+UiT2vurLX+HeCbo2261R6aeY27INj/mhH4ttY/slfz3SS/P
6ryGqN2v/k7p+CO1+/WtVTyliucYWbJsl6ivv55aPU3qP79ku2sMHmQuaI5h
mnOj5CqK72d6Bqv/z1rjU+llWW7e82NO/ORajRkiemzB9EjRb6ntKNtPptcZ
A5gL+7yyZH+nvapk3faJfmjsemzMs1LjOqst+0L1XaOnb6wJT02V2+vCJh+S
fI9p3OvSwdQq7wH5z9Tcpdg7/VOqDo/tF/RMrbOtyj64Xjp4pmj+GZJ/puS4
WrzTwbKy50WWMSEPe2OP2D/4hD9AYz/skX2z/iUhw5c1Hj8iMe/0kvEInINm
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
L7zNcc/IGp2htyHx38Fstf8H+RGKnw==
            "]], 
           PolygonBox[CompressedData["
1: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
Df7/W0iZWA==
            "]], 
           
           PolygonBox[{{4685, 2887, 3378, 2290, 4773}, {4771, 2289, 3376, 
            2885, 4684}}]}]}, {
         EdgeForm[], 
         RGBColor[0.59375, 0.59375, 0.59375], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmXuwldV5xr9zDmfvfb5vs/fZG9shVRAxXsioiYpGUVutIxoxBBAEk3CR
qGBMRDNpDBlBRIlAp50YVJJ4QQQv0Ro4NiW0EY3YFlBjMySS8YJmxkQ78Y8K
apvpxenzO8/jxD/WWWuvb613veu9Pu86RyxcMuOa3qIontKfPvUP9xfFWvXL
1Cb3FMX5ai9ovLleFPNrRXGefrfU5qh9QfOfKovifn07VK2pueVqX9R8ve69
0CjVblBrqD2o+QfUltW8dlnWTyi9hzMu0PgX4mNKj8+Dxmat2dIoitk0/X5L
ayeK50s0rno8N6C2YqAo7mqYv8MbprFXe5/W5e7u8fqR2nu02jV95uHG3OV0
nXu15lbod98I8atxXW0xvJU+E76H+deaP1M/V/NtjT/R8PhSjc9W/w2tO193
eEzzb9Ytg8man6V2ntqdLfGSey6L3OCBsxaV3tOrvWPgVTw8J3qLtWaP1rTq
vsOHvxepX1C4XanxfPVnicaZpe94lM64Njodq32HiO76wjT4zv62+Ll6pPiV
/G7UvuWl5XCFvh8W3c6CF9Faor2Hqp/K/QvrbHJ0Ba+j67aR76qti/zn6sxj
tOcGeCytC2TyH4XXDKk/RjLfFT3NEY3Zasf1u+cO8D+o8W/qttP7de6R6hdr
fqbmxuee80rrAv2wZkzN3zj/6PDAXWaG7vMt3+nxlvdiy+gRWR1e971uy32e
1LptbelXtjdb/UHJ6x21j2ndUMNnYg/zRedrA6Z1eacofqW5jtZvqnstclqo
+V8ie82v1tzvav69LmchkyMa3jtD46JhW0UXOwrzBD9DGW9Vf3vbdjumq73I
RO0M/d7Q79/zCtN6UesvLmyj2Cq+tKXfd8Y2fi3eRmp+n/rvqD2pb7d1rA/0
sDb8cA90vSK+c7naLRrfWpq3d9W+rfEb6leVHv9K47u19zq1k7X3HvU/UDtJ
43E6/8Waef5wz970q0vTxj8Wxx/xpfNL835B/AqfwrcujH/RPhMersx+4sCt
oQk/8AE/VxX29cXxwb2hSxxh7aqsn6Zvv61ZnqXGA3X73lbRuLkRmai/qWE7
b0m+KxuOVcSmu3JfzrylYZth7p7M39uwjODrHLXf65zn1P6qKRnrjh8XH7er
X9X0/e9Tm6ff40p//1LWPCWfvqayzxAvFiVmXKXvi1u+30nhlfj8ZOlvS7V+
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
BWsn5a2G/6uclvH/A/NN5yE=
            "]], 
           PolygonBox[CompressedData["
1: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
            "]], 
           
           PolygonBox[{{4377, 1352, 3644, 2818, 4106}, {4097, 3492, 3352, 
            1354, 4380}}]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.5416666666666667, 0.5416666666666667], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNmXuUleV1xr8zA8z5zpk5c+aM4gWMQUxFCVUTMKFRA4kGtTG2abJWinjL
H9qYVmTAZFVTEkBSU7BGqsxERBlskkayGgWMJUnbGGmNSpcXQNHGWwXvghcU
cLVOn988zyzzx3fe/b3fe9nvfvfl2ftM+OrcL17WVhTFw/ppV3tToygeqBXF
42VRDOjp6yqKF/TtFH28akxRXC+6VP+/6nlffRepb5Po90Sv7iyKu0XvE/2Y
xp1bLYrnCs+/U/2fUNtS+296Ro/S90pRnK8x09S+o3X26hkrepG+/7OekzR+
t9olpb99Ue1/a/xp6v8z0b8Tfbroz+oZ0N6fUfs5PT/odP9inWORnoWF94Du
Ufuz0uc7Rnz+Us8NGj9L47+kvqeqpteob7Peq+LzWLX36WmIvkvfn+owv1Pa
3MIzvLAW+y7S+1lqm2qnq+8M0V8XfWSbeT9N9JrSPMP7zlZR9Iq3XWpn5jyf
0ZhbK36HvqlZFJ8UfURPUTytvTZl3RfVPhmZHNpm3s/S+GM4q/Y4Vvxt0LNP
z1L1v62x74b3H7S5f77k867694/5oG9/xi/Rc7nOe1DFsj09/J8WWUMvqHmf
Ab0PlpY/357Qmr9o9718uTTf8IxMVnWa/tuq73u21hkcXRQXa50V6u9S309L
j0W215aWLzq0WHS32tf1XKjxr7VZP9CTOVrnBLUL9KzV+Ic19wrRt4nuFp//
orMcojEP6P1Hpe/pNfGysa470dht4mGl+o9S/0N6v5F719hHRN8g+kNt1kHO
yRl3aO736tbji9X3j9yr9nhLe/xc7TLJ9u4O0+jhd9Qu6rD8H9L7DtHr1T6q
+fM1d1B7DYq+WvRKxtVsX9gZtrintD311azfrPl+aTtBBhPRI9E/0TlOReah
Gbuk5juaH5o17tKcZziP+F3RMv3Z7qL4lL49lr0WZS/m/mnpe+VOsZV1et8q
nns190X1vdTy9+Wl7547X1ZaX+8TvVfPGu21W2O/OsZ3+E+a8476r9K+t0ie
x9X8bVbOzf2ij4xBJzeona2nt2LZcqcHV2I3sZfFFfuqPsnnIK25uGEf9CBn
b/hsb4r+ruh7xdtbor8n+n7Rt2juye1eA7/2h9ia6EL3fJ3GDOl9gugVom+X
bI8WfaPoO0S/o3WWNaxfU9Tf1/A5jivtP/GjR7RZj14v3I4Pja6ip7y/Wdhf
vFFY727s9FjsHdvjG/7olPCJDXKv3PWQ3tfr+w81t2y3DeF/sCfsjveW2kUN
+0J4nNewrCfXzC92NU/05Xpaej7U4/vlns+s+E6QCfd0Ye4Rv0PL96Gq/T9x
oJF48Gxhud8ZvRqv9pxR9sNj2ywX5PBp7XdqYtDF4usb4vUjer9I9ALRR4me
p3aO3o8U/aTu/wk9m9qsO5c1zNO5ai9Hbuq7RO2fNOzPvyn6EtF/gMxEXyB6
Qs02+nRsdiLxZ4zvHj+xtWpfsV3POD27NOYwtRNyV0tiI9gUPmxfm/3Yzopb
fCw+sqfddvQaPl3tAvVvaJr+C+n/qxX7YMYPRE74vL4O+3/88C80bpXor6ld
Psr0FRo/ZYz1cVDvBypuOQtnWhv6hqZ1Y3fT+rhmtO3k+qbHvNT0ue9U/zrO
oPefqn1F7Yyq6YHCd78u9B2lfTJ8bop+j03Mo32g8D1vbndMx9fh5yaLvlby
/1W7ZXqInsOjJ8j1qMgWf9zf6XfuYHJi67fjR4m/yOajkQ/jPpy5rM1a3NV1
nbYfvnEO7AT+10Ve0MSzQ+Ob8V+Hhy98Cu2WwnFoVuLtiB5sLSyDa6qOTXf8
3j1MV9+JVcv3HvX/epR1lXsYHTvd02Ffhh/bHxrfvqNqrIBvGxL/v6nbj64k
xpa2q4tKx7y57d7nhKrv+nT1/b3GbWOfLr9DD8mWH1D7N9KfB9HrxNML43Ox
bXz6TZ3203NK4zZ0d1iHQ6N7Hx1j/TuvtD1jy6/0uP/lHtvxzZ3un106ruOT
JtVs0+gaWLCp/qb6z4WX0LS97N1u2Z2Yc2GL55TWg+ux69I4CT+DXJDJzMj8
PclznNY/pMvyQQeWRw/Q/VNK2+jtiZfEbeLA2zXHgrNFj69Zd7GJT5e+00dE
zyitt19R21FaVsjgtzXrO7EaTIwNEzcqdceOFeo7u7SdoNdfKK2T3Bs2hh7i
7z9fOhb8g+g/Lq2LnGl6zoWO7Am22Cp+ZpbW9afTjy59qstY9m3t/U6P9W5P
0/qJvxiMLczIms/EBzL3Wc1bW7dOg5HBx+g9uBUcQKwF64HFwYXf7/Qdl9HD
mdHFycST0rGKtZ+JPyIWgQvBgVW1f17ab6J3X4k80bU50Td8/JPBS0er7/zS
/nluzWsenDwCfA4Wws6eTFyYpLEXlI7rvLMWtgd2Jq8YxrOl4xb6g75cFJv6
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
mvf/B3bPdlc=
            "]], 
           PolygonBox[CompressedData["
1:eJwtlllsVVUUhndLC/fcfadeBmNQkEkZHcKgZTQxMWo0GJ9kEJBoiYCgQUWD
JAKKAxgVCUJRaQvBIYpQwKQmGiZF0AcFGR4EVMC2gDjQViQKfr+/Dytnr73G
vfZa/z49ps6+Z1ZpCGEVVAYNz4cwkI2boOoC32wI+2IISRLCOGhkMYSt7UPY
lQphIeu7cyG8hU5NJoQUDh7jO4W92vIQeqZDaMDfmZIQVuPvE9ZPIH8Q+Sbk
fZDPxrYjexvxfSM6A1hPRd4L2VH2VlaEsAPdbfi+FvsHiHmhQwh70W0mv+HY
Hya/IroTodPYvw3/HPmtgVL4Og9fhewSdGvGe1q3QUPgp8NfQ7yT8N+jOwO+
L3wv+O7w9+d8llGJcxuasa5yXMe6Bzrvk+Mg6lJJPt/B55FPgJaQ4xJyfxnq
Tv5r0f8Duz3tiMFeG/xhaBK5boEi/mdgf4QzboWvQFbN3iF8fQQthH8151qP
wU9v4vVGfyPxxyBvpl4DyWMp8m7Ea6pw7bV3ivVV6G7LurajoRL4Jvx0Rf8S
OY3F92JijGXvT/jf0s5Zue6UnPqfx1cbuT2dt+6b2BxMbHMOqmPv8jKfcRA6
5cSvh5ZTi7nEDtGxPsXmR/wVsLkMegXd1/lOwF83vvOI05+9S/TPB9gvw34o
9rdj34bsHDlsUJ5Z3+Wz0CPEHo99Tbl9vITNKmxP4+OKvHtzju4s7R6dia8M
excT11y2jyLvnraP/vjejc4+Yo1NfLZWZHvb+Yyjc74T3YXuqJkY1aXu+StZ
V3G+Smzr2Hut4N6qyrn31WN34b8T1BfbOdC0nO9Ud3m1zkbsh+DXJe7hQ/BP
wn+WuOe/ja6paqkZXVT0bKZZLyN+I/IxyKfAD4COw4+Gn5w45glijIA/Fz3D
8/OerafY/7XomdPsbacWK+if9UXXfRA6I5C1atY56zH2liG7Je+1MEJY8SF+
Hsb/BmItgFrgp8OvT1zDe1n/QNwXhCeJZ/cY/OKUZ3g1NVvAvTwDTVKvIJuJ
zbBS+9SeZMKsSmIvIp9O6GxK3JOdM8YYYYv2voiuuWqtO62JzlG5PQ8/K+uc
lIswqVW5oTMe2WboADFOlfjMOvvSgme7lPo0sl6B7V//z05X7Gux/z3t2emC
3nXYrywzpgnb3it6ltSj05DdWTD2KkbXvGdYsywMEZb8gr/N0dhWBx1lPYqY
k4jVG9oFv4d4K1l/jXwyOS6Hr2rvnq8veBbUo5tZb42eIc1OLfqds57B/2ZP
90W82uja1ENn4T+O1l2b8l0UM8Ym3cnj5Lu9zGd8A//9kH8encsdiXtGvaM7
nczZTyCbrxlD1g9qKnhWhPHC+l7RGCtsFcYdiMZYYWshcY+qVxux6UY9D0a/
CXoLKqBvot8wvV0pvTH4byg1Jg1j3Vg09tRQk3pyuw39wVljrzDmy2gM0Ozv
Z29n9Jl0lq/g5+j9yrr2DdBJ/HXE3334O07tbygYuy7AX896Ys5vit4SYcya
6Bqrtur5ntEYLWzWm/JidM1Va70Ruusj0W+T7lyzfDK6dprpIQVjrTBzcMGz
/3P0XQoDVOsuWWOBal4X3ePqbc3gDs0febWw3g1d5DxH0575lqIxRdjSCv+u
sKBoXdmUdQyhXcFnr4A/jqyp6LtRTZpZ79e/hGqW+I3cEt3T6uUaaKTOk/bs
tCDrk3fthKHC0nHIz2Ssu0gYl/YbqrdTMyqs3B6duzBTsf7O+K4Us63CWKYe
aGXdgfu4GfnZxG+AsOmfjO9aGKXZaZ9172iG1CPqFZ35HfKZl3ct9CbqbdS/
RCrr3tM/hbC6Q9a9Ksz+qeja6M3T26d/obkZY73+iY5kfUadTTn9C9s5VqI=

            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.625, 0.625], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFl1uMV9UVxg/zvzD/y8w5s20ioEA1McUhLYjNDAPUW/uEWFsfmtCkkjat
+ABtmlRKokbLxMG5MOKkDDO0jRhmpja9PAzKZcTCg0xibG1r2sTa9AFty4xE
eoExxqj1+/Et48PJ3mefvddel299a53rvvW9e77bkmXZNxZlWUnj/nKWTWrh
st736lmm5xGtr+jIsi2VLPt3yrJ1tSx7WU+vDjyrvVU9U9rzjL6VtTaSZ9md
LZ736fyLVX3U+7iGs1W/L9X6m9r/gfaUiiw7qXu/tjjLujVes8jfhzLfxT17
9IxJh7rkrJH8ab3PtWpde8Y136zniL5t17heZ5foeVJyn5S8+3TPc6EremBX
X+wZ0p2rpc/bmpc1L+k5lFlH5ux/QuM62f6CZG3Q01O2LQvS53bte0fja9Lz
aa0/pWdJM8t+0JZlM1pbaM+yV3X3X6Tzm5p/qp5l/5Q+w4stF5kb9W1W41Sy
nNdD1s16b+rsDzV2Vh0T7OV+/IMO0zo7oT3ntWehxf68pHEef0tOj/ZNyk9/
rVm3iRbL7Nd6kn+u1tpVGj9dtk8Poqv0vA07td6l5xbNuzXOIFPzRsSc96PS
4ZjkD7QaK9/UuG2RY7im4pE44qd2vbfpWSFdluu5MWK1quRYdJY+WTshOXMt
lnWkamz8SHJe0toJ6fCo5m81pLf8XNP7f2T/Us3f17gt2Z/4FftmJfN+PY/p
zgnJvVcy84ptwYZ3S/YX9321bD3QYbzwnrHC+va3WtdrJPcrWt+i9QnJWaWn
i/vKxgu58Jp8eAdr2nOscJy3JmOB3CCnbtb6Jq1/XuPawti6qXDcXml17Ijn
5RbHdLAwTlfkzhP88rje57Vekg7fTsbz4GLjpUs67JJPTtWsd3/ECFyD9aOS
ORYxv6T10civz0n+lPZe1rmt2re24tzv1p7jrY4xccWP2I0t4OELZdt+Tvg/
0vB9A+Fv7iX2YADMgCn2M7+zYn92ac+IxnLF2L4+OR53yb77AiPE/YDW6hXf
hb5Nzc9oPlL4fGdu2QdCn/eUczc0Hec+2TTYamx2S/6k/LQ+2af4dr7DXNGo
mC/Q95bQE3/DMfi8GVhmHb68FLkJ3xALMA92e4LL1uaO6XBy/rKPPQPy02jd
PiV+nJ0r7FdwhW/P6/2numOocF6CXXALrvEPWCVGa+JefLMpbF8vDCyV7c/X
nDcDkTvwGfwz1eJ8boYtYLbAn1q72G6eaNW9k9JzouF4PiNM3dg0p5CvqyJf
flzY55/NnQsjwZPYdFPodlk2/kbnP9S4Ws8e+bQzue6citpzhe+r5vTh4Ei4
DxlrQw55tjHkU5PA58O5c4z9f2w3jsEHdeNw2TgDY3AJsewOf3SHT65gMHA4
LjkXZOuh5Pj1RLy+HvlALoDTDaED93+n6nVyb99i6zwqn4yCxcj1jR/nSMmc
S+5dhPeCm3cnz/8g/X8p/Xfq2yu55Q2HzJWBVfhgZYf56gI1Tmf2SfbL+r4p
mWe+qPmv5O9mw5wIptGHfC0FB+DL8lXCpPZdSsbFcGCDcV/MqZNDwS1vKP5T
DecS39jTK1EXhOX9ba5Js1XXe3LgoHQ9rX0P5OaObZEXhwrHZoPWOyXz122u
fy/mtgWb4O7ZwNjvc2MSbMKJ8BQ+Hwlupd6SN8zJnZ7ctfTeZHt3R32HI7EF
P3IfvmHfv6T/QelwtuacIDfgFjiM2tEV42TMsQ+Z9AtPFMbx/sJ+hUfw7UzZ
8aZ+PZqM8+cKc1Q1auiBunOVPF0lP3S3uxeAh0YjbmBlLOSMxxzeoa4fDtye
Cz5nD9+Yw0sz0TOdzK37U7GfWA5G7GZz+/kf7cZOX/R+9HEvxftbHcbBXIf5
uC84mf4NO7mXO6fj3uPCyPk2+2xe45eariv0j+R4b/SIe+MuYrujZI7Ft2CI
eHEnuiJze9Rz8EAPuDrWD+TubeibVtbcZ8BP8O5s4JCz1BKw9WXp83/pt6vm
GJ6Nu3ribvCJHuzHRvqMlSHzQdnxgPy0ru7v26M+3R9z5LO+I+aNhvNwNvrc
k+GrHaEP92zPzdG/SM4n7O0NXpqIHuOh3LG4G+6MHCfX70mu6aeSeXJL1TxF
3Ztsc+2jLyeWvckxOdGIfigZ+z8pHI/NgSsw+JmmcQjv0z+RB/Dckrr7Tbh/
WfTSreKQW3Xmv3BI7r7lXHIPQd2lPlFvL8YdR6Pvn9Y4nyxzLrnX7w0d4Db8
js+pDXtiHR24n9wnfuTrXNzHvW/EvfA1ezYHz1K/n0+O8+lk7FNb8TN9EvnH
+YXouTh7W/SJ1fA7/n8wN26Zgw38vSXq0+74j4ATsHkw+qU/J/d2f0/eh258
hytPxb3wInb0xDgf8+s6PL9e4/LceT6f256J6ElOh11DUUPIBb7BN3vCfxdj
jXP7kvPi1uS6csW/Ov+n+Md7NZm/no2eFh+DI/SC4+9uWnf+aehTF6KXOBOc
ea325G3OmWXRL5Lj1FW4EY4Ed3+rmI9+GxgGy/w7we3EoNRwrw8OdkZO9cc/
wq6I+/dzy3shGSvLo+e9NneNH4ie6krPGv3o3sAtvdeJ+G/5XdRcau/Pk+2b
jn778eA6/Ncf3EAMt0Ycl8a/Lv0AeBsPrOJr+g3yvSfw/UiyHTuDH8DgYNSj
/3XYFmwaCznIAEfHA0v809JD3pC7zz4WvT0+2xqYp5c7EzGh9tYjLjOxRt0Z
zI0r8PW6fNzeZt6E1/qi/6fPpRbW438BXbClVhhj8C79B7n6s9zxPBz/wmCa
nCKOHwFCCxUs
            "]], 
           PolygonBox[CompressedData["
1:eJwtlUtsVVUUhje9p+W+z7kHEzFQWjFGKEGgKKXFt46kPmfowEhC1IE4ETCp
BIPRhAIijW1t1aixVIxxAqHQBzqRJoSHipAAxgEP8RYjJloUTUj9/vwMVs6/
9l6vvV7n1tWvPL22JoSwAYqguBTC2UIIc3IhNEB/V0J4sC6EUm0IveDPuZ9X
DOE0dx+jsDwNYRf3j2ZCmA8uc1+C6nO2sQ48E/kR8F84GoxDOAJuhn5A/iC0
l/Noeghfgw/g+2gem9kQBqAJfP4+LYQF+LgMnl90DPJ9Bhu94P+Qv4b/Qznr
7i75TjYuYvMq9mdyPgGupsZrsDcDfAf2mqCzOb/pGXT3F+z7Lfiv4Avw45Fl
poihHd0l5KO24pwoN3l89ICvYasT+efR3w8Nl8kp9w+gfwr8bgKBJ3nTneAN
xFBU7jh7DXyZswj5LvgucBXKwO+E3wn+GZk+4pjA31Zy+QT+lmF3jLMB7Gzi
fjPfMeTfAB9BZjt1fZmzo+BjygNvmkR+kPgeQb8Kv2q6z9qQ+QTdn/D5Je/J
4nPLNMeYA98F3cN9nvsr4IeRX0ksJ7jvwl+Gs+vgm/BzgbheLdmnfKkHziMz
WWOZC+Bm5FdEtrk0sU/5/hS+FdunYtuex9kU9ydS947e2ApexFkrsm3QYvD7
UF/knCv3TbFzKR/ydXvsXEpHunugYXALtBC8L3HuVKMd4B+xsQ9fvxF/H/6+
hz8oW9ivI9ZfUr9VPaZeu8j9OPI3I5Oi/2vquujNO/D9B2flWs/UVfSHkC/U
2od8jaWehX5qNgruQOew5oP73ZoXZBLkH8L+afBy7NWp9+B7wN2JsWzKdht8
ocY56QMvxF43+F7obvjjsXtDNT4GfhEaiZyTvYl7VL2qNw+B51bce5q328DD
yO8BN3I/K7FN2b4PWgY+JJsZ9+C34Hd4w/Gse/gkuB2ZJ5FdSbz12NuW+u3j
5Gc7uIfcjjJPB7KeKfVqBz3bnHfPaoY1y+3oz0H/JXxUs45pBPwZuv8gP8TZ
lqzxLs46sz4bLHhmNatboSn4S3nvkvXQLUXvMO2uUfgZiWurN+ltAwXvDO0K
2dTuO1e0L+3AZ+HPF237bfht6H9Y453WgP6KxLVUjVSr1sS7QjVVbZs0z3Xe
mdqd2rHatTpbAF5Xtg/Zbr6Rq8dLjl05Ww/uzjt27YhG+Nkl7/bcjZqpduew
WY/9xorPm+AbKp45zd4A1AFfrXgXK8fKtWZGs9MJzYZvSVx79bh6/YPEs6z9
+Rzx/ovMlYz/GS2pa67aa+f0I7sxdi21Y7Vr+1PPnv4Rf6r3YseqHlWvLkk8
+9qZ2p1f6B8SeWZe535R7N38DdSbeGdrd2unTsB3Jo5dOi8g+13Zu1gxKtb7
U/eienYx/GPIPxV5xsdj50S5UQ/Pgn8z9axqJ24GfxQ7l9KZm3pnandqBt8D
/w/RvgTe
            "]], 
           
           PolygonBox[{{4851, 3473, 2795, 932, 4775}, {4774, 1222, 2828, 3502,
             4852}, {4387, 1016, 3493, 3353, 4848}, {4849, 3647, 2819, 1033, 
            4384}}]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.7083333333333333, 0.7083333333333333], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxNV1lsVVUUvZ3e4w197/a0lMSgDH6BhmhClA6xrT8GDIooAsEPaFACRKUM
YqzE8iOJjJIIHQAjH7QYBUVAEDFSAVEGFUUgUaBxSAANww9gQVyLtZr4cXPu
2/ecffaw9tr7DWl8efxLhVEUjSuIoiKsO3NR1In1nTiKAt7HZKOoIB1FXZko
KsPv5f2wpzSKPsHzSyqKvg6QQ8GD+Sj6G2e2Q8lx7HsY8hXQcwPyDwsl78Ud
AXpmQufYkiiqxFqOvdugZx/27MKeLNYU7puN53wyipbhvt147sHZFPQXF0dR
P6yPFOk9g3Ujvs3E/qkFsu8zPIPw/hRkDWndxe+zvOdT3LkOtn0JG3/G3g7c
U1OoO2f5Xj48w3vLYPN2+FsFO1cGnaUO6l6YkP4p2L8Z76NgUxfWTjyjYdsB
PMOLZeNj8Pc69FyDnmacbUtK/7Uy+b8wL520+4kS2UKbLmBfOWzYgbNPlihm
c0oVt8PQfxf0v8XYxvLvd3x/FndNyCqW0+HjHjzTChTj+7G/u1B5GJ+T/Y9C
noe8nnHFmRF4biSU+5GOSX88E/FeAz3TsC6wD38iJv3xfiknHXxvgJ618Gce
dAwO0k/dy3B2Rkpn2xl3fF+NtTqhPDRCXo09dd7fgVhnIN+UEH6m4vvreAYW
SBf3LS2Q/83OV0OxcLQPZ5sQt9dg10Xo6EzJDp7LwPc0no6U/JyUVnzo3yT7
yPsbbANlk//ne6Pt34q1GfrTWP9JaA/1PQDfY9hQF2T7yYTsZD2wLr7LKTdp
53c59h1FjpYF4b3AMX+6WDgn3pnDYuvvhZ4d0LMf+//FeyN0/wGd5wqlh3cz
bynrSRcpVvSFsaI+xpBYfRH7V0K+KC3fmNPrKeGUPjLeiyxvT+kb5dMsZ07u
gx2LoWuYa6o0rXzybLPz1RJ01xtBtqSdu7643431OeSkHn6MK1EN0T7athbr
moTqvRVrW0I4YT2Qh6rhbznuC6yVIvmXsY/t3k/fV8bStwNrV1I2s075nfsY
x1POF+v8+X6S8+yRIuWDuktSijPjXYvvZwtlf1FKMv4mpmkL+ZS/KScvTTbG
mEf61dhPmKhIyocKnPnRPEw+JpaJ6e34/QLqPpVVHqoYp6wwsca6qId31hXr
PHmNeWCsiInl5sYWx5P7T+Ske3dOMaOcuWl0DplrxqfVccildFdfLtLG1T7k
NUvMBsWPcWStEUczjJkDQX4+EyQjvxNXi1zXxNKpnGp3b066eQfzOCIWv66K
ZWOL767IiaPJz6Ni+V4Vi4/Jy6ugax2+9SZUo51JYYvYI04Zyw7jear5p9G1
wPeT5q/38uJS4pUxXGwbVji/lBEDq82VzP8RY5E1R54+4vdj0H22VHa1uc+R
u9graTdtpq+bzXv0iXllnpodK54bA7/PlMq3t2HnCeipzasHTneu2XsO+176
1+raYX64nzkizxHrzONNyG8lhJ1Xg/C5MKjHs9fXxooj76zF78tB9Xov+lhb
LKxWx8Jtt3m4J6keRxmxscn1RVzdtD3URf3k2FuWsx4P5NVHy2PVUOxYM/ct
zuORvHw8nJe/9JXx3ORezJrv9W++1+Xl30dB9Uh/eC9jM9V8ddkcS65lPplX
5ndTXpwxPKjfNbhXDS5T374C+aGU4tng/n/Yc8ocnN2Cey/Clx+C9FBfvfmZ
uSA3THQ/GoA7K6GrK9IZnv0rVgy5l743JYQ17iGnEd+MC+eFiow4cgNqZEpW
9rEfzs2oJxJLjBX9rbEe8sZPQZy6wv2LPZj5Yq/iuSoOjdD/TUZ8z97DXL0Z
hFPyMLHK/kqMM75tQbrJbUvh8y7If4XsjON1NphvzBXkwtvmdM5iG51T9kNy
EPmnx3uYp+6g+DDG5CHazN8LXMvt5iZ++yoIX23GWGVSsb4T56S4hD62Mfd4
P+g5l/uIkw77RA4nNip9lvXKGibWTpk3yB+rPesQP53GP3O339gmxpnHuQnx
P/PQ5P4xz3Lqp45a65nrPZQ3+Rz3l8bC5Wnc+3FQLY0LmsG32LarZdLVHsQz
lK10fuk350jibp71V5rT6Psacyy5lrHvcY72BPW/z7EOwTOfPQN+LQnqoSOD
ZhjGjNjeaT4nrw/yHNDn13z7w5mYvHElL557PCPeIW9xnmMNcFbtm+Pqg3ht
VZDP9H1r0CxN3+jXhKBcH/Ksdd5z+AHXKPdwLiMOeGaQ65r1TT/JYcT2bM9X
F4wXztGM3ZKU+ix5KuM5Z6BngxLPB+RKcubQMuE06/rifN5tnhxgXPVxLtcN
sWzosR1fwIdi6NyLNVGmvvF9TjPRNs9F9H2m50DGssf1wv9zmzOytdo4Zq6r
zeE1sbBG/exv9I//d+jj0bx62bG8uKq/ubHa/tP3oUH717vWyUP8/opzyv89
VUEz3vEgziJ3sS7OBeX3BNZLRcIu66rTe0Yby4wdsUtZl+XfZsRN5KWDedk7
Fr78Bv7rzKjX1ufVbz4I4ocZ7sOnc8rB+qB5iHluxdn3g/pFnfmgwnPaVcgf
wl23g/ig1v1rmOfhUUE1Uu6YU9Zlfn431n7asiWIhzjLM29LnLub7sPsj3dm
Q+u5U+uedZfCp1b/z/sP5cX4Tg==
            "]], 
           PolygonBox[CompressedData["
1:eJwllEls1VUUxi/0Ffr6//e919sCiRssy2KIiST2WZK2ujCSIFDFhMDCNAor
EMQwxAW4sSZtaV0wtAzGFZOAYNswK0orYxlimzYBSoJhU7VgYgTUxN+Xb3GS
7wz3nHPP/c6tafmoee3UEMJqJIP8mgvh/SkhFDEO5kP4IYawF3s6PYSL4H3I
qRIw/o34i4UQGjjYS8wwZy/h7wNXEz8APoKMlIVQT/xh8JO8zyrmMfhpRQhv
IKuzIfyNdBEzOs01O8G3yNkFXkG+5ej11Gui3kVso/juqR/OvUbOX8AbsCVp
CHuwzSsPYQu2D6l/Gf0++FASwjP8Z7B1IH9hu5q4R/W6mzPn0M+if4DUVIaw
uNQ12vLuQb3U0UM/vexHKqm9APkK/G30Xf/jDifA30T7/kE/Cv6NmGPovczw
d3AttrfAn+GfC75J/9u5Wwu1N6Nvisa78L8CPqBe6fE0tnZkkvgZ6Hn6qSDf
8ejaLbzhMfBs5GP0Dcgu+n8xGs/kPj3oXzCL/eR4mzsuJU87/hvkLcX/PXgd
b7MSaUU/mfVbPUxdW2+mntRbDryDfO9Gv/0M9G70Pnrq5D5riN+Gbz22BcTX
I39WetZF6mfKPfPt0W9ZQF4m9qdo7mlmP4Ibon3qsQN8J+dZTiLPid8aXesg
+YvgMupnmM07yB/ELiqY25vwz8Ffzl2GqL03a86IG22J314cGYue7evkHwWf
Q0qIGydHM3gOd1hSao6IK98xn5mpZ3UXaaLmKmw94Arq7Mu7dhN4QtxAHy4z
5xvRq+hvoMQ7GMG78X8yzW+ot1ySmuPitma2E391iWNq8D+j1pupd+kpshC8
hfj5xE5BrhF/jfha7tSH/fNorvRwvjWaWzHnWHHsSTQ3VpCnrIo+mE01/iK5
J3iXC+CXMv4TxsCXiZ813Tvxc3QN1dKdLlH7TvTbiPO3wfOja2tHtat10bug
HXg1mqPiqnIukx7NnQP4u8Hj0bvdRL4RcC/3j/S4qNQ9irsHE++6OHyemEzW
HBQXx/EvTLyf4sCOgnPrT9tZMKfFbXEoq/co+K/TH9QNHsJ/ndovoB/JW4Q1
4+t5c0RcUc0L0W+ut9dMZ8OXf9FXpubQY3BXwX+LdqYT3Mj8qhLzSzHV4P4K
c0u2Yf0JWXPoS/Bg9O6JE+LG13lzVzEP8DXnvPPadc1IM9Ps9Ic8it557b44
fjZ6Z7Q7uuMNci3j7HFiy5Es8in+9Ym5IJu49l5qnziXTc1JcVE7cCXxTmgX
9Of+D+6u30o=
            "]], 
           PolygonBox[{{4781, 1787, 2891, 3382, 4850}}]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.7916666666666667, 0.7916666666666667], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1: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
cQ9r5l/jA5zr
            "]], 
           PolygonBox[CompressedData["
1:eJwtlElsTWEUx4/X9vW9e/v6+j7TTlgIG8SQNDE2SkJCYl6wYsEOEcNaYkyM
IUGlxFChLaotNkrNMwkVLAxNKGIqQmkFv3+Oxck95zvnnuF/hn4LlsxYnDCz
+VA+NC5r9jbPrCNlVh3MikrMMiguILcVmz2AKrErLDD7iK4Bm8foxuCkXvbQ
vKTZCmgvvlZBE+DLoY6c2YcS/zcJvYfviMx2Zjye4o7mrZx4FdBQ/r2GvyR8
L3R7kA9Dg9Nm/QvN5qArQ65Cfxjaz781wX11w+d3+Biam/ScNmKbKTK7T8z9
+NgHpWOzY9guS7mfLD5K8j2GYn2m3s3dzI4it+HrNXIV/Dfy+YP+smpGLkCe
CX+At5vIx6DHyLuRe+Z5Df2QH0FTEm7zEv4G1Bu+Nzaz4UdBpfADeLsFvwfM
roDVNWg4voaQbwv5TkZfS01dvLVj3wa1Zx1jYf2JelZmHUNhqRjX8dc3eCzl
tEu5Bo91BLkh6zkr92roSfAaVWsX/k4gnw5qvtlU8sjrbrYUfWnSMbiEbrT6
k/AatyPfgQah2wqG7WC3BnlinmO8VrGp5R6+fuF/EnaFvF0mxBx8pjRb9CqB
TSf6c1ANfBR7r34irxOGKe+JenMFuUfaMRE2UXBfreSThh/G29UCx1TYduFv
EjPxi386ob/YvIzc91f4TvRl0IK029yPPWflqpxWB98N9Uy9ywSPpZkrhq8N
7kv5albrkH//n3XtWj05vCaXZt7ekP8Z5HfIY/HRCP+QWINj77VmVDOmWYuJ
fxF+B/ofkfvbwFtzcF0V8ln8TVMPEh7zlOqh1k34W4jcpJ4S4xnxqsH8OHwr
/qbE3mPtyKzguydMr2rWixwzYVUJncx5b+WjDn4gurf8X5r2GW2CH0keBeR4
nnhPg8+WdirDrr0IvluHkJ8Hx0BY6Obo9pwMPnuqQbWMCG6rnq8PfgN0CzRj
h8CzMvjsX6KEp/i6TfzxfIsjv1Nfsr4rukm6TbeDz75m8iDyNuSWlM9wWfDe
v6LmLSmfAWEqbGWzNfgN0y3TDmgX7hKvLvJeaKa1s9pd9fR0zm+ibqNmsCLn
uS3KOJbKsSJyzISVetQn4z1Tr4Rpdew7oV1QTvtK/PbpZup2Tsd2OT6HRI55
Y/BZUj+1uz80D7Fjodst2+Iiv4X651TOb7lmsgH+H3Io5ZU=
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.875, 0.875], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJw1VDloVFEUvZNlkj8/P5P/qkQQzDYRjAS0EBQMaLATwUIttFEjqbSw0MJG
0SKgaOm+xCyFuGSy2UkyRmO0tBMUM2rEHZdCRPEczk3xee/fd/dz7m3ee2j7
wQozG8BXie9HYnYgNjtRYzaemi1Wm03iLObMHuGtPzJrx/ss7m/wtgpGZ2vN
ChmzHcFsC/4H82a7smZNuC/A+X3cZ6FzLiNZGbJ23Psg68XZgW8Z5KFCd8Zk
/Hc4F/CNZuV/Kitf9HMbOb3E2x2cnZHkQ5CvRG5PkNt7vBWzst0P+SXozUF2
BWcP9Gdq5Z92U277GjXOw/Yf3hbrZVeE/mRWdTKHU0G1nAzqQSFWH6Yh2xwp
3yLe/uJ/LKgX7Em+wWwf3je5znPIdmbVn9qgew3O09D/CFkBceeDatiAcwy5
/US8w7Wypd1IRr63Vqgn35DzMeg/g35vLCzZx8+4f08Um7hkI+HQWKn+E4t2
vH+JVUMbYq/G2yfGxb1MDHCWEPtDhWwa8LYHvvI433mv6hrEhWnnAzFgvsTz
d6Xqoj3zII/ot1BnNpzo/WIqHlxCD45mlcPGjPLd7XxaESkG8WCtr6pV/0yN
zraMYjBWN+6dldKlnz85xWMs5sqciXOv21D/Gfw9rdadPGU+5OTjavmgf+aV
q5Lva84r8qvRuU19YrPgPKcdc1iy7fR8yD/ykPqlGvGQOA451wtuR/7Rdiyv
tydBs1Py+ekiF6A3nBFmjHE1L+4XndvNkXrH2PQ96f6PQPYoUv3MnTUwZ/pt
9NpZR5PL2ZsR58z1VP0aTMVX9rwDZxTEs1wQP8iTNCgOe7+ED+Xs8yJwOZ/o
vSVSrszzps8O98qo11FwLOYcD2Le5bi/AH/TRPZDyOMh9tkNnAN57YinQT2i
PfXpg/cpUzz2h/3mzOyPhA9xbvF81ua1oy7Qp9fOHhDDPsdxOeKHRDaXU/l+
AI794vwl8vsYZ1WiHbEu0d7hzlkfxPvWoN1GTFkbZ/dTrLlhbOawBrmcgexy
TrEngnyMB2HLeWCNnCVyuC4IO+bMvnAuWSdnkzGGndsjjjF1uv1OrNl/7i3O
DPdrR6z5JgePOH/upZrHu6l2APULjtErj1MFu4+x+kpOca7LvhPKvu+X5pmz
UB+kk+DchrhWp3hziXYi62j1vrUF7Upy/ngQtqyLGPTnFScOwqDH8WWcksd6
C9+3Yu0X7ifudebEnbjP9/YW3ztbfQ92+yx8hV0hkV/iQ99Lc80Yk96/sveQ
facOddmP5kQ9mXB8yTXOaclt/wMIJwf2
            "]], 
           PolygonBox[CompressedData["
1:eJwtkjloVGEUha8zmcm8efNm5n92gYCRTJJCEWwEwUhGsQ3YaKGNRrHSwkIL
G0XBgKKlSIyYuBQal5lExUJwjzGlSCCgkKgRXAsVVCJ+l2Nx4dzlP3f5T8eO
fZv3ZsysF2vBmqnZYgGcmP0EJ9i2vFk+MjteMRsqmt2PzR5Rswd7Tv7SErMG
NVPg0WC2Hn87fhW/FdsCfpk1e8X7e2WzK+DXObMxamPy8xn1KIPP0PcPPX5R
85SeHfjt2HJwkQHz1MxlxFkA14LiK6nvBF9lthneP2C2U5iVzBaK4joQKVeD
b0Okmi7vR81D8EZiX3jfR2xnpJoArmLLfBask54H6d3LjsPeG39rXjP5bBeJ
Ted0A79FnZ0/4C9g4/i74f8B3wBcR1qZC1wj9pb84P8b+62dM4JvGjsE3sR+
o+RuB3Gl9JsA/ybfEusGfguf/TN+PdIO14NuvYr6a+Bb2HxO/frgC6n+6iP5
E/jlqtlpZn/CPY6Rq8P3NdZtfOajqXJ3ebMOPI79LWhH3zWlfjbWrfzPusDP
EmnKe34H74q1+35iU/g9sd47j3M69wrejsDXTW4yUa3XvEiVc801yV9gn8em
m4+AD6fS4gD592htuCJt+J+tJdcdtKvrqydIy/2JtOGadi2cjKVt10R2qdma
RLNNpHrjby8TM3KNoF5+02aQVt6VpD3XjGvEtTJJ/jy4BEdbVpofZLZKVX/r
N/fbnwuqvQP9UNCf+d+9IXYTvLqiv3eOs0F/6Hf1+zbgvhFU65r5xv6f2KVR
lLZcE/8AzJmLEQ==
            "]]}]}, {
         EdgeForm[], 
         RGBColor[1., 0.9546604934354901, 0.9546604934354901], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxFUj1PG1EQXB3YwN354A6MLbpIjsIfoIHCiKRDFDGRkgZLiUQTbEeICEGR
/ACLAkMLRvn4AUggBWipiATp4gZ3lMG/ITOalShW+96+2d2Z3ffsw6daKzCz
FdgQbDBiNj9mVkWwGZq1YI+IlRKzzYLZGd62R812YT3gpwLdeb6H7eD8F/4m
Z7aB83WgM/0krO35zBuOzXKwfcQi7/UPvfKIvUevDuLFyOyiIE5X8L9gfZyn
Ef8I3GvULgaqRw5/cL/12BLqneaFId9D5D0As+g8mLOOeqOx3kqoeYn7ak69
qYWaSrH0Uzt707NGJTWrAfscvoPcYiJt7Me+VedQC4VrhJoD53MC7Fqs+Hwm
fHfc7C6n2uQ2DcwyMIHvoOozbPqd53d4fxtrfpwRexPHnuzNO3Vwruw7C65v
EHtB7shbQI+8zz7yuvW8ZkAezCNv5lJ327V/TzXnb/BHqXZ8nGrujJM/ec/5
Tk/w9hvxbip+PJP/DOZdj8XpRyr9P+HPkfcV3OJQu+Peev6/Aq/Z9ZqVTH9h
NZFe7rAcSQOt75ypbeBznHO9rLMF7JdEb3vj0p9m2udBpJ2S46tEPIn9HAnP
XTTCpznxTl3c7ctE+6UGYtl/IpNGai0n+t/cW8tzWYe8Yt8F/0vDa/4He2Rx
Ew==
            "]], 
           PolygonBox[CompressedData["
1:eJwlkTsvRHEQxU82dtm9d++6d2V3oxPPL6DZhqBTWRIaglBJiBAhET1RWEqP
ReglJB6NmgRfgE4pPoDKbzLFyZ25c2bOzPl3zK/UllOSukETGA2l7Ujqz0kp
MEl+xzcEAbiIpbe09AGuiR/yUimQxsirWemZ3qUW6YX8hHoPGCeeyUj7BekQ
7hNztuBsgJ9EGiKvwemCO8e8R/JNanXmTZPXA+fukXfHzh1G54/eXvKJtGuY
Vpy41iBHFRKHxe/UWxO/bSr0W+xG0ypFfqtptlBbQPMbL47QW0e7Evltv83S
at53sl1uQSczB5h/g2Y18d4aMzI5n5EmnuXfJ/EB/IrdT/6V9Z2tlgn9VuOY
N4t51zaPzgo+2zwyr05j97aI5jHxPdxy6LvYTBWl9rx70kd9h93XAt/d3vAq
di/a6D8n3qW3EbmntZz/s5q98aW9XeQcq9kbm6ZpvxI3iLsSj80D82IEfjnw
22yHfwYzRug=
            "]]}]}}, {{}, {}, {}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3775, 4508, 4509, 4507, 4511, 4510, 4644, 4643, 4666, 
            3998, 4844, 4388, 4389, 4858}], 
           
           LineBox[{4517, 4513, 4514, 4512, 4516, 4515, 4624, 4623, 4625, 
            3980, 4390, 4391, 4392, 4864}]}, 
          FractionBox["11", "12"]], Annotation[#, 
          Rational[11, 12], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3770, 4525, 4526, 4524, 4528, 4527, 3824, 4812, 4003, 
            4694, 4004, 4111, 4110, 4741, 4740, 4669, 4002, 4811, 4019, 4809, 
            4810, 4667, 4737, 3814, 4108, 3815, 4530, 4531, 4529, 3905, 4786, 
            4787, 4854}], 
           
           LineBox[{4054, 4615, 4616, 4614, 4618, 4617, 3976, 4621, 4622, 
            4619, 3977, 4620, 3995, 4506, 3890, 4505, 3891, 4533, 4534, 4532, 
            3906, 4788, 4789, 4867}]}, 
          FractionBox["5", "6"]], Annotation[#, 
          Rational[5, 6], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3774, 3801, 4765, 3958, 4599, 3959, 4081, 4080, 4091, 
            4804, 4805, 4692, 3993, 4806, 3990, 4641, 3992, 4639, 3991, 4640, 
            3994, 4693, 4808, 4807, 3889, 4156, 4254, 4255, 3904, 4780, 4781, 
            4850, 4863}], 
           
           LineBox[{4090, 3794, 4333, 4332, 4331, 3952, 4802, 4803, 4691, 
            4801, 4800, 3767, 4751, 4752, 4672, 3900, 4753, 4821, 4832, 4001, 
            4823, 4824, 4825, 4109, 3823, 4838, 4822, 4831, 4830, 4729, 4660, 
            4743, 4742, 3813, 4094, 4782, 4783, 4688, 4785, 4784, 3903, 4778, 
            4779, 4853}]}, 
          FractionBox["3", "4"]], Annotation[#, 
          Rational[3, 4], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3773, 3800, 4155, 4154, 4249, 4248, 3769, 3797, 4153, 
            4152, 4246, 4245, 3766, 3795, 4761, 4762, 4594, 3953, 4797, 4798, 
            4690, 4796, 4795, 4799, 4748, 4749, 4671, 3888, 4750, 4820, 4829, 
            3979, 4385, 4386, 4387, 4848, 4860}], 
           
           LineBox[{4358, 3792, 4697, 4278, 4142, 4240, 4239, 4277, 4736, 
            4735, 4665, 4818, 4817, 4006, 4650, 4651, 4649, 4664, 4663, 4089, 
            3791, 4728, 4727, 4659, 3989, 4105, 4104, 3822, 4045, 4046, 4011, 
            4044, 4043, 3765, 4036, 4037, 4115, 4114, 3812, 4038, 4173, 4642, 
            3997, 4843, 4383, 4384, 4849, 4872}]}, 
          FractionBox["2", "3"]], Annotation[#, 
          Rational[2, 3], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3957, 4247, 3887, 4504, 3886, 4502, 4503, 4598, 4597, 
            4335, 4151, 4150, 4149, 3885, 4244, 4334, 4148, 4147, 4146, 3882, 
            4242, 4330, 4145, 4144, 4143, 3877, 4710, 4241, 4328, 4708, 4329, 
            4357, 4607, 3965, 4847, 4382, 4627, 4840, 4841, 4836, 4837, 3811, 
            4099, 4835, 4834, 4833, 3983, 4839, 4018, 4775, 4851, 4868}], 
           
           LineBox[{4327, 4236, 3871, 4235, 3870, 4585, 4586, 4584, 3945, 
            4026, 4025, 4123, 3869, 4073, 3944, 4275, 4274, 4141, 3868, 4234, 
            3943, 4777, 3964, 4687, 3963, 4776, 3986, 4739, 4738, 4668, 3907, 
            4754, 3829, 4053, 4351, 4475, 3867, 4172, 4381, 4250, 3898, 4523, 
            3897, 4702, 4251, 4703, 3899, 4774, 4852, 4862}]}, 
          FractionBox["7", "12"]], Annotation[#, 
          Rational[7, 12], "Tooltip"]& ], {}, 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3772, 3799, 4027, 3956, 4661, 4732, 3771, 4079, 4596, 
            4498, 4499, 4495, 4497, 4496, 4592, 4593, 4491, 3881, 4489, 3880, 
            4490, 3951, 4483, 3876, 4482, 3875, 4758, 4759, 4658, 4726, 4356, 
            4355, 4354, 3873, 4480, 4723, 4350, 4349, 4348, 4474, 4473, 3762, 
            3788, 4347, 4346, 4471, 4470, 3761, 3787, 4756, 3937, 4578, 3938, 
            4792, 4793, 4689, 4791, 4790, 4794, 4744, 4745, 4670, 4747, 4746, 
            3808, 4819, 3978, 4378, 4379, 4380, 4097, 4871}], 
           LineBox[CompressedData["
1:eJwV0LlOAlEUBuBDRWLB2kChCYXLE/gSVNqYYKEiuCYuD6AvoaWthWJiZy1Q
uCSojRIRY0NlYim2flN8+c/5597JZCr1/cW9VEQsMM5G3GUibuQSr/mIPm+M
7Fee7Zh32WSbLVr6w0LEhrngXEPmZVMe6Ndlzl6XWfmhGzJg2f6pHzLORWTs
a+Zack4O+NWvyhXeOXbviHleeObc+Vk5xwxP9PjT3/u+ae84NU/qTuSUTOt+
PHuwP3KZnE3+Adf6W9nmgi4dvvRV987M395R8j1lJnSpYsQ/rbkzUQ==
            "]]}, 
          FractionBox["5", "12"]], Annotation[#, 
          Rational[5, 12], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0Lsyg1EUhuGVKJxmHFuNKyAVFUqHJOTPDEnQ6OIQJa7DHVCQ3ID0ROc4
Won0KnQUnhTvvHt9+9tr/vmn946TWioiSsiPRpxPRNyNRDyOR3yNRWR5DQ+4
lV+hqjODnH4HbdTlR7KiXp+5wGlO+FD+blfRnHF+lf2YU+YN54Rf+N6OZ/52
t855PKElP/BuH7Mo6HfxgYa7HZ1dVDAs2+aa3pk9Q+YTHuRT7qCNTfOb3h9+
MaX/adeS8yKauOl9p6zMA/pb3M8lXuBVe1awjLneP5A3cI1584Wdl8giPRnx
D9vBMmI=
            "]], 
           LineBox[CompressedData["
1:eJwVzr8uA1AYhvGvCdHBvypRNoa6GgZrUxEJE5WoDirRSERdgE6MrBWxcBG1
KCMJgw7oYLEQvzM8eb73Pec7OXNr28uVTESUUJ+I2MfTaMRILmIYLZziVtfF
mfNzfOuqYxFf+EyW+zjBgnzMRW7yFn9wJd3lLIYwLx/yrvdquPd+Rg40cIAb
XQct5+vuv+s2uJdmvKV91LCDgq7Kq3w0HjHFm/Ikl7zR1pXNz7oVfkn/1RWR
T//hO/zp6/KSnT3+lQfNA2jKXXcecWUu8DRyePXXh3SOWXkG1+YLe5dYxA/+
ATD0NhA=
            "]]}, 
          FractionBox["1", "3"]], Annotation[#, 
          Rational[1, 3], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           LineBox[CompressedData["
1:eJwV0Dsvw1EYB+BTCaO6TJgqZna3Ca0y1WJUBte0LjsJu8QHMBJfwIJElbYu
HZhbvoBEmF3iOcOT33nf8563/zS1WMwVEiGEDdqpdIRQo0qyU48b54NkCImu
EPZlSX3NFXvqoL8rL9UX5PmxbEF+yzs7Ktwyba4cd/LpPiPTlGLP7IpdywyS
Mdukwam7dfMbrPKnzptZc27SoG7HEyfOA/zGfXLW+0f9B77U2fgdVCmbOXc/
Q02dlffyVZ652za/Q5Et5v3mpnzhmT71kdlRb8YYp03/3dsR52F6zfTQr59i
jhwFjuP3m52UE6RZMjsl3/Tr8tD+j/if2DVEi15rdwj/tfpADQ==
            "]], 
           LineBox[CompressedData["
1:eJwVz7svg2EUB+CXjbq0lZCYmFsJ/gbXVWIwuERs7mZ1SdpBol0sRqOEJiRN
dFEJBrHVVINNuzASRCSeb3jye895z/netn9xfWqtKYSwSpmFZAgP8RASiRDi
dJHkXi/XGUKz+6y8U99SYV99LffkldySRzItC3ZT8lDmmbQ/wTgxdSst5MhS
6gihyrH7ZXtveivyPTpT8t08BTLutunTnzV/qbfk/KrXoE5aL0Wv/kH028z9
yG++2DSzwYU3Hymbm4++4a5OI6Iuyt3oP7LDOWfU7M64zzi3yzl1mxzxzhij
TKtr7p/5dP7gj6B+8WaPnW6KegPmT+UNFao8ccKgmSGGidn9NfsP7dlB/A==

            "]]}, 
          FractionBox["1", "4"]], Annotation[#, 
          Rational[1, 4], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3946, 4088, 4074, 4272, 4231, 4232, 4230, 4472, 3865, 
            4700, 4271, 3939, 4229, 3863, 4463, 3862, 4461, 4462, 4577, 4576, 
            4323, 4138, 4137, 4136, 4227, 4226, 3758, 3785, 4023, 3932, 4321, 
            4322, 3757, 4069, 4266, 4219, 4220, 4218, 4265, 4264, 4563, 3924, 
            4214, 3846, 4438, 3845, 4673, 4675, 4674, 3920, 4310, 4311, 4083, 
            4082, 4092, 4095, 3803, 4373, 4372, 4012, 4652, 4007, 4029, 4028, 
            4048, 3827, 4645, 3999, 4395, 4396, 4397, 4870}], 
           
           LineBox[{4124, 4125, 4057, 3748, 4190, 4191, 4188, 3834, 4189, 
            4314, 4187, 3833, 4186, 3832, 4542, 4543, 4541, 3911, 4258, 4257, 
            4131, 4185, 4184, 4256, 3776, 4020, 3910, 4538, 4540, 4539, 4058, 
            3749, 4198, 4199, 4195, 4197, 4695, 4196, 4303, 4302, 4632, 3984, 
            4407, 4408, 4409, 4101, 3818, 4406, 4405, 4631, 4630, 4128, 4127, 
            4177, 4176, 4194, 4252, 3802, 4161, 4160, 4163, 4706, 4162, 4299, 
            4298, 4626, 3981, 4845, 4393, 4394, 4857}]}, 
          FractionBox["1", "6"]], Annotation[#, 
          Rational[1, 6], "Tooltip"]& ], 
        TagBox[
         TooltipBox[{
           Directive[
            GrayLevel[0], 
            Opacity[0.5], 
            CapForm["Butt"]], 
           
           LineBox[{3908, 4537, 3909, 4056, 4055, 3747, 4182, 4183, 4180, 
            3831, 4709, 4181, 4301, 4628, 4629, 4403, 4404, 3817, 4100, 3816, 
            4174, 4175, 4418, 4417, 3826, 4421, 4422, 4419, 3830, 4420, 3901, 
            4159, 4158, 4157, 3892, 4519, 3894, 4518, 3893, 4766, 4767, 
            4855}], 
           
           LineBox[{4719, 4320, 3928, 4067, 4066, 4263, 4212, 4213, 4437, 
            4436, 3844, 4698, 4262, 3919, 4205, 3840, 4429, 3839, 4259, 4260, 
            4126, 4280, 4601, 4602, 4683, 4682, 3960, 4600, 4297, 4611, 3974, 
            4306, 4307, 4014, 4117, 4116, 4112, 3809, 4047, 3825, 4118, 4016, 
            4768, 4769, 4861}]}, 
          FractionBox["1", "12"]], Annotation[#, 
          Rational[1, 12], "Tooltip"]& ], {}, {}, {}}}], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[1, 2]}, {
         Rational[1, 2]}}, {{0.5}, {0.5}}], AxesLabel -> {None, None}, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox[
           TagBox["y", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}, {
        FormBox[
         TagBox[
          TagBox[
           TagBox["x", HoldForm], HoldForm], HoldForm], TraditionalForm], 
        None}}, DisplayFunction -> Identity, AspectRatio -> 1, 
     AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> True, 
     FrameLabel -> {{
        FormBox[
         TagBox[
          TagBox["y", HoldForm], HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
          TagBox["x", HoldForm], HoldForm], TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> NCache[{{
         Rational[1, 2]}, {
         Rational[1, 2]}}, {{0.5}, {0.5}}], GridLinesStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "GridLinesInFront" -> True}, PlotRange -> {All, All}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.28125, 0.28125, 0.28125}}, {{0.34375, 0.34375, 
              0.34375}}, {{0.40625, 0.40625, 0.40625}}, {{0.46875, 0.46875, 
              0.46875}}, {{0.53125, 0.53125, 0.53125}}, {{0.5937500000000002, 
              0.59375, 0.59375}}, {{1., 0.5416666666666666, 
              0.5416666666666666}}, {{1., 0.625, 0.625}}, {{1., 
              0.7083333333333334, 0.7083333333333334}}, {{1., 
              0.7916666666666666, 0.7916666666666666}}, {{1., 
              0.8750000000000001, 0.8750000000000001}}, {{1., 
              0.9583333333333334, 0.9583333333333334}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -112.5}, {
                    Rational[15, 2], -112.5}}, {{-7.5, -112.5}, {
                  7.5, -112.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -93.75}, {
                    Rational[15, 2], -93.75}}, {{-7.5, -93.75}, {
                  7.5, -93.75}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -75.}, {
                    Rational[15, 2], -75.}}, {{-7.5, -75.}, {7.5, -75.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -56.25}, {
                    Rational[15, 2], -56.25}}, {{-7.5, -56.25}, {
                  7.5, -56.25}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -37.5}, {
                    Rational[15, 2], -37.5}}, {{-7.5, -37.5}, {
                  7.5, -37.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -18.75}, {
                    Rational[15, 2], -18.75}}, {{-7.5, -18.75}, {
                  7.5, -18.75}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 18.75}, {
                    Rational[15, 2], 18.75}}, {{-7.5, 18.75}, {7.5, 
                  18.75}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 37.5}, {
                    Rational[15, 2], 37.5}}, {{-7.5, 37.5}, {7.5, 37.5}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 56.25}, {
                    Rational[15, 2], 56.25}}, {{-7.5, 56.25}, {7.5, 
                  56.25}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 75.}, {
                    Rational[15, 2], 75.}}, {{-7.5, 75.}, {7.5, 75.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 93.75}, {
                    Rational[15, 2], 93.75}}, {{-7.5, 93.75}, {7.5, 
                  93.75}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                  112.5}}]]}}}, 
             StyleBox[{Antialiasing -> False, 
               StyleBox[
                LineBox[{{7.5, -112.5}, {7.5, 112.5}}], {
                 Directive[
                  AbsoluteThickness[0.2], 
                  Opacity[0.3], 
                  GrayLevel[0]]}, StripOnInput -> False], 
               StyleBox[
                StyleBox[{{
                   StyleBox[
                    LineBox[{{{7.5, -93.75}, 
                    Offset[{4., 0}, {7.5, -93.75}]}, {{7.5, -56.25}, 
                    Offset[{4., 0}, {7.5, -56.25}]}, {{7.5, -18.75}, 
                    Offset[{4., 0}, {7.5, -18.75}]}, {{7.5, 18.75}, 
                    Offset[{4., 0}, {7.5, 18.75}]}, {{7.5, 56.25}, 
                    Offset[{4., 0}, {7.5, 56.25}]}, {{7.5, 93.75}, 
                    Offset[{4., 0}, {7.5, 93.75}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]]}, StripOnInput -> False]}, 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.08333\"", ShowStringCharacters -> False], 
                    0.08333333333333333, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -93.75}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.25000\"", ShowStringCharacters -> False], 
                    0.25, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.41667\"", ShowStringCharacters -> False], 
                    0.4166666666666667, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -18.75}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.58333\"", ShowStringCharacters -> False], 
                    0.5833333333333334, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 18.75}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.75000\"", ShowStringCharacters -> False], 
                    0.75, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 56.25}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox[
                    StyleBox["\"0.91667\"", ShowStringCharacters -> False], 
                    0.9166666666666666, AutoDelete -> True], NumberForm[#, {
                    DirectedInfinity[1], 5}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 93.75}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False]}, {}}, {{
                    Directive[
                    Opacity[1]]}}, StripOnInput -> False], {"GraphicsLabel"}, 
                   StripOnInput -> False]}, {"GraphicsTicks"}, StripOnInput -> 
                 False], {{
                  Directive[
                   AbsoluteThickness[0.2], 
                   GrayLevel[0.4]]}}, StripOnInput -> False]}, {
              "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"#1", ">", 
                    FractionBox["1", "2"]}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{"Red", ",", "#1"}], "]"}], ",", 
                    RowBox[{"Lighter", "[", 
                    RowBox[{
                    RowBox[{"Darker", "[", 
                    RowBox[{"Gray", ",", "0.5`"}], "]"}], ",", "#1"}], 
                    "]"}]}], "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0", ",", "1"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "12"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "6"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "4"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "3"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["5", "12"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["1", "2"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["7", "12"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["2", "3"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["3", "4"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["5", "6"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   FractionBox["11", "12"], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "225"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.907656140780697*^9, 3.907656173860166*^9}, 
   3.907656709260913*^9, 3.90765916631516*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"e3f497c1-2f78-402c-a0fe-f73811798ce2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[PartialD]\[DoubleStruckCapitalB] logic is", "Item",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655474746076*^9}, {
  3.9076555428608522`*^9, 3.907655543145595*^9}, {3.907655604429858*^9, 
  3.9076556049574537`*^9}, {3.907656355997711*^9, 
  3.907656358044454*^9}},ExpressionUUID->"52e407f4-d08a-4300-97fc-\
01c8de0370a5"],

Cell["hard equivalent", "Subitem",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.907655480227624*^9}, {
  3.9076555456086817`*^9, 3.9076555470290318`*^9}, {3.907655720630828*^9, 
  3.9076557264120626`*^9}},ExpressionUUID->"0d1901c4-2638-4f26-8055-\
bbc94b5d238e"],

Cell["and gradient rich", "Subitem",
 CellChangeTimes->{{3.9076554419266443`*^9, 3.9076555022756443`*^9}, {
  3.907655549116544*^9, 3.907655549376286*^9}, {3.907655729531062*^9, 
  3.907655731530757*^9}, {3.907656363077766*^9, 
  3.907656363350815*^9}},ExpressionUUID->"94e9a045-2888-4453-99fc-\
a163ef8581b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"bb348f59-2bae-4bc5-ba58-e51b71b201e9"],

Cell[CellGroupData[{

Cell["Neural network layers", "Section",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.483202458955147*^9, {3.514308340990994*^9, 3.514308352103572*^9}, 
   3.7880179920575123`*^9, {3.907647394886376*^9, 3.907647397509075*^9}, {
   3.907647616536272*^9, 3.907647618390245*^9}, 3.907648446367423*^9, {
   3.907649821011033*^9, 3.9076498243857317`*^9}, {3.907649910303081*^9, 
   3.907649916997631*^9}, {3.907652379709683*^9, 3.907652387250379*^9}, {
   3.90765627913892*^9, 
   3.907656281335372*^9}},ExpressionUUID->"5615f1ac-069c-41df-8de3-\
6901c4280a15"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{
    "SetDirectory", "[", "\"\</home/wright/mywork/db-nets/prototype\>\"", 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}, {
   3.868604559041458*^9, 3.868604559653843*^9}, {3.868937073460001*^9, 
   3.868937074141531*^9}, {3.869042727278556*^9, 3.869042728153739*^9}, {
   3.907656565940112*^9, 3.9076565876504297`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b66a247c-210e-4e60-aced-8296a987f280"],

Cell[CellGroupData[{

Cell["Learn-to-AND layer", "Subsection",
 CellChangeTimes->{{3.907659263345763*^9, 3.907659264936202*^9}, {
  3.90766062309311*^9, 
  3.907660629644959*^9}},ExpressionUUID->"e2cf56ed-a8a0-4952-acd9-\
ab956e6a40ae"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralAND", "[", 
    RowBox[{"2", ",", "4"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9076570405756598`*^9, 3.9076570721458817`*^9}, {
  3.907657105492235*^9, 3.907657124818363*^9}, {3.9076585437340937`*^9, 
  3.907658545578013*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"816f2a30-6f07-4594-aca1-3cbc5f7e3617"],

Cell[CellGroupData[{

Cell["The soft net", "Subsubsection",
 CellChangeTimes->{{3.907659753277927*^9, 
  3.90765975483178*^9}},ExpressionUUID->"d77af7b1-df96-4fc6-b6ba-\
95e586d6e27e"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.907657126343451*^9, 3.9076571271957407`*^9}},
 CellLabel->
  "In[123]:=",ExpressionUUID->"5e361718-28c3-41a5-b6b6-6f7456a5d5ca"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {17.194921875, {0., 17.194921875}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"array\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"HardInclu..\"", "\"HardInclude\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "HardInclude", "Tooltip"]& ], 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -13.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"And\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -13.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Reshape\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -13.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Weights\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{0, -15.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"\"", 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox["\"4\"", 
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"2\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"2\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox["\"8\"", 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999852628056`,
                     0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{"\"array\""}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"array", 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999732051023`,
                     1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Weights\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]2\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Weights"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 8\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 8\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"", 
                    StripOnInput -> False, LineColor -> GrayLevel[0.33], 
                    FrontFaceColor -> GrayLevel[0.33], BackFaceColor -> 
                    GrayLevel[0.33], GraphicsColor -> GrayLevel[0.33], 
                    FontFamily -> "Source Code Pro", FontSize -> 14, 
                    FontWeight -> Bold, FontSlant -> Italic, FontColor -> 
                    RGBColor[0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"HardInclude\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ThreadingLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["HardInclude", Bold], 
                    Style[
                    ThreadingLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"Min\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 10, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-0.9999999732051026, 
                    1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"And\"", Bold, StripOnInput -> False]}, {
                    TagBox[
                    RowBox[{"AggregationLayer", "[", "Min", "]"}], 
                    HoldForm]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["And", Bold], 
                    HoldForm[
                    AggregationLayer[Min]]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"Reshape\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 6, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-2.999999973205102, 
                    1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Reshape\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "ReshapeLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Reshape", Bold], 
                    Style[
                    ReshapeLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{-12.5, -12.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{12.5, 12.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{-10.5, -10.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    
                    Offset[{10.5, 10.5}, {-3.9999999732051017`, 
                    1.0000001071795879`}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-3.9999999732051017`, 1.0000001071795879`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Weights\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Weights", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}, {-2.999999973205102, 
                    1.0000000803846907`}, {-3.9999999732051017`, 
                    1.0000001071795879`}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 21, 8, 21, 25}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29.499999999999986`, 29.}, {29., 19.}}, 
                    ImageSize -> {278.4999999999999, 103.00000147371932`}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"array\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{8}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {8}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 2}]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{8}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "And" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 2}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[
                    NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "And", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "HardInclude"], 
                    NeuralNetworks`NetPath["Nodes", "And"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Reshape"], 
                    NeuralNetworks`NetPath["Nodes", "Weights"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "HardInclude"], 
                    NeuralNetworks`NetPath["Nodes", "And"], 
                    NeuralNetworks`NetPath["Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Reshape"], 
                    NeuralNetworks`NetPath["Nodes", "Weights"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 4.81640625}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
        NeuralNetworks`ListT[NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
        NeuralNetworks`AtomT]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>, 
    "Nodes" -> <|
     "Weights" -> <|
       "Type" -> "Graph", "Inputs" -> <||>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
        "Nodes" -> <|
         "SoftBits" -> <|
           "Type" -> "Graph", "Inputs" -> <||>, 
            "Outputs" -> <|
             "Output" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
            "Nodes" -> <|
             "Weights" -> <|
               "Type" -> "NetArray", 
                "Arrays" -> <|
                 "Array" -> 
                  RawArray["Real32",{0.0010000000474974513`, 
                    0.0010000000474974513`, 0.0010000000474974513`, 
                    0.0010000000474974513`, 0.5403078198432922, 
                    0.0010000000474974513`, 0.021139344200491905`, 
                    0.0010000000474974513`}]|>, 
                "Parameters" -> <|
                 "Dimensions" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT], 
                  "$ArrayDimensions" -> {8}|>, "Inputs" -> <||>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>, 
              "Clip" -> <|
               "Type" -> "Elementwise", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                  "$Dimensions" -> {8}|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "Clip", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", "Output"],
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "Clip", "Outputs", "Output"]}|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "SoftBits", "Outputs", "Output"]}|>,
       "Reshape" -> <|
       "Type" -> "Reshape", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 2}]|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{8}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>,
       "HardInclude" -> <|
       "Type" -> "Threading", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> 
          NeuralNetworks`ValidatedParameter[neurallogic`DifferentiableHardAND[
             Slot["Input"], 
             Slot["Weights"]]& ], "Broadcasting" -> 
          NeuralNetworks`ValidatedParameter[1]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
            NeuralNetworks`ListT[
            NeuralNetworks`NaturalT, NeuralNetworks`SizeT], 
            NeuralNetworks`AtomT], "Weights" -> 
          NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>|>,
       "And" -> <|
       "Type" -> "Aggregation", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> Min, "Levels" -> NeuralNetworks`ValidatedParameter[
            Span[2, All]]|>, 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{4, 2}, NeuralNetworks`AtomT]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`AtomT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "HardInclude", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "Reshape", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "HardInclude", "Inputs", "Weights"] -> 
      NeuralNetworks`NetPath["Nodes", "Reshape", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "And", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "HardInclude", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "And", "Outputs", "Output"]}|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.9076571276513*^9, 3.90765715181149*^9}, 
   3.907658027847354*^9, 3.907658214895924*^9, 3.907658460953233*^9, 
   3.9076585473953657`*^9, 3.907659213683035*^9, 3.907659572028863*^9, 
   3.907659935558008*^9, 3.907660256420087*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"c8b5f227-ee25-46a5-924a-af135b76c3ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"softWeights", "=", 
  RowBox[{"ExtractWeights", "[", "softNet", "]"}]}]], "Input",
 CellChangeTimes->{{3.907659460780012*^9, 3.9076595287975693`*^9}, {
  3.907659596488399*^9, 3.90765960682397*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"79835ba3-d3df-410d-94e7-34d3eabb6c72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
   "0.0010000000474974513`", ",", "0.0010000000474974513`", ",", 
    "0.0010000000474974513`", ",", "0.0010000000474974513`", ",", 
    "0.5403078198432922`", ",", "0.0010000000474974513`", ",", 
    "0.021139344200491905`", ",", "0.0010000000474974513`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.907659471034527*^9, 3.9076595012530003`*^9}, 
   3.907659574741208*^9, 3.907659607977367*^9, 3.907659674979752*^9, 
   3.90765971373217*^9, 3.907659936444646*^9, 3.907660257760659*^9, 
   3.907660821290365*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"a3b82b7a-04d0-48d9-aaa2-2393a0d5f9ad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"softInput", "=", 
   RowBox[{"{", 
    RowBox[{"0.2", ",", "0.8"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9076596857446823`*^9, 3.9076597046775*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"52edde85-033f-4a1b-a1a8-8b78d0040ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"softOutput", "=", 
  RowBox[{"softNet", "[", "softInput", "]"}]}]], "Input",
 CellChangeTimes->{{3.907659650762834*^9, 3.907659664737342*^9}, {
  3.907659708468875*^9, 3.907659709823182*^9}, {3.907659884313488*^9, 
  3.907659906720564*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"147ea77d-7792-4db6-9c03-50157af45adc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9990000128746033`", ",", "0.9990000128746033`", ",", 
   "0.45969218015670776`", ",", "0.9788606762886047`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.907659665523917*^9, 3.9076597104665537`*^9, {3.9076598873617477`*^9, 
   3.907659907282269*^9}, 3.90765994007859*^9, 3.907660262049519*^9, 
   3.907660807269432*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"65adfe99-6307-4442-ae8a-61c7f97fb382"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["The hard net", "Subsubsection",
 CellChangeTimes->{{3.907659753277927*^9, 
  3.907659783770981*^9}},ExpressionUUID->"e478fe00-6cb6-40ec-b405-\
a10b2b9addf1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hardNet", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x1", ",", "x2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
      "w1", ",", "w2", ",", "w3", ",", "w4", ",", "w5", ",", "w6", ",", "w7", 
       ",", "w8"}], "}"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.907660373377831*^9, 3.907660506892804*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"1b9d5da0-c7b0-49f7-a05c-e2601a11363d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x1", "||", 
        RowBox[{"!", "w1"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{"x2", "||", 
        RowBox[{"!", "w2"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x1", "||", 
        RowBox[{"!", "w3"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{"x2", "||", 
        RowBox[{"!", "w4"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x1", "||", 
        RowBox[{"!", "w5"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{"x2", "||", 
        RowBox[{"!", "w6"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x1", "||", 
        RowBox[{"!", "w7"}]}], ")"}], "&&", 
      RowBox[{"(", 
       RowBox[{"x2", "||", 
        RowBox[{"!", "w8"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.907660375386128*^9, {3.907660452438302*^9, 3.907660507791791*^9}, 
   3.907660802426498*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"49bd5dfd-0f9d-415e-a3fb-b95cb06c07ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hardOutput", "=", 
  RowBox[{"First", "[", 
   RowBox[{"hardNet", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Harden", "[", "softInput", "]"}], ",", 
      RowBox[{"Harden", "[", "softWeights", "]"}]}], "}"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.9076608466888447`*^9, 3.907660905358088*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"d063ed38-f557-449f-91d0-718d4a74e75c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True", ",", "False", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{{3.9076608779498587`*^9, 3.907660905820516*^9}},
 CellLabel->
  "Out[144]=",ExpressionUUID->"7f7f7ea6-2b9e-411b-a3c3-0b878dbb7513"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hard equivalence", "Subsubsection",
 CellChangeTimes->{{3.907659753277927*^9, 3.907659783770981*^9}, {
  3.9076598181918173`*^9, 3.907659825013777*^9}, {3.9076609067209044`*^9, 
  3.907660907530648*^9}},ExpressionUUID->"3e048998-01c7-450b-adce-\
b11d1c50c937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Harden", "[", "softOutput", "]"}], "==", "hardOutput"}]], "Input",
 CellChangeTimes->{{3.907659962385028*^9, 3.9076599760095*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"740754c1-6c32-4454-b2c7-c5b31ba12b54"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.907659966947729*^9, 3.907659976531632*^9}, 
   3.90766027785487*^9, {3.907660895752932*^9, 3.907660910105706*^9}},
 CellLabel->
  "Out[145]=",ExpressionUUID->"d7ab943c-f249-42ab-b89e-0bda49ce189d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"9e337155-4f6c-4e7a-90bb-fd4c8f1a020d"],

Cell[CellGroupData[{

Cell["Majority layer", "Subsection",
 CellChangeTimes->{{3.907659263345763*^9, 3.907659264936202*^9}, {
  3.90766062309311*^9, 3.907660629644959*^9}, {3.907661079437463*^9, 
  3.907661080795225*^9}},ExpressionUUID->"b7b56b37-d9ef-45cb-9cb4-\
ba50e0c069c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"HardNeuralMajority", "[", "8", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.907661086334064*^9, 3.9076611089856997`*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"42a94041-0a72-4352-a4e8-435061f46118"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.9076611107105427`*^9, 3.907661111617976*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"0a826c45-893c-400d-aa54-b1702b68ca36"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                   "RowWithSeparators"], Short], "SummaryItem"], 
                "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\"vector of \"", 
                   StyleBox["\"n\"", Italic, StripOnInput -> False], 
                   "\" reals\""}, "RowDefault"], "SummaryItem"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {17.194921875, {0., 17.194921875}}], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = 2}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Input\"", 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Sort\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    
                    Offset[{0, -15.5}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Medians\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}], 
                    
                    Offset[{0, -13.5}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    Offset[{0, -7}, {0., 0.}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999997}, {-2.4499999999999993`, 
                    6.564749772133872*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    StyleBox[
                    "\"n\"", StripOnInput -> False, FontSlant -> Italic], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-0.4499999999999998, 
                    1.2057703663103027`*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    InsetBox[
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[DottedSquare]\""}, "RowWithSeparators"], 
                    
                    Offset[{1.4737193366014812`*^-7, 
                    5.499999999999998}, {-1.4499999999999993`, 
                    3.885260069222087*^-8}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " reals"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999999999993`,
                     6.564749772133872*^-8}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999998, -2.679489702911785*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Input", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector of ", 
                    Style["n", Italic], " reals"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999999999993`,
                     3.885260069222087*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    Row[{"(\[VeryThinSpace]size: ", 
                    Style["n", Italic], 
                    "\[Times]\[DottedSquare]\[VeryThinSpace])"}], 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], {
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[13.88888888888889]]}, 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"RS\"", StripOnInput -> False, LineColor -> 
                    GrayLevel[0.33], FrontFaceColor -> GrayLevel[0.33], 
                    BackFaceColor -> GrayLevel[0.33], GraphicsColor -> 
                    GrayLevel[0.33], FontSize -> 10, FontWeight -> Bold, 
                    FontColor -> GrayLevel[0.33]], {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Sort\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "FunctionLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Sort", Bold], 
                    Style[
                    FunctionLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    StyleBox[
                    "\"\[LeftDoubleBracket] \[RightDoubleBracket]\"", 
                    StripOnInput -> False, LineColor -> GrayLevel[0.33], 
                    FrontFaceColor -> GrayLevel[0.33], BackFaceColor -> 
                    GrayLevel[0.33], GraphicsColor -> GrayLevel[0.33], 
                    FontSize -> 13, FontWeight -> Bold, FontColor -> 
                    GrayLevel[0.33]], {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Medians\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "PartLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Medians", Bold], 
                    Style[
                    PartLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 21, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{29., 29.}, {29.499997052561326`, 19.}}, 
                    ImageSize -> {222.99999999999994`, 48.50000147371934}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Port"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Input\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Input\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Input"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Input\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Input"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TagBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    TemplateBox[{"\"(\[VeryThinSpace]size: \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"\[Times]\[DottedSquare]\[VeryThinSpace])\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\" reals\""}, "RowDefault"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Sort" -> <|
                    "Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> (Map[ReverseSort, #]& ), 
                    "Net" -> <|"Type" -> "NetMap", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Net" -> <|"Type" -> "Function", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> ReverseSort, "Net" -> 
                    None|>, "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1263765069], "$InputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT], "$OutputShape" -> 
                    NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>|>, 
                    "Medians" -> <|
                    "Type" -> "Part", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Specification" -> NeuralNetworks`ValidatedParameter[{
                    Span[1, -1], 5}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069]}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069], 
                    NeuralNetworks`SizeT}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1263765069]}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Sort", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Medians", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Sort"], 
                    NeuralNetworks`NetPath["Nodes", "Medians"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "Sort"], 
                    NeuralNetworks`NetPath["Nodes", "Medians"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    ImageSizeCache -> {
                    275.77608984375, {237.84101562499998`, 
                    244.42695312499998`}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
         NeuralNetworks`LengthVar[1263765069], NeuralNetworks`SizeT}, 
        NeuralNetworks`RealT]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
         NeuralNetworks`LengthVar[1263765069]}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "Sort" -> <|
       "Type" -> "Function", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Function" -> (Map[ReverseSort, #]& ), 
          "Net" -> <|
           "Type" -> "NetMap", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Net" -> <|
               "Type" -> "Function", "Arrays" -> <||>, 
                "Parameters" -> <|"Function" -> ReverseSort, "Net" -> None|>, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>, 
                "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[
                    NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                    NeuralNetworks`RealT]|>|>, "$SequenceLength" -> 
              NeuralNetworks`LengthVar[1263765069], "$InputShape" -> 
              NeuralNetworks`TensorT[
                NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                NeuralNetworks`RealT], "$OutputShape" -> 
              NeuralNetworks`TensorT[
                NeuralNetworks`ListT[1, NeuralNetworks`SizeT], 
                NeuralNetworks`RealT]|>, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1263765069], NeuralNetworks`SizeT}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[1263765069], NeuralNetworks`SizeT}, 
                NeuralNetworks`RealT]|>|>|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[1263765069], NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[1263765069], NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT]|>|>, 
      "Medians" -> <|
       "Type" -> "Part", "Arrays" -> <||>, 
        "Parameters" -> <|
         "Specification" -> NeuralNetworks`ValidatedParameter[{
             Span[1, -1], 5}]|>, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[1263765069], NeuralNetworks`SizeT}, 
            NeuralNetworks`RealT]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{
             NeuralNetworks`LengthVar[1263765069]}, 
            NeuralNetworks`RealT]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "Sort", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Inputs", "Input"], 
      NeuralNetworks`NetPath["Nodes", "Medians", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "Sort", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "Medians", "Outputs", "Output"]}|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.907661112017103*^9},
 CellLabel->
  "Out[149]=",ExpressionUUID->"0d0b39d2-3881-4c0c-b8ef-90a713a40b4e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"8edb87eb-053a-4189-924f-a1026166f746"],

Cell["Loss layer", "Subsection",
 CellChangeTimes->{{3.907659263345763*^9, 3.907659264936202*^9}, {
  3.90766062309311*^9, 3.907660629644959*^9}, {3.907661079437463*^9, 
  3.907661080795225*^9}, {3.9076664228959503`*^9, 
  3.9076664233860598`*^9}},ExpressionUUID->"3b1d9cb8-27d9-44df-90f0-\
df1db580d9fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"e377ef6c-53f3-4b41-abe6-ffc203610c5c"],

Cell[CellGroupData[{

Cell["A classification problem", "Section",
 CellChangeTimes->{{3.9076651315962152`*^9, 
  3.90766513709312*^9}},ExpressionUUID->"aa6507eb-d06e-42b3-ac5a-\
64ee7d1b6399"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"data", "=", 
  RowBox[{
  "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.907665141064435*^9, 3.907665153641509*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"4c37d83b-e165-47c6-89de-a5863b1583c0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          10591818799667663963816467772732453390340659217866930472088], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], ImageSizeCache -> {576.5, {163.5234375, 169.4765625}},
         TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[], 
       ImageSizeCache -> {576.5, {163.5234375, 169.4765625}}], 
      BaseStyle -> {LineBreakWithin -> False}, DynamicModuleValues :> {}, 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 10591818799667663963816467772732453390340659217866930472088,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.907665158737226*^9, 3.9076662452659607`*^9, 
  3.907667278044146*^9, 3.907667336924487*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"cf181199-4f5c-4582-95bd-af9f42dac550"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"83fe43b3-b305-42fb-99f2-98f3554cdbdb"],

Cell[CellGroupData[{

Cell["Feature encoding", "Subsection",
 CellChangeTimes->{{3.907665290003812*^9, 
  3.9076652916831007`*^9}},ExpressionUUID->"49f3f83c-9c7a-49d8-92ec-\
682e39441ceb"],

Cell[CellGroupData[{

Cell["Utilities", "Subsubsection",
 CellChangeTimes->{{3.9076653455116587`*^9, 
  3.9076653812220297`*^9}},ExpressionUUID->"7cde86fc-7e24-4663-b27a-\
d0744b27c234"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "featureValues"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputEncoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Drop", "[", 
   RowBox[{
    RowBox[{"Encoders", "[", "data", "]"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OutputEncoder", "[", "data_", "]"}], ":=", 
  RowBox[{"Last", "[", 
   RowBox[{"Encoders", "[", "data", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InputEncoder", "[", "encoders_", "]"}], ":=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<Catenate\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "->", "\"\<Catenate\>\""}],
         "&"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Normal", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Net", "[", 
   RowBox[{
   "inputSize_", ",", "classes_", ",", "inputEncoder_", ",", 
    "outputEncoder_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"softNet", ",", "hardNet", ",", "net", ",", "trainableNet"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralOR", "[", 
          RowBox[{"inputSize", ",", "64"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"HardNeuralNOT", "[", 
          RowBox[{"64", ",", 
           RowBox[{"Length", "[", "classes", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trainableNet", "=", 
      RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<Input\>\"", "->", "inputEncoder"}], ",", 
          RowBox[{"\"\<Net\>\"", "->", "softNet"}], ",", 
          RowBox[{"\"\<Loss\>\"", "->", 
           RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
         "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Input\>\"", "->", 
           RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], ",", 
          RowBox[{
           RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
           RowBox[{"NetPort", "[", 
            RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}]}], "}"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"\"\<Acceptability\>\"", "->", "outputEncoder"}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"trainableNet", ",", "hardNet"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TrainNet", "[", 
   RowBox[{"net_", ",", "trainData_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingStoppingCriterion", "->", 
     RowBox[{"Function", "[", 
      RowBox[{"#ValidationLoss", "<", "0.02"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", 
     RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"WorkingPrecision", "->", "\"\<Real64\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "Infinity"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetTrainedNet", "[", "result_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\"\<TrainedNet\>\"", "->", 
      RowBox[{"NetDelete", "[", 
       RowBox[{
        RowBox[{"NetFlatten", "[", 
         RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}], ",", 
        "\"\<Loss/Error\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EvaluateNet", "[", 
   RowBox[{"hardNetFunction_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"predictions", ",", "eval"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"predictions", "=", 
      RowBox[{"HardNetClassify", "[", 
       RowBox[{"hardNetFunction", ",", "testData", ",", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"featureLayer", "[", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "&"}], 
        ",", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"eval", "=", 
      RowBox[{"HardNetClassifyEvaluation", "[", "predictions", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"predictions", ",", "eval"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GetNetWeights", "[", "trainedNeuralLogicNet_", "]"}], ":=", 
  RowBox[{"Flatten", "[", 
   RowBox[{"ExtractWeights", "[", "trainedNeuralLogicNet", "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.907665456765819*^9, 3.907665463831007*^9}, {
   3.907665525637821*^9, 3.9076655273425703`*^9}, {3.907665913104608*^9, 
   3.907665913414949*^9}, {3.9076669351399107`*^9, 3.90766693560599*^9}, 
   3.90766713119687*^9, {3.9076675250061502`*^9, 3.907667559707*^9}, {
   3.907668696464559*^9, 3.907668737323786*^9}, {3.9076687796228952`*^9, 
   3.907668800868342*^9}, {3.90766887638863*^9, 3.907668878814322*^9}, {
   3.9076689849399357`*^9, 3.907669046858366*^9}, {3.907669108090989*^9, 
   3.907669172896719*^9}, 3.907669347558069*^9, 3.907669663874734*^9, {
   3.907669748487362*^9, 3.9076697577738667`*^9}, {3.907669793457437*^9, 
   3.907669795397214*^9}, {3.907669983536488*^9, 3.907670021873682*^9}, {
   3.907671167333642*^9, 3.907671208420944*^9}, {3.9076719350414248`*^9, 
   3.907671953370981*^9}, {3.907671984430925*^9, 3.9076719963261967`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"2a4e03f4-e2a7-4f69-8998-08b1b478d9ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Input encoder", "Subsubsection",
 CellChangeTimes->{{3.9076653455116587`*^9, 3.9076653504932947`*^9}, 
   3.907668840313493*^9, {3.907668903216874*^9, 
   3.9076689079582233`*^9}},ExpressionUUID->"309d98db-1149-44ad-a275-\
148690f1941a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{5.5, {-2., 7.5}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{5.5, {-2., 7.5}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.1", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[92]:=",ExpressionUUID->"9f279c68-d43b-4bb1-be05-e345a4c62756"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inputEncoders", "=", 
  RowBox[{"InputEncoders", "[", "trainData", "]"}]}]], "Input",
 CellChangeTimes->{{3.907665362173196*^9, 3.9076653905846252`*^9}, {
  3.907668749114114*^9, 3.907668764612314*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"a595fc1e-e09b-4264-a567-e9cf3507d218"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"PurchasePrice\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NetEncoder",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   11.719921874999999`, {0., 11.719921874999999`}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"medium\\\"\"", ",", "\"\\\"very high\\\"\"", ",", 
                    "\"\\\"low\\\"\"", ",", "\"\\\"high\\\"\""}], "}"}], 
                    Short], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetEncoder[
     "Class", <|
      "Labels" -> {"medium", "very high", "low", "high"}, "OutputForm" -> 
       "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
       4, "$Version" -> "13.3.0"|>, 
      NeuralNetworks`TensorT[{4}, 
       NeuralNetworks`IndexIntegerT[0, 1]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"MaintenanceCost\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NetEncoder",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   11.719921874999999`, {0., 11.719921874999999`}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"high\\\"\"", ",", "\"\\\"medium\\\"\"", ",", 
                    "\"\\\"low\\\"\"", ",", "\"\\\"very high\\\"\""}], "}"}], 
                    Short], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetEncoder[
     "Class", <|
      "Labels" -> {"high", "medium", "low", "very high"}, "OutputForm" -> 
       "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
       4, "$Version" -> "13.3.0"|>, 
      NeuralNetworks`TensorT[{4}, 
       NeuralNetworks`IndexIntegerT[0, 1]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Doors\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NetEncoder",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   11.719921874999999`, {0., 11.719921874999999`}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], ",", "4",
                     ",", "2"}], "}"}], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetEncoder["Class", <|"Labels" -> {3, 
         Interval[{5, 
           DirectedInfinity[1]}], 4, 2}, "OutputForm" -> "IndicatorVector", 
       "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
       "13.3.0"|>, 
      NeuralNetworks`TensorT[{4}, 
       NeuralNetworks`IndexIntegerT[0, 1]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Passengers\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NetEncoder",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   11.719921874999999`, {0., 11.719921874999999`}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    RowBox[{"{", 
                    RowBox[{"4", ",", 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], ",", 
                    "2"}], "}"}], "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetEncoder["Class", <|"Labels" -> {4, 
         Interval[{5, 
           DirectedInfinity[1]}], 2}, "OutputForm" -> "IndicatorVector", 
       "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
       "13.3.0"|>, 
      NeuralNetworks`TensorT[{3}, 
       NeuralNetworks`IndexIntegerT[0, 1]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Cargo\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NetEncoder",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   11.719921874999999`, {0., 11.719921874999999`}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"small\\\"\"", ",", "\"\\\"large\\\"\"", ",", 
                    "\"\\\"medium\\\"\""}], "}"}], Short], "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetEncoder[
     "Class", <|
      "Labels" -> {"small", "large", "medium"}, "OutputForm" -> 
       "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
       3, "$Version" -> "13.3.0"|>, 
      NeuralNetworks`TensorT[{3}, 
       NeuralNetworks`IndexIntegerT[0, 1]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"Safety\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["NetEncoder",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"],
                   ImageSizeCache -> {
                   11.719921874999999`, {0., 11.719921874999999`}}], 
                 Appearance -> None, BaseStyle -> {}, 
                 ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
           GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], Appearance -> None, 
                 BaseStyle -> {}, ButtonFunction :> (Typeset`open$$ = False), 
                 Evaluator -> Automatic, Method -> "Preemptive"], 
                Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GridBox[{{
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"low\\\"\"", ",", "\"\\\"medium\\\"\"", ",", 
                    "\"\\\"high\\\"\""}], "}"}], Short], "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                   "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"{}\"", 
                    StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "SummaryItem"], 
                  TagBox[
                   StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                   "SummaryItem"]}}, AutoDelete -> False, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, 
             AutoDelete -> False, BaselinePosition -> {1, 1}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     NetEncoder[
     "Class", <|
      "Labels" -> {"low", "medium", "high"}, "OutputForm" -> 
       "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 
       3, "$Version" -> "13.3.0"|>, 
      NeuralNetworks`TensorT[{3}, 
       NeuralNetworks`IndexIntegerT[0, 1]]],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}]}], "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.907665392260468*^9, 3.907666183274048*^9, 
  3.907666258001719*^9, 3.907667347218132*^9, 3.907668756079023*^9, 
  3.907668807033361*^9, 3.907669193697105*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"d2720438-e394-4fe0-ae75-a6e0cf80de50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inputEncoder", "=", 
  RowBox[{"InputEncoder", "[", "encoders", "]"}]}]], "Input",
 CellChangeTimes->{{3.907665474302391*^9, 3.907665480574244*^9}, {
  3.9076655378675737`*^9, 3.907665538783793*^9}, {3.9076688638270817`*^9, 
  3.907668894331688*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"e01826d2-d275-4a00-9079-706dba5b0224"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Number of inputs\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["6", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\"vector \"", 
                   StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Cargo\"", 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Catenate\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-27, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{0, -13.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Doors\"", 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-1.9999999464102052`, 
                    2.0000000535897935`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Passengers\"", 
                    
                    Offset[{0, -7}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-1.9999998928204112`, 
                    4.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Safety\"", 
                    
                    Offset[{0, -7}, {-1.9999998660255143`, 
                    5.000000053589792}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {8.038469108735353*^-8, 
                    2.999999999999999}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"3\"", 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019002`}, {-1.479056899628362, 
                    1.5628292151185497`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.9486832895772231}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-1.4559016434844814`, 
                    2.088196640135746}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999931673012, 
                    2.5500000388526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-1.4499999196153084`, 
                    3.0000000388525994`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318316}, {-1.4499999075576047`, 
                    3.4500000388525995`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396938, -0.7071068001334007}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{4.919349616406268, 
                    2.459674643436304}, {-1.4559015946211251`, 
                    3.911803437885724}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829577}], 
                    InsetBox["\"21\"", 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-0.44999991961530866`, 
                    3.000000012057703}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999464102052`, 
                    2.0000000535897935`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998928204112`, 
                    4.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998660255143`, 
                    5.000000053589792}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999196153085, 3.000000026794896}, {
                    8.038469108735353*^-8, 2.999999999999999}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.479056899628362, 
                    1.5628292151185497`}, {-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input5\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input5"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4559016434844814`,
                     2.088196640135746}, {-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input3\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input3"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999931673012, 
                    2.5500000388526}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input2\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input2"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999196153084`,
                     3.0000000388525994`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input4\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input4"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999075576047`,
                     3.4500000388525995`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051027, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input1\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input1"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4559015946211251`,
                     3.911803437885724}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102057, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input6\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input6"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999991961530866`, 
                    3.000000012057703}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    DiskBox[{-0.9999999196153085, 3.000000026794896}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.3], 
                    
                    LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
                    0.}, {-0.1, -0.2}, {-0.2, -0.2}}], 
                    LineBox[{{0., 0.}, {0.2, 0.}}], 
                    LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]}, 
                    ImageSize -> 16], {-0.9999999196153085, 
                    3.000000026794896}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Catenate\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "CatenateLayer", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Catenate", Bold], 
                    Style[
                    CatenateLayer, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999464102052`, 2.0000000535897935`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999196153082`, 3.000000053589793}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998928204112`, 4.000000053589793}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998660255143`, 5.000000053589792}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{8.038469108735353*^-8, 2.999999999999999}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-1.9999999464102052`, 
                    2.0000000535897935`}, {-1.9999999196153082`, 
                    3.000000053589793}, {-1.9999998928204112`, 
                    4.000000053589793}, {-1.9999998660255143`, 
                    5.000000053589792}, {8.038469108735353*^-8, 
                    2.999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 21, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{38.499995578841975`, 26.5}, {25., 15.}},
                     ImageSize -> {174.99999999999994`, 314.9999999999999}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Inputs" -> <|
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"medium\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.3.0"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"high\"", "\"very high\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.3.0"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"large\"", "\"small\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.3.0"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"low\"", "\"high\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.3.0"|>|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Catenate"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 4.81640625}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "PurchasePrice" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"low", "medium", "very high", "high"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"medium", "high", "very high", "low"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
      NetEncoder["Class", <|"Labels" -> {
           Interval[{5, 
             DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
      NetEncoder["Class", <|"Labels" -> {
           Interval[{5, 
             DirectedInfinity[1]}], 4, 2}, "OutputForm" -> "IndicatorVector", 
         "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
         "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 3, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 3, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
        NeuralNetworks`IndexIntegerT[0, 1]]|>, 
    "Nodes" -> <|
     "Catenate" -> <|
       "Type" -> "Catenate", "Arrays" -> <||>, 
        "Parameters" -> <|"Level" -> 1|>, 
        "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
          NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
          NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input1"] -> 
      NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
      NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input2"] -> 
      NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
      NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input3"] -> 
      NeuralNetworks`NetPath["Inputs", "Doors"], 
      NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input4"] -> 
      NeuralNetworks`NetPath["Inputs", "Passengers"], 
      NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input5"] -> 
      NeuralNetworks`NetPath["Inputs", "Cargo"], 
      NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input6"] -> 
      NeuralNetworks`NetPath["Inputs", "Safety"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "Catenate", "Outputs", "Output"]}|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.907665481465914*^9, 3.907665539513845*^9, 3.9076661865285892`*^9, 
   3.9076662599138002`*^9, 3.907667350893148*^9, 3.907668824397333*^9, {
   3.9076688910838013`*^9, 3.907668895366413*^9}, 3.907669194931267*^9, 
   3.9076693605390797`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"5081d1de-f29a-4bee-865b-6f28789624d6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Output encoder", "Subsubsection",
 CellChangeTimes->{{3.9076653455116587`*^9, 3.9076653504932947`*^9}, 
   3.907668840313493*^9, {3.907668903216874*^9, 
   3.907668918785453*^9}},ExpressionUUID->"994860db-4037-4865-aaf5-\
d50db85df7f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"outputEncoder", "=", 
  RowBox[{"OutputEncoder", "[", "trainData", "]"}]}]], "Input",
 CellChangeTimes->{{3.9076689222233686`*^9, 3.907668947778792*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"79d5815b-6259-4955-a1b2-26f0e35dd004"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetEncoder",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\"vector \"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"Class\"", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "\"\\\"unacceptable\\\"\"", ",", "\"\\\"acceptable\\\"\"",
                     ",", "\"\\\"good\\\"\"", ",", "\"\\\"very good\\\"\""}], 
                    "}"}], Short], "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Output Form\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"IndicatorVector\"", "SummaryItem"], 
                "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\"{}\"", 
                   StyleBox["\"  (scalar)\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                 "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Multilabel\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["False", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\"vector \"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                   "\" of booleans\""}, "RowDefault"], "SummaryItem"], 
                "SummaryItem"]}}, AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}], ""}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetEncoder[
  "Class", <|
   "Labels" -> {"unacceptable", "acceptable", "good", "very good"}, 
    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
    False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
   NeuralNetworks`TensorT[{4}, 
    NeuralNetworks`IndexIntegerT[0, 1]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.907668948548708*^9, 3.907669196996223*^9, 
  3.907669362887738*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"ddab5a3c-d641-40fa-ba4c-f9027625dcba"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"b906e985-5f68-45f2-9c1f-98798734664a"],

Cell[CellGroupData[{

Cell["Define \[PartialD]\[DoubleStruckCapitalB]-net", "Subsection",
 CellChangeTimes->{{3.907665290003812*^9, 3.9076652916831007`*^9}, {
  3.9076656057209873`*^9, 
  3.907665624933681*^9}},ExpressionUUID->"ac5379eb-1e1d-49d8-8deb-\
06d286a5dcbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inputSize", "=", 
  RowBox[{"Total", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", 
      RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Normal", "/@", 
     RowBox[{"Values", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"encoders", ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.9076657694900637`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"0e10363d-4ecc-4bd3-85e8-fb38e4bd83f6"],

Cell[BoxData["21"], "Output",
 CellChangeTimes->{3.907665770084655*^9, 3.907666188499796*^9, 
  3.907666263971177*^9, 3.907667354558462*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"3a9a8c2c-575b-42d4-bb5b-9d199fd1116b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"classes", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{"DeleteDuplicates", "[", 
    RowBox[{"data", "[", 
     RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.907665782601527*^9},
 CellLabel->"In[11]:=",ExpressionUUID->"be31501c-8a21-45af-9338-a0108beb61b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"unacceptable\"\>", ",", "\<\"acceptable\"\>", 
   ",", "\<\"very good\"\>", ",", "\<\"good\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.9076657833151293`*^9, 3.907666189584352*^9, 
  3.907666266008369*^9, 3.90766735580033*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"9e4f32e5-cfa7-4d53-8522-b5a84a2657f5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"Net", "[", 
    RowBox[{
    "inputSize", ",", "classes", ",", "inputEncoder", ",", "outputEncoder"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.907665929712782*^9, 3.9076659685319967`*^9}, {
  3.907669206860056*^9, 3.907669211789116*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"7942c266-44f2-4df3-be40-fe9f94060c55"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.907666777233347*^9, 3.9076667782113667`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"7c24f466-e8f1-49b2-ae2d-a8e3bfaac271"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = True, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Number of inputs\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["7", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["\"real\"", "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Cargo\"", 
                    
                    Offset[{
                    0, -7}, {-4.000000053589793, -1.9999998928204112`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Input\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    
                    Offset[{0, -15.5}, {-2.999999973205102, 
                    1.0000000803846907`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Doors\"", 
                    
                    Offset[{
                    0, -7}, {-4.000000026794896, -0.9999998928204116}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Passengers\"", 
                    
                    Offset[{0, -7}, {-3.9999999732051017`, 
                    1.0000001071795879`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-3.9999999464102047`, 
                    2.0000001071795874`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Safety\"", 
                    
                    Offset[{0, -7}, {-3.9999999196153078`, 
                    3.0000001071795874`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Net\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Loss\"", 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"4\"", 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019002`}, {-3.479056953218156, \
-0.43717073129165573`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.9486832895772231}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-3.4559016970742746`, 
                    0.08819669372554068}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-3.4499999852628056`, 
                    0.5500000924423946}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{1.4737193454461564`*^-7, 
                    5.499999999999999}, {-3.449999973205102, 
                    1.0000000924423944`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999998, -2.6794897189930118`*^-8}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318316}, {-3.449999961147398, 
                    1.4500000924423941`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396938, -0.7071068001334007}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{4.919349616406269, 
                    2.4596746434363026`}, {-3.4559016482109186`, 
                    1.9118034914755189`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338732, -0.8944272029829579}], 
                    InsetBox["\"21\"", 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox["\"\[DoubleStruckCapitalR]\"", 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""}, 
                    "RowWithSeparators"], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000053589793, -1.9999998928204112`}, \
{-2.999999973205102, 1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-4.000000026794896, -0.9999998928204116}, \
{-2.999999973205102, 1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999732051017`, 
                    1.0000001071795879`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999464102047`, 
                    2.0000001071795874`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.9999999196153078`, 
                    3.0000001071795874`}, {-2.999999973205102, 
                    1.0000000803846907`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-3.479056953218156, \
-0.43717073129165573`}, {-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4559016970742746`,
                     0.08819669372554068}, {-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4499999852628056`,
                     0.5500000924423946}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999973205102, 
                    1.0000000924423944`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999996, -2.679489718993011*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.449999961147398, 
                    1.4500000924423941`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051026, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-3.4559016482109186`,
                     1.9118034914755189`}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102056, -2.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-2.4499999732051023`,
                     1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999732051023`,
                     1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], {
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 
                    1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4.000000053589793, -1.9999998928204112`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.85]], 
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], {
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[13.88888888888889]]}, 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[11.666666666666668`]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-2.999999973205102, 1.0000000803846907`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Input", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4.000000026794896, -0.9999998928204116}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999999999987`, 1.0717958811647137`*^-7}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999732051017`, 1.0000001071795879`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999464102047`, 2.0000001071795874`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.9999999196153078`, 3.0000001071795874`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, AspectRatio -> 0.7, ImageMargins -> 
                    0., ImagePadding -> 0, ImageSize -> 16, PlotRange -> All, 
                    PlotRangePadding -> 1], {-1.9999999732051024`, 
                    1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetChain", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    NetChain, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 11), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-4.000000053589793, \
-1.9999998928204112`}, {-2.999999973205102, 
                    1.0000000803846907`}, {-4.000000026794896, \
-0.9999998928204116}, {-3.9999999999999987`, 
                    1.0717958811647137`*^-7}, {-3.9999999732051017`, 
                    1.0000001071795879`}, {-3.9999999464102047`, 
                    2.0000001071795874`}, {-3.9999999196153078`, 
                    3.0000001071795874`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8, 8, 8, 8, 8, 25, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{38.49999557884198, 29.}, {29., 19.}}, 
                    ImageSize -> {287.4999999999999, 322.9999999999999}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Input" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Nodes" -> <|
                    "Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    "Net" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|
                    "1" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{1344}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1344}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1344}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Clip", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Or" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Or", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Or", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "NetArray", "Arrays" -> <|
                    "Array" -> NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|"Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Clip", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
                    "Reshape" -> <|"Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>|>,
                     "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    neurallogic`Private`input]]], "GradientFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[neurallogic`Private`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    neurallogic`Private`outgrad]], "$CompiledFunctions" -> 
                    NeuralNetworks`ValidatedParameter[{
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "layer_ExprInvocation", "CName" -> 
                    "layer_CInvocation", "FunctionName" -> "layer", 
                    "SystemID" -> "Linux-x86-64", 
                    "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704144, 
                    139987995704000, 139987995704080, 139987995701248, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"], 
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "gradient propagating_ExprInvocation",
                     "CName" -> "gradient propagating_CInvocation", 
                    "FunctionName" -> "gradient propagating", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704736, 
                    139987995704000, 139987995704544, 139987995703616, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} \
-> \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]}], 
                    "$InputType" -> "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 64}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "4fe9bba1ba468809"|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|
                    "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"medium\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.3.0"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"high\"", "\"very high\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.3.0"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"large\"", "\"small\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.3.0"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"low\"", "\"high\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.3.0"|>, 
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"acceptable\"", "\"good\"", 
                    "\"very good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.3.0"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Input"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Input"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], ImageSizeCache -> {0., {0., 4.81640625}}, 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "PurchasePrice" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"low", "medium", "very high", "high"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"medium", "high", "very high", "low"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
      NetEncoder["Class", <|"Labels" -> {
           Interval[{5, 
             DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
      NetEncoder["Class", <|"Labels" -> {
           Interval[{5, 
             DirectedInfinity[1]}], 4, 2}, "OutputForm" -> "IndicatorVector", 
         "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
         "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 3, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 3, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Acceptability" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"unacceptable", "acceptable", "good", "very good"}, 
         "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
         False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
    "Outputs" -> <|
     "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "Input" -> <|
       "Type" -> "Graph", 
        "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
          NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
          NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>, 
        "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>, 
        "Nodes" -> <|
         "Catenate" -> <|
           "Type" -> "Catenate", "Arrays" -> <||>, 
            "Parameters" -> <|"Level" -> 1|>, 
            "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
              NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
              NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
              NeuralNetworks`TensorT[{3}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
              NeuralNetworks`TensorT[{3}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
              NeuralNetworks`TensorT[{3}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input1"] -> 
          NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
          NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input2"] -> 
          NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
          NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input3"] -> 
          NeuralNetworks`NetPath["Inputs", "Doors"], 
          NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input4"] -> 
          NeuralNetworks`NetPath["Inputs", "Passengers"], 
          NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input5"] -> 
          NeuralNetworks`NetPath["Inputs", "Cargo"], 
          NeuralNetworks`NetPath["Nodes", "Catenate", "Inputs", "Input6"] -> 
          NeuralNetworks`NetPath["Inputs", "Safety"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "Catenate", "Outputs", "Output"]}|>,
       "Net" -> <|
       "Type" -> "Chain", 
        "Nodes" -> <|
         "1" -> <|"Type" -> "Graph", 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>, 
            "Outputs" -> <|
             "Output" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>,
             "Nodes" -> <|
             "Weights" -> <|
               "Type" -> "Graph", "Inputs" -> <||>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                "Nodes" -> <|
                 "SoftBits" -> <|
                   "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1344}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1344}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"]}|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
              "Reshape" -> <|
               "Type" -> "Reshape", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Dimensions" -> 
                  NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>|>, 
              "HardInclude" -> <|
               "Type" -> "Threading", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[
                   neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                  NeuralNetworks`ValidatedParameter[1]|>, 
                "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                  NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>|>, 
              "Or" -> <|
               "Type" -> "Aggregation", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> Max, "Levels" -> 
                  NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>|>|>, 
            "Edges" -> {
             NeuralNetworks`NetPath[
               "Nodes", "HardInclude", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "Reshape", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", "Output"],
               NeuralNetworks`NetPath[
               "Nodes", "HardInclude", "Inputs", "Weights"] -> 
              NeuralNetworks`NetPath["Nodes", "Reshape", "Outputs", "Output"],
               NeuralNetworks`NetPath["Nodes", "Or", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "HardInclude", "Outputs", "Output"], 
              NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath["Nodes", "Or", "Outputs", "Output"]}|>, 
          "2" -> <|"Type" -> "Graph", 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
            "Nodes" -> <|
             "Weights" -> <|
               "Type" -> "Graph", "Inputs" -> <||>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                "Nodes" -> <|
                 "SoftBits" -> <|
                   "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|
                    "Weights" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJwVkn9M1AUAxe+44+7gjruTLwdnrNnRSheYCBg64r1El9OpQynJlU4UCVRS
CDCmLJFGLkZKFBU/NBgIDEkZzCKpQSWjNgJB5fh547jj1xHxSziIH13/vL33
5+e9Zzh5/nCMk0gk+lDhkMNRF3cmJkalRsj+D6ejzgUGnBM7rMghQf1m3BVb
UZQhYeDmVXzkPwS/9nXM2qXm7T1qGs6MwDe2FQo/gTXzMmakTWDlx1lkFSro
q1XSGmnHU/ECJoV5hH9vQ+jVLhx3U/CDowK9Tj1GcLQHD9xW8fqwwPSmZTRU
tuPBssALnw7ipmUNz16Yw/RWKS2Rk/jnig15FT3YalxG7YSOtqFRtJ515cFq
gXrvZVy81IZrjQKLm1Zwx0VglG4BFXcHkPmxlAunp2CoHcVYrgtn49czYKuc
+7MWMXy5DblyNS+590C4aYHB6MZ7ZcsoXpNwLdSOpAZP7lrUM+ZdC+qCJrCv
XkmfFhWfT3NidaEF3r/3omDIjZZXe/FHrJry/i7k6dbzhxpn5kyLmTKjZPeE
E3Orx5GbaETyYYElwQKZacLn78mY8qWUe839+De5H7sru5DKTmycESjbNYeQ
N6YR0zGEBJuGRR4aCt85M9+8gC2+vYhLseJRmAXxnhNQ6RxdF0g5+7IzDdud
uPrEiQb7HLald8Pvxghire7MTmhD/T4tsXcECR0qml5S8sHxJbQESvnzL1pm
Gnox3zYH45SCn3xtwbEYN55q6UR5WhvsQRZE3+pD2QkNlSJnpnwhYcEZEePC
Bbo1d6IxaQk9xSNwmR7Futc1fHtMyYolNX/9U8VD2SPo26nk+W+13JHjytRp
Oetu25GvM+FyZCdmkvpQXq+m3yEb/GIewV7pwtXUUcScbYM8Ts8quYLlLwos
yO/Hb3u8OOtvRmiEng11Mr4S4OAsGcMBpZ7dGXpu2mKFdkcHbiZ3QDE1iNo+
JX8qXsdhox3xRhUb060YfqjnrcxZSDLH8dy1XjRvcGVe6wDeF2Qs1avpHSZl
YamcZpMNVTlSWrMdm3IVMq8OVMrM0D4WsSjcg+W6GYw4D2NziQn5b0mYfsHB
dkRFSNfwjUxg8pujmFNNojRBzIw8LTca1vNitwdrj/WgrsqT/oFiXr1nwrNJ
F3bfn4LnNhH331mEwqcdcWHubG5exHYo+Y54DSebbLAeVDFv7i/kRg/jyJVV
BGqUbLc9QYggZUSRlI+73FmoG8BrEY4PrAj02S0QD234bHAcJyROLE+TU+wl
ZusmDwbftyPghoZD42qqgkXcUCZhbPFTiL+Ssd7DjJC/PZlbI+bR2EH8B/5Z
t8M=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Clip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>|>,
                     "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Outputs", "Output"]}|>|>, 
                "Edges" -> {
                 NeuralNetworks`NetPath["Outputs", "Output"] -> 
                  NeuralNetworks`NetPath[
                   "Nodes", "SoftBits", "Outputs", "Output"]}|>, 
              "Reshape" -> <|
               "Type" -> "Reshape", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 64}]|>,
                 "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>|>, 
              "Not" -> <|
               "Type" -> "Threading", "Arrays" -> <||>, 
                "Parameters" -> <|
                 "Function" -> 
                  NeuralNetworks`ValidatedParameter[
                   neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                  NeuralNetworks`ValidatedParameter[1]|>, 
                "Inputs" -> <|
                 "Input" -> 
                  NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT], 
                  "Weights" -> 
                  NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>, 
                "Outputs" -> <|
                 "Output" -> 
                  NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>|>,
             "Edges" -> {
             NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Inputs", "Input"], 
              NeuralNetworks`NetPath["Nodes", "Reshape", "Inputs", "Input"] -> 
              NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", "Output"],
               NeuralNetworks`NetPath["Nodes", "Not", "Inputs", "Weights"] -> 
              NeuralNetworks`NetPath["Nodes", "Reshape", "Outputs", "Output"],
               NeuralNetworks`NetPath["Outputs", "Output"] -> 
              NeuralNetworks`NetPath[
               "Nodes", "Not", "Outputs", "Output"]}|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "Input"], 
          NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"]}, 
        "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>, 
        "Outputs" -> <|
         "Output" -> 
          NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>, 
      "Loss" -> <|
       "Type" -> "Graph", 
        "Inputs" -> <|
         "Input" -> NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT], 
          "Target" -> NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>, 
        "Outputs" -> <|
         "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>, 
        "Nodes" -> <|
         "Harden" -> <|
           "Type" -> "Compiled", "Arrays" -> <||>, 
            "Parameters" -> <|
             "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                Function[{
                  Typed[neurallogic`Private`input, 
                   TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                 Map[
                 Map[If[# > 0.5, 1., 0.]& , #]& , 
                  neurallogic`Private`input]]], "GradientFunction" -> 
              NeuralNetworks`ValidatedParameter[
                Function[{
                  Typed[neurallogic`Private`input, 
                   TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                  Typed[neurallogic`Private`outgrad, 
                   TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                 neurallogic`Private`outgrad]], "$CompiledFunctions" -> 
              NeuralNetworks`ValidatedParameter[{
                 CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                   Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                   "ErrorFunction" -> Null, "InitializationName" -> 
                   "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                   "ExpressionName" -> "layer_ExprInvocation", "CName" -> 
                   "layer_CInvocation", "FunctionName" -> "layer", "SystemID" -> 
                   "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                   "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                   "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                   "targetMachineId" -> 64497296|>, 139987995704144, 
                  139987995704000, 139987995704080, 139987995701248, 
                  "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"], 
                 CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                   Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                   "ErrorFunction" -> Null, "InitializationName" -> 
                   "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                   "ExpressionName" -> "gradient propagating_ExprInvocation", 
                   "CName" -> "gradient propagating_CInvocation", 
                   "FunctionName" -> "gradient propagating", "SystemID" -> 
                   "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                   "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                   "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                   "targetMachineId" -> 64497296|>, 139987995704736, 
                  139987995704000, 139987995704544, 139987995703616, 
                  "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} \
-> \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]}], 
              "$InputType" -> "Real", "$OutputType" -> "Real", 
              "$InputShape" -> {4, 64}, "$Batched" -> False, 
              "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
              "4fe9bba1ba468809"|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>, 
          "SoftProbs" -> <|
           "Type" -> "Aggregation", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> Total, "Levels" -> 
              NeuralNetworks`ValidatedParameter[2]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
          "SoftmaxLayer" -> <|
           "Type" -> "Softmax", "Arrays" -> <||>, 
            "Parameters" -> <|"Level" -> -1|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
          "Error" -> <|
           "Type" -> "CrossEntropyLoss", "Arrays" -> <||>, 
            "Parameters" -> <|
             "TargetForm" -> "Probabilities", "$InputDimensions" -> {}, 
              "$Classes" -> 4, "$IntegerType" -> 
              NeuralNetworks`IndexIntegerT[1, 4]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
              "Target" -> NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>, 
            "Outputs" -> <|
             "Loss" -> NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>,
         "Edges" -> {
         NeuralNetworks`NetPath["Nodes", "Error", "Inputs", "Target"] -> 
          NeuralNetworks`NetPath["Inputs", "Target"], 
          NeuralNetworks`NetPath["Nodes", "Harden", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Inputs", "Input"], 
          NeuralNetworks`NetPath["Nodes", "SoftProbs", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Harden", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "SoftProbs", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Error", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Loss"] -> 
          NeuralNetworks`NetPath["Nodes", "Error", "Outputs", "Loss"]}|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "Loss", "Inputs", "Target"] -> 
      NeuralNetworks`NetPath["Inputs", "Acceptability"], 
      NeuralNetworks`NetPath["Nodes", "Input", "Inputs", "Cargo"] -> 
      NeuralNetworks`NetPath["Inputs", "Cargo"], 
      NeuralNetworks`NetPath["Nodes", "Input", "Inputs", "Doors"] -> 
      NeuralNetworks`NetPath["Inputs", "Doors"], 
      NeuralNetworks`NetPath["Nodes", "Input", "Inputs", "MaintenanceCost"] -> 
      NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
      NeuralNetworks`NetPath["Nodes", "Input", "Inputs", "Passengers"] -> 
      NeuralNetworks`NetPath["Inputs", "Passengers"], 
      NeuralNetworks`NetPath["Nodes", "Input", "Inputs", "PurchasePrice"] -> 
      NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
      NeuralNetworks`NetPath["Nodes", "Input", "Inputs", "Safety"] -> 
      NeuralNetworks`NetPath["Inputs", "Safety"], 
      NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "Input", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Nodes", "Loss", "Inputs", "Input"] -> 
      NeuralNetworks`NetPath["Nodes", "Net", "Outputs", "Output"], 
      NeuralNetworks`NetPath["Outputs", "Loss"] -> 
      NeuralNetworks`NetPath["Nodes", "Loss", "Outputs", "Loss"]}|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.907666779075963*^9, 3.907667378038869*^9, 
  3.907669371894761*^9, 3.907669768815196*^9, 3.907669807142275*^9, 
  3.907670030304652*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"9e699445-e73b-42f2-a0e8-97679d34d225"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"74b4ecae-d27b-4717-bf26-b5e19f106927"],

Cell[CellGroupData[{

Cell["Train \[PartialD]\[DoubleStruckCapitalB]-net", "Subsection",
 CellChangeTimes->{{3.907665290003812*^9, 3.9076652916831007`*^9}, {
  3.9076656057209873`*^9, 3.907665624933681*^9}, {3.907666856764778*^9, 
  3.9076668572583838`*^9}},ExpressionUUID->"227e40e7-fb89-45ab-877f-\
c0f3ae67b64d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"TrainNet", "[", 
   RowBox[{"softNet", ",", "trainData", ",", "testData"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907666898543231*^9, 3.907666904813692*^9}, {
   3.9076669580737877`*^9, 3.907666962960288*^9}, 3.907667119059746*^9},
 CellLabel->
  "In[153]:=",ExpressionUUID->"c8efc2b7-a17a-4a23-be97-2f53cbf44648"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "21450"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "858"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["1.3min"], 
                  TextCell["1.3min"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "18286"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "1555"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "173"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "1372800"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.02\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.04018735588096553, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["1.75%"], 
                  TextCell["1.75%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"1.96\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.019570087153183698`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["0%"], 
                  TextCell["0%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
IH2XS9H0vVD1sY1435dCO39tTX2rmvk/inu8RA==
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJw9l3lczPkfxyvVdrhWjigU1jqySihyvETuDkW0OkiXpPs+pmlmamaKSiIp
1HaIXBu71NKwJKxblCtXjq45izZWv+r7np9/PL7N9/i8n5/X+/V6f4w9gxy9
1VRUVExUVVT6/lf+2+VuUmR2wk8UFPsor7FDE15xumPXZt6h65G4GVAhfVj8
RNR3VWphjHPXNDs7cp7S75NR+zh/fMrFVyJdlxvWIytMkF49rt5E9JLuN8OR
PZNtWbWvRcb9N8yGRlB0cMX1t/T8XMQu+Rq9+u93okvNtr1/mocJY3LXVBS9
pfctwN3fBj0/wX0n6r/MXIzfRwgF5XM+0vuXwP18XWmO9K2o/3Wl1nhsN/Wf
43Yf6HvLoHE3w9sq6r2o//FkG3yrqryaaPKJvr8c89grblV/EYv6fjXxWokR
vOiqEId2Ws8qJHveML5j3S7y6n/hGuCK4GpgVjOtby2+zGuaG1z2QdT/uLEd
FO94uzLLJbRee7wYtdB1sFmbqB822wFd3fZDdWtbaP3rsGb47IUXE9tFRy16
vyhZh68OaxcfNGuhehxh+PXjosmKNpFd34LdnZD7cex5tSfNVN96jF7jXa83
QCrqLO19wZ312G1Uyo9+3071bkBpZA/7+xWpKL/vcwudMWe1mXRojYLqd4ZX
5Gaxd7tc1H/7iY34YVLgk+ZDMuKxCWMd3HZHCWWifhwGLghw53eatCv5uGCO
yjTrkSOkov7y037FM0fTmkv1MuK1GZpu/tqxljJRX3lB3Ztxt+FXtZ6xMuLn
iqVnr6Ud7uXbt7xL293gdLeaY6oqI57uyC+fwv6hRSrqu9J96o7aqsXv55jL
ia8HxIbc0yc15cx6J22Bhsc99aJxUuK9BUbOJZoX3MSilr7lPt+CTaraieee
iIn/VmzWsrXKuNjG1LN3K85+w1+seVLaj614ZXrL5dRDGVPfGk/UdSjG3LOS
0f54Ys8PqmdGnaZ61bbBMWDFy0TdVtqvbdCZ+otrTD7VX7UNv038NEG+TUr7
5wUr6dsbZ/6QMjxCvSCzaAwMZyloP73w6q3BGNdxEobPVG+ocD7E6q+T0f56
47+b8bP3FBGvN96Ybeu6sVHYSvvtA6PUhx7PvxC/XB8knOYUvlaT0/77YPz9
2OmjR0oZng6+OKM+etrl0TLSgy/mZU7RPs6Rivoed9Hyg/msntepacp+8QPv
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
                    "]]}, {}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.523}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.523}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 0.523}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 0.523}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 0.523}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 858.02}, {-1.823, 0.523}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{200., 400., 600., 800., 1000.}, {{-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJxdl3lsVWUQxesSohA0GuKGihglmmBAJRhRvAPiihRBtspqaYGCpfv2ur19
aymvLW0pCCkoJaISWVREUUQlYiDBQFwwGjFoEDBGFKOI0XfPTM/L9f7T3N57
v2/m9505M29obtHU/IuzsrKGX5SV5f7tu1L7zt0xZ+VRp8h3ZO23v/eTMYU9
R/qNOWD310g//OMjx73rvW+oHMS1154Pk0W4djsDcj4Zf8324ZI9+OTOQPZb
9v7dMvpwwSXrRu90huKFUeLeHS7YYd+PlltxbXf2/DQp/a/75cyUXTdHTm+z
9R4UjW+rg9uUI9/7Bm197PgWW3+cvJ1+e8qurQ6W6x0vIzsv5B4Y0Wv7TZC2
+cP/+rhts4PPI49I+ib9n022/6MyHdcmx306PO9xOY71N1o8T8jCAyPSK25w
8rDgRN5rfE+Ju1vnhY0OPh+aLVtwbbR4J1s+GxzA9j8t6WTSGb1k8U+RD930
9m1wNt+X3vGXKYxH85kqDdtOXDuxYYOT7QY87xnj2WP5TZM4rh7nXG96gUPT
pPn292edbeqwfKfL2Sb3H2udF9ztxs6QXeC13vKfYee11sHrr86UG9zbwauN
xyzp/8WLxWP7dznAMThHsP3hbuOTIziefR0O0m961vJfY7xm23m1OW56Redn
G49W4zdHfkhnt+1El+OGt6dgrvFsM57zJAcJtDnu3YCv5ln8LcZ3vqwDkE6N
97YF8gcAp4z3AjkKAXc6p9xwv14gj0xwr1XG/znjt1rzaX9Oqqvcq8vOI/Mc
4UzMlb2z3IBW2/nkMl7ke/FC02ubnddC07flv3sh49XzyyM/3Jbm8X09zzwZ
t3lg+TExPnfmy5pu90rY+eaTB3gdz5elqK92O+9F1AP4dS9i/Hr+mefg+fRi
7q96WMz43M9zLlsikO+cLtPHEp4feO9dIhOMr+qlQCCnk8a7KnOv+imQG01v
4D1iqaSTTWe8xvS0VErGugpcp7x/XMp4VF/LrF46lPf6ZdSv6m2Z+ZPxnvE8
+aj+npercLU6Lt6fBhZSr6rHQuoVvD8utHpsNX0ul8dhGK0O5FS/3M43anpd
Tr7gPapIcFw3G+9UkUzFAcaV95kixqd6LqZ+Ee/UYhli36u+iwU4d7aqXl4r
Zj6q92KBnRemNJ/LS0w/rab/Ej5HOPklPD+thxLB4552zfeDEupH6yPzPfR2
U6lMgp80Wb2UUk/gUVMq2nX66qeUegCfo6XSbfrWeiqz91PKa2SZVFp9an2V
CeRwbrXzsAusuYz8tN7KJOriijSpfk+WWX/oq79yxg/eE8oFx7ttldVjOesb
YfSUC+ThW2X1Wc7zgZz/Lhc8HtRi9Voh/9j3SHdmBXlq/VYwHvDeUSErzT+0
nivov+B9ZaX5dZPVd6Xl1668l1Vaf0hZvVdS/+C9v5J+qvVfaf24XXnfWiWQ
6+0rzQ+q5EkIvkV5N1TR39QfqmQgCnaV8j5WxfXUL6qt/65U3qOrWT/qH9Uy
zPYD77Zq+QbXCvOTaqv/DuX9czXXV3+pod7B+4ka7qd+UyP34jLem2oEx7O1
y/ynRu6EoTUr74t81Kf6kY/6QLnM9dEP1J98Uoz4Vijvt32yXwMwv/IxX/Ae
VOvtF+Nrvf5bXCsP4cCT5me1XA+8D9Z69X2+lrzA+446eQkBpczv6qg/8A7X
sV+o/2XeR9rf1bFe1Q/ryQ+4Hqjnc/XHes4D4N1Vz3jVL+vpd+D9Wz39Vf2z
gXoD78kN1Kf6aQO/x+uvNMgVpjf11waet46vjdSr+m0jzxO8cxt5Huq/jdzP
TW/te430I/XjRtYn6m2gn/Wk/uwXtKtjKY3vAb/Nj2vMr/3sV4i3wE9+6t9+
xoP4O/2MX/3cTz9CPh/5bd5tMX/3m/6sH571k5f6fYD9BfneEqB/qf8HuD/0
lh1gPWs/CFg+SfXXur71UtYfAswfetwSYD/WfhEQ2NcX5gdfBti/tH8E6IfQ
a78g49F+EmS9gPeoIPut9pegV8+5QfYv7TeZe20jQfqH9p8g9Qfee4KsB+1H
QZ4f9H86yP6n/SlE/YD39SGvvkaGROXTrLwfC8nud9yryfpXiHoG74qQHMLv
q2brZyHyAe8XQ9SD9rcQzxu8PwvJGzYPaL/L3IP3vyH6mfa/MP0MvO8Ks560
H2buwXt2mPWg/THM+MA7EabfaL8Ms1+A95thzh/aP8PkD94nwpwntZ+G6Sfg
fXWE56H9NcJ6BW+JUB/abyPcD7yXR/73+yjC/orbFyLsJ9qPIzLLzhe8P82s
r/05IqeNH3j/GeHvD+3XUf5+AO9hUfLR/h3lfuA9Lcp+ov086p1HglHy0v4e
9fr361Ev7/1R8gPvb6L/6/9R+dzqE7wHxKgXnQdiXr+/PyYIP7fb5oMY/Qe8
F8c4f+i8EPPOOx0x8tP5IUY/Be8PY6wfnSdiXn3/GqP/6HwR537gPSQuvTCw
dTZvxOlP4D0pTj/Q+SNO/wDv2rhX321xm+c6lffLccav80lmPeD8PM7z0nkl
7uV9aYI8dH5JeP3kngT1o/NMgv0AvBckOB/rfJOgf4B3S4LnqfNOwvt77t2+
/eI2/yRY/+B9KkH96TyUZD7gfV2S++t8lOT64P1okn6h81LS6yflSa9/NyU5
f4H3xiTPS+epzPfgfTjJ3wP/AfrUhgM=
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1: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
                    "]]}, {}}}, Prolog -> {{
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.477225}], {1., 1.}], 
                    Text[400, 
                    Offset[{-2, -2}, {400., 0.477225}], {1., 1.}], 
                    Text[600, 
                    Offset[{-2, -2}, {600., 0.477225}], {1., 1.}], 
                    Text[800, 
                    Offset[{-2, -2}, {800., 0.477225}], {1., 1.}], 
                    Text[1000, 
                    Offset[{-2, -2}, {1000., 0.477225}], {1., 1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.2], 
                    Offset[{3, 0}, {0, 0.2}], {-1, -1.}], 
                    Text[
                    PercentForm[0.4], 
                    Offset[{3, 0}, {0, 0.4}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 858.02}, {-0.004725, 0.477225}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{200., 400., 600., 800., 1000.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.2, 
                    GrayLevel[0.3001]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    ImageSizeCache->{128.103125, {4.5625, 7.26953125}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    ImageSizeCache->{157., {47.14375, 49.0890625}},
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "Noto Sans", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{3.907667108446211*^9, 3.907667452278057*^9, 
  3.9076698437849092`*^9, 3.907670112121449*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"454c5fd9-9429-4846-bbd4-83a1a4497288"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"GetTrainedNet", "[", "result", "]"}]}]], "Input",
 CellChangeTimes->{3.9076712785084333`*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"acf60334-8421-474b-b347-cca56762cc71"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["NetGraph",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
               ImageSizeCache -> {
                11.719921874999999`, {0., 11.719921874999999`}}], Appearance -> 
              None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                StyleBox[
                 TemplateBox[{"\"Number of inputs\"", "\":\""}, "RowDefault"],
                  "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox["6", "SummaryItem"], "SummaryItem"]}, {
               TagBox[
                StyleBox[
                 TemplateBox[{
                   TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                 "SummaryItemAnnotation"], "SummaryItem"], 
               TagBox[
                StyleBox[
                 TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                   StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                  "RowWithSeparators"], "SummaryItem"], "SummaryItem"]}}, 
             AutoDelete -> False, 
             BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
        GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              Appearance -> None, BaseStyle -> {}, 
              ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0149], {
               RGBColor[0.729, 0.729, 0.729], 
               Thickness[0.03], 
               Opacity[1.], 
               JoinForm[{"Miter", 10.}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {18.5, 
                27.5}, {35., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {49.5, 
                27.5}, {33., 27.}}}, CurveClosed -> {0}], 
               
               JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {18.5, 
                25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
               FaceForm[
                RGBColor[0.631, 0.8160000000000001, 0.498]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.40800000000000003`, 0.627, 0.196]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {22., 
                40.}}}]}, {
               FaceForm[
                RGBColor[0.38, 0.753, 0.89]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
               FaceForm[
                RGBColor[0.24300000000000002`, 0.608, 0.71]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {22., 
                19.}}}]}, {
               FaceForm[
                RGBColor[0.584, 0.51, 0.8390000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
               FaceForm[
                RGBColor[0.4, 0.396, 0.659]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {37., 
                30.}}}]}, {
               FaceForm[
                RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
               FaceForm[
                RGBColor[0.647, 0.259, 0.08600000000000001]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {52., 
                40.}}}]}}, ImageMargins -> 0, ImageSize -> {36, Automatic}, 
             PlotRangePadding -> 0], 
            GridBox[{{
               TagBox[
                
                DynamicModuleBox[{
                 NeuralNetworks`Private`NetGraph`selection = None}, 
                 GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox["\"Cargo\"", 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"TrainedNet\"", 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{0, -15.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Doors\"", 
                    
                    Offset[{0, -7}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-1.9999999464102052`, 
                    2.0000000535897935`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Passengers\"", 
                    
                    Offset[{0, -7}, {-1.9999999196153082`, 
                    3.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", TooltipStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    
                    Offset[{0, -7}, {-1.9999998928204112`, 
                    4.000000053589793}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Safety\"", 
                    
                    Offset[{0, -7}, {-1.9999998660255143`, 
                    5.000000053589792}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox["\"Output\"", 
                    
                    Offset[{0, -7}, {8.038469108735353*^-8, 
                    2.999999999999999}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, 
                    StripOnInput -> False, FontColor -> GrayLevel[0.5]], 
                    StyleBox[{
                    InsetBox["\"3\"", 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019002`}, {-1.479056899628362, 
                    1.5628292151185497`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.31622779143670915`, 0.9486832895772231}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{-4.919349484592803, 
                    2.459674907063233}, {-1.4559016434844814`, 
                    2.088196640135746}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.4472136194660424,
                     0.8944271790168733}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999931673012, 
                    2.5500000388526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-1.4499999196153084`, 
                    3.0000000388525994`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318316}, {-1.4499999075576047`, 
                    3.4500000388525995`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396938, -0.7071068001334007}], 
                    InsetBox["\"3\"", 
                    
                    Offset[{4.919349616406268, 
                    2.459674643436304}, {-1.4559015946211251`, 
                    3.911803437885724}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829577}], 
                    InsetBox["\"4\"", 
                    
                    Offset[{1.4737193332337029`*^-7, 
                    5.499999999999998}, {-0.44999991961530866`, 
                    3.000000012057703}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.6794896967885506`*^-8}]}, 
                    StripOnInput -> False, FontSize -> 8, FontWeight -> 
                    "Thin", FontColor -> GrayLevel[0.7]]}, {
                    GrayLevel[0.7], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999464102052`, 
                    2.0000000535897935`}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999196153082`, 
                    3.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998928204112`, 
                    4.000000053589793}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999998660255143`, 
                    5.000000053589792}, {-0.9999999196153085, 
                    3.000000026794896}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999196153085, 3.000000026794896}, {
                    8.038469108735353*^-8, 2.999999999999999}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.479056899628362, 
                    1.5628292151185497`}, {-0.25, 0}, 
                    Offset[8], {1.000000080384691, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4559016434844814`,
                     2.088196640135746}, {-0.25, 0}, 
                    Offset[8], {1.000000053589794, 1.9999999732051024`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.449999931673012, 
                    2.5500000388526}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948965`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999196153084`,
                     3.0000000388525994`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4499999075576047`,
                     3.4500000388525995`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051027, -1.000000026794897}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}]}], {-1.4559015946211251`,
                     3.911803437885724}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102057, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    GrayLevel[0.7], 
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 
                    0.3333333333333333}}]}], {-0.44999991961530866`, 
                    3.000000012057703}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Output\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], "Output"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], 
                    StyleBox[{
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    EdgeForm[
                    GrayLevel[0.7]], 
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], {
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{-12.5, -12.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{12.5, 12.5}, {-0.9999999196153085, 
                    3.000000026794896}]]]}, 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{-10.5, -10.5}, {-0.9999999196153085, 
                    3.000000026794896}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-0.9999999196153085, 
                    3.000000026794896}], 
                    
                    Offset[{10.5, 10.5}, {-0.9999999196153085, 
                    3.000000026794896}]]], 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 
                    1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, AspectRatio -> 1, ImageMargins -> 0., ImagePadding -> 
                    0, ImageSize -> 15, PlotRange -> All, PlotRangePadding -> 
                    0], {-0.9999999196153085, 3.000000026794896}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"TrainedNet\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["TrainedNet", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999732051024`, 1.0000000535897937`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999464102052`, 2.0000000535897935`}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999196153082`, 3.000000053589793}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998928204112`, 4.000000053589793}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999998660255143`, 5.000000053589792}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{8.038469108735353*^-8, 2.999999999999999}, 
                    Offset[{2., 2.}, {0., 0.}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Output\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Output", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}, FontSize -> 10]}, {
                    EdgeForm[{
                    GrayLevel[0.5], 
                    Thickness[Large], 
                    Dashing[{0, Small}]}], 
                    FaceForm[None], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999196153085, 
                    3.000000026794896}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-1.9999999464102052`, 
                    2.0000000535897935`}, {-1.9999999196153082`, 
                    3.000000053589793}, {-1.9999998928204112`, 
                    4.000000053589793}, {-1.9999998660255143`, 
                    5.000000053589792}, {8.038469108735353*^-8, 
                    2.999999999999999}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, AspectRatio -> Full, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    ImagePadding -> {{38.499995578841975`, 29.}, {29., 19.}}, 
                    ImageSize -> {177.49999999999994`, 322.9999999999999}, 
                    PlotRangePadding -> 0], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox[
                    RowBox[{"Input", " ", "Ports"}], FontWeight -> Bold]], 
                    ItemBox[""]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox[
                    RowBox[{"Output", " ", "Port"}], FontWeight -> Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Output\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Output\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Output"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Output\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Output"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox[
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
                    StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"], "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "TrainedNet" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Net/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{1344}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {1344}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT], "$ArrayDimensions" -> {256}|>, 
                    "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {1344}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    Clip[#, {0, 1}]& ], "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/5" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{64, 
                    21}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/6" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 
                    64}]|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Input/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/7" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/8" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/9" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT], 
                    "Weights" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    neurallogic`Private`input]]], "GradientFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[neurallogic`Private`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    neurallogic`Private`outgrad]], "$CompiledFunctions" -> 
                    NeuralNetworks`ValidatedParameter[{
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "layer_ExprInvocation", "CName" -> 
                    "layer_CInvocation", "FunctionName" -> "layer", 
                    "SystemID" -> "Linux-x86-64", 
                    "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704144, 
                    139987995704000, 139987995704080, 139987995701248, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"], 
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "gradient propagating_ExprInvocation",
                     "CName" -> "gradient propagating_CInvocation", 
                    "FunctionName" -> "gradient propagating", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704736, 
                    139987995704000, 139987995704544, 139987995703616, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} \
-> \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]}], 
                    "$InputType" -> "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 64}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "4fe9bba1ba468809"|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
                    "Inputs" -> <|
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"medium\"", "\"very high\"", "\"high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.3.0"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"medium\"", "\"high\"", "\"very high\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.3.0"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"medium\"", "\"large\"", "\"small\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.3.0"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"low\"", "\"high\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.3.0"|>|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Outputs", "Output"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "TrainedNet"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "TrainedNet"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                 Initialization :> {NetGraph}], "SummaryItem"]}}, AutoDelete -> 
             False, BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
          False, BaselinePosition -> {1, 1}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  NetGraph[<|
   "Type" -> "Graph", 
    "Inputs" -> <|
     "PurchasePrice" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"low", "medium", "very high", "high"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"medium", "high", "very high", "low"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
      NetEncoder["Class", <|"Labels" -> {
           Interval[{5, 
             DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 4, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{4}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
      NetEncoder["Class", <|"Labels" -> {
           Interval[{5, 
             DirectedInfinity[1]}], 4, 2}, "OutputForm" -> "IndicatorVector", 
         "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
         "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 3, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
      NetEncoder[
       "Class", <|
        "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
         "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> False, 
         "$Count" -> 3, "$Version" -> "13.3.0"|>, 
        NeuralNetworks`TensorT[{3}, 
         NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
    "Outputs" -> <|
     "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
    "Nodes" -> <|
     "TrainedNet" -> <|
       "Type" -> "Graph", 
        "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
          NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
          NeuralNetworks`TensorT[{4}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
          NeuralNetworks`TensorT[{3}, 
            NeuralNetworks`IndexIntegerT[0, 1]]|>, 
        "Outputs" -> <|
         "Output" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
        "Nodes" -> <|
         "Net/1" -> <|
           "Type" -> "NetArray", "Arrays" -> <|"Array" -> CompressedData["
1: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
               "]|>, 
            "Parameters" -> <|
             "Dimensions" -> 
              NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT], 
              "$ArrayDimensions" -> {1344}|>, "Inputs" -> <||>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
          "Net/2" -> <|
           "Type" -> "NetArray", "Arrays" -> <|"Array" -> CompressedData["
1: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
               "]|>, 
            "Parameters" -> <|
             "Dimensions" -> 
              NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
              "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
          "Net/3" -> <|
           "Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
              "$Dimensions" -> {1344}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1344}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
          "Net/4" -> <|
           "Type" -> "Elementwise", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
              "$Dimensions" -> {256}|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>,
             "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
          "Net/5" -> <|
           "Type" -> "Reshape", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Dimensions" -> NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{1344}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>|>, 
          "Net/6" -> <|
           "Type" -> "Reshape", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Dimensions" -> NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>,
             "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>|>, 
          "Input/Catenate" -> <|
           "Type" -> "Catenate", "Arrays" -> <||>, 
            "Parameters" -> <|"Level" -> 1|>, 
            "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
              NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
              NeuralNetworks`TensorT[{4}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
              NeuralNetworks`TensorT[{3}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
              NeuralNetworks`TensorT[{3}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
              NeuralNetworks`TensorT[{3}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>, 
            "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
          "Net/7" -> <|
           "Type" -> "Threading", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[
               neurallogic`DifferentiableHardOR[
                 Slot["Input"], 
                 Slot["Weights"]]& ], "Broadcasting" -> 
              NeuralNetworks`ValidatedParameter[1]|>, 
            "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
              NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>|>, 
          "Net/8" -> <|
           "Type" -> "Aggregation", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> Max, "Levels" -> NeuralNetworks`ValidatedParameter[
                Span[2, All]]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{64, 21}, 
                NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>|>, 
          "Net/9" -> <|
           "Type" -> "Threading", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> 
              NeuralNetworks`ValidatedParameter[
               neurallogic`DifferentiableHardNOT[
                 Slot["Input"], 
                 Slot["Weights"]]& ], "Broadcasting" -> 
              NeuralNetworks`ValidatedParameter[1]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT], 
              "Weights" -> 
              NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>, 
          "Loss/Harden" -> <|
           "Type" -> "Compiled", "Arrays" -> <||>, 
            "Parameters" -> <|
             "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                Function[{
                  Typed[neurallogic`Private`input, 
                   TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                 Map[
                 Map[If[# > 0.5, 1., 0.]& , #]& , 
                  neurallogic`Private`input]]], "GradientFunction" -> 
              NeuralNetworks`ValidatedParameter[
                Function[{
                  Typed[neurallogic`Private`input, 
                   TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                  Typed[neurallogic`Private`outgrad, 
                   TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                 neurallogic`Private`outgrad]], "$CompiledFunctions" -> 
              NeuralNetworks`ValidatedParameter[{
                 CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                   Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                   "ErrorFunction" -> Null, "InitializationName" -> 
                   "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                   "ExpressionName" -> "layer_ExprInvocation", "CName" -> 
                   "layer_CInvocation", "FunctionName" -> "layer", "SystemID" -> 
                   "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                   "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                   "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                   "targetMachineId" -> 64497296|>, 139987995704144, 
                  139987995704000, 139987995704080, 139987995701248, 
                  "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"], 
                 CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                   Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                   "ErrorFunction" -> Null, "InitializationName" -> 
                   "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                   "ExpressionName" -> "gradient propagating_ExprInvocation", 
                   "CName" -> "gradient propagating_CInvocation", 
                   "FunctionName" -> "gradient propagating", "SystemID" -> 
                   "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                   "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                   "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                   "targetMachineId" -> 64497296|>, 139987995704736, 
                  139987995704000, 139987995704544, 139987995703616, 
                  "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} \
-> \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]}], 
              "$InputType" -> "Real", "$OutputType" -> "Real", 
              "$InputShape" -> {4, 64}, "$Batched" -> False, 
              "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
              "4fe9bba1ba468809"|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>, 
          "Loss/SoftProbs" -> <|
           "Type" -> "Aggregation", "Arrays" -> <||>, 
            "Parameters" -> <|
             "Function" -> Total, "Levels" -> 
              NeuralNetworks`ValidatedParameter[2]|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
          "Loss/SoftmaxLayer" -> <|
           "Type" -> "Softmax", "Arrays" -> <||>, 
            "Parameters" -> <|"Level" -> -1|>, 
            "Inputs" -> <|
             "Input" -> NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
            "Outputs" -> <|
             "Output" -> 
              NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
        "Edges" -> {
         NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Inputs", "Input1"] -> 
          NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
          NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Inputs", "Input2"] -> 
          NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
          NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Inputs", "Input3"] -> 
          NeuralNetworks`NetPath["Inputs", "Doors"], 
          NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Inputs", "Input4"] -> 
          NeuralNetworks`NetPath["Inputs", "Passengers"], 
          NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Inputs", "Input5"] -> 
          NeuralNetworks`NetPath["Inputs", "Cargo"], 
          NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Inputs", "Input6"] -> 
          NeuralNetworks`NetPath["Inputs", "Safety"], 
          NeuralNetworks`NetPath["Nodes", "Net/3", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/1", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/4", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/2", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/5", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/3", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/6", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/4", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/7", "Inputs", "Weights"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/5", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/9", "Inputs", "Weights"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/6", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/7", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "Input/Catenate", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/8", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/7", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Net/9", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/8", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Nodes", "Loss/Harden", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Net/9", "Outputs", "Output"], 
          NeuralNetworks`NetPath[
           "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath["Nodes", "Loss/Harden", "Outputs", "Output"],
           NeuralNetworks`NetPath[
           "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
          NeuralNetworks`NetPath["Outputs", "Output"] -> 
          NeuralNetworks`NetPath[
           "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
    "Edges" -> {
     NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
      NeuralNetworks`NetPath["Inputs", "Cargo"], 
      NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Doors"] -> 
      NeuralNetworks`NetPath["Inputs", "Doors"], 
      NeuralNetworks`NetPath[
       "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
      NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
      NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
      NeuralNetworks`NetPath["Inputs", "Passengers"], 
      NeuralNetworks`NetPath[
       "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
      NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
      NeuralNetworks`NetPath["Nodes", "TrainedNet", "Inputs", "Safety"] -> 
      NeuralNetworks`NetPath["Inputs", "Safety"], 
      NeuralNetworks`NetPath["Outputs", "Output"] -> 
      NeuralNetworks`NetPath["Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
   "Version" -> "13.3.0", "Unstable" -> False|>],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.907671279410432*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"c8a54f10-c0c9-4183-a7f5-95ca5afbcab1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNetClassifier", ",", "hardNetClassifier"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\"\<TrainedNet\>\"", "->", "#"}], "\[RightAssociation]"}], 
       ",", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", "outputEncoder", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"trainedNet", ",", 
      RowBox[{"HardenNet", "[", "trainedNet", "]"}]}], "}"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.907670205775473*^9, 3.907670206282983*^9}, {
  3.907671101262373*^9, 3.9076711032682056`*^9}, {3.90767130467093*^9, 
  3.907671343124208*^9}, {3.907671431835143*^9, 3.907671440650526*^9}},
 CellLabel->
  "In[188]:=",ExpressionUUID->"350b58b3-583d-4336-87d6-dc364ba27ec6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"#", ",", 
     RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"softNetClassifier", ",", "hardNetClassifier"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.907670338149351*^9, 3.907670346037108*^9}, {
  3.907670487794262*^9, 3.907670488253765*^9}, {3.907670709055973*^9, 
  3.9076707207842503`*^9}, {3.907671445469969*^9, 3.90767145283386*^9}},
 CellLabel->
  "In[189]:=",ExpressionUUID->"3da7775e-79e4-4eaa-89c7-961b42da9396"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "2a31139c-d9c7-4f87-82cd-a53b13c5848c"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "173"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"99.4", "0.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    99.4219653179190743231`3., 0.5780346820809469932`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"65.", "4."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    64.7398843930635905508`3., 3.6430371689585592243`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.9806201636527449583`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0052992683909550142`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.9700216268708349299`3.", "\", \"", 
                    "0.9912187004346549868`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.9700216268708349299`3., ", ", 0.9912187004346549868`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.019570087409875099`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.005403970665839003`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0087621460781970931`3.", "\", \"", 
                    "0.030378028741553105`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0087621460781970931`3., ", ", 0.030378028741553105`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"4.85`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"2.48`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNKP/dJPb5641v76qu9fjOEX9ufVwj6IZT3
mGRz3j5j7i80eGsvX/3X75fqS/sjyktaDrDeJdmcn5cSVH9fe21/VYSfx8r+
sf0RTs9Uafvt9hq871zSDN/Zuxe/rbX/9sZ+/rqb/PWhLwia97BKZJ37w1v2
DCiA8nADAB4DXfg=
                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["112", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "112", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{112, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["46", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "46", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9787234042553191`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.989247311827957`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{46, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9787234042553191}], 
                    Row[{"FScore = ", 0.989247311827957}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.1`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.02127659574468085`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{1, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.1}], 
                    Row[{"Row fraction = ", 0.02127659574468085}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.9`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9473684210526315`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{9, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.9473684210526315}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{5, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "112", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{112, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "47", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9787234042553191`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{47, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9787234042553191}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{9, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "112", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{112, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "46", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{46, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.9`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.9}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " example", "s", " classified as ", "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["112", TraditionalForm]}, {2.5, 
                    FormBox["47", TraditionalForm]}, {1.5, 
                    FormBox["9", TraditionalForm]}, {0.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["112", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["46", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["10", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02],
                     "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> "Noto Sans", 
             NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "good" -> 0.25, 
             "very good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "medium", "very high", "high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "high", "very high", "low"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "good", "very good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "TrainedNet" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Net/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1344}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
                    "Net/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1344}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
                    "Net/4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/5" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/6" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>|>,
                     "Input/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/7" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/8" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>|>, 
                    "Net/9" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    neurallogic`Private`input]]], "GradientFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[neurallogic`Private`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    neurallogic`Private`outgrad]], "$CompiledFunctions" -> 
                    NeuralNetworks`ValidatedParameter[{
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "layer_ExprInvocation", "CName" -> 
                    "layer_CInvocation", "FunctionName" -> "layer", 
                    "SystemID" -> "Linux-x86-64", 
                    "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704144, 
                    139987995704000, 139987995704080, 139987995701248, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"], 
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "gradient propagating_ExprInvocation",
                     "CName" -> "gradient propagating_CInvocation", 
                    "FunctionName" -> "gradient propagating", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704736, 
                    139987995704000, 139987995704544, 139987995703616, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} \
-> \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]}], 
                    "$InputType" -> "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 64}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "4fe9bba1ba468809"|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.3.0", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 153712, "LanguageVersion" -> {13.3, 1}, "Date" -> 
           DateObject[{2023, 10, 30, 16, 17, 33.619689`8.279168671826254}, 
             "Instant", "Gregorian", 0.]|>|>], 
      "TestSet" -> <|"Input" -> {{"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "very high", 2, 4, "medium", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "medium", 4, 2, "small", "high"}, {
          "low", "low", 4, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "very high", "very high", 3, 4, "small", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "low", 2, 4, "large", "medium"}, {
          "low", "medium", 3, 2, "small", "low"}, {
          "low", "very high", 2, 4, "small", "high"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "high", "low", 3, 4, "small", "medium"}, {"very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "very high", 3, 2, "medium", "low"}, {
          "high", "medium", 2, 4, "medium", "high"}, {
          "very high", "very high", 2, 4, "large", "low"}, {
          "low", "low", 2, 4, "medium", "low"}, {
          "very high", "low", 3, 2, "small", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "high", 4, 4, "large", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "very high", 2, 4, "medium", "high"}, {
          "low", "very high", 4, 4, "medium", "low"}, {
          "very high", "high", 2, 4, "large", "high"}, {
          "medium", "high", 4, 2, "medium", "medium"}, {
          "high", "very high", 2, 2, "large", "high"}, {
          "very high", "medium", 3, 4, "small", "low"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "low", 3, 2, "small", "medium"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "very high", 2, 2, "large", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 3, 4, "small", "high"}, {"high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 4, 4, "medium", "medium"}, {
          "medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "medium", "very high", 4, 4, "large", "high"}, {
          "high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 3, 2, "medium", "high"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 2, 2, "small", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "low", 2, 2, "medium", "low"}, {
          "low", "high", 4, 2, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "very high", 4, 4, "medium", "high"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 4, 2, "small", "low"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "medium", 4, 4, "large", "low"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "low", 4, 2, "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 2, 2, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "high", 4, 2, "large", "medium"}, {
          "high", "medium", 4, 2, "medium", "low"}, {
          "medium", "high", 2, 4, "medium", "high"}, {"high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 4, 2, "small", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "low", 2, 2, "large", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "high", "medium", 2, 4, "medium", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "very high", 4, 4, "small", "low"}, {
          "very high", "medium", 4, 2, "medium", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 4, 4, "medium", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "low", 3, 4, "small", "medium"}, {
          "very high", "medium", 2, 4, "large", "medium"}, {
          "very high", "very high", 2, 2, "small", "low"}, {
          "high", "high", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "low", 2, 4, "large", "medium"}, {
          "high", "medium", 3, 2, "small", "medium"}, {
          "low", "high", 2, 4, "large", "medium"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "medium", 3, 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "very high", 4, 4, "small", "medium"}, {
          "very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "medium", "medium", 4, 4, "medium", "low"}, {
          "high", "low", 2, 4, "small", "medium"}, {
          "medium", "very high", 2, 2, "small", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "very high", 3, 4, "medium", "medium"}, {
          "high", "medium", 3, 4, "medium", "low"}, {
          "low", "very high", 4, 2, "small", "high"}, {
          "low", "very high", 2, 4, "large", "medium"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "high", 2, 2, "large", "medium"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "medium", 3, 4, "large", "medium"}, {
          "medium", "high", 3, 2, "medium", "high"}, {
          "high", "high", 3, 4, "small", "high"}, {
          "low", "high", 3, 2, "large", "high"}, {
          "medium", "low", 2, 4, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 4, 4, "small", "high"}, {
          "low", "very high", 2, 4, "large", "low"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 4, "medium", "medium"}, {
          "medium", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "low", 4, 2, "small", "medium"}, {
          "very high", "medium", 4, 2, "large", "medium"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "medium", 4, 4, "large", "high"}, {
          "low", "low", 4, 2, "large", "medium"}, {
          "high", "medium", 2, 4, "large", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 3, 4, "medium", "low"}, {
          "medium", "high", 4, 2, "small", "high"}, {
          "low", "very high", 2, 2, "small", "medium"}, {
          "very high", "medium", 4, 4, "large", "medium"}, {
          "very high", "very high", 3, 2, "large", "high"}, {
          "high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "high", 4, 2, "medium", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "high", 2, 4, "large", "high"}}, 
        "Output" -> {
         "good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "acceptable", "very good", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "acceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "very good", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", "good",
           "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "good", 
          "unacceptable", "acceptable"}|>, 
      "Predictions" -> {
       "good", "unacceptable", "unacceptable", "unacceptable", "unacceptable",
         "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "good", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", "acceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "very good", "acceptable",
         "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "very good", "good", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", "good", 
        "unacceptable", "acceptable"}, "LogProbabilities" -> CompressedData["
1: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
N3qj88paey5o3hZhh/mlIs3EVhXtP//lGh15ZEfA8TKrRfsbP6o6kTsrCnjf
cqjqRPtXGwSvjWNyYU1+6I2z7wupIAU5WXyv9RGK8tgO+mVWNN8EfbWz4YCi
IRxt0f56noYqvP9w2f098w6DTw6Opc7T4MCJExm0fM28bbR80PGKltsVo7QY
32MgzSJwdN1tqnp8fBWO75ZltxbguG6uKOTj86X1D61LE/7cdf0sVTx8Wg6/
7z0G6LghKK0+vv3zL9FCpc566qmY/1PPifMwp1/s/9CMNuvPewup4w1sWm/j
QqVZ+Llzqzmt//j9O3Ef/jhHwfjROfg5wdB0TUWsx77eGI9Fl5dTR25m0Lz4
Wuc32r9kvUT5lRPOPwuNpzdvLjUEAckr7HHeJURQjpoojqX1d9Tp5RrRaH9d
6PmdtWwf4PuIqRaN9CMoLX6J/STtRuw5sHfYe1pDF2ofsrzpM30YBJ9f5zON
/NoqFK2aRv4+rvVq5YL+USq++ztn7B/ngr5U7J/1ifPTMb+vmP8j4J/dQinn
bKHrz9qvdGgeLG+PZ/6v/CF5Q/JIENld7zDsB9wSNXJw/yrz81gT7l+zb93s
XorOO5bTlJ6mokKtEorz5t3rT2j/TZrr0v6b8PJKnfkyidJ8toOWfyExQwa/
R9aS9YHUBbLeXFhzPEAxipJVWk/fN/bHYHofWU9ZZdc/jJCHJZrMMXObSpBX
ZLDQRosLCUrrnwSzmkyDgytBLlsvZNVmeRjSVVxRsUgXLmPErw7WMoRd76P1
LyG7NNkB1aa+CsAPu3q7j8OHBBumkJobguv1TTtFonQBlI0W93XVIeJ43mPZ
GDuF7JYxYfSmN28l6Fn6YVEaiq97XnH2aYjnOSOnPVJQ/ZjesNEmZ6gAZMwe
zx9CdSMwhCFIQf2ptP6a2EfSLgS3D9j15SiawDDNybtzUNzklx6O+nnOYfBc
ef/DOSh+/P/6IHrW11UvrBHnXfaUOO8ISou/HQurUH9tC89FZc/gvnr7ywi6
z2af9qX7a8IfhDcIjxD+eOx84mIV6zal87woAPs7Xef1xzjuH0dDQ3x/g7FJ
4W4mD960fOb0nVw0uC9CYw6LA3+O+yZ5N+JHv/51qbpuqN69Wm+inw3BhcwH
w9sRv0f/YDNpj/j949EY35VVTLAa/BbFRvKGfEJj2egeBHOVeyZ3c63gqRD9
YaaAD5fLnWiVQ3PrknqGQqorBO82tb1/wNKFB8vDtl5I3gpMXMeS3yC59blg
8AG6hyR/Ed4iPCatPpL5RnKuIfNOY0b22RVRPLDB1yFaHfHM+0C3SHV0by8z
pU3q/8W//48/iP+f/e3v0L/jIODvOJh9xNm0FslrzzKn6866kw/dcB06udef
rj/S/C9NP9J/SvadBCXzWzLPl2SNKX01ZxeYXyzoYaP437fjRtweFP9q/GqE
hrB/Ad/xpddh6hTThq4PMMGTrgsEE2RLm9SQ3TbJJndMNBuAS+rX76qhvCN4
zBTsZHZVgBdGPNlMlOe5eXHsLsR7BF3WtIoSuYrUwekKmt9iT4j7hLD8fLpP
UWn+On2BzXvqqGVDFtZv9tO0HKxXJE8tE8e3xoiHaZ3CXGgc7tkdkLIXyLq3
8+oUOLA7PlCtg82FRhoaypOovvQp3zLV7xSCYJ6OSIjqCkFp/avk/Cc5B759
2jvXnYnqZHhsuOosDhzcurRaKEgAZP1lbsKXAqVAym7/Efp9SWz5ftp9M7q/
BaOandGyB8xSL3PajO7fM9p3+grb9J/5SXJuIvOUtPlEWv/rL3v3TI6iObSr
Nej0RfFqGrQpEMfx5EmV5TiOdV0rhHYCLlg8beaK5fFPRbjgvoagtPnL+0JY
/T6lJyA48KQqjzUGHO7WeEWUmECC0uo3qb+SdZfUY8n5gcwNZI5gJ9d8YzBU
AcIsrbMgir8SdwfeEIcHm9o384dQ/En7frRAz2mZOZLbK+hzdzawAy7KH3uY
o/zLrlrnYo76j6K749+F5/HBzKq03LnovYkIP4Q8SNYfLXQcdkTrq+kyVi+T
nUFu3cZBR2T/j3z7+hzRfvL9jXxvk/wOZ3d2Hc0PZY51tZgfFsdYBmFemDY7
44F5Qtr8ROYvMm+R+YvMY9K+H0irXy+HioflkZ7TEfUN1O9qIO1ELVobQ5kE
g355FF+kfyT9omQfKU1++pblmiro/Ccnhkv7zHRBFL92jgo6l2Bb6cHyR+W3
qUSZUEN8PkFWgkkQPk8a/0r7/iKtPv0b01ab4w==
       "], 
      "CountMatrix" -> {{112, 0, 0, 0, 0}, {0, 46, 1, 0, 0}, {0, 0, 9, 0, 
       0}, {0, 0, 0, 5, 0}}, 
      "IndicesMatrix" -> {{{2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 20, 23, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 
         42, 45, 46, 49, 50, 53, 54, 55, 56, 60, 61, 63, 64, 67, 68, 69, 71, 
         72, 74, 76, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 
         97, 98, 99, 100, 102, 103, 105, 108, 109, 111, 114, 115, 118, 121, 
         123, 124, 125, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 145,
          146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 163, 
         164, 165, 167, 168, 170, 172}, {}, {}, {}, {}}, {{}, {8, 9, 19, 21, 
         25, 27, 31, 37, 47, 48, 51, 57, 58, 59, 65, 70, 75, 82, 87, 88, 89, 
         92, 101, 104, 106, 107, 112, 113, 116, 117, 120, 122, 128, 129, 134, 
         138, 139, 144, 147, 148, 157, 159, 161, 166, 169, 173}, {
         44}, {}, {}}, {{}, {}, {1, 22, 52, 62, 77, 110, 127, 142, 
         171}, {}, {}}, {{}, {}, {}, {43, 66, 73, 119, 126}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "good", "very good"}, "Weights" -> 
      SparseArray[Automatic, {173}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.000402393063583815, "SingleEvaluationTime" -> 
      0.004856, "Version" -> {13.3, 1}|>]], ",", 
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "cdfca5a1-0837-4926-87ad-dde1addd9c7a"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "173"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"99.4", "0.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    99.4219653179190743231`3., 0.5780346820809469932`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    TooltipStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"65.", "4."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    64.7398843930635905508`3., 3.6430371689585592243`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.9806201636527449583`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0052992683909550142`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.9700216268708349299`3.", "\", \"", 
                    "0.9912187004346549868`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.9700216268708349299`3., ", ", 0.9912187004346549868`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.019570087409875099`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.005403970665839003`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0087621460781970931`3.", "\", \"", 
                    "0.030378028741553105`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0087621460781970931`3., ", ", 0.030378028741553105`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"2.84`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"3.24`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNKP/dJPb5641v76qu9fjOEX9ufVwj6IZT3
mGRz3j5j7i80eGsvX/3X75fqS/sjyktaDrDeJdmcn5cSVH9fe21/VYSfx8r+
sf0RTs9Uafvt9hq871zSDN/Zuxe/rbX/9sZ+/rqb/PWhLwia97BKZJ37w1v2
DCiA8nADAB4DXfg=
                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["112", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "112", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{112, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["46", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "46", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9787234042553191`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.989247311827957`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{46, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9787234042553191}], 
                    Row[{"FScore = ", 0.989247311827957}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.1`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.02127659574468085`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.1}], 
                    Row[{"Row fraction = ", 0.02127659574468085}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.9`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9473684210526315`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{9, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.9473684210526315}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["5", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{5, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "112", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{112, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "47", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9787234042553191`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{47, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9787234042553191}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{9, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "112", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{112, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "46", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{46, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "0.9`"}, "RowDefault"]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.9}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "5", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{5, " example", "s", " classified as ", "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["112", TraditionalForm]}, {2.5, 
                    FormBox["47", TraditionalForm]}, {1.5, 
                    FormBox["9", TraditionalForm]}, {0.5, 
                    FormBox["5", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["112", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["46", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["10", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["5", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02],
                     "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> "Noto Sans", 
             NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "good" -> 0.25, 
             "very good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "medium", "very high", "high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "high", "very high", "low"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2, 3}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 4, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 4, 2}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"medium", "large", "small"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "good", "very good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.3.0"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "TrainedNet" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Net/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {1344}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
                    "Net/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/3" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1344}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>|>, 
                    "Net/4" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/5" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1344}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/6" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>|>,
                     "Input/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/7" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/8" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>|>, 
                    "Net/9" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    neurallogic`Private`input]]], "GradientFunction" -> 
                    NeuralNetworks`ValidatedParameter[
                    Function[{
                    Typed[neurallogic`Private`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[neurallogic`Private`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    neurallogic`Private`outgrad]], "$CompiledFunctions" -> 
                    NeuralNetworks`ValidatedParameter[{
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "layer_ExprInvocation", "CName" -> 
                    "layer_CInvocation", "FunctionName" -> "layer", 
                    "SystemID" -> "Linux-x86-64", 
                    "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704144, 
                    139987995704000, 139987995704080, 139987995701248, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"], 
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e2f00cec_116d_4221_93f0_2f00b616e33a", 
                    "ExpressionName" -> "gradient propagating_ExprInvocation",
                     "CName" -> "gradient propagating_CInvocation", 
                    "FunctionName" -> "gradient propagating", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.3, 1, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJy9ewlYE1fX8Ex2IMAAAQMEGYhasEgHCJsgJiyKihaUWrQqCRKEyhLCriIJ
a6wgobUWq1a01mq/arHuC0oALSoqghYqKqBU9EWWVhQqKv+9E4LYp9/7v///
fM/n03KXOffcs99zT2bsopIWR6EIgsQHIIh/QPV9dw6C0ME4ik1Mmb/sfEzJ
yLGfDMIUIRDGjo0gg0YIYkCxQyhgbAH+Zyr5ZaJ62jwG5ur9OZrPnkpnWU6m
bY5S8IIo/p8b+HdhrhwvFneBvqtcFSyrs+MHmhYVY6LPKdH1rCMcPGCOCr+M
usrzudMdpqtdNlSuKMN/qQd4N+EIIgWtq329Hh41B7F7f0o5z24q+GP5Hrtg
n1osj16BT1mTW21RiDxiCZWUFJqYmKvA0A/iPnOQ/PndE88PP7OzD2zcy6pe
TMFojDxRBYZTbR6xKPO5nbKKAkujIqq72rhptF+hF6EnFn+vQspHP0RFdowZ
nyFPI/XEN/9of7NEGKoSbbZHRj6mRKS++sks2YtGGSRqUH8Ta3ZsVGGgvehL
E4S/wijfpUYstFqyQr9AmOtV6MWmUP7kRoU60FiBdD47UOB6sQLDzA9EF14V
Br53bp/j3vzL3bxHIgv7P/fWb9oYNx8sPuhNYTlCyl9u6tm0URM3be/2fRxa
6Of7VabTdp/65vFXoLM/nL2URtm8vMs178pz+3LL8Dz0crHMErvG0WvBFfgO
y3CqSWdxx0z1dRrzwfYHi3GaaZc1i6ihB4vcVlDoVj8IFZ9NKad4+UsUieo3
OcyQ6vkI1SeIVv0qR5+l7xIbRhOPzkc2bxl9fsG0eu/DTV4IBV1sqijPx7cZ
cVjzHT6fLlIeACpBwrgIEgdaa1XHKPjHxNkemD8yxVrVSQ6Fd4QYoo4XfoYE
K+gVHnghMqWaEm6t4iPbDI3+hCBUsb7CFslBghH6oIbB/wvOoQQd4pmPqGsY
q/WQxciPhuxnJHAjQ+GIbESChbbxwq9JnHmG+QHIhkplJk3B8cAbESfEEbnN
eO8liSeWWs1BZiNTKigvxVQ7veqfNdvfgPkcJAQdoCJGCvjI2IMbDlYd1xxg
iNEfDAuDEAMh01r9PmIKh6xpiF4lklopuvL3hThb4Yc8Fuftew23QsopHUyE
BxkR0vPRRqb1zl5SAhWGyBLkFaLWAmvo1ZRGDWP/CEmeilptPEYDcR/OGAut
AXevUBzNrlQOUxTGHpgYQ9ZUKll5qFee4SYuDXC3BtuH/mxnSUVxegc7VyD0
4ERjNPTnPQ5UO5basNhSC0MLVjMaGQ/YrA4gyVgcWYMg84CubIGuzPKF5UJ2
oCSES3lQjuFm+YHbcdpVWm4cew2lzMFYIFEZxeUS5maMH36eRruUrzxVqRew
19csP2S7kB0uXYgxVvtXLOR6XN+OpZox+r+YBrxNhNeIc3HGatDJcy3HyjU0
CT6NTbXcqslXlGM7NfmI4TQaFe49eUM11WeY7lOR56EoSo6lpgczMw4wN7SK
9X9vZPRWMMHfAZyZgTDXEUx5BTMFZyYgxnIZM5nsw0ktAOiLmakVzHQhM0Ft
BP7CYSPjkYIpq2Am48zMRkafgrkOY6ZrF5JPj2JMuYI535hlYupfWLwVQQX+
3KW5C69LJkfb7b1w/nXbyW02pjKevyWIbggIc0IZ4rMvYD7NBUgOhjlFB1IY
vuwIgmBgzFIgSDSIesS+Pyvo6OdgBof/5yFeCrsvrUMNtSsQFpisRtkHAztt
7GnBDDgF/mdTIKpk0UIh8vYfQDXd8HsKRTE+A1Ddjg/kYjAOa2chqnpqk3ZA
I/8aiYODbL9k0BSolgQEkSEBP3Aue+GIkQ6RgspdvGnTIxSFC1nkFK9a/dmH
bAKh4KiWIXK7Lw80aAC3FWMMkmA/rNrriiBiEgwdA7scDCxKjzq2EgU7Tt+5
pwNsBDgUkoRBBuPNLqMYpOIt8S+n7aXiyGStgLWEnb6+mqmVA0Unh3/t0jdW
AD4m8Dh1dtlk7Zpx+j/Nt2CzFBS4IzK2ozONIdWuwklskDBP/Tw3RDGFol2p
IKX6fgnKQ5DGiWzO/8beD6EIKROkcTs4bCNCq6bpxAgFu8M+LxShKCgTdbRK
8i1CE9Ingv328xyUpdDXTXUgUzxYnMIMBKmnACb0wJTr5HKupUmIulhv2txL
tAArDmXqHORThf4JDnVmMaKOgrseAbrYBVo3loJX18mL4aCzVAFe+bXF/gpm
ViYzpTyZ/Qgx7sWMBhVGbmz/yTUam+t7eDEEnQTLs26gzqoPmFVMndWQWZwq
Y65nMbOCi2Qy5joZNT2zSIYXWTaYGD1VG3USxomE8cMBo4FQIzeszua+Ha/V
zqZGMjmG2ORzLs+nMcD7GNX3XJ5vPtWnYYCTLmauj2V6xhbJwV9FkUxdJBMz
0x2Y6cN0gDZDURTJKkrmFsnLi7LKlU59A0Z9HUbPq42eEtSo+j28rj28BvLv
XQnvih2vTmlzRcL4VR3gXR/gXU7+PVXrtTXAS0X12Vr7Adj0Va7PLapPZS37
l7giWUSRXJaXGsvMFBelcotSK4osry8x7kOM/ww16lIbPRQad+JGTwEXuIPN
Xc3kGtHkJjveXeXkux28rk6bf6GTY7hhXpUBM3fm+TSEThljRFyUkcnMLA8L
GVQbQwlM/nTyFQnvsZ3NfY3NRnQyJNjOZkDCCC/I82qo9akMmAUE8qrGtyvA
RwWGtcUX9QGnRRmAHhZznQNTXq5c8RAzelpt9Huo0TOCr2kSTe7qnNTaaXMf
EBBs6VOZN+tYnnV+rVdxgHdDre8pjXd9LeDRtyH4WDKLCahKBgKMKLJsu2T0
VGzc2wFinvHvhPHvuPGLUKNEzOghYQSGzzoYTzqMukKNhgn+g6cSXo3SprVz
0lM7m0d2NnV2NkCDj+1sY/BdPucCZp2iem/N826IOAe0D5hdB+gMLsqQAekV
Gf2OGQ2Q1PYTRs/URoOhZNzIAsHkC9DKJwfjASq2pZ7cNRjnK4vLym4GVmAO
0b4urv5b1HbfniLiqEusxSkV0k8cz1Euoh8nxcfIJQl4QFKCLC5eKsddnV3c
nN2cXfCYJDkeEpeYlolnenngDh6CGVFxqY64w/y0+CzcVeCEuxKubo4LkxJx
NwL/cHUqOcZd3GcS3jPdPOYlxqXGSeLj1klS45ISI6WuMQSxWro60sXFIzpS
4OrqEuntFkNEwukoDxcPqZubJD4+PcE5PilJ5pwuXZ2aJI9bJ3WWJkqi4qX/
9CQjLjo19u2D6LiUVHlcVFqqbk3kIrBzujQycmFaqiQqLj4uNSsgPilRGjkn
MjJUsnqtNFokl0uyIhdLJfEegkjXf578n0AyE5+aLpG7EW5ea+SS6DhpYiou
kyfJJGsA7sQ1/zSnXeHqCfTJZ23iFuNsMRGANWAsN1otG3XJCyXcWHPc8mSE
q2l5RXhr69M7K5rqr9x9PEfv6w1991sbumrurHh6petR0/27c/R2btVN1f2r
qbX+/OOmO1fm6H0zqJv9/G7T46aa1qbBmscAvvhfdy89JtfhyEEQz+wADQb6
cgcQJ5jrImTlwDZrgUd6N9bmPuJd2mP4WATD2CNovND/LAQPxUbdocCtjbug
cxt3hxoNViqUzCwHMupkFiVrfS5CtrPW6xjqsy9v1tZayloQwHh3O3l3cV6X
BP59rJxcI+E17uHVax0FvQnCPAMeNw2++/J8doJgQ51VkecLAo+6Fp4zEmD/
rSCmm9HOYwY07eHB4aIOSisHFcWxwtWBYsUJ1NvawBJ6cwL0zEWWHDryBwHu
TgDOfm69Okw/PxH6EQjQSOSSrJRUaQLQukQGNR3wj8p2+Y8n/xvb+l/ZRWtK
LgLCG0Hez/+v5S7ir47n1u/btFwU2xR4CPeI27sU2ykIs6aALMrN5DuiGnVs
CPSl8tSUXo2ymMtBWLkihw1idYBkLpuN0DRijp9j/Z5KPoOB5IoJfTFOr/Li
tATlyPBrRKxloFIRiuECfWaTYUDjRxwaizGZxrbGAoTIaxeBONTQGlNyMWEO
exFXXMsIFMNuKTcEdAkGrdGWKmA0V6ImU2jENcke3JRd5hjYzEP07S9W7vMn
QpMHaZMs1hJJxD5/pMEUo7ozuYgYG6Q5DdY5KJQ0xhXhNTuGwtShsqI4194R
jEQMxJKWgxi4uehH42VK19CUclTMQKkGDQ6E6bfsW7xYpEIUal0Zav2tgmFq
5UB1L7JCPsV2Up121jocUO6DGDUMxJqWgRhkEPoZ+BGl6/ju5sypwlrhxT16
jYCyYpAyg5n34MxNY4qAHc47icNBMgMO9lG4rMZGQ2ouUyYUKVYomES8kI2i
bE/WOoShlWToH/64/lE2w5TtqUJtKzROAT/TmnkWLPsiZ3FVR4Mpfo8QbBQz
ObR6+kakllGHYdWyPERfTESJEZzF+NKLdoC42uirETCRXNVeg+VeXWSXJYjt
rGDWMvKtD6CooBZhfFfN5LCCPzBKk+nvF/orgG78hUjzlEks+2LnzC4Fcy/O
vEbQfsD0LVXbcinzAo9xOMF8FvX9Yi6Py8pFuQcC8GM1sgAx2PkqEaQRFNFz
Vd8aRPjma5w0zYZ5NvW504EBTKqnaLVea0iZodColKgC54a/wAZqnALS6L7X
wND+Se5S40ME7OYaLp91yt+NHep8jEKnN7HzbJ7WvB8aCgyqQ/RBNYWOykXO
d1Xo50qcK3slxpTejfN4wZ5skVcXeJar9BJWV6IuNJpwL4ZP0Udd7+K0WOKq
MEvkyb4Pjn0n1POaRIlHPaGkm/5ILJCl1YqZjxEjKMnH45KsMNJJ0nwB7U/i
qjoB/TAlAlfFnlEcqZvcYBp/j3gsAiEH0uKj3Y64i5+jcou5XOgh5maaWQ2u
GyQY0Hyq6Dt/J9Cmi26SbabI/AgRalLBTDM+Qhq2PcM/3+whsaDDMJy30UXv
nvAiavXFB6lU86LYkPWNabUY8yVuDH1nBEFJAoWe7Dmzb5Gbzx7f/NXbzS00
8xpci0WWWosRVxhERJyrcRJxU2s79O33GENW7VEdq0LTcaNZRnNyuSpmxGKp
tcSuutlQcTtpOsX5zx9X3FqTujqnAKsfRQSUpD/jjOJQkPuCUMY9ooK6QE0D
dKELxuk6RdPRRZ+kXNjgWqm01tK1psKAu2IQ6MMqtVZt7FJmCulyGaeLMNPR
9dFKmo/L1QFGMhYCdXBA6SxOs2Mcpa0F1lKB2zNr9k4Sk5Q0AUp+u+jbYHoK
6HpEZvaBCHiXzGzcu7xRnXf1BmEWR9kpoUzSYlm8x5QTk6a4LMCY94id1A8b
SRY+HGdh+C0LVsplDa6t6GTaPeKcKKILAooixgGL6TrAj6w0yxtcuzSTtbym
Ah3EHahzEtkAHTBiOs0grzHjvCosxnXwKU3mcrWauVHL613A6w8S46O0zEbD
gFk/XoyAOvmRPq6TT8Z18pPJrYtOtbb5/qQk9jLPKKoKbRtMn2p6NZ9UAwc1
iyGu4vr7tGgHAdoje5hHaRsB2gX1BctJHx1HS1k5jvaEycBFpwDHnVq0FH0g
4DnBDab5NU4a55AUBFcV5zrHHi+zAHGZZX+AiD2+x+IeUe6/qo4OJbNqXDJP
xyVz21oT2+C6r2a6VjL7gWSSuuqcNI6ptaH6GyWTyJA2LhnEalwymbQDQDL6
h7EBMspMf0yZNrmSWFCpX2eA5mpiodd3GqCo2o8T7MaWia2yy5Sxjg7qORir
meviRWA0KoGXCr1KOgsRQbV4m53FKrvyR5VCLI6+svrX1RYxeiv2WDPSxYZN
FbjQWWzI9cALFUihNa0FyTOhUhERcaCDX1myjLGsokD8NRjTLFJF60ubyx8h
QuxggWi98S0820Edw32l8AjNy6XEFaKceL67A0ttXXRHbUCLo3WythwosXYR
ugJSjGbn8zHjps2IXRVL3cmwE+YtYxw22O/thAXGiCYRo8NFyyjLK+QstcEG
aqGhKoXFEp8SIcYE14VAMFre/EDKYLm0kr6Clfl1LUXUZZGKmpnsKp9aXVBc
UrOFFLTGoZKZSbO0LrDRLgmLNR5gxeiBXCDqvji4ACmf2lqg/CwcS9V87L/H
uvA3r9J2yLiXsY7x/EGScRZgfOkUVekyxqrHBeK6ikp/jF1prilZlruq3I1V
LAN51kdUkItZE4b5mAn7ZkhOIMffrdcvqhGdRw/MXNjiF9WDcppYJhrs2uDc
QDvBkmsj9WnugW44fVVL5q7R0zOmmmO3hw+NqA4ypphj916tHFGtJHsbSkZU
5sxQql0gLUDQbGtS0BiS1sv/1VodLgzvPtvHX2oDeqnPZvXyi5KP3MgNscbt
ak545cq7X0X2+EUVowvogWmHuz0AoK1wIm23q0pXzBfYBOZxvM93Z71uqyrd
GUoO3e+3vHzz8Ewpd+sS9OahoTMfjtzo5E+zbQT79Xj0e17v4v8yAPoPz/Xy
Nz7EvhLfITlc+cxPjk0acao/hprax2/mO2ScHwV0TpIsZN7Eg9pbBKta1h96
mJMwonoNOT1zeKR+e2CzSBCs7M5Y1H2hCjCpD9i9ffr6iMoO9jqfnx9R2ei/
w7hHLz/GH+y9o/mob3XHB1ueYZNc/1IlMARATj7XRo5XjdSLZgEk68DSdq+6
qdwU4WLUJLH5WGn5ysVo2K4W0AkFnZKWE6URCdUCzD+QCHR7bRLGulYH1BH7
q9IpP8NuyaGeCytHNj/0rSsI8Yu6ANnzutbsF3WC7B1q94sagL3jq3r85C7Y
TXawsiVtVfNoyUj95RVPj+LNjGBV5YwtFXdnvm4/Xdr6bXUYerOk+bjjuzo8
3ss/wa2EOjyTADCWUebSAz0Xta8xg/Kif9OelT3q2c+f5igDyn14LNEHPD5Z
0n3pKzDsB1pnWEKt97/u5afbgl5+yzrQ45GW4NPHP3EcdHq8+gHRryCpafcf
+kW9IYne2O4nt72Zihku7vhrV/PzpDa/KCUFPtjS5icPnqjAk6tGvXv5S7mk
ob3o48/ZBrV+qo+/bRvcemYvfxuP3Dq7j19oQ0Kd6+N7kPAPffv5hSQRVX2A
iE649aldQ37yiJ6Bo+UCk4bRHdXPckZvvP57rX43JdefvZyDtpJF+5zX3ysq
sDyLIOTFT7TKx8NJo+CmXVcRZKJ4/T7qNPNNm1+y3Re7Fr4j11JuBlT6qrZj
pbyLUpt6//jritszX7cduxD4JmVY1ekOjSxhpMTtL1UVdLDOY8Am02Dv9l+L
RlRPGCET0VWVcj+F6BY9PFvaensxerOq+dyHI6qPvIHFrUsYOTbK84v6EXLn
mQO0eJrs7QYc30BvCSc4e/aIKosROGalF1if04ZVQRDFy0QShdz+Hc+5Pwrc
lWGFfUQqseWNfbBpB3/IlLSMVc3e90aHevnSgiOdkp83v95Ye3VYcM+96Gjz
oIV13/zIRTqXfvXm4bHSiJuA9o1tp0uH6y2FWm/zvN6d08dP/wrqC/jTiy+g
ltKBMqEdhfcAtQ6Zje2UVTXq1cePmUxqeaiPb6EFOdHHLxrArik4mVsennsD
gkweNKC0w8CUiqEZZ9xrYTgiE2PNb2bhY5K7EdbiJ19xnbQ/95KW4dK2+xO9
MHqk/kshDIrfPMw6PAo2evSdkzExfEMJ5MWEynIH0bCE7J1YNaKikz1BEggq
sHf75a4R1VQyeLgDJSlBoLk3AkJq2Luu5w7slXSfZ88Bd9rwCRxpmtalgDV7
/D7mPsBg6m+P0XN6yygQwVdB78TY50m7zQIF1MUd3t/0v9z90E8+j3Strte7
hl7vBpyGk+GhO/N6cw6Ia7cdAY2ZN575RV0lY+a9fr+o62RQuTfkF5UAIrX7
N/3AwTJQE610Z71pOV26QnnRz8A1QZHPanvAurKrZzZQhOU7x8w9P7m1Ng65
33+Wc29EpYEbeQGxJBwh0ScA918B0J9MfOjXy7eYNnHxX6p7Wjc4PKLq1Z44
iWDh306cPn43RUtUNwhrIHpGQl/oryotjxHCY6L/RGTbudLyjGoQXQ/1nyu9
9Wpe0Fh0Pz+UA8JxFdMJ0DSzBITgnfoPPI2S9dyzZ5BB+tbzZVrQltTr7ReA
C0pnjHlGKXcd6crtVaU8Q3LN84RBUnK7QOgltKtPZJOOBeC1jlV/D4fHUujD
IUQnxddg0xXGJILjG4XaZWdNoMXcO3d/pP6JdkF3OrcDGHr7i16+OzicD0G9
B215lpU46gm8Q/ssvY/vDuQrJU+cmddHjt8bqf9LqD3FT18fHQbn07uq6fST
zx2zgfNts++PqL4khS0AIk4jjfd49ki9ox15kDa35A+XBKzIXfmJWAgPqaET
pTtNSKrTcj4mqW49FQajxpkSbeCZMzGh+KJ0WLWJtPhrI6pNfztsgJ2TQTur
j/+Lqe6EuT+a0cv/OG2iQfe82A2CNGVnhl6dm92io6Zm5u6jvWPnbP08X3hw
b9QereUbIY27hs6VRqwFvZvX2s+U3uWQ1L7IDpt0JJi2+JZgZXt2ybPjiaOn
+/jfm2d9JfQ1eyB43yUs7Fn79zCF6FnXr00hVkLbXNUGbPPSVvKQAXLUnjte
wC8dyKgD/GIO2ete18f3HGfim1Ggk0JbeJL2/AVOvmyHMXEv6rkABPG7A3S5
jeBssyiCZHd1y6CMa7L1GqGj3kqL7Pnrwki9kgfpqNwR905OsHVEdRp60qlv
uv3kU8j1A98nkzra+B45HPQchBv7jPGxHPJxuBnwsVQbYOApD4/NnrOAD/K0
bN4AdKE9qNf38ueQsbVtJgh0DyHjfyWMmJoP11/TZUaH20cPjdS7jLtSdw4Q
/653lQuC2EnEZHMgHrSyJ+386LnS1miokCqgGl613UKh4PXzTl1MLRnN6Odf
mlwBSToGDNkQuFrnSXA6lZbvhp7bc7K0Yz9XZlcyIT4Er2z2kxs2alOGkmev
20dU2WS0nRkJclSy550zovqNNOc0EOYOkr0XgFJLbSL3zUj9R2Mced5vzwGJ
klQ7bBHc788BvpYcCDKvukfsiEPNFxaO1BeMkeudMAqc0UMboUFGsU/p6lBj
/X7etwvWp3wx/dv/+iJl5Otkyfr1ee/XLvg2ZXve6gXfrpXkpcw7ehPRi8tX
iVUxL/l7sa8vz413F1ux7Oy5e7e/UTnkxzRl1+V+rq/69Nz+7Dov6g+gx7uw
NvIzXvUv2Xd+ze7yte8RWtScVR/89Xn74ey6WCqAlS3/KbtuEdmz+iW7Lprs
3bmfXdcEewNWJ7PrFNQDSsw+1+7rJ6Uq/9j9X78w+UI+HT+TtutF3Kj3hjqE
Drd83ZddNwg6fdkASyPszGrP3mdFL3e9c7Gw6PKMP3bs9Lyv2EfZu+NGiu2R
S4rvKHtntmT5DJk0h03Hf0huO5/ddcKp31S1xn9nzNRp0z9902a8E3W7CVec
bc+yPf3e2pkqhuPL85eezPx+7es3z+7OTWTaf406ynfeyHrzy1pbF3eAcXnL
etuDCYsOKg5cWp89VOZDvLpk59ypso8qY+078EfVrz227dld05zJYdyZ/f1n
HvXsHO1pmxvvdFDx+P4fd+Zuee9ro70i/XP7U7JHk9vm/ngZzsfd//5190AZ
v/zcAvwbveSvvyw/cOCvJNvTuCqWsa+6Z+ZPf9neyO76bO8T3Gpf9TOf9h7b
7uyubfheS7V9f/Ku/aN3X5QZVLauEe03VGOST3ii089encymIQjqgiDTEAT5
pJDWeYJ9VZNgyc1vcxWwTkozscSrmN3dbRL/UzMCCmSfFBoAAMuaBMtgFHQO
KsDMUiF45IXf3bbHBgB3GIFVCj2wvJ4GwO5QAFiSEoCdV1fOqF0X/Nu2zqAp
CVcRPgBTmwCwBhYAa4D7ynIBmJfo1IzancFt2zSLADbFeyzm2E+jsM6+iwLr
7GvIOrvxxDr7dMxqqxA1r2MJTbaKvLeG6JnTTeYgLGIOkouz4H/Ds4tNFNou
PmrMB2thDZ54W4OPgHv8IDT4pxr8WEl7rPnPa+X/Y5h0P8sQHu/W0u9gYsTN
RNPI2EeY7dEPsFZTnr+tneeLLLtCW7UVBW4BcSCXp++jrXB8izM+ElbAwnm8
VRBZOF/pjdu4xwtptmjq7+rMiI+Nrnyc9nulQvQlrL5jhjRNtfEdXD1TAK7s
tDzkjDy2DvkWF56RZ9bjoC20LkQMYyxVOFmiMGEf4lSThYto4thiFrXvinI+
lajoEH4tYf3acbXiNIeYx2Rp/FGF+BkDJ+KFvrBmFi5TMI6yVaYN1uyDGHKU
9ovw8pGsVHWjSMisOadR66PEAhk7nPexiEs1P6jg5N80zMtgJsGqtuxtVTtr
vKrd64/pH2VfMyNLR1NWVzypsSa7wsL9BjLi7sAxpeu9RkY8xrbG4oUMGrFQ
rsR/LlaeNEgeYMY3sgMw/TS1KMVR/LmEau/AUlzBhQfYlOhTIlajeJvyZu4y
yqewHFJnSW3g3RVv63hSKJpZMJssa9DHyxrh4/WcX+1UBcsKY/XJGkqgFTXe
5vCy3LhtCjZjei4xHJ/75ApqvFzCcWCpD/MGO8yDlbmIZSKXIiiXVv9ASrJu
uiAzoiDOCKGV/Vdjh9L81PtFsysKPtIKNV5k7hrrTA9pQv0rQxG89TGFBdj6
UIgweylsT9oeMRDsvUkNprH3iMzzYgMOrV4WgIzXnT8KpnUTVysLtDXWmhLU
wjSKWIAxyELbfW4sLjIgu2JxLB5mUGt4xcmh2fAoboCWoV+kKrB4+BsKhnzn
rwidDhDnYRUaJ+qX9J0nx02Pvi64CE96+8vNc7WRxknJjbfWqTqaCC3Tr+FW
194yDHA+V+sNa4TnqOOlR1+yRpiPc8PdTLpqnQIsy0VEVGiEHYvRGjJc46S0
bLCkzfHCMlEEmfSn/uzN88w0ry7o+Y4Ojd4dJa+02nvuv78F95pNcv0N5oRl
12Ap4zbsdJ8B+d5KcHz/tgEcuaXc8omJSxd/f0u4MPoZyJlOgFzkBOyDG46f
nFOWhhsc8aamNw9GgpyIGkYP9Cjt8SPTNr8oNcytX1wHDzCLiYUAmFTcnRvo
ZKrkpEe2p75uAUlflAJS0Xa2tOvFrbGt3Hv5+2HWFv0MJMwn9oNO//rdIHuJ
1x7urQubcxJGPgzk0QisrLQ8AmT2W7rPle6cF0BeoLZ0v9rdfjEcIH0IWCPz
YJBoz7pKZb954GUM7vmld2naq9bhhy8jW/yipgXSA4cSxvKKk9/05+zSpRnJ
zS+TRoLBTdGFwTtf2gquUIUxNvX+mZNc7x173XLygtf1gBX1XXym/J3U93Uk
uITNBxmcR0633wP+fpIBmNn87g6k7AvSmYUjqiMgH/zNJwlcejMWQshnfovB
tdcfym1RP8icSYG26wTqA+e3gIya/s8Z9bKQMczklaSqdCeFFPKJVW2zRkHK
yS+buCrbnjOxSLBx9EUaya1kaHDhw5yqEVUcuBt0nsrW3g0k8N4H8taoJNg5
D4gsJbV7HlBjSuaud38hU1lKoqx5Yqmil/+oDuoQ3GWqSiOal0CFHG/3gteL
ziBI7ipYOwkGOaNkKpQFuMnYkXea0yDd1oMXI2iRwWCw3fx86XBwgiQ+s/xp
1IX2AVe/hRnXOp8Kqi4Wnm1iyoLNsIU5CV+hsGJwvX+bJax0dW9I8p0PqFzV
D+4+c6InKK00YjVpcc2+ffx0UjWnYZ2LVMducI/ejEJ9tLf7RYG77gbYLx3y
WwyEyCIz19aZ2c1DpSP1dN9xAwFOE4O8U3zYStJyr/2rASiA9LH65tfk7P22
KXn/WfbpU/o9xX7HyQzbP6yLTtG+WDAdr/kje8hkJGU6/vNfdw9n7/s1u+7M
1t9Rxqg3ZnvkzH4AfCHF9iDIzfZ/B/tZtn+Y8NnBADrr5QsT/gLYsR4y8YFT
NSkgFbSeD6YyzgyZGLBjIc4VQ2Xrhkw2k0sy/IbKfmCLr8ROsp487WRdkvz+
ui36qkRei3HepDdm5erPhnPSP2Mp0E1Pphw+SJ3WMfpm9utRo3LFlwgDzv81
ysE4UfA14zdfIhY2oz05UxVBv4zC/tAmg+1P2+ZuqfvTWZk5rS5uadTevY8u
vK62JKyXQBLPvih7afGNvurprJbsuiTeA9PDKJkk+l5IO/cmzfaI9w8U+/UX
Ru58Zc8cSN79KLvu1DaQQt89n31nbl+nHUhRB3gtySMg8Zy/U5shWt8YsvWs
2Eex511IsD1yAMrml/VANiPzoURfvSjbrNqfF6um3EiyuTEKsu3NpKRthspS
tPksK7VztlLvoGp0zfcqhKsuX/Tg65liypv+0eZ/85b0hTfky9Gwn7z7lPry
3D7xO/xm1x0o11fF+51cCyhxI1XyDGiJfIEQ5KnWME9l0C6fYF8pS7C0mALy
1OATUrU6/iph99u2Pf4/z6gtiP6EYQwApArQmSX8eUaeLf7bNpQDYDB9AFxB
B6taKZ8nWK5DAVgXBEsDYNRZAKxzMgBTGAOwRiZ8c1GXe/ogMPcUOWFjbxvC
3DPXtQJkm8IwDlWbT0Lw9/P1l7lEfPSzXSWC8Bl0cORh+ot/ZVPlbA6rXqU5
UoBzM6VCXOTG3iwnf2tmh/iLlILaAS8WHZUrU/gM1qRccfVpVEJrte8UImYA
ZyGsIDaDu3fMYuA2Penwb78HOTncx19KdrJ6+RZkJxN4r3amj68LAQQsmmYP
+VG0MmSSMuysPMGmRiVYflZ7x5WnOi4NNlp7tRK3mJBvN5A8LyB5Zk7ItwHb
qHmgN0dkWYyMsY+EM5lNttRBHocWnMNenA8O8VrDAJjT+WMgIxWycpXTmDfg
qwH1wlg58vwX2TI2Hb6toZgHf3G2HPv59xqBWW8d+zktdwZVs4XLWwmWnmTe
miSoxfLRIJFCUFtdjM6FIgvdqgTt3SCGXGlXgnM0djEyPiPYAkhvl78dLVmx
w0pRXYnepNOE4YoVlQyQJkaQaWICmSZiIE2s8g9lHmUXmAyQKWajYS23TmMF
8486VJd/1PDG84/j2FONU62SxmcUmOeKFbdrPBeIf3TX5iIRMypQc9R1gYId
TqtRYpNaIYJg8kfOyeMIzmCKGqeAvToET/ytG0wdUhgaUyMa+Rbre5UYLDJU
tYxmUyeeRCe3jA5bCrQ1sJclo2fTYE0hIxKc9Ctq3GAxOnNhT/poyzFzG3Ps
9tkSW3/teX+47WX7jhthqMnG7tNB5KMt1o3k8GyWDYlhx80wNKyq7UwBOfzJ
uhU+HTppYgeA1ye0p6eGC8P7MxLmgfD8fGP7HPrEutv2Zri2/fQ8iHlkY1sT
OTx7jwd/Hdq94zIYHho69Ts5vBGp1NE59LonoyNEW1o6s2v03EK4debCtutw
efPJj8hhwu5ckoW0Q+2DkS2XUiAZxxKXAjK8VnX/SlKVmeAOhsPZ/SfSYNnQ
J/FDSOSW/nQwTG1LTVwBn1b1byOfns2mTTzocxJF2IS6XjPdCR5ZYf2DSTuW
Tjyuwts+fuf02nF9MSQSntUiyPX6RbYK+4VCwe11oy3IBL+xJ/0mgPQb+Aaw
APgNfFcsn7GJuIqxNMKLYhatUqMSQatoROcUczHgIKitsJZBs6bRgKH+qDQF
mbHIi3wtGplUwTKq9SqxNWnWw+mVwXU5PUwZgTS98kx0NG3CzShOwYwQVXPq
ooDy+Xwv9kPBxsCQ888m0MOZELtQLT2It9dXFNqeDuEctj5O04glebhhnZE1
phQia/Op6Ng7b2K4y7HjHGH0q2NVDhR84Wj+rEDDcbzmE/BCPjkOSsg6UoWz
/RnXv0NEDl5qkzwKS0REtOKP6aiLq8yZznIFF00aGgt4o43vcZzcw30CzZtJ
3AvfjT32B5T+FSK9YoQTaMIJslR/qn3nWsAEciWAXDdbsf0DNlyyJpLU8fB+
AxxTLmTouS4Yi0GojVrUtDxgcEWJO22Lv0gBrkcm3AZXTqAOWM3Y7LYAawis
rgGX6saIXBPpwHL9FdHTHnDvKDgzUx1cnajdQEoaIYjtKmauWAzuoMG/EVdl
3LEXGeqVvOAWJ1HjnoCmtGhefUidyzHUMfVxtUL5lTKlyFAlxhXbWQKI7c/t
fZWoCQtqm7UB4rsE8CmYGQM2tYZKBgicwaaNybj2CKlgZmGptXiFiEu+KzMe
nHKtFBqnvJ9p9wiv+FAGfKNh7firRR0MMXG1mgasDNzruOI9FQ2mTuCyxptC
IxaogTgsgDgs9JucRJgRlKIzjD8yTrW9yWg2Yy7qZPpH//eyEJOgV2nZ7F84
YXWR7eNW+IW5yflAusV3viZ/kO4zlTTKyOYY83fq8icVEFtOgnVJvqA+HzH4
HDV7INjVjC1t1uHp9/UUwy2GzblLAk0ubEQYVPxaUrvSJYjzx7Mi8lHVPNHE
SuzS47pNs2kkkd0T/W7+BHukj9uMA9Vqa4AeJ8ilGBmr+zDIc3o+OKdv/+x/
Sm1OTZ9qTVkboEjACIMqHHjTW9sFN1gWvdfaxaEaoWlwjuAny8IKkQMGHq02
EBEDd/C43BguS7WnAtzEuVOKyNcx9ljpU7pyn8xhY840jeIotYZVjbtA5xL5
IwYFwLngGfvr0bFT2y/KG9yIPEvgjejF0bGDG1xsyMl+MFlITmb0g0khnNwF
J7UBIC3Rg45Z5iSIPkOCm2dLjCXUt+d74cPGE2zW3gTLrQFtroTqhFRmlHAV
sbOaIK/g/yCn+feywuf8XVZrx2XldMiyUOz9VlZNiATKao1WVhWFpKzKuEBW
FJ2svgCyOrUK+9GR2r1YgQNrrcQUhVQUxq9tb+XlPi6vE2/l5Tkurzlv5eX7
N3kdT3QF8rpgiCD/T3I6Tsop7J1YlGsKYpFDAZCWHkfDEop04ShcF4tKYCzK
V7owgx2EewbGw5GYcdnlbTgqR5uW13KkIByFacOR2TvhqJKxkAxHjTUDIBwd
DJCtLJnKC2f89F11UIz9lk7D4D1LmHnNrjIYSdg0IkqRibMY6Tiz7pbhUXaR
ifZNKCXvlib/miktnBe8Wg/7SrPWUVa2XbU6k7r48a1OR6prffVpsohTrUIf
gEjRqpmM7bRkH2XrmerWD6NMxlEaas50NUtmJwn1d80MXxvKsPTKaFWwGJTy
TcI8QIrdkSfa86OWkd/BBMSINwBiMnH9NQpDT9pqBES0KxMj2j4Y0RpEZLpV
Px7RKDYgolGbQURbkdFIRrT08YimAGfF1Q5fXUT7EUQ0ATgxbWFEqxyLaJf0
28gXQo8xk2FxsOJtcXADpCAUG4NjGPyqjXyzgD67yUDnmY1+1kEUNw+buNjU
wRDUfiLZ8cPAV/DoT6WSMXBoiIxpoyt3I4uRzYGv3JNm538QpjHnwfC1sl0D
V7UNTSWHu3bXkMOXLuTwmm21Bgl+1jJiQkbLpOY1JKoLCTv+Fh6LtPMlnyyb
mHsca6eQO77YaBgM415bVUHQxMB4Ou2dOJk+IcYyTozFTLPE6KtmJmRwfkLa
djKwbQPQuhph9vkUDcOr0lFJOzMpQpajNLpoOaz+RomNWnIlB5Xcb63L/ziv
tDrNI9dJ2QjyG2hNqVtPwfgA8/8nIAH4ALQhYzlGxJj/wBaH7dhdikvV1u7f
A63pmD8hE54jiO77NASxHIvjupb8hnIKgniPrYXfh2G6eS/tGcZB3rY6+AUA
PhnRvnOfNAH+yBjckQnwLAB/EfRh3qVryXknBGkGfXgR1bU6+K4xOrom0APn
BxFtjqRrdfN6qJYnXavDbw/GMO7oWh2871g+pmt18/5g7Ia8bXX8pqFa+nSt
bv4cVctnIaqVn04O5ah2Xtfq4H8cW/8j+i6/VWPjqr/NX0e1utW1uvl7qJZ/
Xaub/3Ns/Z9/w0OlaO1S1+rmjSha29C1OjobAV/wNx1niva7ER1fH1K087pW
By+naPfTtTr84Agj+de1Or18Bcbg8Xirmz8LxvCjT107bicU7bfuulY3j0yw
d6aOHkzb1/mC6YR5+G/l2FemwNeewefpErlA4OYV985nToFJidJ4SZZUTv6J
nJOWuBpOT3H5p498xr8tWpIql0oS5kpTF0kzUwMlqRLy66LISNhdLJVEa5//
5x8c/Tc/g0WuycyMlEnlKUmJEvghU2Q6QX4+Jc2USVenOse5zJFLpQsXpSVI
5XGrybVLpKlBmaulMshDQFK0NDVWnpQx9sHY+AMSR4I0YbUsy1lGxHlp/8R5
CBanJabGJUgjAwD1qdKJeCF0guz/5wsxUqwB8xLTk1aTq7QTH8slMhl8IImP
184EZcrkb6EWSTMidd+3BcnlSfKUCYwtSc2Kl4ZLU1KBAiIXhksTU5LkYNnq
2HGIYEliNFip5WMMAm5Ayks7/Ef9TqDzH59PJPsfAd7lYg0gOlUqB8ob21Qn
ecDNuNDHNSoHok9MlcQ7JyYBGUtSnFNWJ8mkztHS1fHaj+biYqRQPc4pqRK5
dv2789LEaHLWReBMOHvgnjGuEveoaMJrdYyXC+EmcZd6u0dLCKAWd+AGkhgv
gXe0t0uUV6aXR6SHYIZs9Yx4+O3gxwt1go8kPyvMiHcO+btzOIf8L7uCjoSJ
CnAO+b/qiIwD/weQ8oxd
                    "]]|>, "ExternalLibraryPaths" -> {"CompilerCoreRuntime"}, 
                    "orcInstance" -> 90200592, "orcModuleId" -> 64625552, 
                    "targetMachineId" -> 64497296|>, 139987995704736, 
                    139987995704000, 139987995704544, 139987995703616, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} \
-> \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]}], 
                    "$InputType" -> "Real", "$OutputType" -> "Real", 
                    "$InputShape" -> {4, 64}, "$Batched" -> False, 
                    "$CompileBatchedWrapper" -> False, "$MXOpName" -> 
                    "4fe9bba1ba468809"|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Input/Catenate", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "TrainedNet", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.3.0", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 153712, "LanguageVersion" -> {13.3, 1}, "Date" -> 
           DateObject[{2023, 10, 30, 16, 17, 33.726209`8.280542507149969}, 
             "Instant", "Gregorian", 0.]|>|>], 
      "TestSet" -> <|"Input" -> {{"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "very high", 2, 4, "medium", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "medium", 4, 2, "small", "high"}, {
          "low", "low", 4, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "very high", "very high", 3, 4, "small", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "high", "low", 2, 4, "large", "medium"}, {
          "low", "medium", 3, 2, "small", "low"}, {
          "low", "very high", 2, 4, "small", "high"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "high", "low", 3, 4, "small", "medium"}, {"very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "very high", 3, 2, "medium", "low"}, {
          "high", "medium", 2, 4, "medium", "high"}, {
          "very high", "very high", 2, 4, "large", "low"}, {
          "low", "low", 2, 4, "medium", "low"}, {
          "very high", "low", 3, 2, "small", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "high", 4, 4, "large", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "very high", 2, 4, "medium", "high"}, {
          "low", "very high", 4, 4, "medium", "low"}, {
          "very high", "high", 2, 4, "large", "high"}, {
          "medium", "high", 4, 2, "medium", "medium"}, {
          "high", "very high", 2, 2, "large", "high"}, {
          "very high", "medium", 3, 4, "small", "low"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "low", 3, 2, "small", "medium"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "very high", 2, 2, "large", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 3, 4, "small", "high"}, {"high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 4, 4, "medium", "medium"}, {
          "medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "medium", "very high", 4, 4, "large", "high"}, {
          "high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 3, 2, "medium", "high"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 2, 2, "small", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "low", 2, 2, "medium", "low"}, {
          "low", "high", 4, 2, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "very high", 4, 4, "medium", "high"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 4, 2, "small", "low"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "medium", 4, 4, "large", "low"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "low", "low", 4, 2, "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 2, 2, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "high", 4, 2, "large", "medium"}, {
          "high", "medium", 4, 2, "medium", "low"}, {
          "medium", "high", 2, 4, "medium", "high"}, {"high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 4, 2, "small", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "low", 2, 2, "large", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "high", "medium", 2, 4, "medium", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "very high", 4, 4, "small", "low"}, {
          "very high", "medium", 4, 2, "medium", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 4, 4, "medium", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "low", 3, 4, "small", "medium"}, {
          "very high", "medium", 2, 4, "large", "medium"}, {
          "very high", "very high", 2, 2, "small", "low"}, {
          "high", "high", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "low", 2, 4, "large", "medium"}, {
          "high", "medium", 3, 2, "small", "medium"}, {
          "low", "high", 2, 4, "large", "medium"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "medium", 3, 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "very high", 4, 4, "small", "medium"}, {
          "very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "medium", "medium", 4, 4, "medium", "low"}, {
          "high", "low", 2, 4, "small", "medium"}, {
          "medium", "very high", 2, 2, "small", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "very high", 3, 4, "medium", "medium"}, {
          "high", "medium", 3, 4, "medium", "low"}, {
          "low", "very high", 4, 2, "small", "high"}, {
          "low", "very high", 2, 4, "large", "medium"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "high", 2, 2, "large", "medium"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "medium", 3, 4, "large", "medium"}, {
          "medium", "high", 3, 2, "medium", "high"}, {
          "high", "high", 3, 4, "small", "high"}, {
          "low", "high", 3, 2, "large", "high"}, {
          "medium", "low", 2, 4, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 4, 4, "small", "high"}, {
          "low", "very high", 2, 4, "large", "low"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 4, "medium", "medium"}, {
          "medium", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "low", 4, 2, "small", "medium"}, {
          "very high", "medium", 4, 2, "large", "medium"}, {
          "low", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "medium", 4, 4, "large", "high"}, {
          "low", "low", 4, 2, "large", "medium"}, {
          "high", "medium", 2, 4, "large", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 3, 4, "medium", "low"}, {
          "medium", "high", 4, 2, "small", "high"}, {
          "low", "very high", 2, 2, "small", "medium"}, {
          "very high", "medium", 4, 4, "large", "medium"}, {
          "very high", "very high", 3, 2, "large", "high"}, {
          "high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "high", 4, 2, "medium", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "high", 2, 4, "large", "high"}}, 
        "Output" -> {
         "good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "acceptable", "very good", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "acceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "very good", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", "good",
           "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "good", 
          "unacceptable", "acceptable"}|>, 
      "Predictions" -> {
       "good", "unacceptable", "unacceptable", "unacceptable", "unacceptable",
         "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "good", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", "acceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "good", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "very good", "acceptable",
         "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "very good", "good", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", "good", 
        "unacceptable", "acceptable"}, "LogProbabilities" -> CompressedData["
1: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
N3qj88paey5o3hZhh/mlIs3EVhXtP//lGh15ZEfA8TKrRfsbP6o6kTsrCnjf
cqjqRPtXGwSvjWNyYU1+6I2z7wupIAU5WXyv9RGK8tgO+mVWNN8EfbWz4YCi
IRxt0f56noYqvP9w2f098w6DTw6Opc7T4MCJExm0fM28bbR80PGKltsVo7QY
32MgzSJwdN1tqnp8fBWO75ZltxbguG6uKOTj86X1D61LE/7cdf0sVTx8Wg6/
7z0G6LghKK0+vv3zL9FCpc566qmY/1PPifMwp1/s/9CMNuvPewup4w1sWm/j
QqVZ+Llzqzmt//j9O3Ef/jhHwfjROfg5wdB0TUWsx77eGI9Fl5dTR25m0Lz4
Wuc32r9kvUT5lRPOPwuNpzdvLjUEAckr7HHeJURQjpoojqX1d9Tp5RrRaH9d
6PmdtWwf4PuIqRaN9CMoLX6J/STtRuw5sHfYe1pDF2ofsrzpM30YBJ9f5zON
/NoqFK2aRv4+rvVq5YL+USq++ztn7B/ngr5U7J/1ifPTMb+vmP8j4J/dQinn
bKHrz9qvdGgeLG+PZ/6v/CF5Q/JIENld7zDsB9wSNXJw/yrz81gT7l+zb93s
XorOO5bTlJ6mokKtEorz5t3rT2j/TZrr0v6b8PJKnfkyidJ8toOWfyExQwa/
R9aS9YHUBbLeXFhzPEAxipJVWk/fN/bHYHofWU9ZZdc/jJCHJZrMMXObSpBX
ZLDQRosLCUrrnwSzmkyDgytBLlsvZNVmeRjSVVxRsUgXLmPErw7WMoRd76P1
LyG7NNkB1aa+CsAPu3q7j8OHBBumkJobguv1TTtFonQBlI0W93XVIeJ43mPZ
GDuF7JYxYfSmN28l6Fn6YVEaiq97XnH2aYjnOSOnPVJQ/ZjesNEmZ6gAZMwe
zx9CdSMwhCFIQf2ptP6a2EfSLgS3D9j15SiawDDNybtzUNzklx6O+nnOYfBc
ef/DOSh+/P/6IHrW11UvrBHnXfaUOO8ISou/HQurUH9tC89FZc/gvnr7ywi6
z2af9qX7a8IfhDcIjxD+eOx84mIV6zal87woAPs7Xef1xzjuH0dDQ3x/g7FJ
4W4mD960fOb0nVw0uC9CYw6LA3+O+yZ5N+JHv/51qbpuqN69Wm+inw3BhcwH
w9sRv0f/YDNpj/j949EY35VVTLAa/BbFRvKGfEJj2egeBHOVeyZ3c63gqRD9
YaaAD5fLnWiVQ3PrknqGQqorBO82tb1/wNKFB8vDtl5I3gpMXMeS3yC59blg
8AG6hyR/Ed4iPCatPpL5RnKuIfNOY0b22RVRPLDB1yFaHfHM+0C3SHV0by8z
pU3q/8W//48/iP+f/e3v0L/jIODvOJh9xNm0FslrzzKn6866kw/dcB06udef
rj/S/C9NP9J/SvadBCXzWzLPl2SNKX01ZxeYXyzoYaP437fjRtweFP9q/GqE
hrB/Ad/xpddh6hTThq4PMMGTrgsEE2RLm9SQ3TbJJndMNBuAS+rX76qhvCN4
zBTsZHZVgBdGPNlMlOe5eXHsLsR7BF3WtIoSuYrUwekKmt9iT4j7hLD8fLpP
UWn+On2BzXvqqGVDFtZv9tO0HKxXJE8tE8e3xoiHaZ3CXGgc7tkdkLIXyLq3
8+oUOLA7PlCtg82FRhoaypOovvQp3zLV7xSCYJ6OSIjqCkFp/avk/Cc5B759
2jvXnYnqZHhsuOosDhzcurRaKEgAZP1lbsKXAqVAym7/Efp9SWz5ftp9M7q/
BaOandGyB8xSL3PajO7fM9p3+grb9J/5SXJuIvOUtPlEWv/rL3v3TI6iObSr
Nej0RfFqGrQpEMfx5EmV5TiOdV0rhHYCLlg8beaK5fFPRbjgvoagtPnL+0JY
/T6lJyA48KQqjzUGHO7WeEWUmECC0uo3qb+SdZfUY8n5gcwNZI5gJ9d8YzBU
AcIsrbMgir8SdwfeEIcHm9o384dQ/En7frRAz2mZOZLbK+hzdzawAy7KH3uY
o/zLrlrnYo76j6K749+F5/HBzKq03LnovYkIP4Q8SNYfLXQcdkTrq+kyVi+T
nUFu3cZBR2T/j3z7+hzRfvL9jXxvk/wOZ3d2Hc0PZY51tZgfFsdYBmFemDY7
44F5Qtr8ROYvMm+R+YvMY9K+H0irXy+HioflkZ7TEfUN1O9qIO1ELVobQ5kE
g355FF+kfyT9omQfKU1++pblmiro/Ccnhkv7zHRBFL92jgo6l2Bb6cHyR+W3
qUSZUEN8PkFWgkkQPk8a/0r7/iKtPv0b01ab4w==
       "], 
      "CountMatrix" -> {{112, 0, 0, 0, 0}, {0, 46, 1, 0, 0}, {0, 0, 9, 0, 
       0}, {0, 0, 0, 5, 0}}, 
      "IndicesMatrix" -> {{{2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 
         18, 20, 23, 24, 26, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 
         42, 45, 46, 49, 50, 53, 54, 55, 56, 60, 61, 63, 64, 67, 68, 69, 71, 
         72, 74, 76, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 93, 94, 95, 96, 
         97, 98, 99, 100, 102, 103, 105, 108, 109, 111, 114, 115, 118, 121, 
         123, 124, 125, 130, 131, 132, 133, 135, 136, 137, 140, 141, 143, 145,
          146, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 163, 
         164, 165, 167, 168, 170, 172}, {}, {}, {}, {}}, {{}, {8, 9, 19, 21, 
         25, 27, 31, 37, 47, 48, 51, 57, 58, 59, 65, 70, 75, 82, 87, 88, 89, 
         92, 101, 104, 106, 107, 112, 113, 116, 117, 120, 122, 128, 129, 134, 
         138, 139, 144, 147, 148, 157, 159, 161, 166, 169, 173}, {
         44}, {}, {}}, {{}, {}, {1, 22, 52, 62, 77, 110, 127, 142, 
         171}, {}, {}}, {{}, {}, {}, {43, 66, 73, 119, 126}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "good", "very good"}, "Weights" -> 
      SparseArray[Automatic, {173}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.00030860693641618494`, 
      "SingleEvaluationTime" -> 0.002849, "Version" -> {13.3, 1}|>]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.9076702892709513`*^9, {3.9076703411347733`*^9, 3.907670347199698*^9}, 
   3.90767048966187*^9, 3.9076707219629583`*^9, 3.907671347420492*^9, 
   3.907671453947103*^9},
 CellLabel->
  "Out[189]=",ExpressionUUID->"fe60e475-2ded-4d13-9b9e-de86814a06db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"458a22cf-5a18-417c-8663-ef57c8aef700"],

Cell[CellGroupData[{

Cell["Bind weights with hard net", "Subsection",
 CellChangeTimes->{{3.907665290003812*^9, 3.9076652916831007`*^9}, {
   3.9076656057209873`*^9, 3.907665624933681*^9}, {3.907666856764778*^9, 
   3.9076668572583838`*^9}, {3.907667621822114*^9, 3.907667627954358*^9}, 
   3.9076680076408987`*^9},ExpressionUUID->"a93d9781-e8a4-4a86-8cee-\
0f0da5c8e745"],

Cell[BoxData[
 RowBox[{"booleanClassifier", "=", 
  RowBox[{"HardNetFunction", "[", 
   RowBox[{"hardNet", ",", "trainedNet"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.90766764146982*^9, 3.907667696608509*^9}, {
  3.907671271806362*^9, 3.907671272057019*^9}, {3.907671536044094*^9, 
  3.907671562738409*^9}, {3.907671597126011*^9, 3.907671600317809*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"95705978-546e-4291-9fa3-51b1a44869ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HardNetBooleanExpression", "[", 
   RowBox[{"booleanClassifier", ",", "inputSize"}], "]"}], "//", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{{3.907667693074294*^9, 3.907667693895355*^9}, {
  3.907667726157222*^9, 3.9076677360599422`*^9}, {3.907667942384528*^9, 
  3.907667944019459*^9}, {3.907671574179695*^9, 3.907671577226223*^9}, {
  3.907671608068234*^9, 3.9076716092173243`*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"96f84620-c1ab-4fb6-a781-48dad889a671"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "64"}], "}"}]], "Output",
 CellChangeTimes->{{3.907667932115172*^9, 3.907667944734602*^9}, 
   3.907670121477112*^9, 3.907671474328549*^9, 3.907671577619396*^9, 
   3.907671609710891*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"127e2a40-662d-4780-971f-d9b00f11647f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HardNetBooleanExpression", "[", 
   RowBox[{"booleanClassifier", ",", "inputSize"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.907667956015794*^9, 3.907667956290497*^9}, {
  3.907671584892192*^9, 3.907671614460485*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"04062579-8ee9-4603-b78b-4ddb905f49cc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b2", "||", "b13"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b3", "||", "b4", "||", "b6", "||", "b7", "||", "b21"}], ")"}]}],
    ",", 
   RowBox[{"b4", "||", "b6", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"b7", "||", "b15", "||", "b18", "||", "b19", "||", "b21"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b13", "||", "b18"}], ")"}]}], ",", 
   RowBox[{
   "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b15", "||", "b19"}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b6", "||", "b15", "||", "b18", "||", "b19"}], ",", 
   RowBox[{
   "b7", "||", "b12", "||", "b13", "||", "b15", "||", "b17", "||", "b19"}], 
   ",", 
   RowBox[{"b3", "||", "b4", "||", "b7", "||", "b18"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{
     "b9", "||", "b10", "||", "b13", "||", "b17", "||", "b18", "||", "b20"}], 
     ")"}]}], ",", 
   RowBox[{"b7", "||", "b15", "||", "b19"}], ",", 
   RowBox[{
   "b4", "||", "b6", "||", "b11", "||", "b15", "||", "b18", "||", "b19", "||",
     "b20"}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b7", "||", "b9", "||", "b10", "||", "b15", "||", 
    "b17", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b5"}], ")"}]}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b7", "||", "b15", "||", "b16", "||", "b18", "||", 
    "b21"}], ",", 
   RowBox[{
   "b3", "||", "b10", "||", "b12", "||", "b13", "||", "b15", "||", "b16", "||",
     "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b3", "||", "b4", "||", "b6", "||", "b7", "||", "b21"}], ")"}]}],
    ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b8"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b2", "||", "b6", "||", "b10", "||", "b17", "||", "b20"}], 
     ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b9", "||", "b10", "||", "b13", "||", "b17", "||", "b18"}], 
     ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b2", "||", "b14"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b4", "||", "b5", "||", "b7"}], ")"}]}], ",", 
   RowBox[{"b6", "||", "b7", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b5", "||", "b10", "||", "b13", "||", "b14"}], 
     ")"}]}], ",", 
   RowBox[{"b3", "||", "b4", "||", "b6", "||", "b15", "||", "b19"}], ",", 
   RowBox[{
   "b1", "||", "b2", "||", "b7", "||", "b11", "||", "b15", "||", "b18", "||", 
    "b19"}], ",", 
   RowBox[{"b15", "||", "b18", "||", "b19", "||", "b20"}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b7", "||", "b15", "||", "b17", "||", "b19", "||", 
    "b20"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b8", "||", "b17", "||", "b20"}], ")"}]}], ",", 
   RowBox[{
   "b4", "||", "b6", "||", "b7", "||", "b11", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b13", "||", "b14"}], ")"}]}], ",", 
   RowBox[{"b7", "||", "b11", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"b1", "||", "b6", "||", "b7", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{
     "b3", "||", "b4", "||", "b7", "||", "b11", "||", "b18", "||", "b21"}], 
     ")"}]}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b6", "||", "b7", "||", "b11", "||", "b18", "||", 
    "b19", "||", "b20"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b9", "||", "b10", "||", "b17", "||", "b20"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b17", "||", "b20"}], ")"}]}], ",", 
   RowBox[{"b3", "||", "b5", "||", "b15", "||", "b18", "||", "b19"}], ",", 
   RowBox[{
   "b1", "||", "b3", "||", "b5", "||", "b7", "||", "b8", "||", "b15", "||", 
    "b19", "||", "b21"}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b11", "||", "b15", "||", "b19", "||", "b21"}], 
   ",", 
   RowBox[{"b3", "||", "b7", "||", "b15", "||", "b18", "||", "b19"}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b7", "||", "b14", "||", "b15", "||", "b18", "||", 
    "b19", "||", "b21"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b9", "||", "b10", "||", "b12", "||", "b14", "||", "b17"}], 
     ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b2", "||", "b3", "||", "b6"}], ")"}]}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b9", "||", "b10", "||", "b13", "||", "b15", "||", 
    "b17", "||", "b19", "||", "b21"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{
     "b3", "||", "b4", "||", "b6", "||", "b7", "||", "b9", "||", "b17", "||", 
      "b21"}], ")"}]}], ",", 
   RowBox[{
   "b11", "||", "b14", "||", "b15", "||", "b17", "||", "b19", "||", "b20"}], 
   ",", 
   RowBox[{"b3", "||", "b4", "||", "b11", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b2", "||", "b6", "||", "b16", "||", "b17", "||", "b20"}], 
     ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{
     "b9", "||", "b10", "||", "b12", "||", "b14", "||", "b16", "||", "b17"}], 
     ")"}]}], ",", 
   RowBox[{"b3", "||", "b8", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b4", "||", "b5", "||", "b20"}], ")"}]}], ",", 
   RowBox[{
   "b11", "||", "b15", "||", "b16", "||", "b17", "||", "b19", "||", "b21"}], 
   ",", 
   RowBox[{"b3", "||", "b7", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b8", "||", "b20"}], ")"}]}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b6", "||", "b7", "||", "b15", "||", "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b1", "||", "b2", "||", "b5", "||", "b8"}], ")"}]}], ",", 
   RowBox[{
   "b3", "||", "b9", "||", "b10", "||", "b13", "||", "b15", "||", "b17", "||",
     "b19", "||", "b21"}], ",", 
   RowBox[{
   "b3", "||", "b4", "||", "b5", "||", "b8", "||", "b15", "||", "b18", "||", 
    "b19"}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b5", "||", "b8", "||", "b17"}], ")"}]}], ",", 
   RowBox[{"!", 
    RowBox[{"(", 
     RowBox[{"b3", "||", "b4", "||", "b7", "||", "b21"}], ")"}]}], ",", 
   RowBox[{
   "b1", "||", "b3", "||", "b8", "||", "b15", "||", "b18", "||", "b19"}], ",", 
   RowBox[{"b4", "||", "b6", "||", "b15", "||", "b19"}], ",", 
   RowBox[{
   "b1", "||", "b3", "||", "b7", "||", "b8", "||", "b15", "||", "b19"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.907667957137973*^9, 3.907670122422462*^9, 3.907671475307066*^9, {
   3.907671591948455*^9, 3.907671614743608*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"63ffee15-dcd6-4cb8-a8ae-17eef2021788"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"ba698b77-f7c2-49da-9f91-9cfabe0b82f3"],

Cell[CellGroupData[{

Cell["Evaluate boolean classifier", "Subsection",
 CellChangeTimes->{{3.907665290003812*^9, 3.9076652916831007`*^9}, {
   3.9076656057209873`*^9, 3.907665624933681*^9}, {3.907666856764778*^9, 
   3.9076668572583838`*^9}, {3.907667621822114*^9, 3.907667627954358*^9}, 
   3.9076680076408987`*^9, {3.9076680591323347`*^9, 3.907668063272876*^9}, {
   3.907671629001854*^9, 
   3.9076716308597717`*^9}},ExpressionUUID->"01bab4a1-270f-4ca0-acb7-\
82125f9e8c21"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"predictions", ",", "summary"}], "}"}], "=", 
   RowBox[{"EvaluateNet", "[", 
    RowBox[{"booleanClassifier", ",", "testData"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.9076716355790043`*^9, 3.9076716411994762`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"0230e10e-c0d4-4ee2-beac-9862ca749a6b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"summary", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellLabel->
  "In[200]:=",ExpressionUUID->"29409bdd-fbe9-47ee-bf9c-f5de2877fc64"],

Cell[BoxData["0.9942196531791907`"], "Output",
 CellChangeTimes->{3.9076716576512613`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"c07f72e5-96ac-4708-aebd-cdcc7d7da0a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Size of boolean classifier", "Subsubsection",
 CellChangeTimes->{{3.90767185235284*^9, 
  3.907671855361002*^9}},ExpressionUUID->"d7882a01-5ca5-408b-8446-\
a116301afb0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"GetNetWeights", "[", 
    RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.907671744949484*^9, 3.9076717776594276`*^9}, 
   3.907671968221554*^9, 3.907672010191684*^9},
 CellLabel->
  "In[215]:=",ExpressionUUID->"8d3559dc-dc5a-487c-9c63-bfab43fa0425"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"booleanWeightSize", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "weights", "]"}], "/", "8"}], "/", "1024"}], "//",
      "N"}], ",", "\"\<Kilobytes\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.907671793154518*^9, 3.907671828665822*^9}, 
   3.907672015044909*^9, {3.9076720903887243`*^9, 3.907672092902947*^9}, {
   3.907672272315689*^9, 3.907672272518957*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"cbd60832-083c-4193-b359-ea7bd92914bc"],

Cell[BoxData[
 TemplateBox[{"0.1953125`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.907671830976482*^9, 3.907672016228641*^9, 
  3.907672093531*^9, 3.907672273240013*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"795902b3-9b93-4311-bdc7-bc0c3a7cd715"]
}, Open  ]],

Cell["The size of a (minimal) MLP for this problem is ~16 kB", "Item",
 CellChangeTimes->{{3.907672329265008*^9, 
  3.907672460454453*^9}},ExpressionUUID->"795df6b2-4dba-415d-9eb3-\
68faf2919eae"],

Cell["\[PartialD]\[DoubleStruckCapitalB]-net is ~80 times smaller for \
identical accuracy", "Item",
 CellChangeTimes->{{3.907672329265008*^9, 
  3.90767246000045*^9}},ExpressionUUID->"e521ce67-abd9-40c3-a012-\
0e2a9d775b58"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->
  "SlideShowHeader",ExpressionUUID->"07cf68c6-c952-4b6b-a3c8-cef06dcb8c10"],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.9076650858278847`*^9, 3.9076650871828127`*^9}, {
  3.907672529844534*^9, 
  3.907672531392181*^9}},ExpressionUUID->"ec30d915-d1a7-4dad-ba6e-\
b7c6bcef2ec3"],

Cell[CellGroupData[{

Cell["Wolfram Language for Machine Learning research", "Subsection",
 CellChangeTimes->{{3.907673264968713*^9, 3.907673285020278*^9}, {
   3.907673560184054*^9, 3.9076735820333023`*^9}, {3.907673613978958*^9, 
   3.90767361428196*^9}, {3.907673801064795*^9, 3.907673814421979*^9}, 
   3.907728997263112*^9},ExpressionUUID->"901c2722-21a0-4399-a083-\
00907c0c1b9e"],

Cell["Rapid prototyping of new ideas", "Item",
 CellChangeTimes->{{3.907672553888884*^9, 3.907672569571398*^9}, {
   3.907672756353986*^9, 3.9076728696771803`*^9}, {3.907672964183557*^9, 
   3.907672964185685*^9}, {3.907673247068358*^9, 3.90767324715714*^9}, 
   3.907673289062901*^9, {3.9076735912601643`*^9, 3.907673667518898*^9}, {
   3.907673826849449*^9, 
   3.907673837257574*^9}},ExpressionUUID->"909193e6-60d8-42df-9787-\
9ac0206cd14f"],

Cell["Neural network functions: high level and unified", "Item",
 CellChangeTimes->{{3.907672553888884*^9, 3.907672569571398*^9}, {
   3.907672756353986*^9, 3.9076728696771803`*^9}, {3.907672964183557*^9, 
   3.907672964185685*^9}, {3.907673247068358*^9, 3.90767324715714*^9}, 
   3.907673289062901*^9, {3.9076735912601643`*^9, 3.907673667518898*^9}, {
   3.9076738581725407`*^9, 
   3.907673862979624*^9}},ExpressionUUID->"b2b6a70a-b8f9-428d-a397-\
a69e9ab37732"],

Cell[CellGroupData[{

Cell["Yet configurable", "Item",
 CellChangeTimes->{{3.907672553888884*^9, 3.907672569571398*^9}, {
  3.907672756353986*^9, 3.907672807739147*^9}, {3.9076728920731916`*^9, 
  3.907672918852207*^9}, {3.907672976533863*^9, 3.907672976536572*^9}, {
  3.907673173376028*^9, 3.907673173394557*^9}, {3.907673227516733*^9, 
  3.9076732283707943`*^9}, {3.90767364783307*^9, 3.907673651760532*^9}, {
  3.9076737363093433`*^9, 
  3.907673755106165*^9}},ExpressionUUID->"532fd0eb-42ba-470e-9ca8-\
c8736f557f9a"],

Cell[TextData[{
 "Arbitrary code into your network. E.g. ",
 StyleBox["FunctionLayer",
  FontFamily->"Source Code Pro Medium"]
}], "Subitem",
 CellChangeTimes->{{3.907672553888884*^9, 3.907672569571398*^9}, {
   3.907672756353986*^9, 3.907672807739147*^9}, {3.9076728920731916`*^9, 
   3.907672918852207*^9}, {3.907672976533863*^9, 3.907672976536572*^9}, {
   3.907673194709928*^9, 3.9076732091088448`*^9}, {3.907673683196782*^9, 
   3.9076737225168867`*^9}, 
   3.907673887293812*^9},ExpressionUUID->"42b8708a-1aab-4969-b127-\
1a7a6ce5ec92"],

Cell[TextData[{
 "Different forward and backward passes. E.g. ",
 StyleBox["CompiledFunction",
  FontFamily->"Source Code Pro Medium"],
 StyleBox[" ",
  FontFamily->"Source Code Pro"]
}], "Subitem",
 CellChangeTimes->{{3.907672553888884*^9, 3.907672569571398*^9}, {
  3.907672756353986*^9, 3.907672807739147*^9}, {3.9076728920731916`*^9, 
  3.907672954490992*^9}, {3.9076729915244503`*^9, 3.9076730084774942`*^9}, {
  3.907673053249991*^9, 3.9076730561279993`*^9}, {3.90767376206802*^9, 
  3.907673780215823*^9}},ExpressionUUID->"9b1be8bf-5dc7-4e5d-9d09-\
9a7ed64638a7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More on \[PartialD]\[DoubleStruckCapitalB]-nets", "Subsection",
 CellChangeTimes->{{3.907673264968713*^9, 
  3.907673308774984*^9}},ExpressionUUID->"e854b76d-4505-4fa1-90a6-\
2fc823e0d88f"],

Cell[TextData[{
 ButtonBox["Lossless hardening with \[PartialD]\|01d539 nets",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://differentiable.xyz/papers/paper_21.pdf"], None},
  ButtonNote->"https://differentiable.xyz/papers/paper_21.pdf"],
 ". I. Wright. In ",
 ButtonBox["\"Differentiable Almost Everything: Differentiable Relaxations, \
Algorithms, Operators, and Simulators\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://differentiable.xyz/papers"], None},
  ButtonNote->"https://differentiable.xyz/papers"],
 ", ICML 2023 Workshop, Honolulu, 2023."
}], "Item",
 CellChangeTimes->{{3.907673353005006*^9, 
  3.907673407382119*^9}},ExpressionUUID->"7aa77e65-023a-44ce-92d9-\
5ca8d0d2f3c1"],

Cell["GitHub repo: https://github.com/Z80coder/db-nets", "Item",
 CellChangeTimes->{{3.907673353005006*^9, 
  3.907673418815667*^9}},ExpressionUUID->"a4dbbfa2-4ff0-44d0-8b1e-\
69845ac8c736"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Acknowledgements", "Subsection",
 CellChangeTimes->{{3.907673264968713*^9, 3.907673308774984*^9}, {
  3.907673437987648*^9, 
  3.907673440279607*^9}},ExpressionUUID->"3f3028b3-9814-4797-9d9c-\
fe7a1debe757"],

Cell[TextData[{
 "Thanks to ",
 ButtonBox["GitHub Next",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://githubnext.com/"], None},
  ButtonNote->"https://githubnext.com/"],
 " for sponsoring this research"
}], "Item",
 CellChangeTimes->{{3.907673488867896*^9, 3.9076735009769697`*^9}, {
  3.907673551792967*^9, 
  3.907673551801195*^9}},ExpressionUUID->"4e3cc61d-8ae8-4f23-ab1f-\
ba403ecf6ef8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Slideshow Working",
WindowSize->{1440, 782.25},
WindowMargins->{{2880, Automatic}, {0, Automatic}},
TaggingRules->{
 "PresenterSettings" -> {
   "ShowNavigationBar" -> False, 
    "SlideBreakStyles" -> {"Title", "Chapter", "Section"}, "ShowSlideBreaks" -> 
    True, "Theme" -> {
     "ThemeName" -> "Facet", "FontSetName" -> "Facet", "ColorSetName" -> 
      "Default"}, "WindowSize" -> {1440, 782.25}, 
    "WindowMargins" -> {{2880, -2880}, {0, 0}}, "Dialogs" -> {}, 
    "UserModifications" -> {{"Text", TextAlignment -> Center}}}},
Magnification:>0.5 Inherited,
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> 
     FrontEnd`FileName[{"PresenterTools"}, "Facet.nb", CharacterEncoding -> 
       "UTF-8"]]], 
   Cell[
    StyleData["Notebook"], 
    StyleHints -> {
     ParentList, "CodeFont" -> "Source Code Pro", 
      "ColorSet" -> {
       "Display1" -> RGBColor[0.866667, 0.0666667, 0], "Display2" -> 
        RGBColor[0.67, 0.0666667, 0], "Display3" -> 
        RGBColor[0.67, 0.0666667, 0], "Text1" -> GrayLevel[0.1], "Text2" -> 
        GrayLevel[1], "Text3" -> GrayLevel[0], "Text1Reverse" -> 
        GrayLevel[0.75], "Text2Reverse" -> GrayLevel[0.75], "Text3Reverse" -> 
        GrayLevel[0.75], "Dingbat" -> RGBColor[0.866667, 0.0666667, 0], 
        "Default" -> GrayLevel[0.1], "Background" -> GrayLevel[1]}, 
      "FontSet" -> {
       "Display1" -> "Source Sans Pro", "Display2" -> "Source Sans Pro", 
        "Display3" -> "Source Sans Pro", "Text1" -> "Source Sans Pro", 
        "Text2" -> "Source Sans Pro", "Text3" -> "Source Sans Pro", "Dingbat" -> 
        "Source Sans Pro", "Default" -> "Source Sans Pro"}, 
      "SlideBreakStyles" -> {}}], 
   Cell[
    StyleData["FirstSlide"], 
    PrivateCellOptions -> {
     "PagewiseNotebookBaseStyle" -> {
       BackgroundAppearance -> 
        FrontEnd`FileName[{"PresenterTools"}, 
          "Background-Facet-Default.png"]}}], 
   Cell[
    StyleData["Title"], FontSize -> 36, FontWeight -> "Bold", FontTracking -> 
    "Plain", FontVariations -> {"CapsType" -> "Normal"}], 
   Cell[
    CellGroupData[{
      Cell["Section", "Subsection"], 
      Cell[
       StyleData["Section"], FontTracking -> "Plain", 
       FontVariations -> {"CapsType" -> "Normal"}], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsection"], FontTracking -> "Plain", 
          FontVariations -> {"CapsType" -> "Normal"}], 
         Cell[
          StyleData["Subsection", "Slideshow Working"], FontSize -> 
          Dynamic[0.029 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
         Cell[
          StyleData["Subsection", "Slideshow Presentation"], FontSize -> 
          Dynamic[0.029 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["Subsubsection"], FontTracking -> "Plain", 
          FontVariations -> {"CapsType" -> "Normal"}], 
         Cell[
          StyleData["Subsubsection", "Slideshow Working"], FontSize -> 
          Dynamic[0.026 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]], 
          FontWeight -> "DemiBold"], 
         Cell[
          StyleData["Subsubsection", "Slideshow Presentation"], FontSize -> 
          Dynamic[0.026 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]], 
          FontWeight -> "DemiBold"], 
         Cell[
          StyleData["Subsubsubsection", "Slideshow Working"], FontSize -> 
          Dynamic[0.026 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]], 
          FontWeight -> "DemiBold", FontTracking -> "Plain"], 
         Cell[
          StyleData["Subsubsubsection", "Slideshow Presentation"], FontSize -> 
          Dynamic[0.026 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]], 
          FontWeight -> "DemiBold", FontTracking -> "Plain"], 
         Cell[
          StyleData["Subsubsubsubsection", "Slideshow Working"], FontSize -> 
          Dynamic[0.026 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
         Cell[
          StyleData["Subsubsubsubsection", "Slideshow Presentation"], 
          FontSize -> 
          Dynamic[0.026 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]]}, 
        Open]], 
      Cell[
       CellGroupData[{
         Cell[
          StyleData["InputOnly"], FontSize -> 13], 
         Cell[
          StyleData["InputOnly", "SlideShow"], 
          CellMargins -> {{100, 10}, {8, 15}}], 
         Cell[
          StyleData["InputOnly", "Slideshow Working"], CellMargins -> 
          Dynamic[{{
             0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
              FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {
             0.00992593 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}], 
              0.0186111 FrontEnd`AbsoluteCurrentValue[{WindowSize, 2}]}}], 
          LinebreakAdjustments -> {1, 2., 12., 1., 1.}, FontSize -> 
          Dynamic[0.019 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]]], 
         Cell[
          StyleData[
          "InputOnly", "Slideshow Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData[
          "InputOnly", "Scrolling Presentation", StyleDefinitions -> 
           StyleData["InputOnly", "Slideshow Working"]]], 
         Cell[
          StyleData["InputOnly", "Printout"], 
          CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, 
          LinebreakAdjustments -> {0.85, 2, 10, 1, 1}]}, Open]]}, Open]]}, 
  Visible -> False, FrontEndVersion -> 
  "13.3 for Linux x86 (64-bit) (July 24, 2023)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"c248ba26-5d7a-45ba-8158-4b136cc17d8b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[580, 22, 237, 4, 58, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
   CellTags->"SlideShowHeader"],
  Cell[7831, 170, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ee3ea2a1-973b-4e9a-a704-0d8a3c30d1be",
   CellTags->"SlideShowHeader"],
  Cell[9226, 206, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"720d29fa-744c-4cd2-a8aa-bbf8a1961d24",
   CellTags->"SlideShowHeader"],
  Cell[23862, 582, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"4e8e5a7c-8b4e-47e7-a75d-3cb2b655ed51",
   CellTags->"SlideShowHeader"],
  Cell[75017, 1448, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"016e1f7e-f3e1-448c-9705-967db89e19ec",
   CellTags->"SlideShowHeader"],
  Cell[77317, 1522, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"6eecc84d-54a3-45fb-92aa-6ee4c71cb9fc",
   CellTags->"SlideShowHeader"],
  Cell[81472, 1643, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"eafc3095-f318-4531-97de-5b528efa8405",
   CellTags->"SlideShowHeader"],
  Cell[150662, 3036, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"a5cb05e6-1cd4-4170-8bad-e2077e1bfcc3",
   CellTags->"SlideShowHeader"],
  Cell[234871, 4678, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ad7c2678-ddde-42f9-87f6-a30dbe887e1d",
   CellTags->"SlideShowHeader"],
  Cell[377950, 7404, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"bb348f59-2bae-4bc5-ba58-e51b71b201e9",
   CellTags->"SlideShowHeader"],
  Cell[502660, 10051, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"9e337155-4f6c-4e7a-90bb-fd4c8f1a020d",
   CellTags->"SlideShowHeader"],
  Cell[584895, 11728, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"8edb87eb-053a-4189-924f-a1026166f746",
   CellTags->"SlideShowHeader"],
  Cell[585362, 11742, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"e377ef6c-53f3-4b41-abe6-ffc203610c5c",
   CellTags->"SlideShowHeader"],
  Cell[713772, 14145, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"83fe43b3-b305-42fb-99f2-98f3554cdbdb",
   CellTags->"SlideShowHeader"],
  Cell[948201, 18991, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"b906e985-5f68-45f2-9c1f-98798734664a",
   CellTags->"SlideShowHeader"],
  Cell[1294809, 25659, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"74b4ecae-d27b-4717-bf26-b5e19f106927",
   CellTags->"SlideShowHeader"],
  Cell[1921447, 37624, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"458a22cf-5a18-417c-8663-ef57c8aef700",
   CellTags->"SlideShowHeader"],
  Cell[1930372, 37869, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ba698b77-f7c2-49da-9f91-9cfabe0b82f3",
   CellTags->"SlideShowHeader"],
  Cell[1933665, 37968, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"07cf68c6-c952-4b6b-a3c8-cef06dcb8c10",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1944702, 38238}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 237, 4, 58, "SlideShowNavigationBar",ExpressionUUID->"ae861ed8-5fa1-4088-84fd-2651cc7b368a",
 CellTags->"SlideShowHeader"],
Cell[820, 28, 192, 3, 163, "Title",ExpressionUUID->"8b1642a0-c2f2-4832-b962-da68c26a4047"],
Cell[1015, 33, 261, 4, 55, "Subtitle",ExpressionUUID->"75c0d664-a0db-4889-a1b0-650f7c83e5d8"],
Cell[1279, 39, 6515, 126, 74, "Subtitle",ExpressionUUID->"82304148-2048-4796-ab46-715a0d811c28"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7831, 170, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ee3ea2a1-973b-4e9a-a704-0d8a3c30d1be",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[7978, 176, 429, 8, 64, "Section",ExpressionUUID->"75e785bd-e551-42c4-b918-1ff722dfcee0"],
Cell[8410, 186, 767, 14, 61, "Text",ExpressionUUID->"932e9e57-52c9-4a85-ac72-ea4c898bd4bb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9226, 206, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"720d29fa-744c-4cd2-a8aa-bbf8a1961d24",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[9373, 212, 253, 4, 64, "Section",ExpressionUUID->"292a6d7d-fa73-441f-9d91-0f2ac17c07e9"],
Cell[9629, 218, 14184, 358, 1070, "Input",ExpressionUUID->"ad5bbb8b-5bbe-41b8-be54-977690ea97d6"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23862, 582, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"4e8e5a7c-8b4e-47e7-a75d-3cb2b655ed51",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[24009, 588, 376, 8, 64, "Section",ExpressionUUID->"bf6b684b-be70-47c1-be5a-c3838a1d25c9"],
Cell[CellGroupData[{
Cell[24410, 600, 917, 14, 34, "Item",ExpressionUUID->"ca618272-fd6e-4541-bd18-cb14372f17e4"],
Cell[25330, 616, 913, 17, 31, "Subitem",ExpressionUUID->"2bb9d2a7-54e6-4fb5-ab31-31f983dffd07"],
Cell[26246, 635, 938, 16, 31, "Subitem",ExpressionUUID->"678092c5-5535-45a9-af1c-c680fe242a47"]
}, Open  ]],
Cell[27199, 654, 982, 15, 34, "Item",ExpressionUUID->"ce3d413f-9897-476c-8661-d74cf7352dec"],
Cell[28184, 671, 46784, 771, 162, "Text",ExpressionUUID->"286d981c-f97a-4983-9116-b6ae4176d855"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75017, 1448, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"016e1f7e-f3e1-448c-9705-967db89e19ec",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[75164, 1454, 189, 3, 44, "Subsection",ExpressionUUID->"04b07168-763c-4c67-b697-17e5b4652bf7"],
Cell[75356, 1459, 709, 16, 50, "Input",ExpressionUUID->"d817ca6d-f10c-4af6-8fa6-f05ed14be1b3"],
Cell[CellGroupData[{
Cell[76090, 1479, 317, 6, 28, "Input",ExpressionUUID->"0421380a-7502-4fe0-a886-00cf4d918e52"],
Cell[76410, 1487, 311, 6, 28, "Output",ExpressionUUID->"d9b8d4f2-982b-4c9a-8253-179dc9dfcf0d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76770, 1499, 215, 4, 44, "Subsection",ExpressionUUID->"38778cd1-87ed-41f6-82a9-438d0a3c281f"],
Cell[76988, 1505, 280, 11, 34, "Text",ExpressionUUID->"d4740ff6-87f6-474e-81f0-0f0541ead6a2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[77317, 1522, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"6eecc84d-54a3-45fb-92aa-6ee4c71cb9fc",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[77464, 1528, 530, 10, 64, "Section",ExpressionUUID->"95f72a91-1693-4056-b05f-08363e869a36"],
Cell[77997, 1540, 298, 4, 34, "Text",ExpressionUUID->"e419f08a-b75a-4a33-b0b5-d0339a4c7d75"],
Cell[CellGroupData[{
Cell[78320, 1548, 439, 7, 28, "Input",ExpressionUUID->"483a3616-9a88-433f-ac04-6f0e755a7431"],
Cell[78762, 1557, 194, 3, 28, "Output",ExpressionUUID->"cd34bcfe-29f5-4ab1-8ab8-e7e78d8e0585"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78993, 1565, 513, 11, 28, "Input",ExpressionUUID->"a6689b11-4824-46b2-8a6e-bdfa45a310f2"],
Cell[79509, 1578, 1902, 58, 144, "Output",ExpressionUUID->"f3e3ef28-ab45-4926-816c-7e174ec2ad10"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81472, 1643, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"eafc3095-f318-4531-97de-5b528efa8405",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[81619, 1649, 212, 4, 44, "Subsection",ExpressionUUID->"782b2a85-9bd7-417c-bfbd-9ca05578cfc8"],
Cell[81834, 1655, 562, 10, 28, "Input",ExpressionUUID->"10e029df-ea41-4afe-abb8-5bd9371c5e3e"],
Cell[CellGroupData[{
Cell[82421, 1669, 1316, 21, 28, "Input",ExpressionUUID->"7399db73-99c8-49dc-814f-e8669a849f26"],
Cell[83740, 1692, 2182, 41, 97, "Output",ExpressionUUID->"26fda732-5588-44e6-8f5d-04e5a61a0b1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85959, 1738, 223, 3, 28, "Input",ExpressionUUID->"5b40228a-b1c5-4029-b3f3-f80cc79f7839"],
Cell[86185, 1743, 63656, 1265, 227, "Output",ExpressionUUID->"87505a36-9f35-4d5a-8f06-e56163c73cb2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149878, 3013, 211, 4, 34, "Item",ExpressionUUID->"5e9cf78c-5571-4707-99c4-9f1c161ab468"],
Cell[150092, 3019, 261, 4, 31, "Subitem",ExpressionUUID->"a0ff7a7a-957a-4ffd-9e39-93debdc51b9f"],
Cell[150356, 3025, 245, 4, 31, "Subitem",ExpressionUUID->"0877ec4f-4dc8-4859-982e-814190c2138e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[150662, 3036, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"a5cb05e6-1cd4-4170-8bad-e2077e1bfcc3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[150809, 3042, 258, 4, 44, "Subsection",ExpressionUUID->"8a65901f-6744-41cf-a44d-b16041c5e158"],
Cell[151070, 3048, 643, 12, 28, "Input",ExpressionUUID->"0e6166d9-9bd5-424d-a913-3421d64d474f"],
Cell[CellGroupData[{
Cell[151738, 3064, 1364, 22, 28, "Input",ExpressionUUID->"032eb2ea-bbc3-42cb-a315-af78565a3f51"],
Cell[153105, 3088, 2199, 41, 97, "Output",ExpressionUUID->"2dc87873-9556-48bc-a74f-62c200bf1c10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155341, 3134, 272, 4, 28, "Input",ExpressionUUID->"ccd4aa02-706f-4341-a095-0e23b3ce6991"],
Cell[155616, 3140, 78366, 1510, 227, "Output",ExpressionUUID->"1f3aff42-4f69-4c41-8346-4c91eb8ff296"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234019, 4655, 257, 4, 34, "Item",ExpressionUUID->"262ba17e-cd5e-491e-8e04-f458dabc1445"],
Cell[234279, 4661, 263, 4, 31, "Subitem",ExpressionUUID->"b2ac080c-f40f-4d9f-9564-19eacd91afd3"],
Cell[234545, 4667, 265, 4, 31, "Subitem",ExpressionUUID->"fef13bc0-32a7-4c59-b519-6b48aa5b9e49"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[234871, 4678, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ad7c2678-ddde-42f9-87f6-a30dbe887e1d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[235018, 4684, 312, 5, 44, "Subsection",ExpressionUUID->"d91d3830-5ac4-48b8-bd50-d9784b5dee9a"],
Cell[CellGroupData[{
Cell[235355, 4693, 368, 7, 34, "Item",ExpressionUUID->"75e21ba6-3150-478f-a168-d5f4702ecd4c"],
Cell[CellGroupData[{
Cell[235748, 4704, 210, 3, 28, "Input",ExpressionUUID->"3bb78c15-5ea4-42f5-b389-d517cc3313f5"],
Cell[235961, 4709, 4653, 96, 271, "Output",ExpressionUUID->"dbedbc52-41e0-4b64-8d85-b60cbca82aba"]
}, Open  ]],
Cell[240629, 4808, 424, 11, 28, "Input",ExpressionUUID->"c0d670f2-9306-4278-b306-3cfae51cf98b"],
Cell[CellGroupData[{
Cell[241078, 4823, 312, 6, 28, "Input",ExpressionUUID->"283a52ac-ce6e-4dd3-a417-d4cc8e28f222"],
Cell[241393, 4831, 4434, 130, 157, "Output",ExpressionUUID->"1eeefb38-1461-45df-bebb-ce0a3c4a2f80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245864, 4966, 241, 4, 28, "Input",ExpressionUUID->"f9eabc41-5852-4ca5-baa1-2ec791beb4d7"],
Cell[246108, 4972, 130818, 2401, 227, "Output",ExpressionUUID->"e3f497c1-2f78-402c-a0fe-f73811798ce2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[376975, 7379, 335, 5, 34, "Item",ExpressionUUID->"52e407f4-d08a-4300-97fc-01c8de0370a5"],
Cell[377313, 7386, 263, 4, 31, "Subitem",ExpressionUUID->"0d1901c4-2638-4f26-8055-bbc94b5d238e"],
Cell[377579, 7392, 310, 5, 31, "Subitem",ExpressionUUID->"94e9a045-2888-4453-99fc-a163ef8581b9"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[377950, 7404, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"bb348f59-2bae-4bc5-ba58-e51b71b201e9",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[378097, 7410, 585, 11, 64, "Section",ExpressionUUID->"5615f1ac-069c-41df-8de3-6901c4280a15"],
Cell[378685, 7423, 740, 14, 28, "Input",ExpressionUUID->"b66a247c-210e-4e60-aced-8296a987f280"],
Cell[CellGroupData[{
Cell[379450, 7441, 214, 4, 44, "Subsection",ExpressionUUID->"e2cf56ed-a8a0-4952-acd9-ab956e6a40ae"],
Cell[379667, 7447, 447, 11, 28, "Input",ExpressionUUID->"816f2a30-6f07-4594-aca1-3cbc5f7e3617"],
Cell[CellGroupData[{
Cell[380139, 7462, 162, 3, 33, "Subsubsection",ExpressionUUID->"d77af7b1-df96-4fc6-b6ba-95e586d6e27e"],
Cell[CellGroupData[{
Cell[380326, 7469, 184, 3, 28, "Input",ExpressionUUID->"5e361718-28c3-41a5-b6b6-6f7456a5d5ca"],
Cell[380513, 7474, 116548, 2394, 152, "Output",ExpressionUUID->"c8b5f227-ee25-46a5-924a-af135b76c3ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497098, 9873, 305, 6, 28, "Input",ExpressionUUID->"79835ba3-d3df-410d-94e7-34d3eabb6c72"],
Cell[497406, 9881, 659, 14, 28, "Output",ExpressionUUID->"a3b82b7a-04d0-48d9-aaa2-2393a0d5f9ad"]
}, Open  ]],
Cell[498080, 9898, 277, 7, 28, "Input",ExpressionUUID->"52edde85-033f-4a1b-a1a8-8b78d0040ff5"],
Cell[CellGroupData[{
Cell[498382, 9909, 347, 7, 28, "Input",ExpressionUUID->"147ea77d-7792-4db6-9c03-50157af45adc"],
Cell[498732, 9918, 446, 10, 28, "Output",ExpressionUUID->"65adfe99-6307-4442-ae8a-61c7f97fb382"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[499227, 9934, 163, 3, 33, "Subsubsection",ExpressionUUID->"e478fe00-6cb6-40ec-b405-a10b2b9addf1"],
Cell[CellGroupData[{
Cell[499415, 9941, 470, 13, 28, "Input",ExpressionUUID->"1b9d5da0-c7b0-49f7-a05c-e2601a11363d"],
Cell[499888, 9956, 1125, 38, 28, "Output",ExpressionUUID->"49bd5dfd-0f9d-415e-a3fb-b95cb06c07ac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[501050, 9999, 423, 11, 28, "Input",ExpressionUUID->"d063ed38-f557-449f-91d0-718d4a74e75c"],
Cell[501476, 10012, 257, 5, 28, "Output",ExpressionUUID->"7f7f7ea6-2b9e-411b-a3c3-0b878dbb7513"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[501782, 10023, 266, 4, 33, "Subsubsection",ExpressionUUID->"3e048998-01c7-450b-adce-b11d1c50c937"],
Cell[CellGroupData[{
Cell[502073, 10031, 248, 5, 28, "Input",ExpressionUUID->"740754c1-6c32-4454-b2c7-c5b31ba12b54"],
Cell[502324, 10038, 251, 4, 28, "Output",ExpressionUUID->"d7ab943c-f249-42ab-b89e-0bda49ce189d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[502660, 10051, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"9e337155-4f6c-4e7a-90bb-fd4c8f1a020d",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[502807, 10057, 256, 4, 44, "Subsection",ExpressionUUID->"b7b56b37-d9ef-45cb-9cb4-ba50e0c069c7"],
Cell[503066, 10063, 325, 8, 28, "Input",ExpressionUUID->"42a94041-0a72-4352-a4e8-435061f46118"],
Cell[CellGroupData[{
Cell[503416, 10075, 184, 3, 28, "Input",ExpressionUUID->"0a826c45-893c-400d-aa54-b1702b68ca36"],
Cell[503603, 10080, 81231, 1641, 53, "Output",ExpressionUUID->"0d0b39d2-3881-4c0c-b8ef-90a713a40b4e"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[584895, 11728, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"8edb87eb-053a-4189-924f-a1026166f746",
 CellTags->"SlideShowHeader"],
Cell[585020, 11732, 305, 5, 44, "Subsection",ExpressionUUID->"3b1d9cb8-27d9-44df-90f0-df1db580d9fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[585362, 11742, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"e377ef6c-53f3-4b41-abe6-ffc203610c5c",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[585509, 11748, 170, 3, 64, "Section",ExpressionUUID->"aa6507eb-d06e-42b3-ac5a-64ee7d1b6399"],
Cell[CellGroupData[{
Cell[585704, 11755, 285, 6, 28, "Input",ExpressionUUID->"4c37d83b-e165-47c6-89de-a5863b1583c0"],
Cell[585992, 11763, 127719, 2375, 346, "Output",ExpressionUUID->"cf181199-4f5c-4582-95bd-af9f42dac550"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[713772, 14145, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"83fe43b3-b305-42fb-99f2-98f3554cdbdb",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[713919, 14151, 166, 3, 44, "Subsection",ExpressionUUID->"49f3f83c-9c7a-49d8-92ec-682e39441ceb"],
Cell[CellGroupData[{
Cell[714110, 14158, 164, 3, 33, "Subsubsection",ExpressionUUID->"7cde86fc-7e24-4663-b27a-d0744b27c234"],
Cell[714277, 14163, 8178, 197, 856, "Input",ExpressionUUID->"2a4e03f4-e2a7-4f69-8998-08b1b478d9ea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[722492, 14365, 243, 4, 33, "Subsubsection",ExpressionUUID->"309d98db-1149-44ad-a275-148690f1941a"],
Cell[722738, 14371, 8454, 201, 34, "Input",ExpressionUUID->"9f279c68-d43b-4bb1-be05-e345a4c62756"],
Cell[CellGroupData[{
Cell[731217, 14576, 305, 5, 28, "Input",ExpressionUUID->"a595fc1e-e09b-4264-a567-e9cf3507d218"],
Cell[731525, 14583, 42364, 886, 149, "Output",ExpressionUUID->"d2720438-e394-4fe0-ae75-a6e0cf80de50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[773926, 15474, 357, 7, 28, "Input",ExpressionUUID->"e01826d2-d275-4a00-9079-706dba5b0224"],
Cell[774286, 15483, 166482, 3330, 330, "Output",ExpressionUUID->"5081d1de-f29a-4bee-865b-6f28789624d6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[940817, 18819, 242, 4, 33, "Subsubsection",ExpressionUUID->"994860db-4037-4865-aaf5-d50db85df7f0"],
Cell[CellGroupData[{
Cell[941084, 18827, 260, 5, 28, "Input",ExpressionUUID->"79d5815b-6259-4955-a1b2-26f0e35dd004"],
Cell[941347, 18834, 6781, 149, 52, "Output",ExpressionUUID->"ddab5a3c-d641-40fa-ba4c-f9027625dcba"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[948201, 18991, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"b906e985-5f68-45f2-9c1f-98798734664a",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[948348, 18997, 246, 4, 44, "Subsection",ExpressionUUID->"ac5379eb-1e1d-49d8-8deb-06d286a5dcbe"],
Cell[CellGroupData[{
Cell[948619, 19005, 498, 13, 28, "Input",ExpressionUUID->"0e10363d-4ecc-4bd3-85e8-fb38e4bd83f6"],
Cell[949120, 19020, 219, 3, 28, "Output",ExpressionUUID->"3a9a8c2c-575b-42d4-bb5b-9d199fd1116b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[949376, 19028, 338, 8, 28, "Input",ExpressionUUID->"be31501c-8a21-45af-9338-a0108beb61b5"],
Cell[949717, 19038, 351, 6, 31, "Output",ExpressionUUID->"9e4f32e5-cfa7-4d53-8522-b5a84a2657f5"]
}, Open  ]],
Cell[950083, 19047, 451, 12, 28, "Input",ExpressionUUID->"7942c266-44f2-4df3-be40-fe9f94060c55"],
Cell[CellGroupData[{
Cell[950559, 19063, 184, 3, 28, "Input",ExpressionUUID->"7c24f466-e8f1-49b2-ae2d-a8e3bfaac271"],
Cell[950746, 19068, 344002, 6584, 346, "Output",ExpressionUUID->"9e699445-e73b-42f2-a0e8-97679d34d225"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1294809, 25659, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"74b4ecae-d27b-4717-bf26-b5e19f106927",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1294956, 25665, 293, 4, 44, "Subsection",ExpressionUUID->"227e40e7-fb89-45ab-877f-c0f3ae67b64d"],
Cell[CellGroupData[{
Cell[1295274, 25673, 367, 7, 28, "Input",ExpressionUUID->"c8efc2b7-a17a-4a23-be97-2f53cbf44648"],
Cell[1295644, 25682, 34806, 702, 273, "Output",ExpressionUUID->"454c5fd9-9429-4846-bbd4-83a1a4497288"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1330487, 26389, 230, 5, 28, "Input",ExpressionUUID->"acf60334-8421-474b-b347-cca56762cc71"],
Cell[1330720, 26396, 285664, 5383, 53, "Output",ExpressionUUID->"c8a54f10-c0c9-4183-a7f5-95ca5afbcab1"]
}, Open  ]],
Cell[1616399, 31782, 965, 24, 71, "Input",ExpressionUUID->"350b58b3-583d-4336-87d6-dc364ba27ec6"],
Cell[CellGroupData[{
Cell[1617389, 31810, 570, 12, 28, "Input",ExpressionUUID->"3da7775e-79e4-4eaa-89c7-961b42da9396"],
Cell[1617962, 31824, 303424, 5793, 285, "Output",ExpressionUUID->"fe60e475-2ded-4d13-9b9e-de86814a06db"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1921447, 37624, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"458a22cf-5a18-417c-8663-ef57c8aef700",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1921594, 37630, 351, 5, 44, "Subsection",ExpressionUUID->"a93d9781-e8a4-4a86-8cee-0f0da5c8e745"],
Cell[1921948, 37637, 438, 8, 28, "Input",ExpressionUUID->"95705978-546e-4291-9fa3-51b1a44869ce"],
Cell[CellGroupData[{
Cell[1922411, 37649, 507, 10, 28, "Input",ExpressionUUID->"96f84620-c1ab-4fb6-a781-48dad889a671"],
Cell[1922921, 37661, 319, 7, 28, "Output",ExpressionUUID->"127e2a40-662d-4780-971f-d9b00f11647f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1923277, 37673, 374, 8, 28, "Input",ExpressionUUID->"04062579-8ee9-4603-b78b-4ddb905f49cc"],
Cell[1923654, 37683, 6657, 179, 283, "Output",ExpressionUUID->"63ffee15-dcd6-4cb8-a8ae-17eef2021788"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1930372, 37869, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"ba698b77-f7c2-49da-9f91-9cfabe0b82f3",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1930519, 37875, 456, 7, 44, "Subsection",ExpressionUUID->"01bab4a1-270f-4ca0-acb7-82125f9e8c21"],
Cell[1930978, 37884, 372, 9, 28, "Input",ExpressionUUID->"0230e10e-c0d4-4ee2-beac-9862ca749a6b"],
Cell[CellGroupData[{
Cell[1931375, 37897, 158, 3, 28, "Input",ExpressionUUID->"29409bdd-fbe9-47ee-bf9c-f5de2877fc64"],
Cell[1931536, 37902, 173, 3, 28, "Output",ExpressionUUID->"c07f72e5-96ac-4708-aebd-cdcc7d7da0a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1931746, 37910, 176, 3, 33, "Subsubsection",ExpressionUUID->"d7882a01-5ca5-408b-8446-a116301afb0c"],
Cell[1931925, 37915, 368, 9, 28, "Input",ExpressionUUID->"8d3559dc-dc5a-487c-9c63-bfab43fa0425"],
Cell[CellGroupData[{
Cell[1932318, 37928, 545, 13, 28, "Input",ExpressionUUID->"cbd60832-083c-4193-b359-ea7bd92914bc"],
Cell[1932866, 37943, 299, 6, 37, "Output",ExpressionUUID->"795902b3-9b93-4311-bdc7-bc0c3a7cd715"]
}, Open  ]],
Cell[1933180, 37952, 196, 3, 34, "Item",ExpressionUUID->"795df6b2-4dba-415d-9eb3-68faf2919eae"],
Cell[1933379, 37957, 225, 4, 34, "Item",ExpressionUUID->"e521ce67-abd9-40c3-a012-0e2a9d775b58"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1933665, 37968, 122, 2, 61, "SlideShowNavigationBar",ExpressionUUID->"07cf68c6-c952-4b6b-a3c8-cef06dcb8c10",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1933812, 37974, 208, 4, 64, "Section",ExpressionUUID->"ec30d915-d1a7-4dad-ba6e-b7c6bcef2ec3"],
Cell[CellGroupData[{
Cell[1934045, 37982, 364, 5, 44, "Subsection",ExpressionUUID->"901c2722-21a0-4399-a083-00907c0c1b9e"],
Cell[1934412, 37989, 444, 7, 34, "Item",ExpressionUUID->"909193e6-60d8-42df-9787-9ac0206cd14f"],
Cell[1934859, 37998, 464, 7, 34, "Item",ExpressionUUID->"b2b6a70a-b8f9-428d-a397-a69e9ab37732"],
Cell[CellGroupData[{
Cell[1935348, 38009, 500, 8, 34, "Item",ExpressionUUID->"532fd0eb-42ba-470e-9ca8-c8736f557f9a"],
Cell[1935851, 38019, 542, 11, 31, "Subitem",ExpressionUUID->"42b8708a-1aab-4969-b127-1a7a6ce5ec92"],
Cell[1936396, 38032, 570, 12, 31, "Subitem",ExpressionUUID->"9b1be8bf-5dc7-4e5d-9d09-9a7ed64638a7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1937015, 38050, 195, 3, 44, "Subsection",ExpressionUUID->"e854b76d-4505-4fa1-90a6-2fc823e0d88f"],
Cell[1937213, 38055, 718, 17, 60, "Item",ExpressionUUID->"7aa77e65-023a-44ce-92d9-5ca8d0d2f3c1"],
Cell[1937934, 38074, 190, 3, 34, "Item",ExpressionUUID->"a4dbbfa2-4ff0-44d0-8b1e-69845ac8c736"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1938161, 38082, 213, 4, 44, "Subsection",ExpressionUUID->"3f3028b3-9814-4797-9d9c-fe7a1debe757"],
Cell[1938377, 38088, 405, 12, 34, "Item",ExpressionUUID->"4e3cc61d-8ae8-4f23-ab1f-ba403ecf6ef8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

