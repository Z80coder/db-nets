(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1410902,      27785]
NotebookOptionsPosition[   1399650,      27609]
NotebookOutlinePosition[   1400112,      27627]
CellTagsIndexPosition[   1400069,      27624]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Logic Networks for  \[Delta]QL", "Title",
 CellChangeTimes->{{3.864793590384657*^9, 3.864793591864854*^9}, {
  3.86842606656143*^9, 3.8684260746987667`*^9}, {3.8702277849671593`*^9, 
  3.870227791549492*^9}, {3.8702278401258373`*^9, 3.870227857653405*^9}, {
  3.870228612084*^9, 3.870228616445198*^9}, {3.874984276630209*^9, 
  3.874984282651875*^9}, {3.874986802451516*^9, 
  3.8749868080548773`*^9}},ExpressionUUID->"f846cc42-aa02-4854-b58f-\
d6a00f3f9f87"],

Cell[CellGroupData[{

Cell["Utilities", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.8703155021345863`*^9, 
  3.87031551041442*^9}},ExpressionUUID->"5f3c722a-5b07-470f-a683-\
0797441c8c07"],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"\"\<neural-logic.m\>\"", ",", 
   RowBox[{"Path", "->", 
    RowBox[{"SetDirectory", "[", 
     RowBox[{
      RowBox[{"ParentDirectory", "[", 
       RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "<>", 
      "\"\</prototype\>\""}], "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.868007248648005*^9, {3.8680967888160133`*^9, 3.868096789366823*^9}, {
   3.8683400413446283`*^9, 3.86834004226679*^9}, {3.868341129383319*^9, 
   3.868341129948553*^9}, {3.868434777777341*^9, 3.868434779191018*^9}, {
   3.868604559041458*^9, 3.868604559653843*^9}, {3.868937073460001*^9, 
   3.868937074141531*^9}, {3.869042727278556*^9, 3.869042728153739*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
   "ResourceData", "[", "\"\<663653b1-6151-48ad-b693-3ee813b191c6\>\"", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8684261284499598`*^9, 3.8684261339874697`*^9}, {
   3.868426165551331*^9, 3.868426166147992*^9}, {3.868443501655848*^9, 
   3.868443511617087*^9}, {3.868445089535833*^9, 3.8684450898384523`*^9}, 
   3.8684475343091707`*^9, 3.874986281785008*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],

Cell[CellGroupData[{

Cell["Feature encoders", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 
  3.870229155458066*^9}},ExpressionUUID->"f72c241a-1149-4a03-acba-\
ddb61b56d0cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Encoders", "[", "data_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"features", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "@", 
         RowBox[{"First", "[", "data", "]"}]}], "]"}]}], ",", 
      "featureValues"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"featureValues", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{"Normal", "[", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"data", "[", 
             RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@",
        "features"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"First", "[", "#", "]"}], "->", 
         RowBox[{"NetEncoder", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<Class\>\"", ",", 
            RowBox[{"Last", "[", "#", "]"}], ",", "\"\<IndicatorVector\>\""}],
            "}"}], "]"}]}], "&"}], "/@", "featureValues"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"encoders", "=", 
   RowBox[{"Encoders", "[", "trainData", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inputSize", "=", 
   RowBox[{"Total", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"First", "[", 
       RowBox[{"#", "[", "\"\<Output\>\"", "]"}], "]"}], "&"}], "/@", 
     RowBox[{"Normal", "/@", 
      RowBox[{"Values", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"encoders", ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classes", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"DeleteDuplicates", "[", 
     RowBox[{"data", "[", 
      RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.868426687511053*^9, 3.868426801572831*^9}, {
   3.8684269173036003`*^9, 3.8684269578937387`*^9}, {3.8684269966730623`*^9, 
   3.868427061846773*^9}, {3.868427135120562*^9, 3.868427173055786*^9}, {
   3.868427218784813*^9, 3.868427313389267*^9}, {3.868427822986774*^9, 
   3.8684278511841917`*^9}, {3.8684280835200367`*^9, 3.868428089883707*^9}, {
   3.868428156521447*^9, 3.8684281614416733`*^9}, {3.8684281955955667`*^9, 
   3.868428284555341*^9}, 3.868434324643379*^9, {3.868434449433856*^9, 
   3.8684344506731787`*^9}, {3.868437882742872*^9, 3.8684378847594643`*^9}, {
   3.868443521427595*^9, 3.86844353043198*^9}, {3.868445371253304*^9, 
   3.868445422686679*^9}, {3.868682465592621*^9, 3.868682467103612*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"featureLayer", "=", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"\[LeftAssociation]", 
      RowBox[{"\"\<Catenate\>\"", "->", 
       RowBox[{"CatenateLayer", "[", "]"}]}], "\[RightAssociation]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"NetPort", "[", 
          RowBox[{"First", "[", "#", "]"}], "]"}], "->", "\"\<Catenate\>\""}],
         "&"}], ",", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"Sequence", "@@", 
      RowBox[{"Normal", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"Normal", "[", "encoders", "]"}], ",", 
         RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.868511402960554*^9, 3.868511420437525*^9}, {
   3.8685114920935707`*^9, 3.86851156446668*^9}, 3.868511640913454*^9, {
   3.8686824585003*^9, 3.86868246003918*^9}, {3.870169840877633*^9, 
   3.870169867024181*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Define neural logic net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229155458066*^9}, {
  3.870229223868904*^9, 
  3.870229226109354*^9}},ExpressionUUID->"7c05c242-1747-4740-86f8-\
9b6f56cec517"],

Cell[BoxData[
 RowBox[{
  RowBox[{"NeuralLogicNet", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"softNet", ",", "hardNet", ",", "net", ",", "trainableNet"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
      RowBox[{"HardNeuralChain", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"HardNeuralOR", "[", 
          RowBox[{"inputSize", ",", "64"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"HardNeuralNOT", "[", 
          RowBox[{"64", ",", 
           RowBox[{"Length", "[", "classes", "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"net", "=", 
      RowBox[{"NetGraph", "[", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<FeatureLayer\>\"", "->", "featureLayer"}], ",", 
          RowBox[{"\"\<SoftNet\>\"", "->", "softNet"}]}], 
         "\[RightAssociation]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<FeatureLayer\>\"", "->", "\"\<SoftNet\>\""}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"trainableNet", "=", 
      RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[LeftAssociation]", 
         RowBox[{
          RowBox[{"\"\<Net\>\"", "->", "net"}], ",", 
          RowBox[{"\"\<Loss\>\"", "->", 
           RowBox[{"HardClassificationLoss", "[", "]"}]}]}], 
         "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"NetPort", "[", "\"\<Acceptability\>\"", "]"}], "->", 
           RowBox[{"NetPort", "[", 
            RowBox[{"\"\<Loss\>\"", ",", "\"\<Target\>\""}], "]"}]}], ",", 
          RowBox[{"\"\<Net\>\"", "->", "\"\<Loss\>\""}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"\"\<Acceptability\>\"", "->", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"trainableNet", ",", "hardNet"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.870316148536023*^9, 3.870316177877225*^9}, {
  3.870316242397109*^9, 3.870316276263557*^9}, {3.8703163134641523`*^9, 
  3.870316346416483*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"f6750e7f-a063-4c4f-888f-5be83e682770"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Train neural logic net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229168220998*^9}, {
  3.870315719181529*^9, 3.8703157206453257`*^9}, {3.870316379099872*^9, 
  3.8703163810083933`*^9}},ExpressionUUID->"a8b3252c-540b-4f9d-b22d-\
df59ae9d30be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrainNeuralLogicNet", "[", 
   RowBox[{"net_", ",", "trainData_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "trainData", ",", "All", ",", "\[IndentingNewLine]", 
    RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"LossFunction", "->", "\"\<Loss\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"TrainingStoppingCriterion", "->", 
     RowBox[{"Function", "[", 
      RowBox[{"#ValidationLoss", "<", "0.02"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Method", "->", 
     RowBox[{"{", "\"\<ADAM\>\"", "}"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TargetDevice", "->", "\"\<GPU\>\""}], ",", "\[IndentingNewLine]", 
    RowBox[{"WorkingPrecision", "->", "\"\<Real64\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "Infinity"}]}], "]"}]}]], "Input",\

 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}, {3.86912172241117*^9, 
   3.8691217224768143`*^9}, {3.869651243457945*^9, 3.8696512443590508`*^9}, {
   3.869652345237102*^9, 3.8696523460650587`*^9}, {3.870176213162601*^9, 
   3.870176232203189*^9}, {3.870233790438415*^9, 3.8702337978709087`*^9}, {
   3.870235358600091*^9, 3.870235363421095*^9}, 3.870235431774667*^9, 
   3.870235695013812*^9, {3.870235881306831*^9, 3.87023588141299*^9}, {
   3.870235916262095*^9, 3.870235920686771*^9}, {3.870236438934493*^9, 
   3.870236439037176*^9}, {3.870243617635653*^9, 3.870243617791752*^9}, {
   3.870250244952783*^9, 3.870250248200946*^9}, {3.870250344774638*^9, 
   3.870250344930841*^9}, {3.870316390958275*^9, 3.870316415069676*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"d716c9c0-e25b-49fc-8778-6b0e6c9888bc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrainedNeuralLogicNet", "[", "result_", "]"}], ":=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\"\<TrainedNet\>\"", "->", 
      RowBox[{"NetDelete", "[", 
       RowBox[{
        RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
        "\"\<Loss\>\""}], "]"}]}], "\[RightAssociation]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.8703221356095753`*^9, 3.87032213864957*^9}, {
  3.8703225168620043`*^9, 3.870322517932423*^9}, {3.8703227373279047`*^9, 
  3.870322738357666*^9}, {3.870322791840272*^9, 3.870322805116704*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"0157c297-7579-4c36-a2ea-5d4df0024196"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate neural logic net", "Subsection",
 CellChangeTimes->{{3.870229153581394*^9, 3.870229168220998*^9}, {
  3.870315719181529*^9, 3.8703157206453257`*^9}, {3.870315891997168*^9, 
  3.8703158928212757`*^9}, {3.870316491772222*^9, 
  3.8703164930441008`*^9}},ExpressionUUID->"2cfca464-a6ee-4f84-87bd-\
c33f3d393bed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EvaluateNeuralLogicNet", "[", 
   RowBox[{"hardNetFunction_", ",", "testData_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"predictions", ",", "eval"}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"predictions", "=", 
      RowBox[{"HardNetClassify", "[", 
       RowBox[{"hardNetFunction", ",", "testData", ",", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}], ",", 
        
        RowBox[{
         RowBox[{"featureLayer", "[", 
          RowBox[{"KeyDrop", "[", 
           RowBox[{"#", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], "&"}], 
        ",", 
        RowBox[{
         RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}], "&"}]}], "]"}]}], 
     ";", 
     RowBox[{"eval", "=", 
      RowBox[{"HardNetClassifyEvaluation", "[", "predictions", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"predictions", ",", "eval"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.870316527012061*^9, 3.870316567396411*^9}, {
  3.8703165999968977`*^9, 3.870316643565425*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"97dae8b9-699f-460c-9d4d-9c4fe4b770c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetNeuralLogicWeights", "[", "trainedNeuralLogicNet_", "]"}], ":=", 
  RowBox[{"Harden", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{"ExtractWeights", "[", "trainedNeuralLogicNet", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8703167115430202`*^9, 3.870316778623686*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"90a2ce41-ec16-4f6e-bb59-22c60344c976"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["What is \[Delta]QL?", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.8703155021345863`*^9, 3.87031551041442*^9}, {
  3.874986319799777*^9, 3.874986324967414*^9}, {3.874986771693891*^9, 
  3.8749867751031103`*^9}, {3.874986811926641*^9, 3.87498681480733*^9}, {
  3.8749869864787083`*^9, 
  3.874986987110794*^9}},ExpressionUUID->"44ee7f34-be8d-40a3-97bd-\
bccca135e259"],

Cell["\<\
Just an idea right now. Want to make learnable components a first-class \
citizen of the QL language.
A QL program is a collection of facts and a collection of logical rules with \
conditions and actions.
The facts normally represent properties of source code, and the rules deduce \
whether the code has a security vulnerability.
But the facts and rules can represent anything. For example, here\
\[CloseCurlyQuote]s a very simple QL program.\
\>", "Text",
 CellChangeTimes->{{3.874986992566766*^9, 3.874987013405978*^9}, {
   3.8749872490944242`*^9, 3.874987299022545*^9}, 3.874987517694518*^9, {
   3.874988570070922*^9, 3.874988613727044*^9}, {3.8749887357184973`*^9, 
   3.874988762654867*^9}, {3.874989720135058*^9, 
   3.874989757630818*^9}},ExpressionUUID->"ee66235f-cbea-435d-b390-\
03b65cb5dde2"],

Cell[BoxData[{
 RowBox[{"Class", 
  RowBox[{"(", 
   RowBox[{"\"\<Antelope\>\"", ",", "\"\<Mammal\>\""}], ")"}]}], "\n", 
 RowBox[{"Class", 
  RowBox[{"(", 
   RowBox[{"\"\<Lion\>\"", ",", "\"\<Mammal\>\""}], ")"}]}], "\n", 
 RowBox[{"Diet", 
  RowBox[{"(", 
   RowBox[{"\"\<Antelope\>\"", ",", "\"\<Herbivore\>\""}], ")"}]}], "\n", 
 RowBox[{"Diet", 
  RowBox[{"(", 
   RowBox[{"\"\<Lion\>\"", ",", "\"\<Carnivore\>\""}], ")"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"...", " ", "more", " ", "facts"}], " ", "..."}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Danger", 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<High\>\""}], ")"}]}], " ", ":", 
   RowBox[{
    RowBox[{"-", " ", "Class"}], 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<Mammal\>\""}], ")"}]}]}], ",", " ", 
  RowBox[{"Diet", 
   RowBox[{"(", 
    RowBox[{"X", ",", " ", "\"\<Carnivore\>\""}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Danger", 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<Low\>\""}], ")"}]}], " ", ":", 
   RowBox[{
    RowBox[{"-", " ", "Class"}], 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<Mammal\>\""}], ")"}]}]}], ",", " ", 
  RowBox[{"Diet", 
   RowBox[{"(", 
    RowBox[{"X", ",", " ", "\"\<Herbivore\>\""}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{"...", " ", "more", " ", "rules"}], " ", "..."}]}], "Code",
 CellChangeTimes->{{3.874987095473403*^9, 3.874987209839485*^9}, {
  3.874987538070063*^9, 3.8749875430395317`*^9}, {3.874987626294595*^9, 
  3.8749877375671167`*^9}, {3.874987829550996*^9, 3.8749878332874203`*^9}, {
  3.874987876039207*^9, 3.8749879504948597`*^9}, {3.874988633192004*^9, 
  3.874988674775173*^9}, {3.8749887232876663`*^9, 3.874988726247342*^9}, {
  3.874988784463257*^9, 3.874988959247254*^9}, {3.8749890157603807`*^9, 
  3.874989074823266*^9}, {3.874989515702813*^9, 3.874989524040305*^9}, {
  3.875010839315401*^9, 
  3.875010844008729*^9}},ExpressionUUID->"7e1eb8b3-dd0d-4f36-b4e2-\
78adf2e015ee"],

Cell["\<\
The rules fire when their conditions are met to create new facts.\
\>", "Text",
 CellChangeTimes->{{3.874988769516201*^9, 
  3.8749887773108397`*^9}},ExpressionUUID->"fa5d384c-044d-4395-b35b-\
3eca9c099c47"],

Cell[BoxData[{
 RowBox[{"Danger", 
  RowBox[{"(", 
   RowBox[{"\"\<Anteloope\>\"", ",", " ", "\"\<Low\>\""}], ")"}]}], "\n", 
 RowBox[{"Danger", 
  RowBox[{"(", 
   RowBox[{"\"\<Lion\>\"", ",", " ", "\"\<High\>\""}], ")"}]}]}], "Code",
 CellChangeTimes->{{3.874988970206889*^9, 3.8749889704874763`*^9}, {
  3.874989080078992*^9, 
  3.8749890928791313`*^9}},ExpressionUUID->"f9e1851b-ef02-4274-bf50-\
2163cc7a8101"],

Cell["\<\
A \[Delta]QL program is just a QL program with the addition of learnable \
rules.\
\>", "Text",
 CellChangeTimes->{
  3.874988620452821*^9},ExpressionUUID->"6f2f4b32-4df0-4594-9a04-\
66fb39e206eb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Danger", 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<High\>\""}], ")"}]}], " ", ":", 
   RowBox[{
    RowBox[{"-", " ", "Class"}], 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<Mammal\>\""}], ")"}]}]}], ",", " ", 
  RowBox[{"Diet", 
   RowBox[{"(", 
    RowBox[{"X", ",", " ", "\"\<Carnivore\>\""}], ")"}]}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Danger", 
     RowBox[{"(", 
      RowBox[{"X", ",", " ", "\"\<Low\>\""}], ")"}]}], " ", ":", 
    RowBox[{
     RowBox[{"-", " ", "Class"}], 
     RowBox[{"(", 
      RowBox[{"X", ",", " ", "\"\<Mammal\>\""}], ")"}]}]}], ",", " ", 
   RowBox[{"Diet", 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<Herbivore\>\""}], ")"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"Lifespan", 
   RowBox[{"(", 
    RowBox[{"X", ",", " ", "Y"}], ")"}]}], " ", ":", 
  RowBox[{
   RowBox[{"-", " ", "subsymbolic"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Class", 
      RowBox[{"(", 
       RowBox[{"X", ",", " ", "A"}], ")"}]}], ",", " ", 
     RowBox[{"Diet", 
      RowBox[{"(", 
       RowBox[{"X", ",", " ", "B"}], ")"}]}], ",", " ", 
     RowBox[{"Weight", 
      RowBox[{"(", 
       RowBox[{"X", ",", " ", "C"}], ")"}]}], ",", " ", "..."}], 
    ")"}]}]}]}], "Code",
 CellChangeTimes->{{3.874987095473403*^9, 3.874987209839485*^9}, {
  3.874987538070063*^9, 3.8749875430395317`*^9}, {3.874987626294595*^9, 
  3.8749877375671167`*^9}, {3.874987829550996*^9, 3.8749878332874203`*^9}, {
  3.874987876039207*^9, 3.8749879504948597`*^9}, {3.874989465276786*^9, 
  3.874989471247443*^9}, {3.874989544528503*^9, 3.874989591711503*^9}, {
  3.874989635599361*^9, 3.874989696279231*^9}, {3.87501084822954*^9, 
  3.875010854543951*^9}},ExpressionUUID->"afdfd67b-dfc6-4891-9a06-\
3de07e7901e8"],

Cell["\<\
Learnable rules are \[OpenCurlyDoubleQuote]holes\[CloseCurlyDoubleQuote] that \
can appear anywhere in the QL program, which can be filled in from data by \
learning.\
\>", "Text",
 CellChangeTimes->{{3.874986992566766*^9, 3.874987013405978*^9}, {
  3.874987244638541*^9, 
  3.8749872710946293`*^9}},ExpressionUUID->"1efabde9-eef0-4da1-9773-\
e76d5683b0f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Why \[Delta]QL?", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.8703155021345863`*^9, 3.87031551041442*^9}, {
  3.874986319799777*^9, 3.874986324967414*^9}, {3.874986771693891*^9, 
  3.8749867751031103`*^9}, {3.874986811926641*^9, 
  3.87498681480733*^9}},ExpressionUUID->"fafce9a4-5484-477e-b8f8-\
b0432c640e7e"],

Cell["\<\
- Uniform framework for integrating NN models into QL (e.g. build on success \
of ATM, but try to avoid complexities and challenges)
- Data-driven rules for static code analysis (replace hand-coded heuristics \
with data-driven, learnt heuristics). Compete with Snyk, and future-proofing.
- Distilling neural knowledge (e.g. codex) into specialised code-analysis \
rules (which interact with existing hand-coded knowledge)
- Support future experimentation with QL code synthesis\
\>", "Text",
 CellChangeTimes->{{3.87498798286224*^9, 
  3.874988208254122*^9}},ExpressionUUID->"b587d4fc-24d0-466d-b175-\
add0367e8438"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Challenges to building \[Delta]QL", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.8703155021345863`*^9, 3.87031551041442*^9}, {
  3.874986319799777*^9, 3.874986324967414*^9}, {3.874986771693891*^9, 
  3.8749868197106457`*^9}},ExpressionUUID->"d41d36bd-b10c-4e23-8a27-\
3e5f40d34098"],

Cell["\<\
There are lots of challenges! In this talk I\[CloseCurlyQuote]m going to \
focus on just one of them. Solving this problem is necessary, but not \
sufficient, for \[Delta]QL.\
\>", "Text",
 CellChangeTimes->{{3.874989863942313*^9, 
  3.874989888110776*^9}},ExpressionUUID->"f6512788-9b46-4ed1-ba42-\
b506771f8715"],

Cell["\<\
Learnable rules can be implemented as neural networks. And, as everyone \
knows, they learn from data by backpropagation.\
\>", "Text",
 CellChangeTimes->{{3.8749906648858137`*^9, 3.8749906937659187`*^9}, {
  3.874990960661894*^9, 
  3.8749909652377977`*^9}},ExpressionUUID->"5f2c8098-0705-4920-aa90-\
41d8be537866"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3ceSK0t+2OGWtNFSr6C30LK11JYKPQAZohjaUBGkIhRanZ4Zeu+9G3rv
vcMdeu+9HXrvvYWgU9EZ2ZlZfyRwkChU4fsWN85FF4BCAl35q0IB/R/f63+9
x//4tw8PD+//7w//eY/3/D//+f3e7z3/73/9D4f/+W/v+/7/833e973/+395
3//93u/z3u/3n97r3x0u/OJ/8/DwGYd//P9/7wEAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICV2L229FoA
AMCZHh8fH1579erV0uvS67C2h9Veei0AALgJh46danZdh2o1LQAAyXSQdum1
OJmmBQAgeXxt6bU4maYFAGCy2+2mOHz1Wn754X+ny4sTEqYfTf9ICxQn4h69
JL/9YpXSPU7LpHsvrhKkeH4Lzbsobq1eIF2xfhRzVwEAYCkPL00XTmfYTtFY
f3YsnX+blpnCOE/f6VrFJelGppvNb79eMi2T32lxrbmmLVavvot4BYqfptWu
b/OkoQYAYJzigOcUqHXEpupLeVmEaLqRdOw3P8RaxGHxo3wFmt/AUNxjysvm
I4pXr1iB4qep2Js3Wxxqbt47AADXVzTtFHXFMkerL7+R6ShrcUlwVLNYgfoQ
aPMejx6nLe6iqNz6p9O/62POPfcIAMCy6qSsyy2vvuKwbX5h+vd0IDRd0jz3
dTo3tX4fv16Bx9Y3M5zUtM1STStQ3H46UNx8jE6mBQC4QRdp2jwam/+oT2ZI
5+LWSTmoaZtnxtYrsM/OryjKNp3oO3d+AgAAiyiatnlM9WjT7p8jsz48Wxwj
rU8kuELT5ndar8DcqRGpbIvLp+9MCE5mAADgyuqmrWutPshZ59x0O9ORzOKS
PAvrgDzatM17PKNp51YgON03Pr3WoVoAgBtRNG39RQTFgc25ps2/6ja/pDgB
tWjm+lhoHatzqxQ0bb3Cc+tfrECxtkUMz40JAADLqk82SJnXPHc0btqH1hfV
Fl+Bld948yNadawWq5Q+29V8RPmap2s1V6A+kpzf0WP2/bTFtYKiBpb17ne/
+13vetfSawHAte1eqy9PX1/QzNfOmzp64/UNzl0lvlYuP3W2/vqCnpt69azz
cuB2HJr2He94h6wFYO2cFQD3bGpaWQvA2mlauGepaWUtAKumaeGe5U0rawFY
L+e7wj0rmlbWAgCwOnXTyloAANal2bQHb7311tKrBgAAXeaa9u1vf7usBQBg
FYKmlbUAAKxC3LSy9s7964x/6fPPoX/q8499/qHP34f+rsPfhv6mz1/3+as+
fxn6iz5/3uHPuv1pnz/p8Md9/ij0h33+oM/v9/m9eb/b4XeO+e0+v9XnN/v8
RujdfX79RL8W+tU+v9Lhl/v8UugX+/xCn58P/VyHn+3wM8f8dJ+f6vOTfX4i
9OMn+rE+Pxr6kT4/3OGHOvzgMT/Q5/tD39fnezt8T4fvPua7+ryr5Z3vfGfc
tLL2ns0VbGegxuXZmZSd3dgZhHHy9VRcHGadrdVZU52ZFOdQZ+T01Et/nHSG
R09UdDZDHAOdE33nVN45RwezcM9MenSu7JwBOye4ziksnqE65523KrvQd1a+
I/PtlW9r+dbKt1S+ufJNLd9Y+YbM11e+ruVrK1/T8tWVr8p8ZeUrKl9e+bLK
l7Z8SeaLK1/U8oWVL2j5/MrntXxu5Z2Zz6l8duizKp/Z8hmVT898WuVTWz6l
8smVT6p8YuUTWj4+83GVj235mMpHZz6q8pEtH1H58MqHVT608iEtH5z5oMoH
tnxApVmzddPK2rulaTWtptW0mlbTalpNu6WmlbX3SdNqWk2raTWtptW0mnZj
TStr75Cm1bSaVtNqWk2raTXt9ppW1t4bTatpNa2m1bSaVtNq2k02ray9K5pW
02paTatpNa2m1bRbbdq3ve1tsvZOaFpNq2k1rabVtJpW0264aWXtndC0mlbT
alpNq2k1rabddtPK2nugaTWtptW0mlbTalpNu/mmlbWbp2k1rabVtJpW02pa
TXsPTStrt03TalpNq2k1rabVtJr2TppW1m6YptW0mlbTalpNq2k17f007cFh
Flu6v7g8TatpNa2m1bSaVtNq2vtp2sOra+n4YghNq2k1rabVtJpW02raO2la
QbthmlbTalpNq2k1rabVtPfQtIJ22zStptW0mlbTalpNq2k337SCdvM0rabV
tJpW02paTatpt920gvYeaFpNq2k1rabVtJpW0264aQXtndC0mlbTalpNq2k1
rabdatMK2vuhaTWtptW0mlbTalpNu8mmFbR3RdNqWk2raTWtptW0mnZ7TSto
742m1bSaVtNqWk2raTXtxppW0N4hTatpNa2m1bSaVtNq2i01raC9T/86o67c
pjp9j2ZwTxg3/UOfOqSPRvXRxj7a2z0F3tTM8p5Qn4v2QN3zPYU/py7/pj/p
UO8mNDX3HYKdiKbmnkXPvkZTcwdkbjck3jFpqvdWmpq7MD07NU31nk6819M0
tyvUv4t0dHepZweqZ5eqqd7POrrP1bMX1vTzoXpnrXP37ejeXM/OXc/uXlNz
H7Bnr7C5h9ip3pFsqvcuj+5pxvuec+p90s691HiPtam5GxvszzY1d3KP7vPG
e8FN9a5xU3N/+eBo0wpaAABu2WGXOW5aQQsAwI2Lm1bQAgBw+4KmFbQAAKzC
XNMKWgAA1qLZtIIWAIAVqZtW0AIAsC5F0wpaAABWJ29aQQsAwBqlphW0AACs
1NS0ghYAgPU6NK2gBQBg1Q5Nu/QqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAADcqFevXj0wzG63W/oZvlFeeABXYBqaYxoaapEX3uPj49KP
e8sOvzLXf05XwcYE4Ao07Rz9M9Qi/TM9p17zF/f09LTUc7oKU9MeRmnpFQHY
JvN7zPgMsmD/eE4H0bQxTQswlPk9ZnwG0bTbo2ljmhZgKPN7zPgMomm3R9PG
NC3AUOb3mPEZRNNuj6aNaVqAoczvMeMziKbdHk0b07QAQ5nfY8ZnEE27PZo2
pmkBhjK/x4zPIJp2ezRtTNMCDGV+jxmfQTTt9mjamKYFGMr8HjM+g2ja7dG0
MU0LMJT5PWZ8BtG026NpY5oWYCjze8z4DKJpt0fTxjQtwFDm95jxGUTTbo+m
jWlagKHM7zHjM4im3R5NG9O0AEOZ32PGZxBNuz2aNqZpAYYyv8eMzyCadns0
bUzTAgxlfo8Zn0E07fZo2pimBRjK/B4zPoNo2u3RtDFNCzCU+T1mfAbRtNuj
aWOaFmAo83vM+AyiabdH08Y0LcBQ5veY8RlE026Ppo1pWoChzO8x4zOIpt0e
TRvTtABDmd9jxmcQTbs9mjamaQGGMr/HjM8gmnZ7NG1M0wIMZX6PGZ9BNO32
aNqYpgUYyvweMz6DaNrt0bQxTQswlPk9ZnwG0bTbo2ljmpZ+u9eWXgtYGfN7
zPgMomm3R9PGNC09Dq+QwzbqsIF6fG3ZlTmsgFcsK2J+jxmfQTTt9mjamKbl
qOmXaPr3tKUafY+HLeHDa0+v5RvG9KPR69DjsDLTGk6rZANOk/k9ZnwG0bTb
o2ljmpajrv8KmcJ17k6njLzm+hw1bWdswGkyv8eMzyD307T3swXWtDFNS2z6
Dbqppl1cceh4f09bVM6g2WLGZ5D7adrp7q48ZdQTwXXudKtNexjMV6+9yY1o
WmL5iQdXc8tN2xwQTUtgw8326tmb3Mjtj8+IbdF05tLFbzZ3P027fz2eV7uv
/fMkpWkv6+HZ4fVz3oZF0zJn+paDdKbo9Ms7/aN5oLI46zW/ZPpwWfNllm4w
P6Og2bS7Z9On1frvq1jntECwTPNxTVecft0cp6Xf7Tfb2dImIk1DZzzMGx+f
Qfv10wdvL36zxV3cT9NemaYdYSrSwkkbFk1LU/7pp7wAp+1w8ZrJz0+Yrji9
FKdLpq9KSG2c30v6OoXpf9MCc02bbrm+JLiv1KLpE2f1p7o6H1dq2qJ+NS2B
bc/v6Tfu7GnoxsdnUNNe4Ttk7qdpix2ENGGlF2e9xZ4uCRYonp38kjTRTP+4
ZkFtu2nzfeSmoxsWTUugeTJt/dUHeWcWy6QNRX2tYqbIO3bu3IPm5T33VW9g
0xbppMc1166alsCNN9sbOjoNHX0PcfT45OlSb0CKt2z2ffUy7Yyn/dzmdql4
ROmSfH2mmx302O+qafNt9WMmHcSot/YPz2+6FUdL9vOTSLq7ueMbo227afcz
+8j9GxZNS6CZasXGod5cpGXyX/Zii9Gs5fzIavNl2bzW0ftqXlKvdufjemgd
sdG0BLbdtPvsLLjzpqGh47PLTqBK7z3l25D6eGmzXtKRvfwhpyKqb7a5parf
9Clu9rLuuWnrZ7leoDiHLb8kbtr9ctv8NDG92qj+pm1uWF5pWubNHVyde4M+
vyS/sG7UaYG5+51r2rn1ie+reWvFavc8rrm12mtaQtPrdsl5YrAz5qDH7DMg
Q/unqJ367uKmbd7CvpWsxbXqBR6OtfTF3XnT1gsEybp/eVjjxpuWOfXuDCQP
1YHK4he5Tsp9Rx82D7fm5upxuq96fU6690nxyj/vcc0NC+TOO/JwJ9LgDPr1
eWi9H5RfeKmmLQ701Qs8aNph7q1pHacttiG71/aO0zIvPnk1LVP/7k8vs6Pv
+5zatM2kPHpfzUv2VR73PK7m1Jb/SNPSlE69W3q6GOUNp6Fx/RPsHT++PGO2
fr7S/57UtOnC5sZK0w5yb027yHN6Hf0bkMfWieivNC0z5hoy/dZPP3qYOZk2
uOTo5u6kpj313ps3dd7jKm5Q09J05fn9+vqnoVetzyxr2kE0bbHA0abNj94/
aNqr6/neg7Qv3KRpmVNvyfMUfHqWLpleZnUu7l5+ocF+ZnOXv1CbM9H0ks6X
7LmveJn+xxWcTLvXtIS23bSvwvNp5w6n5EY3bZGOg849KDYCmnZdTVvMFHPv
P6b/LU41uZptN21zY3K0Y+tb0LTUil/hffZbP9lnG4r0Epor4d3Lv3pQTDTp
BidzTfv4/Cnj/vsqtlTxEeCjj6tYz/p+g/Hkbt1h0540DQ0dn1PrJR0pKpYv
Vq9O5eJa9SZO045zXtM+Pn9hTn06XJopppdxemEXC5z0Or+IbTdtvgE5ui/c
pGmZU78w0q92kYiPL/9uQrExqZfZZx/Cemx9v1+zPOvNTs99pWs9vf7ynOav
Sc/jeno+M7/5W6ZpCWy4afPpfu7UgqOGjk/6XZ6rl1SbqV6alZsWmC5MW4y5
m02XTD+dzC0w4oHvNW21QD0v5K/e5m3m4dq8zXoaGmrDTTudmf+G+wialqb6
qMKcnpff3DJzr965N/rPuK+0sTr116SZvnMLa1oC227a8w6n5EaPzy77Uv3m
hqWol7k3gPJ6SUGb75sXd1r0Ur3M48zfa7iU+2naU+XRG6/k0Ydw5ce44aa9
CE1LU71Vv6a5pj1Vf5lf5I5udgPOsm58fl/c1cbngvXy8PJtnTdbr1E07Zzm
Z8RWQdPGNC1Ny74qdq1PdpxB03ILbnx+X9wax2cV86amnaNpt0rTUpv7JNTV
7J7/3GQ6Xe282xl9plOxnuPuiFW78fl9cWscn1XMm5p2jqbdKk1LbRuvh/xD
YTe7aeUe3Pj8vrg1js8q5k1Nuz2aNqZpAYYyv8eMzyCadns0bUzTAgxlfo8Z
n0E07fZo2pimBRjK/B4zPoNo2u3RtDFNCzCU+T1mfAbRtNujaWOaFmAo83vM
+AyiabdH08Y0LcBQ5veY8RlE026Ppo1pWoChzO8x4zOIpt0eTRvTtABDmd9j
xmcQTbs9mjamaQGGMr/HjM8gmnZ7NG1M0wIMZX6PGZ9BNO32aNqYpgUYyvwe
Mz6DaNrt0bQxTQswlPk9ZnwG0bTbo2ljmhZgKPN7zPgMomm3R9PGNC3AUOb3
mPEZRNNuj6aNaVqAoczvMeMziKbdHk0b07QAQ5nfY8ZnEE27PZo2pmkBhjK/
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
1MoXyzdQT9n5CfUy06A11/np+esU9tVJDs2mTatU1Gnno5vua3o4xQf208AW
MZavdj1K+xPVj7H5FMRjmz8pabHdy0OmRffmI7DPXpzBHTWnoWKZ5nO617Qh
83vM+AyiabdH08Y0baz4xUwVkf+qpmWmy/Pw2FVv1Na/6T3LzJXww8v0zWMj
X9VU4PWN1Jc076sumeCSND71Mk8v30Av7mvuOG2RhZ2Pbvd8wDm/sOi6+lpz
D/+835F6zetLesa2Hpk6L+uvhkiPLt9hOWlNimU07XnM7zHjM4im3R5NG9O0
gTpvguBpjmG9cB0nPQFZ328dY3OrWkTv0Yczl0/xFfN8OrpKxY0Hd310QE59
dEXT9lyreTs9mlcsLuyP6ubn+Oor1v3cPBO4J917XnXBGpKY32PGZxBNuz2a
NqZpA/3B0xzDp5cHTifF1N+TFvuOQ3n5O9rpkuaq9qzh0aKuH3I9DsW1esqw
2bTNjup/dMVGtWja5i5Gzyj1qG9q3zEsc2PbHIGeo6xzCdr5LPffoKadY36P
GZ9BNO32aNqYpg00j4UePVwWXN6TeT0Hx9Iy06kOzY8O1WlUr3wdLc2ALKIu
5Wu82kVSnt20c9l/NMDmHl1+4UNrF+PoKPWYe7zFpn5ubOPTFeZu5+goBQv3
PF9B3mvagPk9ZnwG0bTbo2ljmjb29PyBplSPxQIXz4a66+rF8k8DNTcaPWEc
5GszjYpljgZkXY9HN3HNpu0ZkPMeXfOE5J7b6TH3eJvDUqzh0bFNCz89f2FF
vZLxua/15fGKpQvnwlXTBszvMeMziKbdHk0b07Sx9MmvuXrsz4Y6V+rsCQ6B
1jcebC7mjprGl+xbhwTr8Dvvc1VzA5VrNm0dS2c/umZA5rsYnbfTo/l4j0Z1
5+f48hXu36/J7zQe0p5l6seraeeY32PGZxBNuz2aNqZpY/FMHczyc2k63dpu
5msB8tNE09YgLfb08vsEis1F3jZzt5wvVl+yP3ZQ9OlZsZJxCsbr3FzJ4HZO
fXTFTeX3mC8z3UW6JA11c5TSyge/OM2mDUapZ2zr3Z9gBebmlLpX055U0LRp
mblJStMGzO8x4zOIpt0eTRvTtIH07u3cENWZlBR1mh+CmzSXSaGSlkl1kRdU
OvcgX5O5o3+TIqfTJUWY1VdMj7FY7X0YmU/Px5bzg5B10RX3FYToU/ZXLfof
XX07zWvlOwvFmDRHKX/UcyFXb9Lr7x/oGdu0TLHyKTLnXpzNqN5nr+rUzOmF
t3v5xWjFMnnwN+9O084xv8eMzyCadns0bUzTBvLpvhkPc9mwb/VwuqSIzzyN
gmWa+TddsfiMWPMIXhFgzZtt5mK6o7qo84BsXqu5YtMKP7X+XlXdtEVcnfHo
djMnQufXKuK8iPw4GoPt9tSBT8/fDTv3eOOxrfdf0uXBi7M5SsVP6xdnfr/1
Ms3nNB8NTTvH/B4zPoNsu2lv8AVTH7i4OE0b07RziqOIT8fee20qDq81r9u5
zNwV+9enfuu8eeiv59577vSMdW6eT9v5AOt47hmfow8tvoVd9pdng2XiWzjj
kofW0ezmcxev2NH7PbpMvkqado5mixmfSf3W1Zvf4Fabdtc6539xV1ilSz2n
J8XDimjaprm62/ZYXXyLeqpm0y54O0ftwlNqB2k+TdMWfsFt1A3OL7fjIvP7
VuegvaZ9NveO0tm23bSLT1i1G2/aw6AdrpjeH7z0qt0ETdv09PKviCbbG6vd
y3NHt9G01+mrRYJ2P/P21tS011+Z/N417Zw3md93zyfPbPgNx1tr2qV+mzTt
2t1g0077wqljk61uTDRt027m2023N1Bpf+0WHt3TS2ffyHVe0kttrps7XFc4
j2tuZZJ7m7/6nTq/39s0dGv9M/c+3Wia9iRzZ0YFh3Cn36yn7Ps582vlV6+v
MreBzX96O02b7ws3DV3JBWnaOdMLdUqFuc80bcD06JYqoovbPX86bDOPqCm9
Jidzn9viRvTM73Mdew/T0Ij+yeul+aO5S6ZrPbROyB9dRJr2JA/Vh6mL36Bi
MJ+yDynXyxRXzx/F3A3Wd3fxZ7AWPKe7l6cWBDb8npqmBRgqmN+PHk5JtnqQ
dj+gf56yb+2oZ/A6PPKznuZm/2YR5dea0nS6cJd9u3WueIz1Apq230PVtPmh
jLRjkv/v3E/3z4dYi+MDj9VXwRRXqe/iyk3bsy9c2/DGRNMCDFXM7+dNQxs+
FH/Z/mnWS14acdPuZ849qAuqzpvH6tsLg+B5zL6fvLnAm7u3pi1Kph7e4qf5
aE/P4NF7LPZx6nu8TtOmY8InbUPuh6YFGOTx+RNepqHApfpnurX8kuII2xlN
Wx+jK26kvtNafpVmETn34CQPHU1bDPjc1ev/zaUTSPIbLF4z9T0Oklaj8zSD
+6RpAQZ5fP5zFdP7YjRdpH+abbN/GRtnNG19YLZu2rmYyYso3WzzULCmPcnD
KU1bLFDvUzRfNun9lMfnT9bcSNPmz+mr167/u3abnHtwklt4JdQfcACviltW
z++modwF+2do0wYF1YyZuogeXn74qFhe057kpKbdZ7uWxVkf9a1N6u69zabN
dW5YRq/kgjRtj3ove/J43Q/XPz1/wv0WnrJpc73heXYt8nlz6XWhLZjfp48q
3/k0dJ2mTRee0bT7jiIqbrNZRJr2gk5t2ofnz/E1jwDUV6+fo7ppi9tZvGmT
oxuWrc7dmrZf8XLdPX9t1HXuPd/MXu0pyw8yNH/fvXJuQfPcvE16erauxuuc
349+Fc9VVnYBl+2fo3l5XtMeLaLmnc7dS32CbnPF3pCmLc496Ly1SfGq2L38
yzK76g/NXGe7dMZz2tywrGj7eRJN26mZDXXpjVP8/l7nTpsHE9I6OE57I5rz
47ata5t8xvw+HWMppqGtPsWX7Z/4AGl9d/V7cPUvVH0+baF+QTaLKF1ynSLS
tEWCPmTfGFBM3/XV01Wens+kLXY60ivn8aVRDzi707Of03zDctH1uhWattOV
D4U1d/mvP6Pd+Ct/8aq5kV+cYkZexNChqJ/ozTdtLr2HuKKHfJKL909xnkCx
6W7mTbM/8+w5WkTFs1MU0bRAXc75ejpOe5Kn7KvSdq2/r1Fc8ljJn7X66vvn
w1bp6E19iL5YoHkjl7Xgc7oKmrbTNbPhsTpNd6m2vOWmrUfpyp5af6P2+m7h
/OqhQ9F8otcVeFeY31dtxPik2HhsvZ1Ut0rzPbg8MlPKvkkRzd3LdPnFP+m5
7aY9SfNN1Vue4OZo2thKm3b3/PcE6zWfNgtpC9PcfctvYd/a1KRl0tbmoTqZ
du5aweoVK9NcIO3a7zIPz9/mHeyW1tvDdPX6IXeu89yvfPPhF6vUXCC/sLk+
c7e8q94HTKPUfDhHxS+heGx32ceygpfW3IvzMXs7LHgBTz+ae4z5vbzhr/DF
h+IKT7Sm3ZLbH5+n1l7b7ReRpk2aW4zbfwZrmja2xqbNd72fns9Byus0HVN9
yt7cSVffZaW6nzmpoFimePcqhUT965BfMf+lLlZsl/0VoaJw0n1N8/hT9r5V
fuG0WL7FeMrOT6iXSQcW6nV+evnWSX6zzV/5tEpFtHQ+uum+HrMvt8mPdTy1
TirLV7sepf2J6sfYfArisc2flLTY7uUh0yL28hHYZy/O4I6a80KxTPM5XXAo
rvNE19e9Zbc2v9+a2x+f/FcjeWp9lOymaNokTfS7Z7e2hp00bWx1TVu8DlNF
5K/MtMx0eR4eu+qN2vqF3bPMXAk/vEzfh+ocrRSlzTva931L3r51LkRwSRqf
epni+ENxX3O7sUULdT66XfUnudMq1U/o0Yd/3ou2XvP6kp6xrUemzsui/PNH
l++wnLQmxTJv0rSjh2LoE61pt+T2x2euiG586tS0ubRz/fB86vJNrV4nTRtb
V9PWs14wD85NhcXl9YzcE5D1/dZz9NyqFtF79OHMNUN8xTyfjq5ScePBXR8d
kFMfXZE6Pddq3k6P5hWLC/tbq2iqufWso/GxdYJoT9H1vOo6XXko9pd+ojXt
lqxifNZYRJp2ezRtbHtN+5S9X9m8enFhMTn2pMW+4/hV/V5VvV9fr8/cGs4F
ZLFMPA7FtXrKsNm0zY7qf3TFVq5IneYuRs8o9ahvat8xLHNj2xyBnqOsc5HW
+Sx33mBs6FBc4Yl+0LQbYnwG0bTbo2lj62ra5rHQnmNEc5f3ZF7PwbG0zPSe
VHMXvu6BeuXrab0ZkMVcn/I1Xu2iNM5u2rnsPxpgc48uv/ChtYtxdJR6zD3e
Yts7N7bxe/Rzt3N0lIKFe56v8/J+9FBc4YmuF75l5veY8RlE026Ppo2tq2n3
2QeaUj0WC1w8G+quqxdLH4GZVqy52g/HwjjI12YaFcscDcg6Ko5uc5pN2zMg
5z265gnJPbfTY+7xNoelWMOjY5sWfno+465eyeDc1+bl8YqlC89Iu6FDcZ0n
+rwHvhTze8z4DKJpt0fTxlbXtLvnT37N1WN/NtRzdD3XB4dA6xsPfn/njprG
l+xbx8HqHjjv4zZzA5VrNm2dE2c/umY15bsYnbfTo/l4j7ZWs6zmViBv2uZP
m1fcVX9RaG7FOt+SOGroUFznida0W2J8BtG026NpY6tr2nguC+bBuTSdbm03
87UA+Wmi6dczLfb08vsEit/fvG3mbjlfrL5kf+yg6NOzYiXjQojXubmSwe2c
+uiKm8rvMV9muot0SRrq5iillQ9eyc2QC0apZ2zr3Z9gBeY28nWvPlXHLYNl
mrPGgkNxhSd6r2m3xfgMomm3R9PG1tW06d3buXWuZ8+kqNP8uNOkuUyatdMy
qS7ybEjnHuRrUgRJscIPL3M6XVLUSH3F9BiL1d6Hkfn0fGw53Vqze4v7Cvrk
KfurFv2Prr6d5rWesp2FYkyao5Q/6rnUqbexj9X3D/SMbVqmWPkUmXMvzmZJ
7rNXdQrF9MLbvfxitGKZvANvZyiu8ETX93LjzO8x4zOIpt0eTRtbV9Pm030z
HuayYd/q4XRJEZ95DwTLNPPvofU1L3U97qvqaN5sMxfTHdVFnQdk81rNFZtW
+Kn196rqpi3i6oxHt5s5ETq/VhHnReTPvWLTcze3IX16/jOUeZPXjzce23r/
JV0evDibo1T8tH5x5vdbL9N8Tpcdius80XtNuy3GZxBNuz2aNraipk3Hi9L/
xrN2U3FMae59255l5q7Yvz7FknOH/nruvedOz1jnumk776tYLD+gF1/96EOL
b2GX/eXZYJn4Fs645KF1NLv53MUrdvR+jy6T/+j6Q3G1J1rTbonxGUTTbo+m
ja2laefqbhUrf7Yi46+v2bQL3s5Ru/A80kGaT9Pu9RHLBTfpiwzF1Z5oTbsl
xmcQTbs9mja2oqadexPz9lf+JLuXpxRuo2mvUyCLVNy+dTLq/rlpr78y6d4X
GYqrPdGadkuMzyCadns0bWwtTbub+dLL21/zU6X3rG/h0T29dPaNXOc1ttT2
s7nD1Qzdq1lkKK7wROevxhVNl+b3mPEZRNNuj6aNraVp98+HnqZUmPtM0wZM
j27ZIrqg3fOHhjbziJrSa3LS/NzWtt3JE30e83vM+AyiabdH08ZW1LQAa2R+
jxmfQTTt9mjamKYFGMr8HjM+g2ja7dG0MU0LMJT5PWZ8BtG026NpY5oWYCjz
e8z4DKJpt0fTxjQtwFDm95jxGUTTbo+mjWlagKHM7zHjM4im3R5NG9O0AEOZ
32PGZxBNuz2aNqZpAYYyv8eMzyCadns0bUzTAgxlfo8Zn0E07fZo2pimBRjK
/B4zPoNo2u3RtDFNCzCU+T1mfAbRtNujaWOaFmAo83vM+AyiabdH08Y0LcBQ
5veY8RlE026Ppo1pWoChzO8x4zPI4k37xKVNA6tp50xNexilpZ8ogG16eE2z
zdE/gyzYP9NdM4imnTM1LQBDado5+meopfrnFWPYksSWfn4ANs40FFv6+dks
LzwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgDnvete73v3u
dy+9FgAAcKZD0L7jHe/QtAAArNQUtJoWAICVSkGraQEAWKM8aDUtAACrUwSt
pgUAYF3qoNW0AACsyFtvvVUHraYFAGAtDkH79re/XdMCALBSU9BqWgAAVioF
raYFAGCN8qCda9rpz+N2+o1L+M3L+a1L+O1L+J3L+d1L+L2L+v2L+oNL+MPL
+aNL+ONL+JPL+dNL+LMx/vwS/uKi/vIS/uqN/fVF/c0l/O3l/N1F/f0l/MNF
/eMl/NMb++eL+pdL+NfLWbqqWEwRtHNNO/mAyge2fFDlgzMf0vKhlQ+rfHjl
Iyof2fJRlY/OfEzlY1s+rvLxmU9o+cTKJ1U+ufIplU9t+bTKp2c+o/KZLZ9V
+ezQ51Temfncyue1fH7lC1q+sPJFLV9c+ZLMl7Z8WeXLK19R+crKV2W+uvI1
LV9b+bqWr698Q+YbK9/U8s2Vb6l8a+XbWr698h2Z76zsQm9V3tXyXZXvznxP
5Xtbvq/y/S0/UPnBlh+q/HDmR1p+tPJjlR9/9hOVn2z5qcpPt/xM5Wdbfq7y
85lfqPxiyy9VfrnyK5Vfbfm1yq/P6Dmc0nmIIz7+0Hk0oHPHvHN/Od6Z7dm1
jHfxOve2OneCOvdN4v2FznTvKWple5/qoNW0mlbTalpNq2k1rabVtKxIM2g1
rabVtJpW02paTatpNS1rMRe0mlbTalpNq2k1rabVtJqWVQiCVtNqWk2raTWt
ptW0mlbTcvsOM8jb3vY2TatpNa2m1bSaVtNqWk3LSk1Bq2k1rabVtJpW02pa
TatpWakUtJpW02paTatpNa2m1bSaljXKg1bTalpNq2k1rabVtJpW07I6RdBq
Wk2raTWtptW0mlbTalrWpQ5aTatpNa2m1bSaVtNqWk3LijSDVtNqWk2raTWt
ptW0mlbTsiKHX3xNq2k1rabVtJpW02paTcvaNbNW02paTatpNa2m1bSaVtOy
LnXWalpNq2k1rabVtJpW02paVqfIWk2raTWtptW0mlbTalpNyxrlWatpNa2m
1bSaVtNqWk2raVmplLWaVtNqWk2raTWtptW0mpb1mrJW02paTatpNa2m1bSa
VtOyaoetgabVtJpW02paTatpNa2mZe0Ov/6aVtNqWk2raTWtptW0mpa1m8ta
TatpNa2m1bSaVtNqWk3LijSzVtNqWk2raTWtptW0mlbTsi511jZrdoqWnj45
qm6VuVw56ksqzYaJ9fTMUV/VUndOj87siX1DpQ6hM/Rk0lE9ydTv1KBq6gmq
WGdideqJrqPiADtJT5j16yy3WE/C9Yu7rlNn7AU6q69TTwQe1dmEPX6nUrfi
STobskdPUh7V05n9/qJSV2isM0djPV3ar7NaY3MFm1s6rFhSkbXNpj0ss/Rq
AgBAJM9aTQsAwEqlrNW0AACs15S1mhYAgFU7tKumBQBg7ZpZq2kBAFiXOms1
LQAAq1NkraYFAGCN8qzVtLCU6Q9DjLvxQbd8hqGPFIB7lrJW08JSXr169fDw
MOKWDwF5uOXbycjH15ZeCwC2acpaTQtL0bQAcBHTH/5eei3gTmlaAADWTtMC
ALB2qWkP/5iq7/CPYplDlz4+q386t0DdtId/H346fVZr+kfxo+I280uCdUi3
Of003Wy65NVrQdOm+zp7EIr76rwWAAAXMTVt3mPT/9YLNH/aXGC6vGja6UdT
19W5+/BacUm+cFrDuSXTOsytVb3m/YOQ1qFziOauJWsBAEaoW6u4pPgKrOmn
zVJNy6d/pCWnf+eL5VmYV2t93X31nWBFUk69WuRiXbDBcdqjg1CsQ7F6c7E6
7rwOAAByze4KDmkWdTr1ZLDkFH519R1uP11xesd/+m+wVs3rNteheVD0aNMW
F/YPwtwtOzYLAHAdzZwronGfnRdaHBQNmi017XSt4lhrXrzTW/P5JXUlFitQ
NG19SLb5oE5q2v5BmNZ8uqR4mNPCxUm2AABc1tGcy08Knc5DKM50jZt2uqlm
o+ZHcet/1GcCPL7+/FeK5PTTKzRtfnbE3JHndNZufXnK4Nv5FggAgC05+rZ7
89NS+XHa+A36KeSa9ZsSMa1Afklwyu51mrYYhGKB+Bza+kfNj9cBAHARdc4V
VVZ/VKo4lXTu8GOxZPHhsv1zZOan0U7HYItVqtfwaNPW36uwP7Fp40FoXnL0
jnxkDABgkBRv+RcUzBVjet+/OJX08flLtKYF8psqvnSrPuQb3FqxhvkKxE27
f/llCOlacdOePQh1ur96/rbb4PAyAACXkr5z4OHZY/ZnC/bZaaLpR82TXeur
103b/EavunubZymk259C8WjTpi5N1zp6nPakQXisvgs3XyAeGQAAxplOfD31
R/kC45rtvNvvvFYeyWcPwtx9jR4ZAADYO9MVAID107QAAKydpgUAYAOc7woA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABwtv8HzeZnLA==
    "], {{0, 159.00115938345385`}, {346.502526580923, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{191.9986, 191.9986},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{346.502526580923, 159.00115938345385`},
  PlotRange->{{0, 346.502526580923}, {0, 159.00115938345385`}}]], "Input",Expr\
essionUUID->"8e74de02-8280-4744-9620-1d43e671a2b9"],

Cell["\<\
Backpropagation works because neural networks, no matter how big they get, \
are simply differentiable functions.\
\>", "Text",
 CellChangeTimes->{{3.87499070138876*^9, 
  3.874990716613988*^9}},ExpressionUUID->"5033ad36-d625-4bfc-8cf9-\
2c9fcac25029"],

Cell["\<\
But we want to learn from input-output data over an entire QL program. For \
example, we might have examples of real-world code defects, and want to learn \
good code-analysis heuristics that identify those defects.
But the learnable rules may be embedded deep within a QL program, and \
therefore surrounded by logical rules. To learn the heuristic we need to \
back-propagate error signals through logical rules.\
\>", "Text",
 CellChangeTimes->{{3.8749885485581284`*^9, 3.874988561838375*^9}, {
  3.874990719917953*^9, 3.874990789582055*^9}, {3.874990974974084*^9, 
  3.8749911189547586`*^9}},ExpressionUUID->"36e47ac2-3c02-42d5-8e9f-\
d13da77f6832"],

Cell["\<\
And this is the problem: logical rules are discrete, not continuous, objects, \
and they\[CloseCurlyQuote]re not differentiable.\
\>", "Text",
 CellChangeTimes->{{3.874991123581538*^9, 
  3.87499115234192*^9}},ExpressionUUID->"0b8753b9-0046-41e1-9565-\
4d2992602974"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Danger", 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<High\>\""}], ")"}]}], " ", ":", 
   RowBox[{
    RowBox[{"-", " ", "Class"}], 
    RowBox[{"(", 
     RowBox[{"X", ",", " ", "\"\<Mammal\>\""}], ")"}]}]}], ",", " ", 
  RowBox[{"Diet", 
   RowBox[{"(", 
    RowBox[{"X", ",", " ", "\"\<Carnivore\>\""}], ")"}]}]}]], "Code",
 CellChangeTimes->{
  3.874991723023694*^9, {3.875010865162382*^9, 
   3.875010867219489*^9}},ExpressionUUID->"190c71f5-07a3-47a5-800b-\
fd03a5e56c7d"],

Cell["\<\
Now I\[CloseCurlyQuote]m simply going to state, without going into the \
details, that we can make logical rules differentiable, in the way we want, \
if we can learn boolean functions by backpropagation. A boolean function is a \
function from True/False values to True/False values. Here\[CloseCurlyQuote]s \
an example of one:\
\>", "Text",
 CellChangeTimes->{{3.874991816261376*^9, 3.874991841418496*^9}, {
  3.874991882453281*^9, 3.874991999653143*^9}, {3.874992721973917*^9, 
  3.874992730765623*^9}},ExpressionUUID->"56e2eb67-4c41-4e07-a985-\
c3cdbd05b7f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"x", "&&", "y"}]}]], "Input",
 CellChangeTimes->{{3.874992001841011*^9, 3.874992020630661*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"dea07a01-7bca-435a-a32e-35dfb818b95e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bf", "[", 
  RowBox[{"True", ",", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.874992025482395*^9, 3.87499202946206*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"c631f489-5f6e-49e4-bc02-bf97f19ae420"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.874992029814295*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"ecbc7e14-34bb-4507-ba8a-a190f52e76cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bf", "[", 
  RowBox[{"True", ",", "False"}], "]"}]], "Input",
 CellChangeTimes->{{3.874992030506185*^9, 3.874992032510006*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"98729a94-4090-43c7-ae7a-9b18dc287efa"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.874992032811242*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"9ff0a984-117b-41c7-b703-5a365333cab0"]
}, Open  ]],

Cell["\<\
But, of course, boolean functions aren\[CloseCurlyQuote]t differentiable \
either. So we can\[CloseCurlyQuote]t back-propagate error through them.
Hold that thought! Keep it in mind.
Now let\[CloseCurlyQuote]s turn to a learning problem.\
\>", "Text",
 CellChangeTimes->{{3.87499203806092*^9, 3.874992087101528*^9}, {
  3.874992737741353*^9, 
  3.8749927635896187`*^9}},ExpressionUUID->"0aefce02-6319-4f6d-85a1-\
0c2218d39676"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Toy Data", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.8703155021345863`*^9, 3.87031551041442*^9}, {
  3.874986319799777*^9, 
  3.874986324967414*^9}},ExpressionUUID->"acd93fc0-6d03-4a62-9ebb-\
c4c334b9a32e"],

Cell[CellGroupData[{

Cell[BoxData["data"], "Input",
 CellChangeTimes->{{3.874986277282995*^9, 3.8749862779122133`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"229104b6-7e11-46aa-b4e8-a7bd60993967"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    TagBox[
     DynamicModuleBox[{
      TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> 
         TypeSystem`CacheKey[
          11089181800845246712730432102383288464411408003085641684952], 
         "AllowEmbedding" -> True, "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "PurchasePrice"} -> 
            1, {All, "MaintenanceCost"} -> 1, {All, "Doors"} -> 
            1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 1, {All, "Safety"} -> 
            1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Meta" -> <|"Origin" -> HoldComplete[
             Query[
             All, <|"PurchasePrice" -> "buying", "MaintenanceCost" -> "maint",
                "Doors" -> "doors", "Passengers" -> "persons", "Cargo" -> 
               "lug_boot", "Safety" -> "safety", "Acceptability" -> "class"|>][
              Dataset`DatasetHandle[178146775813870]]], "ID" -> 
           244164718120686|>, "RowTarget" -> 20, "ColumnTarget" -> 10, 
         "Shape" -> TypeSystem`PackageScope`HeaderShape[<|{
             All, "PurchasePrice"} -> 1, {All, "MaintenanceCost"} -> 
            1, {All, "Doors"} -> 1, {All, "Passengers"} -> 1, {All, "Cargo"} -> 
            1, {All, "Safety"} -> 1, {All, "Acceptability"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "PurchasePrice" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "MaintenanceCost" -> TypeSystem`PackageScope`AtomShape[94.5], 
                "Doors" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Passengers" -> TypeSystem`PackageScope`UnknownShape[False], 
                "Cargo" -> TypeSystem`PackageScope`AtomShape[63.], "Safety" -> 
                TypeSystem`PackageScope`AtomShape[63.], "Acceptability" -> 
                TypeSystem`PackageScope`AtomShape[126.]|>], 
              DirectedInfinity[1], 7, {All}]], 20, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", 
             "Cargo", "Safety", "Acceptability"}, {
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium", "very high"]], 
             TypeSystem`AnyType, TypeSystem`AnyType, 
             TypeSystem`Atom[
              TypeSystem`Enumeration["large", "medium", "small"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration["high", "low", "medium"]], 
             TypeSystem`Atom[
              TypeSystem`Enumeration[
              "acceptable", "good", "unacceptable", "very good"]]}], 1728], 
         "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7,
          "DataRowCount" -> 1728, "DataColumnCount" -> 7, "SortPaths" -> {}, 
         "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 
         1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
       TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
       TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
       DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["PurchasePrice", 
                    Style[
                    "PurchasePrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "PurchasePrice"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "PurchasePrice"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["MaintenanceCost", 
                    Style[
                    "MaintenanceCost", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "MaintenanceCost"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "MaintenanceCost"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Doors", 
                    Style[
                    "Doors", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Doors"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Doors"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Passengers", 
                    Style[
                    "Passengers", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Passengers"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Passengers"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Cargo", 
                    Style[
                    "Cargo", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Cargo"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Cargo"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Safety", 
                    Style[
                    "Safety", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Safety"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Safety"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["Acceptability", 
                    Style[
                    "Acceptability", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "Acceptability"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "Acceptability"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["4"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["large", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["low", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["PurchasePrice"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["very high", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{94.5, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["2"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Doors"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{34, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes[
                    StyleBox[
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5", ",", "\[Infinity]"}], "}"}], "]"}], 
                    FontFamily -> Dynamic[
                    CurrentValue[{"StyleHints", "CodeFont"}]], 
                    ShowStringCharacters -> True]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Passengers"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["small", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Cargo"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["medium", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Safety"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{63., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["unacceptable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                    Key["Acceptability"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{126., Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Deploy[
                  Pane[
                   Row[{
                    Spacer[2], 
                    Style[
                    Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 1728, 1], {1, 1728 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[1728, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 1728, 1], {1, 1728 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
                   ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
                 RGBColor[
                  0.9764705882352941, 0.9764705882352941, 0.9764705882352941],
                  Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
                SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
       TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
       TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}, 
      DynamicWrapperBox[
       DynamicBox[
        ToBoxes[
         Dataset`DatasetContent[
         2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
          "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
          "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
          "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
          "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
          "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
          "BottomBar" -> 
          Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
          Hold[
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
         StandardForm], 
        TrackedSymbols :> {
         TypeSystem`NestedGrid`PackagePrivate`$state$$, 
          TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
       MouseAnnotation[]], 
      Initialization :> (TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
       CreateUUID[]), DynamicModuleValues :> {}, 
      BaseStyle -> {LineBreakWithin -> False}, 
      UnsavedVariables :> {TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
      Deploy, DefaultBaseStyle -> "Deploy"]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("Dataset[<>]"& )],
  False,
  BoxID -> 11089181800845246712730432102383288464411408003085641684952,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.874986278194331*^9},
 CellLabel->"Out[47]=",ExpressionUUID->"c6b821f8-b368-4eef-a81f-3bee6a977667"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", 
  RowBox[{"Normal", "[", 
   RowBox[{"data", "[", 
    RowBox[{"All", ",", "\"\<Acceptability\>\""}], "]"}], "]"}], 
  "]"}]], "Input",ExpressionUUID->"9c3c95be-707e-44e7-8087-1b8558cab784"],

Cell["\<\
This data describes various features of cars -- such as their price, \
maintenance cost, number of doors and so on. 
We\[CloseCurlyQuote]ll set ourselves the goal of predicting whether a \
particular car is an acceptable purchase. 
In other words, we want to predict the last column of this table from the \
first 6 columns.
Let\[CloseCurlyQuote]s split this data into a training and test set.\
\>", "Text",
 CellChangeTimes->{{3.870318390776444*^9, 3.8703185408041*^9}, {
  3.874992105493473*^9, 
  3.874992130221168*^9}},ExpressionUUID->"48ea5e8f-466a-4c85-ab93-\
40800af9e474"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainData", ",", "testData"}], "}"}], "=", 
   RowBox[{
    InterpretationBox[
     TagBox[
      DynamicModuleBox[{Typeset`open = False}, 
       FrameBox[
        PaneSelectorBox[{False->GridBox[{
           {
            PaneBox[GridBox[{
               {
                StyleBox[
                 StyleBox[
                  AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                   BoxBaselineShift->-0.25,
                   BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                  
                  FontColor->RGBColor[
                   0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                 ShowStringCharacters->False,
                 FontFamily->"Source Sans Pro Black",
                 FontSize->0.6538461538461539 Inherited,
                 FontWeight->"Heavy",
                 PrivateFontOptions->{"OperatorSubstitution"->False}], 
                StyleBox[
                 RowBox[{
                  StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                 ShowAutoStyles->False,
                 ShowStringCharacters->False,
                 FontSize->Rational[12, 13] Inherited,
                 FontColor->GrayLevel[0.1]]}
              },
              GridBoxSpacings->{"Columns" -> {{0.25}}}],
             Alignment->Left,
             BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
             BaselinePosition->Baseline,
             FrameMargins->{{3, 0}, {0, 0}}], 
            ItemBox[
             PaneBox[
              TogglerBox[Dynamic[Typeset`open], {True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeCloser"],
                ImageSizeCache->{13.75, {2., 11.75}}], False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "IconizeOpener"],
                ImageSizeCache->{13.75, {2., 11.75}}]},
               Appearance->None,
               BaselinePosition->Baseline,
               ContentPadding->False,
               FrameMargins->0],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{1, 1}, {0, 0}}],
             Frame->{{
                RGBColor[
                0.8313725490196079, 0.8470588235294118, 0.8509803921568627, 
                 0.5], False}, {False, False}}]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
          GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}], True->
         GridBox[{
           {GridBox[{
              {
               PaneBox[GridBox[{
                  {
                   StyleBox[
                    StyleBox[
                    AdjustmentBox["\<\"[\[FilledSmallSquare]]\"\>",
                    BoxBaselineShift->-0.25,
                    BoxMargins->{{0, 0}, {-1, -1}}], "ResourceFunctionIcon",
                    
                    FontColor->RGBColor[
                    0.8745098039215686, 0.2784313725490196, 
                    0.03137254901960784]],
                    ShowStringCharacters->False,
                    FontFamily->"Source Sans Pro Black",
                    FontSize->0.6538461538461539 Inherited,
                    FontWeight->"Heavy",
                    PrivateFontOptions->{"OperatorSubstitution"->False}], 
                   StyleBox[
                    RowBox[{
                    StyleBox["TrainTestSplit", "ResourceFunctionLabel"], " "}],
                    ShowAutoStyles->False,
                    ShowStringCharacters->False,
                    FontSize->Rational[12, 13] Inherited,
                    FontColor->GrayLevel[0.1]]}
                 },
                 GridBoxSpacings->{"Columns" -> {{0.25}}}],
                Alignment->Left,
                BaseStyle->{LineSpacing -> {0, 0}, LineBreakWithin -> False},
                BaselinePosition->Baseline,
                FrameMargins->{{3, 0}, {0, 0}}], 
               ItemBox[
                PaneBox[
                 TogglerBox[Dynamic[Typeset`open], {True->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeCloser"]], False->
                  
                  DynamicBox[FEPrivate`FrontEndResource[
                   "FEBitmaps", "IconizeOpener"]]},
                  Appearance->None,
                  BaselinePosition->Baseline,
                  ContentPadding->False,
                  FrameMargins->0],
                 Alignment->Left,
                 BaselinePosition->Baseline,
                 FrameMargins->{{1, 1}, {0, 0}}],
                Frame->{{
                   RGBColor[
                   0.8313725490196079, 0.8470588235294118, 0.8509803921568627,
                     0.5], False}, {False, False}}]}
             },
             BaselinePosition->{1, 1},
             GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}]},
           {
            StyleBox[
             PaneBox[GridBox[{
                {
                 RowBox[{
                  TagBox["\<\"Version (latest): \"\>",
                   "IconizedLabel"], " ", 
                  TagBox["\<\"1.0.0\"\>",
                   "IconizedItem"]}]},
                {
                 TagBox[
                  
                  TemplateBox[{
                   "\"Documentation \[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/a34a1447-6c23-486c-b454-6e05993a545e/"},
                   "HyperlinkURL"],
                  "IconizedItem"]}
               },
               DefaultBaseStyle->"Column",
               GridBoxAlignment->{"Columns" -> {{Left}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              Alignment->Left,
              BaselinePosition->Baseline,
              FrameMargins->{{5, 4}, {0, 4}}], "DialogStyle",
             FontFamily->"Roboto",
             FontSize->11]}
          },
          BaselinePosition->{1, 1},
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {False, {
               GrayLevel[0.8]}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
         Typeset`open],
         BaselinePosition->Baseline,
         ImageSize->Automatic],
        Background->RGBColor[
         0.9686274509803922, 0.9764705882352941, 0.984313725490196],
        BaselinePosition->Baseline,
        DefaultBaseStyle->{},
        FrameMargins->{{0, 0}, {1, 0}},
        FrameStyle->RGBColor[
         0.8313725490196079, 0.8470588235294118, 0.8509803921568627],
        RoundingRadius->4]],
      {"FunctionResourceBox", 
       RGBColor[0.8745098039215686, 0.2784313725490196, 0.03137254901960784], 
       "TrainTestSplit"},
      TagBoxNote->"FunctionResourceBox"],
     ResourceFunction[
      ResourceObject[<|
       "Name" -> "TrainTestSplit", "ShortName" -> "TrainTestSplit", "UUID" -> 
        "a34a1447-6c23-486c-b454-6e05993a545e", "ResourceType" -> "Function", 
        "Version" -> "1.0.0", "Description" -> 
        "Split data into training and testing sets", "RepositoryLocation" -> 
        URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
        "SymbolName" -> 
        "FunctionRepository`$b9ece19f331b48bdb8cc57c2aceeaede`TrainTestSplit",
         "FunctionLocation" -> 
        CloudObject[
         "https://www.wolframcloud.com/obj/f537c689-a756-4eaf-b897-\
cf34330f7f7b"]|>, {
       ResourceSystemBase -> 
        "https://www.wolframcloud.com/obj/resourcesystem/api/1.0"}]],
     Selectable->False], "[", 
    RowBox[{"data", ",", 
     RowBox[{"\"\<TestSetSize\>\"", "->", 
      RowBox[{"Scaled", "[", "0.1", "]"}]}], ",", 
     RowBox[{"\"\<Shuffle\>\"", "->", "True"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.868445433613286*^9, {3.870243561779406*^9, 3.870243561968156*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],

Cell[CellGroupData[{

Cell["A neural network", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
   3.868426121194284*^9, 3.868426122274289*^9}, {3.8684262976181192`*^9, 
   3.868426322530819*^9}, {3.8684339851586647`*^9, 3.868433996669791*^9}, {
   3.8684393240537577`*^9, 3.868439333949903*^9}, {3.868966010330719*^9, 
   3.8689660115546227`*^9}, {3.870228622887129*^9, 3.8702286260204678`*^9}, 
   3.874984428670041*^9},ExpressionUUID->"85881d34-aa2c-47a4-9cef-\
231d0c092462"],

Cell["\<\
Now we define a neural network that can learn this classification problem.\
\>", "Text",
 CellChangeTimes->{{3.870318560891963*^9, 3.870318576803911*^9}, 
   3.874984425718628*^9},ExpressionUUID->"00d95308-a694-443a-a631-\
9d6d99579905"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"softNet", ",", "hardNet"}], "}"}], "=", 
   RowBox[{"NeuralLogicNet", "[", "]"}]}], ";"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"89b5ca0c-dca6-43c9-830b-af8d63b75cc9"],

Cell[CellGroupData[{

Cell[BoxData["softNet"], "Input",
 CellChangeTimes->{{3.874992140168888*^9, 3.8749921411575108`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b13d7a02-3b63-4065-b259-b90f732e995b"],

Cell[BoxData[
 TagBox[
  TemplateBox[{
    RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 StyleBox[
                  
                  TemplateBox[{"\"Number of inputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{"\[ThinSpace]", "\" \"", 
                    StyleBox["\"Loss\"", 
                    GrayLevel[0], StripOnInput -> False], "\"port\""}, 
                    "RowWithSeparators"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"real\"", "SummaryItem"]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              StyleBox[
               GraphicsBox[{
                 Thickness[0.0149], {
                  RGBColor[0.729, 0.729, 0.729], 
                  Thickness[0.03], 
                  Opacity[1.], 
                  JoinForm[{"Miter", 10.}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                   18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                   49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                  
                  JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                   18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                  FaceForm[
                   RGBColor[0.631, 0.8160000000000001, 0.498]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15.,
                    33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                   22., 40.}}}]}, {
                  FaceForm[
                   RGBColor[0.38, 0.753, 0.89]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5,
                    19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                  FaceForm[
                   RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15.,
                    12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                   22., 19.}}}]}, {
                  FaceForm[
                   RGBColor[0.584, 0.51, 0.8390000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5,
                    30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                  FaceForm[
                   RGBColor[0.4, 0.396, 0.659]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30.,
                    23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                   37., 30.}}}]}, {
                  FaceForm[
                   RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5,
                    40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                  FaceForm[
                   RGBColor[0.647, 0.259, 0.08600000000000001]], 
                  
                  FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45.,
                    33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                   52., 40.}}}]}}, ImageMargins -> 0, 
                ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
               CacheGraphics -> False], 
              GridBox[{{
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Acceptabi..\"", "\"Acceptability\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "Acceptability", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-1.9999999999999993`, 
                    5.3589794058235685`*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-0.9999999732051026, 
                    1.0000000267948967`}], 
                    
                    Offset[{0, -15.5}, {-0.9999999732051026, 
                    1.0000000267948967`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Cargo\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000053589793, -1.9999999196153082`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Net\"", TraditionalForm], 
                    NCache[
                    Offset[{0, 
                    Rational[-31, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{0, -15.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Doors\"", TraditionalForm], 
                    
                    Offset[{
                    0, -7}, {-3.000000026794896, -0.9999999196153085}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"Maintenan..\"", "\"MaintenanceCost\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999999999999, 
                    8.038469108735353*^-8}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Passengers\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999973205102, 
                    1.0000000803846907`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    TooltipBox[
                    "\"PurchaseP..\"", "\"PurchasePrice\"", LabelStyle -> 
                    "TextStyling"], 
                    Annotation[#, "PurchasePrice", "Tooltip"]& ], 
                    TraditionalForm], 
                    
                    Offset[{0, -7}, {-2.999999946410205, 
                    2.0000000803846905`}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Safety\"", TraditionalForm], 
                    Offset[{0, -7}, {-2.999999919615308, 3.00000008038469}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"Loss\"", TraditionalForm], 
                    
                    Offset[{0, -7}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}], 
                    NCache[
                    ImageScaled[{
                    Rational[1, 2], 1.}], 
                    ImageScaled[{0.5, 1.}]], Automatic, {1, 0}]}, {
                    FontColor -> GrayLevel[0.5]}, StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318317, 
                    3.8890874007337035`}, {-1.449999985262806, 
                    0.5500000388526006}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396939}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{-5.217758092674727, 
                    1.7392528529019}, {-2.479056953218156, \
-0.4371707580865526}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.3162277914367091,
                     0.9486832895772231}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-4.919349484592803, 
                    2.4596749070632327`}, {-2.455901697074275, 
                    0.08819666693064376}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.44721361946604227`, 0.8944271790168733}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{-3.889087192318316, 
                    3.8890874007337035`}, {-2.4499999852628056`, 
                    0.5500000656474976}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {0.7071068001334007,
                     0.7071067622396938}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-2.4499999732051023`, 
                    1.0000000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    
                    Offset[{3.8890874007337035`, 
                    3.889087192318317}, {-2.4499999611473986`, 
                    1.4500000656474974`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.7071067622396939, -0.7071068001334007}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    
                    Offset[{4.919349616406267, 
                    2.459674643436304}, {-2.4559016482109186`, 
                    1.911803464680622}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.4472135715338734, -0.8944272029829576}], 
                    InsetBox[
                    FormBox["\"\[DoubleStruckCapitalR]\"", TraditionalForm], 
                    
                    Offset[{1.4737193393399295`*^-7, 
                    5.499999999999998}, {-0.44999997320510277`, 
                    1.0000000120577033`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999997, -2.679489707890781*^-8}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{1.4737193332337026`*^-7, 
                    5.499999999999997}, {-1.4499999732051023`, 
                    1.0000000388526005`}], 
                    ImageScaled[{0.5, 0.415}], Automatic, {
                    0.9999999999999996, -2.67948969678855*^-8}]}, {
                    FontColor -> GrayLevel[0.7], FontSize -> 8, FontWeight -> 
                    "Thin"}, StripOnInput -> False]}, {
                    GrayLevel[0.7], {
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000053589793, -1.9999999196153082`}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-3.000000026794896, -0.9999999196153085}, \
{-1.9999999732051024`, 1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999999999999, 
                    8.038469108735353*^-8}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999973205102, 
                    1.0000000803846907`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999946410205, 
                    2.0000000803846905`}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-2.999999919615308, 
                    3.00000008038469}, {-1.9999999732051024`, 
                    1.0000000535897937`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
                    2.6794897029117842`*^-8, 0.9999999999999997}}], 
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    
                    LineBox[{{-1.9999999732051024`, 
                    1.0000000535897937`}, {-0.9999999732051026, 
                    1.0000000267948967`}}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.449999985262806, 
                    0.5500000388526006}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051027}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Acceptability\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Target\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Acceptability", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Target"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.479056953218156, -0.4371707580865526}, \
{-0.25, 0}, 
                    Offset[8], {1.0000000803846907`, 2.999999973205102}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Cargo\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Cargo\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Cargo", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Cargo"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.455901697074275, 
                    0.08819666693064376}, {-0.25, 0}, 
                    Offset[8], {1.0000000535897937`, 1.9999999732051021`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Doors\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Doors\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Doors", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Doors"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999852628056`, 
                    0.5500000656474976}, {-0.25, 0}, 
                    Offset[8], {1.0000000267948967`, 0.9999999732051026}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"MaintenanceCost\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"MaintenanceCost\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"MaintenanceCost", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "MaintenanceCost"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999732051023`, 
                    1.0000000656474974`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Passengers\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Passengers\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Passengers", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Passengers"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4499999611473986`, 
                    1.4500000656474974`}, {-0.25, 0}, 
                    Offset[8], {0.9999999732051028, -1.0000000267948967`}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"PurchasePrice\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"PurchasePrice\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"PurchasePrice", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "PurchasePrice"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-2.4559016482109186`, 
                    1.911803464680622}, {-0.25, 0}, 
                    Offset[8], {0.9999999464102058, -2.000000026794896}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\"vector \"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    "\" of booleans\""}, "RowDefault"]}, {
                    StyleBox[
                    TemplateBox[{"\"Safety\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Safety\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"vector ", 
                    Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
                    GrayLevel[0.5]], " of booleans"}], 
                    Style[
                    Row[{"Safety", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Safety"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.44999997320510277`, 
                    1.0000000120577033`}, {-0.25, 0}, 
                    Offset[8], {0.9999999999999997, -2.679489707890781*^-8}], 
                    
                    TagBox[
                    GridBox[{{"\"real\""}, {
                    StyleBox[
                    TemplateBox[{"\"Loss\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Loss\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{"real", 
                    Style[
                    Row[{"Loss", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["", 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Loss"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-1.4499999732051023`, 
                    1.0000000388526005`}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999998, -2.6794896967885506`*^-8}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
                    StyleBox[
                    "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
                    GrayLevel[0.5], StripOnInput -> False]}, 
                    "RowWithSeparators"]}, {
                    StyleBox[
                    TemplateBox[{"\"Output\"", 
                    GraphicsBox[{{}, {
                    GrayLevel[0.7], {
                    
                    LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {
                    0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                    False]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "\"Input\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Center}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Row[{"matrix", 
                    Style[
                    "(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
                    GrayLevel[0.5]]}, " "], 
                    Style[
                    Row[{"Output", 
                    Graphics[{{}, {
                    GrayLevel[0.7], {
                    
                    Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                     0.}}]}}, {
                    Inset[
                    Graphics[
                    Style[
                    
                    Polygon[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7]]], {-0.4499999999999998, 
                    1.2057703663103027`*^-8}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {{{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["]", 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    Disk[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                    GrayLevel[0.5], 
                    Text["[", 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
                    ImageSize -> {68.99999999999997, 15.000001473719337`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{7., 7.}, {10., 5.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {TooltipBoxOptions -> {
                    TooltipDelay -> 0.08}}], "Input"}], 
                    GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-1.9999999999999993`, 5.3589794058235685`*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"Acceptability\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Acceptability", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], {
                    FaceForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    EdgeForm[
                    RGBColor[0.5856, 0.5856, 0.5856]], 
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[13.88888888888889]]}, {
                    DiskBox[{-0.9999999732051026, 1.0000000267948967`}, 
                    Offset[11.666666666666668`]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{
                    Style["Miter", 
                    GrayLevel[0.33]], 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.732, 0.732, 0.732]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    GrayLevel[0.33]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-0.9999999732051026, 1.0000000267948967`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000053589793, -1.9999999196153082`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Cargo\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Cargo", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], {
                    FaceForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    EdgeForm[
                    RGBColor[0.5664, 0.5664, 0.5664]], 
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-25, 2], 
                    Rational[-25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-12.5, -12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[25, 2], 
                    Rational[25, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{12.5, 12.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, {
                    RectangleBox[
                    NCache[
                    Offset[{
                    Rational[-21, 2], 
                    Rational[-21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{-10.5, -10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]], 
                    NCache[
                    Offset[{
                    Rational[21, 2], 
                    Rational[21, 2]}, {-1.9999999732051024`, 
                    1.0000000535897937`}], 
                    
                    Offset[{10.5, 10.5}, {-1.9999999732051024`, 
                    1.0000000535897937`}]]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.0149], {
                    GrayLevel[0.5], 
                    Thickness[0.03], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.192120463394616`, 
                    30.51535353195944}, {39.192120463394616`, 
                    30.51535353195944}, {38.69442248591872, 
                    35.17935629818005}, {28.246036107633145`, 
                    35.21413676830481}}}, CurveClosed -> {0}], 
                    
                    JoinedCurveBox[{{{1, 4, 3}}}, {{{39.335627149246974`, 
                    22.022653388846493`}, {39.335627149246974`, 
                    22.022653388846493`}, {39.028664759644585`, 
                    18.313538367818456`}, {28.898905902765012`, 
                    18.118321787764348`}}}, CurveClosed -> {0}]}, 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.631, 0.8160000000000001, 0.498]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 
                    33.5}}}]}, {
                    FaceForm[
                    RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {
                    15., 33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 
                    40.}, {22., 40.}}}]}}]}], {{{{1.6209767772132715`, 0.}, {
                    0., 1.302327038770047}}, {-8.296516058106576, \
-14.790162389666165`}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.38, 0.753, 0.89]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 
                    12.5}}}]}, {
                    FaceForm[
                    RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {
                    15., 12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 
                    19.}, {22., 19.}}}]}}]}], {{{{1.6446663930506598`, 0.}, {
                    0., 1.2828873028183188`}}, {-8.702521921403617, \
-2.012105908138385}}}], 
                    GeometricTransformationBox[
                    GraphicsGroupBox[{
                    Thickness[0.0149], 
                    GraphicsGroupBox[{{
                    FaceForm[
                    RGBColor[0.584, 0.51, 0.8390000000000001]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30.5, 30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 
                    23.5}}}]}, {
                    FaceForm[
                    RGBColor[0.4, 0.396, 0.659]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {
                    30., 23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 
                    30.}, {37., 30.}}}]}}]}], {{{{1.5182866155506958`, 0.}, {
                    0., 
                    1.2065857650683098`}}, {-11.402865979580374`, \
-6.527851836053724}}}]}, PlotRange -> All, AspectRatio -> 1, PlotRangePadding -> 
                    0, ImagePadding -> 0, ImageSize -> 15, ImageMargins -> 
                    0.], {-1.9999999732051024`, 1.0000000535897937`}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Net\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    "NetGraph", FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Net", Bold], 
                    Style[
                    NetGraph, FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-3.000000026794896, -0.9999999196153085}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Doors\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Doors", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999999999999, 8.038469108735353*^-8}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"MaintenanceCost\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["MaintenanceCost", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999973205102, 1.0000000803846907`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Passengers\"", Bold, StripOnInput -> False]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Passengers", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999946410205, 2.0000000803846905`}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"PurchasePrice\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["PurchasePrice", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-2.999999919615308, 3.00000008038469}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Safety\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Safety", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 9), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{2.6794897029117842`*^-8, 0.9999999999999997}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Loss\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    TooltipStyle -> {
                    Background -> GrayLevel[0.937255], CellFrame -> 1, 
                    CellFrameColor -> GrayLevel[0.85]}], Annotation[#, 
                    Column[{
                    Style["Loss", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 10), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    
                    Part[{{-1.9999999999999993`, 
                    5.3589794058235685`*^-8}, {-0.9999999732051026, 
                    1.0000000267948967`}, {-3.000000053589793, \
-1.9999999196153082`}, {-1.9999999732051024`, 
                    1.0000000535897937`}, {-3.000000026794896, \
-0.9999999196153085}, {-2.999999999999999, 
                    8.038469108735353*^-8}, {-2.999999973205102, 
                    1.0000000803846907`}, {-2.999999946410205, 
                    2.0000000803846905`}, {-2.999999919615308, 
                    3.00000008038469}, {2.6794897029117842`*^-8, 
                    0.9999999999999997}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 25, 8, 25, 8, 8, 8, 8, 8, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, 
                    ImageSize -> {232.49999999999991`, 322.9999999999999}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{38.49999557884198, 29.}, {29., 19.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    GridBox[{{
                    ItemBox[
                    StyleBox["Input Ports", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Acceptability\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Acceptability\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Acceptability"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Acceptability\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Acceptability"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"PurchasePrice\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"PurchasePrice\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"PurchasePrice"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"PurchasePrice\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"PurchasePrice"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"MaintenanceCost\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"MaintenanceCost\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"MaintenanceCost"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"MaintenanceCost\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"MaintenanceCost"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Doors\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Doors\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Doors"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Doors\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Doors"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Passengers\"", FrameStyle -> GrayLevel[0, 0], 
                    FrameMargins -> 0, ContentPadding -> False, 
                    BaselinePosition -> 0, StripOnInput -> False], True -> 
                    FrameBox["\"Passengers\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Passengers"}, InputForm]], Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Passengers\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Passengers"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Cargo\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Cargo\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Cargo"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Cargo\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Cargo"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Safety\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Safety\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Safety"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Safety\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Safety"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {
                    ItemBox[
                    StyleBox["Output Port", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{
                    TagBox[
                    TooltipBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> FrameBox[
                    "\"Loss\"", FrameStyle -> GrayLevel[0, 0], FrameMargins -> 
                    0, ContentPadding -> False, BaselinePosition -> 0, 
                    StripOnInput -> False], True -> 
                    FrameBox["\"Loss\"", Background -> 
                    RGBColor[0.9098039215686274, 0.9529411764705882, 1.], 
                    FrameStyle -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.], 
                    RoundingRadius -> 3, FrameMargins -> 0, ContentPadding -> 
                    False, BaselinePosition -> 0, StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], FrameMargins -> 0, 
                    ContentPadding -> False, BaselinePosition -> 0, ImageSize -> 
                    Automatic, FrameMargins -> 0], 
                    EventHandlerTag[{"MouseClicked" :> CopyToClipboard[
                    ToString[{"Loss"}, InputForm]], Method -> "Preemptive", 
                    PassEventsDown -> Automatic, PassEventsUp -> True}]], 
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    NCache[
                    Rational[2, 45], 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    StyleBox["\"path: \"", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], StripOnInput -> False], 
                    RowBox[{"{", "\"Loss\"", "}"}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{Automatic}}}], "Grid"], 
                    TooltipStyle -> {
                    Background -> RGBColor[
                    0.9098039215686274, 0.9529411764705882, 1.]}], 
                    Annotation[#, 
                    Grid[{{
                    Graphics[{
                    FaceForm[
                    RGBColor[
                    0.9607843137254902, 0.9607843137254902, 
                    0.9607843137254902]], 
                    RGBColor[0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 11], 
                    Style["path: ", 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], {"Loss"}}}, 
                    Alignment -> {Left, Center}, 
                    Spacings -> {0.2, Automatic}], "Tooltip"]& ], "\":\""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    StyleBox["\"real\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`FormatSelectedParameterGraph[
                    
                    Part[<|"Nodes" -> <|
                    "Net" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "FeatureLayer" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"PurchasePrice" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Nodes" -> <|"Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Catenate", "Outputs", "Output"]}|>, 
                    "SoftNet" -> <|
                    "Type" -> "Chain", 
                    "Nodes" -> <|"1" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "Weights" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{1344}]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    1344}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    1344}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>, "Clip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {1344}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Clip", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "SoftBits", "Outputs", 
                    "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{64, 21}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{1344}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{64, 
                    21}, NeuralNetworks`AtomT]|>|>, 
                    "HardInclude" -> <|"Type" -> "Threading", 
                    "Arrays" -> <||>, "Parameters" -> <|
                    "Function" -> NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardOR[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{64, 21}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{64, 
                    21}, NeuralNetworks`AtomT]|>|>, 
                    "Or" -> <|"Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> Max, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64, 21}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "Or", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "HardInclude", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Or", "Outputs", "Output"]}|>, 
                    "2" -> <|"Type" -> "Graph", 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|"Weights" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Nodes" -> <|"SoftBits" -> <|
                    "Type" -> "Graph", "Inputs" -> <||>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, "Nodes" -> <|
                    "Weights" -> <|"Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> 
                    NeuralNetworks`Private`DummyArray[{256}]|>, 
                    "Parameters" -> <|"Dimensions" -> NeuralNetworks`TensorT[{
                    256}, NeuralNetworks`AtomT], "$ArrayDimensions" -> {
                    256}|>, "Inputs" -> <||>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>, "Clip" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, "Outputs" -> <|
                    "Output" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Clip", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "Weights", "Outputs", 
                    "Output"], NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "Clip", "Outputs", 
                    "Output"]}|>|>, "Edges" -> {
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath["Nodes", "SoftBits", "Outputs", 
                    "Output"]}|>, "Reshape" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|"Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{4, 64},
                     NeuralNetworks`AtomT]|>|>, 
                    "Not" -> <|"Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|"Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{64}, 
                    NeuralNetworks`AtomT], "Weights" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{4, 64},
                     NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Weights", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Reshape", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Not", "Outputs", "Output"]}|>|>, 
                    "Edges" -> {NeuralNetworks`NetPath[
                    "Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "FeatureLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftNet", "Outputs", "Output"]}|>, 
                    "Loss" -> <|
                    "Type" -> "Graph", 
                    "Inputs" -> <|
                    "Input" -> NeuralNetworks`TensorT[{4, 64}, 
                    NeuralNetworks`RealT], "Target" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Nodes" -> <|
                    "Harden" -> <|"Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_b2880a3f_92a5_4aec_95bc_f9199e3acb06", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1: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
MCtLi2PHrTTniltoJPtCfyKoT5czEjYeFY7fapbxJlPAkmgMVv2dPGnzmEDJ
BjPBrCrUJdAMdZF86TLEuL/x6JnxYUSXY9Dln42zN4/ZKllnJuAPaDGgj78Z
F9v1HZaLzfOvFUu/E2P7jKgfsGQiNbkomOSRtoa2rmqv//FksrB0fLerXCcj
Y/KtvcASl3k7kpOw3EzUkYO4xKpUc2n64cL5mw13FBngXDq8rlDnoJvXxqMC
g7wAh/09DB1NMjX5o1jJpgn3ycJNBt3JzEXUiSuT5te62kdtvGXG0eFnBGGw
2sT5tQv4pZ+7fw3ZLzOSkT62ngJCisJZLNZRsfjhwiR5RpBFajR0wVhuVcIW
37Z5ZYu0zxntEzjX4rg6q3HtwnEdA7j+frhwwWbDYqFxEjs5kCzkV20tzTQX
bB5TGpBpziomkVLH9sFsjElcMZviCu8vRrm5uW06GmBcZsaxspgCqZiW+5E1
5Cjuc0DsMwKtwREbUCP2uztZ71iQR2osQUs5aYHtxODv1iRFc2uhiwsVurzA
u3DYqi7TvcjjjgX50+MZOxDn3Uy6XSl6HzIm+6bG6Lyu1L1Tgnskp+bU8VNa
rTybtd30QN/3g74H6OEGbUFWObFji7vNs5mwxgTPI3Dt8NHNtvKJLKycG4Ke
ZZVzxX+GQOjOydb+D98I4nnnpZJvyu8L7kmcOiImZgtvsbkpRiTrei4Voh5f
p5fwS6WUhK1h5hOyqf9UaZVsKC37FvmlKobaLx1U+6UY3d4yS9f59a7gl85w
k3T+jJ461eUtm2vQhqD/ZiP3l8VTub9Vp6iB1o/SdeTENLUwzY7lME2/YDt0
6UVdQvEu3V+6nKZutn5UqDPMiinxH/I4hDCRjlHnHMfUmJzVvfSnZcmCFDfC
Q+oMnNn7UAoekvLCTeyPTUEestlNgDXwYzaTp+iDJwom45EIIThFPdvv1Cjr
R1zdSUTG2gsIXiw2yqYOg38OvbT4GJr91pfZT6hnv6Jb/6el6+ITxOxk3YEz
1x8aluumlKKkh/HVpO8ubcVdG09ievw/mUWWpMUxJYXmkX/gmMSoMfGfqk5q
LlNFwCrdGQQmGdSErdn/ACZTIeMOrx1zAmHSpsak+JQak1xd6UNLiuctN0DZ
+P3ik3iS9gXli2rAu7onHlqWeJYqGQYof3x4qFz3kps98yo2fRcsINbxp6sj
yK9qhTvoWTg9m2kt1COipmdz6pRZnaCjug38LPffBsegRO53tWe+qKnyzHtn
CS+VWz8rXUI4eb7E9GXuYJGl0OuERZYm0566JZCWzXQ4TAxb5tWcenTWbb6n
QK/NAFT/PzAgaQKOSZYak1zPiBnZzLlFRBfpkubU57P6rTwj9KgTocsl6GI2
Ee+So+7yp2cWdJn/QQ/P1Bi+FsZ3Mr6yZ/7HZ8ZVRLB4hprgPHWfFk/WrGxm
gNV4AjPv5tS42c3CSyhqzrOCqOlU9KRUIx/JcDtO8qCa5L9mS3LLrTP3fkOQ
7CwxnVBQWGZZtLRct42+FMlVqpGwdXA5ZAAbhdfYXI50LMqEstks7Fg5yo+k
Y68i+R0ZqxZ0rjo/mqx365ElZc2Rhar86E8iP1qD8qM13I2RRXmj86OHZd/d
KbfOuLdGlR+dOWDtGTG+gT9YnHdkLAqot9ViKxyrouG1dVF+ufWlhWsJGoIl
pt88qn1gKfkG7FG7++wspMA9agX2ma1Odcqpg9aPmsdHEAqcBYRa/6CdTQ0V
+gNF9YiiQCI7+tKlgsq1ecQyiCa63IEudj3QJeKJFmVX26M7iBXdalYkFahV
eZ7ekXJLyoa3C3FVNjcYONPJnF+uW65R5A7ZkTWy/TJ3yI7s8OzIWo5ELbBW
i3oKRZUdHV5SZZ3NjFlmoMqONm7Es6NYJOcYSfk9jemUUdnRVj0bK5tH/gbx
qlVxnB1kR+tjSqp0prtaI97MpKh4022tdjN1VDubR1kGmQShbUBoSKtpNnXX
E62S8DteDxGhZUy1zVaoCY3Se19u6eo3SBBaDITeq1hcriu+jxuAH4QL+zYr
z24DNxpIswKFCxpOoQNFpcwvlnTbZDPPWE2AVbbQmu8KK+mUsltkEkw2x8ya
KvgFpn6Lpv4Vx7nQRoXzj43UjTaPBBPOEzhLaQlbd/L0sqm/PNFy9eo+UIFw
HlTj7FKrxjlRL7PCsiT43CIc5+UTBs58qlhSrptBq/AQ+wvskHCeeQiwNk1I
018gMx+Lo7xFjfKP3s122czfiyYQC7xtzamL5s4TekJyeO4+ZNuZtDkTDC5q
wczeOLfq1DP/rldeYem6/Q4x8x8w86+HfMt1s2ifYOZufGbxYgFmqwMeqx5m
XqaDzxylnrnIO90+m5llZkQ4mO3NqX1ztwB/J0wCZEkN0EWoSeTX6i5PvKug
S04A0cUjpDnVzmm7lSfXqIGfkdJQqKVBSpI0CpR2phUt4VobDQhpf/RMnXbN
fvcKu0029awyLU659Z2SUMLgroPT6Cq9ZykJjSnpHr97hT1SqgS1UmFz1QKS
US/YPBIb5YGAMK70/b7iD5UNhH6BrO6uMMim5gmvgZQOaCMfQ5iruvdfA9RL
No8Kje6yu3HEw8GtO+8Gt24UM5UUVfQOMD48Faf1NzWtJ5diTtnMAvZEQjA7
mlM3O1912a0LBtOCDKZZMnBf4xKgmnIadyq3tNVrBGdhZ7m1lL6ToLEVYsHn
qoeWpJ3g8yZcSZ6LaLymppHvpDacQWqezSOfie3KqEhP2Nq9ERKIduGvurCM
RIRd0EVdIr50GaLeBbZM/Jvocg669FbPyKb+Dbb2uN77PdLbt9pqW5Opteez
3oHHliW7ctwJW5s4cOa1zoty3Rz6X+7idc1OoDz17niXgS/7HnonHlsm7y4k
uvwDXT7qlPkkgFcm7QGvXLyb2xlZNACsLDLFWflazcqDPoXO2cwPVqaEpu0B
7rtMtvHkm8bMAO5/QtyfgXd594X7PtiCbGZvANHFQwTcd5FZe/qb/uak3kPM
PN0zZnn8l73HBe/0znWptxGLEp5P9Wj4sv04lLU0PW+FettycNlpbuwF9Q7k
p2pn4d/e6p3L3nZR0rOT6k3I9zqDVEjkIDvpKn38Gc8XddSeegjnUApwyFa/
FziU8N6dr9ykansg0JjBGDizZQH4kYHmtEHU9b26q4tC3dVJP73KkpLY6w7x
zseMQTuufeyxZVFCTAnfeih6AWhMhGv3Alzq8PIvHQ0L20fNpgrkl1cCgm9c
/7bxrDKNpkmsld11TpZbFiW+/zOFQsK6GRj2ZnHESkFMhygsk+qu4XazUTbV
hMWuEOvvetxza7jGvos3dSJ3Cf0J915Du1OTYs4VeZkhJ6GV9ZP/abK3htvO
tBrn5T15ab45guUkdmVdTlpGAxTCZLeWyqVzNCeNY72O9ZNLi+ioFJMoL5u8
sFpo63FYdtO7ZsEhuXQJ8aJRLh0zFkot80TQTdthHOtd7GO5R4PMOTCT8kzA
YBexKnrd3cxsVyTIpfl0H4qZG9XVttqUvbfKK1bG+9oAYahxpS6vQSHv5D2f
nb5ScKRjqIt31BmV2mO7eLQFAq0UFpv5xCvRTd/FpjMn7UScwM2Wsrw+/65s
0K81J61eE1XfOl2WfQ6HeS+RFmu4OS6pcY7yZj1hepyR5TTWLaiUl4lWIQKu
Ne32q46/XJ0ImDtq+njwvuDT18XbZ5S1UnCuZl4XzzkqUB96F7U7XK1WdPLm
FMilC7URybeXyKWGOqg0b71cGkyD0l/53nLpOJxncxLlUhPU1jKQD1PSPdCc
kf2fKtsTD7Y6B0qogFtuWJ1z4BAFlbzbnaN+J7Fhosj+z4c6EpcA/v+QR/JN
75RculhzFN/sZLwpLisFK+tqs+cVNs8+1MMysP5UNo7mhuaSdNxIkC1IA+K0
/Ud2upH2bL6M99wJsVU22MUzWI1z/nTTnkYFvBvs5L2ZN4rR726knTAg+Hyl
ZuB0j3PgLk8Nt1vrW507ef2GuKZ9OtThOFST08kzmIBr2t4r/XfWK+YclJfd
IwiXdNgt7U882eEcWIbIdfSrdg78lgLat6uiw3l5/800zjnBCtKyiuo7TQ4/
pHFWgwIm9NxI45xFOnm3Oi/tRLBgjolbsn786f64IeBf9fU03yFsDsvFje9m
M8RexqjIqXEO/IAG33mq2jnqR9KTGJbW8ua8y62fmoC3pni1TX5SJvfrd446
R/oL1d/uaqr5FA5aCohdQujshJeBNTlpvlEIHe/WXIVbShqnCZDY0HoD7CHf
EQT6cYk8R2HsHPUYl5eko/9udaKozjnqAekpMUl+xye/uttpvrsQ9lfar6fV
7sBLTbfSfGPwUs3tNE4ilJZt6IDSZVSqqMtPW/eNLSJyR5gsdrjjVlr9Crx6
K6wjZrg1P833GoILa72TVl/ctp78wUtafanUbWHFabl072jFiJPxNs8eJcSW
vDTj790tdSX6H0M7RIfqYk+2yhv751QqBjp5fXNGQv7lHHgBZ8XSdmAzICHC
7jmPtQ4VpzDqXjEehrYWhC6E19fv9uTOXiZJ47zD9tp+kcIRkM1Dsv7TL3pb
Deq/jCZwswHrbpJXKOZ38cbPAONKqZvTBabZpWJaRfUnv3ZgkJkQOH+lKR9x
vlbpk26k+Qaj0qmOG2kZQXipNTfNtwvx41ANcKYHL7XfTKs9vgJ8V9OdpfLH
LTy6MYtWas72WNZ0o7H91voaxw11O0WtsQmK62Cw13HT/XQQ/BZeGrgsl97T
HsXGnV28B+OVnjNvvSKvi/fcchRXG+6k1QbiKPbkpxlvxe6PYJSoPXFJk3OU
5dMRiiZN8x0erbTgAJ5SRrLrB3CPkTQ++JK54T1zOnmbpzWDofbkdvI+3pVL
jyH9i1fqXz3BunrR3Z6Pfq3Ao17EBeTBa9tQ6S7wrbYdlRJ6rqetSxS44kZ8
qLq3wGgTwvpQO7h9HP9DTcDEn4F1GzrycNbRHJB/aBro4qVyIq49TvIy4poV
33BIimoaeAzGkkGtGuGaflimM4pvc7t4fbOg/8oe6H//X4p4Oy3jNY4TKHit
DMcTmFc/TuVhek+DCklx93gI9KNF5RQrOxIPgkYmkapHzgwMcmhGntqpixe7
VF5mMg8p2qkmxw0KUAauEIa/UgcTnf4DPOQC+ive0WkRI9H55JEPFr8DObST
1eDQ7ucA2f0x4PYDX5BwK5A5LwcbXbdZ4IZbj6gmd6j/TlrGPziva4Dr53Af
VZeblqH0VnfSfPegt979eWm1Wbh6gAfjZOPWKwM4xWgdaHIOvDE6RF4BVz92
FEvjZbw3c5Em9O/o5MWFystakEXda+jYuVTRD36XO9KJD0iHxtqCStvflS91
G5BeR2HotS144yeENz4ss/drSjwJnvwjCpG37oI37sBLpwCX13gpAaS8j4zc
KXjowE+oFHsV9PlPXB6HZQNXOhJDe5yj1j0hdPBKTf9piFmSUYToVcqlAaN1
Y1cX72sjAQoaew71zB2C+WpAUArEmyvV4AsDC21H8CZGXvankCA077LCqZO3
yAjpZfVHkPvkUXKU3sODrSOkKifxUi7kJgFEGxjOGWQ4fYdwwwl8jMegU6BN
pXgpAThRg5fugj2+RqXYAiglUUcSUw0DvhvtID5BbsVhKTOX2w2KO4DgL6D3
HTfXy8sOrlJGvqvtC7p4cx7Ly0KVXnDnXcX1Lt5PespQOTdRAUka3VQZSnty
hmvA80xZgCc+nzp5FzSIbE52fQgMlrMcWHUZpWlhhctJhzdA6jZQ9pGmDLN9
p2SJ60EsU6VNDqWTn308zEWZnk+1QfLAQdd1LqKf3+AW13o9rV7rlb125JjY
sDOI3k8VIIkMvHQZ5L0KCgP5IM/vkTI4nIIRG9WGWJd4EICTcOCDEEyFxFzy
J8RcrVuMcUo+e/fYK2pudPEuEHNfPr1JoIxnsv5hiPnGbByDOYmLiAGGLn9J
FmoST4IADowydj3IAY9C4Gi1hcQDU3LdsVIBTvgZENUIRA2UTTPDU9vqmhQ0
adJ6U318khuiFfgktTdX4d5+ECKAiMhXw+TSwyhla3FC2Sxeup0PaRN6+7oP
dGcZDnfnpFy6Hm+LS5OXBRHTtF/Yh0/TUPdLIYrhYOe1eSa6o5RkdxfvjdMo
H/j6Tto6AxytvoTNBFqDa4gBW1NNWTt/EszTe2U7w2rZsp6mC0k480LXbhEj
uffHyHi06Ugz6iDd2nwE2FEDuTHdSKk8MsjDYjt5D1R5mezWUA2wqwZHs3jJ
2v5R0fociHrvqPCj1ygve4GjElFHa0ejz5FVD0cPSJcROS8wga2LSnnAot9w
VuY2yKWT8ba5h+Rl74jOTc898Ax+VyfPniPGJ798OgDDie4PezXKS/xwV15G
ouHKE9FeE4EDh/6OFG9HEzjnX1E24nga1KEadOZeCxri015kSgvvtn6qVNiB
hUTincIOj9KXFRC8yIgN8Vfb7wyBg163kUAgPtEgFXH9LR3vR07g4tVeg1R8
mPU/4wlfDSQRZR8JclrphjgRZO+mTcQYO0KjIGgMgBPt5N2Yh2jtATlcMCby
30bZvA2K68CYICK3AM3ai5d2+MnL1hC0iutuKgdN8NNA0a/588n2fj9IJJex
8LzypndHojf4ETydP9Oef6WpIFQunTlau2538exxR3Kvov1zo8K+k0eP8NBj
LUkMPU36Cvi2vsa52OjvwpEBp41nd1Jelq/EoieOcDS3O3l2oxP/15DT7FSt
sPp7/Vpvp9UbqsL04FVA9A8Srr3NQ5E4jsuqY062J0K+t185dvtPEwgKr6wl
vBaES29UqM5NOxFIMNI+/CtPQr6veO4mqoWqPEHxEZB8TQyUXk0zxv2+XRdv
9U2UO97pgph1AndBh8AZ9RFxDOLTZ1IlHpD2JPQMpf28k8i789NqV6ElhSw/
jbObSMrz0urDBQTX89sH/SCJrBXhCTmgxmnBnWR1ftqJB2gZUAOOBVn5XzSP
kctE58D20XoMa0szOoFwe7tStofWXkeDNUD+bkxRZvftDsMdzlHTnhCZ4VXZ
p3Cww3bSEmBDQ82wHts58KfRWQ4o8hfO3FV8bJCXWeGr8DMd+Y01C8B+xijn
bYqnKjV+vgL8oW80noi0w9o4imB3bpgTsOr6BkiyvD2J/OYVL94kAh89oaZv
Q9Puk/2JIplzVKdyeWO/tC7xJPA4izQqR1kiL1tFTJpZ/cZIPFJxXkDKBEF9
K+J0I0pMf8cTI2jLCMGT9x7I82/g6RCkSOsWKaNCe+5wTW5avY7J4JQiB3af
wobtODvLp1Qx9K+7KNeXritbKYNIuI1YE9xOMxYa/w/6tPE2I8+ZIrsFWjQN
5af94JtTxyktdvd6BYTdeDriH6Q/9kOyW2nGG4mQ9SmhY8cQpKkZf4tBIRph
hVjb28W7MZe7CjKyWNkCdgvPrkIuzdW0RPl5pfx6mvEOgt+fRZeURnJbSHiA
SrlHpC4/KOc7LZ0f1r6yd0x8QQC8/fhBqe01q/HVOYpz9hNxNUo69PNFnF+w
IFu3ixg5L+G9sqPcUSl9mYEJDu5Safpy5KJNVFcAywqRDiSFf4kS5AchXYql
/3tXABxAqnqjaHeBIhZ8zyclRnVbjHyUAffOKQXk03MgQZmLLxHudPGOOuKl
XTLe16aEr/eukyN0T8Fa9cROAt1dCTIluncu/ysllPHs9fHRT9XNLVDYy3j0
1ezv3Lj3Dsn2LKmb06iY28n72pgg7JDRK5AAZD230p6JOnnjJ/BH7Qk5R/2j
nGSoguYGIWLv3erBJYpYkVyqheeCt5aAJ54MBQdo0vjXNhQE1Pm4J4d0zA7f
d2odAu9O+EeY7eZHtKbJ6eLhMWHMifgxpTZm3tm6euPmJHaptl/MfN9nc6tp
HtKsmYcy6+0Urc5RDUqc+jTU20BXahJDwYH+R7mE21NZ98kPFg4ZEbi91oF3
2qP0ThU1vX7tsAAJEeOamNfYE6eouQ6JpukoZ/0iJ833GCzgEppu4Qu41WgH
LaVndyePZoFKHfmwuJmJt/VDQvIjFJrmy3hbdJUCd/RTgHPdQuwcxl+VOQ3X
3AQNn4X3cOziGRhi6M2OhJ45in5YhQePytNL5dKKmcDV/oNycDVuaoMeAtfp
iy/JO27gaG02HoX1X7BCfY87W9n1tNrLuJvogTalw4C1Uh++spfBqtEMX8yB
L88wx0vgwtetsSU2hTo+DndASitWTtyza7gV3Np9E3zFFCvjfdwgL4ulKRc/
Nw/1Jy6pcQ50+IrYxkirxTc8EYbScfg23ryDcmkDnvA4QMR9h5rmgnl/wHf2
boDmxOIvnWCd9oTIgcAFv6BfKnkc+NSNrwgnP1YMLej/1+W7mn9fqTtNTnJh
fqNPqsXv1hUMXRBnspLHL8T6rlKz3g6Ey0v3eqWSCKZ3OA7X3Eo7sUsdjQf9
2mFJv0xJfvvQcCu4pFjcOUEAewarrJ8MlMuL3Q0KSBJujLaUj86BZXjM9AZG
NOEbpfkQUd+gdd6n9eDtP+AlUbVzVAWho815+R1Dfk0gz99GLV9joNuj0aEB
GLQXz5Q/Q95zEGfV7lOgIWinuCUP1oQniXy7US4N1TUex2q4VXH6O9sR23uv
eONSr7UE/PHdUELJowHbhjmp2dW94426vlob9q9M5jpk7y30Ubu3cZ288zPx
DFkk493kYIQ/l9kP94AzKhvlFqsLYBmQjzvtG2HgtDOicPNrBZVQLq7yYTF9
EBe7HSS870Y7jBvgn41VBpM3VNMHS3PC7ORgdhNQqR+MbTXKXVLa87t4fXhb
+25wlJjS4Tl6w4K93vP/K37dwOPXc8Icc8GACVOOl/Em7bW2KDaakfyL5+7o
H6b/8p8fouW/Rwbs3p08o8Tzl+hjyRs9f9kekBy92KlcvHWulDbt77VXo4dk
8aa5z8XSrbRzt3aevPmx4PxuU8dXWDB6H5PfLhu62lnvfsC++Texx9XdjYnm
xe57SpfTT2hK/znVKCo9H2t67e6vZPM7d4NP9x3uSZZuFnx7u+ajkaK/0f29
L/c3scXN6JfuB/hQYjzorHMPs+WaHydN6z35JlR+9V29+yV7f2Jg9z1tDynn
3nEnnCuM3S2TFdzfaWrVIzlHPjvvarCp1SrSNm6K1F+6+TPvLOv4uyui0kzK
RQnLPMns+Ls0qcvW8xP6D9fpbEWz/1wjOzUc/Wicx3RucfzE/sOtOhHnk7em
v+rquS1LbCijf68pjbpTI2pjULhnDdPJNbKh84nDfexW/fTp3IfyvP7T0u7D
x2+KSu00EI13z4vOvdluarUoCVBZ9xiQkmEXyGfvPNhu+lt/nfv7YKBQtv0l
YB9BYH9LvuexrOBKpOm1BoS98c3tpo77vxON3/QSG8O+cY99pK5LcbyPbaQN
+D0Mvt3P7kGYPgx16meXjM+kuUgZ+7aeX2CueeZYxEv38gXiCQwzc87ZY8NS
i5TNf4SbXrsvPkc2PyHbbnrtHRr/xM3dprkPCGl217/pGII3VnKcbzUgR+u5
A0uSIs3fK7aYR23wPyNVyBX6LP1AdGV4+EdsvIli++lb6b+9gTF+x4focq55
N/w43DS3EEMKUdiz++aH01dFbbssgFdJjyM3XFDUuf9t0n84milGzN7zILZ+
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
a6Q6EX7j/wDY3Npo
                    "]]|>, "orcInstance" -> 105385888, "orcModuleId" -> 
                    50275744, "targetMachineId" -> 105734224|>, 
                    140516498880320, 140516498880176, 140516498880256, 
                    140516498874368, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_031f625a_3e5a_451a_8731_03d31ff6fc79", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|"Linux-x86-64" -> 
                    ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkvIKgTUjAqGAD0iltvSUJSa5o
gBAigs+8JNFijcr1orVttLbj7bTzYUWv19tHAmhpxQ6UWvXqVVF8TOuzWrXV
jrPPSSKMM/N9M99Mvi97nb32Wnutvda/1z77iHT15ToEAEAKAChU+M9m8wGI
gH0dh0yZ+8rnxlUPu6rGldlKKBkRB4CfWACMY4gAA/Ynwj9qT94k72PNYeOS
vM2Ii5MagcUlst7Q2QRFjMLN4wp7cQlfignmRUl0HpW5V5SsjHW34fLNDH0f
tpdPKIo9xFeIROcSTE+b7hWv7Fy4iTjSB+ddRwAwE1JJkieS0BUD0bMpHQJR
KmzinuGs3e3V6PQLiRSjwxfTCi5jMrsjj0F2JMs8/nnbk+Z2rKz59dgWnQfj
daUxOttBIclRqFn6AfFsXK3zXJRyX+33pkRmJ4PiZq6D08CxyzZPe2cXFrtr
D9mtGTSs34l95JBkFjiL4l//ll/WPdLIvUOM47WUjSi/yErVCva8lWzzbv7A
E/vBuwffuTpphzFp+5y5ctvmrKJ28pfen6EQfHhf9wBj7PYqM5svqHbHfaol
hrB/ke2ZFtuA4eXHzkdP3FuMx1hKzXgBrnHN/mCbaxooxL5zOCwXFqFlMBcv
wLXHe84/hj9U9jcbhnjBOFmtjI2obBF7cohekOJnqON3XKAF/Hwo/2/AC6Ku
OqNbb1M8piZKJjCRbyKVtsVM5yOKBboQTZRtCogdQOO9KSBWg1zVMHfiYIrJ
vJUanwIWgEfAxjwfAyLhPOzxlEViMqMyB+eClHjvM5TKh9HsFBDZafLueloF
Y/piwIyTxBxq4AXwAXiAANQPzakRLbgbYBt/pQYQD9MfY3sBpPhicvgVOKuv
dVesA5ySVSJmdrznDfCNhmmP9MeBOTAGOIzBeI9M4ImUi0XkVOyIGCZKvo1I
72Ylad40OnDOePYV+1TWoEu2HS8Z7/JvI1kV2XLso0g5KTo4lXXS5WeMT1zp
Z+Y/iMj3OXNs7oZFzCYVumwPuvKkJurSAPu6D4XtLQJdBtDlJGrxoY0EWgti
LGa0gX6mmEEB+KxBrT60SYbWermwpboD7Ms21OxDGwi0eYB9w4Yux9GmoCI9
ug9HLTZ0bgzGiy1sbWsHSFZhx44bgf15K/88XNP0Cnf9sYXiSRz96qPy/q6/
vokON+TgXxcvWTd0l4+9/9Ffj/o6NkRsDug/af/xm7Mi5IioggmADAYFF/i5
X3lj7ZPhM9yINj9orRDsDQYMs8EGCPze9Y2TCcAC4R9TUP4nOQtBSEoGhGQW
x2RFYtQUMppDzbPfWyYD/CdqbHK3xZ13EBYI2GHRYhyNasJENRv4YU0g6EKg
AYoPD3pygAo6QJvHKHPrjijZAKRQPhKhqT7c0MexAQE1FQhNZUjkTQaIb6xX
P8xKzKbnpRcETdtEf1hXYQIsP6AsgpDFhHVngjqjzps+kckAJxiVoMVDWzCu
DVSOtbh2up5EZfSCQmsk9sp9twoQIJuIsamak9jBj+OVeNsip84+wlLMLQZX
BVT92wsdfxvSTMwm7B0WGvnITI9C6uppK7ShLc1oY0cD5zKIuY5z79q4mZzC
xO5Awjc7hUYyghZzxvczZ/YpZrYxZ/Y3t1nN6AoMbVG5zWZ0uZnZ1Ow2E+64
fh73mpc7TMbUkTEXb3FvqbmZeG/CWZHwpCihW5toJNflf+rMH1DkdTELPnUW
uJj5/bf4TRp0xSI0d5HbAlub2+x1mzVoUxra9CACTrvM5q7C3A0Ct6XD3dJh
T79xi3vjPPdnP/caydT17RSO7BT20+0ZrfBrkbDXnvC1lv29V5HXp8jroNuD
PdJ2hdTDzG/veR4afeTI/46Z39nD+bLGba50W8xO6yK0WeO2CtxWnzvumwUx
N0DMT2ruiJd7URYzTHCvwVUQaQlnAond8sRvRcIz9sQz54Ujwwk/IIlGQZm0
UzFjhzO/X50SWojGvawZbe4oK7nrjaEikLg48Wut8Koo4WwgYTWSSDksSril
ZVesdUr7e/I7FTNhQB51F4wo8j2w29N2OAqu1L0M+oOhy9NQS4d94UWce83P
vaTm3iGTA9/KE0eGJ50cTjgLHVDF5Xc6Z3Y541090jZFXn9PwcFAXl8PXGNB
v6qrAUOhVw0wgJXuuNNHuNc0MdfPw3oQc4mMuUTE3FNz63DuRZILu3fOs//1
PHdEzX1AJl+4phV22xNODk+6Jkq4LEroFSXADF4VTTESb+d/qph5kJnX7szr
r/wUZh8udjn0U+VeZobRc3Mv4dxbtLc3Se4dL/eumkthtAXi/jVILYkqQuHh
xEVaJCoi2d62adOg0oen6QvEksI3vaL3mokkxoJ4zfvno3oZL9ebjBZtLaGo
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
YeHfAfNCv7Y=
                    "]]|>, "orcInstance" -> 107249680, "orcModuleId" -> 
                    70545136, "targetMachineId" -> 105505056|>, 
                    140516498866720, 140516498866320, 140516498866400, 
                    140516498866176, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {4, 64},
                     "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "0252df61bd30cd94", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|"Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Error" -> <|"Type" -> "CrossEntropyLoss", 
                    "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "TargetForm" -> "Probabilities", "$InputDimensions" -> {},
                     "$Classes" -> 4, "$IntegerType" -> 
                    NeuralNetworks`IndexIntegerT[1, 4]|>, 
                    "Inputs" -> <|"Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT], 
                    "Target" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Loss" -> 
                    NeuralNetworks`TensorT[{}, NeuralNetworks`RealT]|>|>|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Target"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "SoftmaxLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Error", "Outputs", "Loss"]}|>|>, 
                    "Inputs" -> <|
                    "Acceptability" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"unacceptable\"", "\"good\"", "\"acceptable\"", 
                    "\"very good\""}, "OutputForm" -> "IndicatorVector", 
                    "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 4, 
                    "$Version" -> "13.1.3"|>, 
                    "PurchasePrice" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"very high\"", "\"high\"", "\"medium\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "MaintenanceCost" -> <|
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {
                    "\"low\"", "\"medium\"", "\"high\"", "\"very high\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                    "13.1.3"|>, 
                    "Doors" -> <|"Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {4, 
                    Interval[{5, 
                    DirectedInfinity[1]}], 2, 3}, "OutputForm" -> 
                    "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                    False, "$Count" -> 4, "$Version" -> "13.1.3"|>, 
                    "Passengers" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {2, 4, 
                    Interval[{5, 
                    DirectedInfinity[1]}]}, "OutputForm" -> "IndicatorVector",
                     "Dimensions" -> {}, "Multilabel" -> False, "$Count" -> 3,
                     "$Version" -> "13.1.3"|>, 
                    "Cargo" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"small\"", "\"medium\"", "\"large\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>, 
                    "Safety" -> <|"Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Type" -> "Class", 
                    "Labels" -> {"\"high\"", "\"medium\"", "\"low\""}, 
                    "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                    "Multilabel" -> False, "$Count" -> 3, "$Version" -> 
                    "13.1.3"|>|>, 
                    "Outputs" -> <|
                    "Loss" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`RealT]|>, 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Target"] -> 
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Cargo"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net", "Inputs", "Doors"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "MaintenanceCost"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Passengers"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "PurchasePrice"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Inputs", "Safety"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss", "Outputs", "Loss"]}|>, 
                    Apply[Sequence, 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection]]], 
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Acceptability"], 
                    NeuralNetworks`NetPath["Nodes", "Loss"], 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath["Nodes", "Net"], 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath["Outputs", "Loss"]}, 
                    NeuralNetworks`Private`NetGraph`selection], <||>, {}], 
                    ToBoxes[""]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8749921419821157`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"1f4ba63f-3fe6-4215-8381-3cf638d65592"]
}, Open  ]],

Cell["\<\
This net takes car features as input, converts them to real-valued vectors, \
processes those inputs, and then outputs 4 probability values (to predict the \
car\[CloseCurlyQuote]s Acceptability, which is \
\[OpenCurlyDoubleQuote]acceptable\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]unacceptable\[CloseCurlyDoubleQuote], \
\[OpenCurlyDoubleQuote]good\[CloseCurlyDoubleQuote] and \
\[OpenCurlyDoubleQuote]very good\[CloseCurlyDoubleQuote]) and uses a standard \
cross-entropy loss.\
\>", "Text",
 CellChangeTimes->{{3.870318859171664*^9, 3.870319000667831*^9}, {
  3.8749847731753902`*^9, 3.874984773935226*^9}, {3.874984945191183*^9, 
  3.874984964303491*^9}, {3.874985150103702*^9, 
  3.874985153119668*^9}},ExpressionUUID->"7fb122b0-11ec-4374-8553-\
decf50e0a6b9"],

Cell["\<\
Notice that we\[CloseCurlyQuote]ve actually defined 2 things here: a soft \
net, and a hard net. Ignore the hard net for now.\
\>", "Text",
 CellChangeTimes->{{3.8703206795304193`*^9, 3.870320710578745*^9}, {
  3.874984899295401*^9, 
  3.874984899599339*^9}},ExpressionUUID->"5ffa9b79-f5dc-428f-803a-\
6955dbdea24d"],

Cell["Let\[CloseCurlyQuote]s train it.", "Text",
 CellChangeTimes->{{3.8703207576663094`*^9, 3.870320782570817*^9}, {
  3.870320814706141*^9, 3.870321227698745*^9}, {3.8703212579790907`*^9, 
  3.870321274530603*^9}, {3.874984976751598*^9, 
  3.874984989895397*^9}},ExpressionUUID->"7a697f04-03c9-417e-8209-\
cc642ea858a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"TrainNeuralLogicNet", "[", 
   RowBox[{"softNet", ",", "trainData", ",", "testData"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.8684393523282022`*^9, {3.868440869499402*^9, 3.86844087371313*^9}, {
   3.8684411260993*^9, 3.868441126210587*^9}, {3.868442499709556*^9, 
   3.8684425018843727`*^9}, {3.868446172833139*^9, 3.868446186731524*^9}, {
   3.8685364797630873`*^9, 3.868536496883217*^9}, {3.868600076169417*^9, 
   3.868600076637474*^9}, {3.868600134889481*^9, 3.868600135284954*^9}, {
   3.868601255470386*^9, 3.8686012558943872`*^9}, {3.868602902814464*^9, 
   3.868602903232891*^9}, {3.868943377521962*^9, 3.868943381357031*^9}, {
   3.8689434141572866`*^9, 3.868943425164989*^9}, {3.868943586951866*^9, 
   3.8689436089616327`*^9}, {3.868944023717293*^9, 3.8689440271979637`*^9}, {
   3.868944083020088*^9, 3.868944086825481*^9}, {3.868947817163151*^9, 
   3.8689478172894077`*^9}, {3.868949946458611*^9, 3.868949960076432*^9}, {
   3.868977243682851*^9, 3.868977248732733*^9}, {3.868977291844462*^9, 
   3.8689773017254*^9}, {3.868977346389843*^9, 3.868977377673813*^9}, {
   3.868977408389917*^9, 3.868977427933148*^9}, {3.868977539952648*^9, 
   3.868977554029306*^9}, {3.868977819969697*^9, 3.8689778435338573`*^9}, {
   3.869023762591353*^9, 3.8690237633179893`*^9}, {3.869023837158021*^9, 
   3.869023876685935*^9}, {3.869110793308095*^9, 3.86911082542246*^9}, {
   3.869110910640922*^9, 3.869110910806432*^9}, {3.86912172241117*^9, 
   3.8691217224768143`*^9}, {3.869651243457945*^9, 3.8696512443590508`*^9}, {
   3.869652345237102*^9, 3.8696523460650587`*^9}, {3.870176213162601*^9, 
   3.870176232203189*^9}, {3.870233790438415*^9, 3.8702337978709087`*^9}, {
   3.870235358600091*^9, 3.870235363421095*^9}, 3.870235431774667*^9, 
   3.870235695013812*^9, {3.870235881306831*^9, 3.87023588141299*^9}, {
   3.870235916262095*^9, 3.870235920686771*^9}, {3.870236438934493*^9, 
   3.870236439037176*^9}, {3.870243617635653*^9, 3.870243617791752*^9}, {
   3.870250244952783*^9, 3.870250248200946*^9}, {3.870250344774638*^9, 
   3.870250344930841*^9}, {3.8703164242373543`*^9, 3.870316433077147*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   TagBox["NetTrainResultsObject",
    "SummaryHead"], "NonInterpretableSummary"], 
  StyleBox["[", "NonInterpretableSummary"], 
  FrameBox[GridBox[{
     {
      ItemBox[
       FrameBox[
        StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
         StripOnInput->False,
         FontSize->12],
        FrameMargins->{{10, 5}, {-4, 2}},
        FrameStyle->None,
        StripOnInput->False],
       Alignment->{Left, Bottom},
       Background->RGBColor[0.96, 0.96, 0.96],
       Frame->{{False, False}, {True, False}},
       FrameStyle->Opacity[0.1],
       ItemSize->{Automatic, 1},
       StripOnInput->False]},
     {
      ItemBox[
       TagBox[
        FrameBox[
         TagBox[GridBox[{
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["summary"], 
                 TextCell["summary"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batches:"], 
                  TextCell["batches:"]], "4975"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["rounds:"], 
                  TextCell["rounds:"]], "199"}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["time:"], 
                  TextCell["time:"]], 
                 InterpretationBox[
                  Cell["20s"], 
                  TextCell["20s"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["examples/s:"], 
                  TextCell["examples/s:"]], "16673"}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["data"], 
                 TextCell["data"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["training examples:"], 
                  TextCell["training examples:"]], "1555"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["validation examples:"], 
                  TextCell["validation examples:"]], "173"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["processed examples:"], 
                  TextCell["processed examples:"]], "318400"}, 
                "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["skipped examples:"], 
                  TextCell["skipped examples:"]], "0"}, "RowWithSeparators"]},
              
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["method"], 
                 TextCell["method"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["ADAM"], 
                  TextCell["ADAM"]], 
                 InterpretationBox[
                  Cell["optimizer"], 
                  TextCell["optimizer"]]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 InterpretationBox[
                  Cell["batch size"], 
                  TextCell["batch size"]], "64"}, "RowWithSeparators"], 
               InterpretationBox[
                Cell["GPU"], 
                TextCell["GPU"]]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["round"], 
                 TextCell["round"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"4.57\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.045737806094542935`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["1.44%"], 
                  TextCell["1.44%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             TemplateBox[{
               TemplateBox[{5}, "Spacer1"], 
               StyleBox[
                InterpretationBox[
                 Cell["validation"], 
                 TextCell["validation"]], 
                GrayLevel[0.4], StripOnInput -> False]},
              "RowDefault"], 
             TemplateBox[{",", "\",\"", 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["loss:"], 
                    TextCell["loss:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                 TagBox[
                  InterpretationBox[
                   StyleBox[
                    RowBox[{"\"2.\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], ShowStringCharacters -> 
                    False], 0.019987208431203538`, AutoDelete -> True], 
                  ScientificForm[#, 3]& ]}, "RowWithSeparators"], 
               TemplateBox[{"\[ThinSpace]", "\" \"", 
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["error:"], 
                    TextCell["error:"]], 
                   TagBox[
                    GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                   Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                 InterpretationBox[
                  Cell["0.578%"], 
                  TextCell["0.578%"]]}, "RowWithSeparators"]},
              "RowWithSeparators"]},
            {
             ItemBox[
              
              DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
               NeuralNetworks`Private`NetTrain`plotList$$ = {
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
7dFw7Z+vhr9tlOL/AZdmY/Y=
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1: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
b7uN63v8P3NJbWA=
                    "]]}, {}}}, Prolog -> {{
                    Text[50, 
                    Offset[{-2, -2}, {50., 0.8260000000000001}], {1., 1.}], 
                    Text[100, 
                    Offset[{-2, -2}, {100., 0.8260000000000001}], {1., 1.}], 
                    Text[150, 
                    Offset[{-2, -2}, {150., 0.8260000000000001}], {1., 1.}], 
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.8260000000000001}], {1., 1.}], 
                    Text[250, 
                    Offset[{-2, -2}, {250., 0.8260000000000001}], {1., 1.}], 
                    Text[300, 
                    Offset[{-2, -2}, {300., 0.8260000000000001}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 199.02}, {-1.826, 0.8260000000000001}}, 
                  ImageSize -> {302, 182.}, 
                  GridLines -> {{50., 100., 150., 200., 250., 300.}, {{-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {-1.6989700043360185`, 
                    GrayLevel[0.8501]}, {-1.3979400086720375`, 
                    GrayLevel[0.8501]}, {-1.2218487496163564`, 
                    GrayLevel[0.8501]}, {-1.0969100130080565`, 
                    GrayLevel[0.8501]}, {-0.6989700043360187, 
                    GrayLevel[0.8501]}, {-0.39794000867203755`, 
                    GrayLevel[0.8501]}, {-0.22184874961635626`, 
                    GrayLevel[0.8501]}, {-0.09691001300805638, 
                    GrayLevel[0.8501]}, {0.30102999566398114`, 
                    GrayLevel[0.8501]}, {0.6020599913279623, 
                    GrayLevel[0.8501]}, {0.7781512503836435, 
                    GrayLevel[0.8501]}, {0.9030899869919434, 
                    GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "loss", "rounds"}], 
                GeneralUtilities`TightLabeled[
                 Graphics[{
                   AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    Line[CompressedData["
1:eJxdVgdQVFcUJRqDotGocYxlpSmIothYQMX/wUKRIrvUXdjKLkSjRrqOppCx
JxoNxhYUsOCgGGyAsTcw0QixRRM1iCGixg6CqEn+4/6cNwMzDnM9955b3/k4
mmarLO1sbGwqpX/s9zszOulHh9QJGg/DxktRFwSyGwWXCY8Obauuku0O4nFl
4c7xPauEs2fOKcXNdmJC3frm8scVwjbfwc93FfQQh1adrlxQdlr27wWb/PuK
q/fsWHT9xAmBeVcEKsQG1z7Lp687IjRu9zpyL9QRNvE5iRUFfa22AcdlvkHi
ylez3BpcDwqlb7XkvMhzEQczd8VhobfH7zYLgt3EU3/XdHQqLpPzDYE/5Rsm
598jXF+ae21p7nDYuVrBacmWEXJ8oVzPSFFr9yaooqBIrmeU7J8vvFnisKJr
6GjYu+27n/4lfwzyU72ewKlepdxPidAt9JlH7FQveT5bhWN3ai398rzl/ovl
fnxkfL/cz1jgDixd0DjwVxfut7VsGo/6qV9fUde6sH1yvxNgj7yyJvVBgID8
Tz1PRcaEiaiP5iFiPjQPP/Dnn9+3rO8WP8S/7L1r0PxQf9g0L/8285oIvGj3
d1qhYCL42rHxhEyCTfOchH5pnpOB7/16oXti/mQZzxXsbiyoPDN1CnCa9xTg
NO8A8B1KmfVmSV4A+ut51LrufnAg4mkf/9tr5X0EoR9pWheKNweBv19e+Ifd
goMRT/sKRjztayr6Py+hFzdxe2C299gxQSHgo32GAKd9hiL/5Q/cPm7KDQU+
LNGxc1xgGHDadxjy077DZXyVcLOlu1//3HDE93Pu8Oio8zT40z1MAx/dwzTE
B31+6HF5M8ftc+ZGRzhHwD53sNE5OysCfHQvEZhP6zqauc3S33FSof+qIdO/
fD9LBZzuSYX8Eeatx282qVC/a4bJNcNJjf1e2nirYXumGv50b2rUF906QLXM
nym43726sqNTpNh0U1UfPqpUuNZFneCTGYn66R4jEa+Z/NWqdk0cHyF1s8Ex
CvWwczyXEQWc7jUK/ehaD5TbY348ZhjmGA3+mkfjhusyohFP9xyN+ZhYwy+4
7TNWYnCIgV2nL/n2SXoM6qF753jSuvs/HWyMQX7fnTtGqhxikf9e9cB/s9Nj
4U/vIRb10OeB2379FRv+tI+T7cXCQ7/1Sb3S46Cf9F7iUM/seWxDceBn48y0
12BfT/e+W12YpgEfvScN/NMeBLw9p0GDeoP/6TCjk70W+V44Sw8qTQt/em9a
3EdW/OGP2jdowR/GChoQD3827fOp8W30NR71zf95xJU1z+PRj4otbEACbFaO
PjWhzXtNQL7PJrCLTkC+aHbQCh3m2T7zjzlPU3S4T3rPOvAv/L7P9h+e6cCn
PflrF7VCDz7bevVvX6To27x3PfiWMjl+psf+SyS6lK4G5F/kLgmKjwH+pAcc
rwyUBCDLAH7SB453tGyKulzO429lSgO/Y2ijH9wm/TDCXsba9ea2QTpnT7MR
/KQvRvRP+mJE/12u9jhqLed4bb100LXcJv0xYj+kPybgbDoe3ibkZ/J61sRt
0icT6iF94vZ7AYtdXpaZUM9fcdKF15qQj/SL85F+mZF/9acnNCe9zJhfMvsP
E8dJ38zIR/pmBl+v8lcrlpdx/IH02p1rOU76Z0Z9pH+J4F/7RFq4VyLqndm+
we2hMRF8pI+J4CN95PF9JHZFGbcfS3JWepv7k35ynPTTgnvcaCwaeldpgf+c
NGkCRgvqJX3lOOmrBfVKaqQvKbWAv/XzeduC+kl/LZgv6a8V/psvDsiZq7Qi
X3rdjZbuRo6TPlsRT/rMbXYu/qXcv0kh/QVRY0W9pN8cJ/1OQvzWid+87qxM
Aj6PCYQhqY2+c5z0ndsuTKAOcL7XK5avnVnDcdL/JNRD+p8M/h1M7jyTMa9P
pHErDdym70My4un7kIx8Q9gH4ADns2E/NRz/D1BtJvg=
                    "]]}, {}}}, Prolog -> {{
                    Text[50, 
                    Offset[{-2, -2}, {50., 0.7423500000000001}], {1., 1.}], 
                    Text[100, 
                    Offset[{-2, -2}, {100., 0.7423500000000001}], {1., 1.}], 
                    Text[150, 
                    Offset[{-2, -2}, {150., 0.7423500000000001}], {1., 1.}], 
                    Text[200, 
                    Offset[{-2, -2}, {200., 0.7423500000000001}], {1., 1.}], 
                    Text[250, 
                    Offset[{-2, -2}, {250., 0.7423500000000001}], {1., 1.}], 
                    Text[300, 
                    Offset[{-2, -2}, {300., 0.7423500000000001}], {1., 1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.2], 
                    Offset[{3, 0}, {0, 0.2}], {-1, -1.}], 
                    Text[
                    PercentForm[0.4], 
                    Offset[{3, 0}, {0, 0.4}], {-1, -1.}], 
                    Text[
                    PercentForm[0.6], 
                    Offset[{3, 0}, {0, 0.6}], {-1, -1.}]}}, 
                  PlotRange -> {{0, 199.02}, {-0.0073500000000000015`, 
                    0.7423500000000001}}, ImageSize -> {302, 182.}, 
                  GridLines -> {{50., 100., 150., 200., 250., 300.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.2, 
                    GrayLevel[0.3001]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                  AspectRatio -> Full, 
                  BaseStyle -> {
                   FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                    GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                    ScriptMinSize -> 6}, PlotRangePadding -> None, 
                  PlotRangeClipping -> True, Background -> GrayLevel[1], 
                  FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                  None], {None, "error rate", "rounds"}]}}, 
               TagBox[GridBox[{
                  {
                   DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}, 
                    Alignment -> Center], StandardForm],
                    ImageSizeCache->{314., {12.5107421875, 19.4892578125}},
                    
                    TrackedSymbols:>{
                    NeuralNetworks`Private`NetTrain`index$$}]},
                  {
                   DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                    ImageSizeCache->{391., {118.48046875, 123.51953125}},
                    TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                 },
                 DefaultBaseStyle->"Column",
                 GridBoxAlignment->{"Columns" -> {{Center}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
                "Column"],
               DynamicModuleValues:>{}],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"},
            {
             ItemBox[
              StyleBox[
               RowBox[{
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.083, 1., 1.],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
                GraphicsBox[{},
                 Axes->None,
                 Background->Hue[0.59, 0.7, 0.75],
                 ImagePadding->{{0, 0}, {5, 2}},
                 ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
               FontFamily->"Verdana",
               FontSize->8,
               FontColor->GrayLevel[0.4]],
              Alignment->Center,
              StripOnInput->False], "\[SpanFromLeft]"}
           },
           AutoDelete->False,
           ColumnsEqual->False,
           
           GridBoxAlignment->{
            "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
           GridBoxDividers->{"Columns" -> {False, {
                Opacity[0.15]}, False}},
           GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], 
               Offset[1.1199999999999999`], {
                Offset[1.75]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.8]}, 
               Offset[0.2]}}],
          "Grid"],
         FrameMargins->{{10, 10}, {10, 5}},
         FrameStyle->None,
         StripOnInput->False],
        Deploy,
        DefaultBaseStyle->"Deploy"],
       Alignment->Center,
       BaseStyle->{
        FontWeight -> "Light", FontSize -> 11, FontFamily -> "DejaVu Sans", 
         NumberMarks -> False, Deployed -> False},
       StripOnInput->False]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], 
        Offset[0.8], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Background->GrayLevel[1],
   FrameMargins->{{0, 0}, {0, 0}},
   FrameStyle->GrayLevel[0.85],
   RoundingRadius->5,
   StripOnInput->False], 
  StyleBox["]", "NonInterpretableSummary"]}]], "Output",
 CellChangeTimes->{3.8703173877306547`*^9, 3.870322493891736*^9, 
  3.8749850664941397`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"573eb6cf-acfc-4282-b5bf-24b7cc8b35e4"]
}, Open  ]],

Cell["\<\
I chose the car dataset because it\[CloseCurlyQuote]s quite small, and so I \
can demo in real-time.
We can see the loss on the training and validation set decreasing.
And we can see the predictive accuracy of the net increasing.
It takes about 30 seconds to get high accuracy on the validation set.
Once trained, we can extract the trained classifier.\
\>", "Text",
 CellChangeTimes->{{3.870319353179541*^9, 3.870319466172065*^9}, {
  3.870321492178154*^9, 
  3.8703214972181664`*^9}},ExpressionUUID->"436dc481-493a-4854-ae98-\
ffc8efad6c40"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainedNeuralLogicNet", "=", 
   RowBox[{"GetTrainedNeuralLogicNet", "[", "result", "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.870322194712606*^9, 3.870322209683584*^9}, 
   3.870322712711472*^9, 3.870322823222105*^9},
 CellLabel->"In[21]:=",ExpressionUUID->"db16a4ec-95e1-41d9-a946-025c87ea0139"],

Cell["\<\
Now, when we defined the neural-logic net we got 2 things: what I called a \
soft net and a hard net.
These are 2 different representations of the same network architecture.
The soft net uses real weights, and is a differentiable nonlinear function.
The hard net uses boolean weights, and is a non-differentiable, discrete \
boolean function.

Now comes the trick!\
\>", "Text",
 CellChangeTimes->{{3.870321479464013*^9, 3.870321515930093*^9}, {
   3.87032154969018*^9, 3.870321815428266*^9}, {3.870321847140533*^9, 
   3.870321847868649*^9}, {3.870321887117103*^9, 3.8703220009424267`*^9}, {
   3.8703221795930853`*^9, 3.870322189016119*^9}, {3.870322267488628*^9, 
   3.8703222947977324`*^9}, {3.8703260712296247`*^9, 3.870326165004257*^9}, 
   3.870326284314814*^9, {3.8703263151783*^9, 3.87032634371426*^9}, {
   3.8749852936477423`*^9, 3.874985306799906*^9}, {3.874985397792013*^9, 
   3.874985398095685*^9}, {3.874992189389571*^9, 
   3.874992223597212*^9}},ExpressionUUID->"471beace-3c54-497f-b2ed-\
e2d40ad7ebd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diagram", "=", 
  RowBox[{
  "Import", "[", "\"\</home/wright/Downloads/neural-logic-net.png\>\"", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8703281682321587`*^9, 3.870328239196637*^9}, {
  3.87032827053584*^9, 3.8703282777092648`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"251bf960-d576-492e-b02e-99402db120bf"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
/vvNdz1/3uN3X2WFedetRtRjnrtsvclC89911xo//9303vfsPNe4T27k1jHm
WO933v7LePXiyn8332jdcfO9uIa53k/kxhc987B52994+7lj6p542N4Tyn/r
cd76vVzUaOe/MV5dX7Mbv9MjHr7zfPlvfV31issvO+b3Ws/djjnn8l8AAGCS
es8b2vlvRFzDG2UxVzfmHKdG/hv5XCq5Wlxbusd2950vjnnk/OO/scZT87gx
dzqNk/82xxnreP4Jj5q3r8gNn3bYPiOvPuvIgY3/1mOjE8l/47XW2194y3PH
1I21pdIE8t86x4/1rqYi/40468kHzDtOff10nf/GGHOMDacyt7rr9xrXOMt/
AQCASeo9b+jKf2Mtqfqazzrq/DfmHdd50ulHj13z6Lvve9GYa1J/eM0F854f
+Wtd/sfPv3ruulZpnPw31ldu7jfWVo55x/FYzMWty+Oa03r/r3z24s1/6+8E
Ymz09zeMnZu9zX3vPfex9e65+tztay45Zd5+X3LKoWNeR6wXnSaQ/8b7Hdsx
9tpcV+vq858ysu8uW46c/LiHzL3+eFHy37iGOL6zaP5em+O/9TrT7bW+4/cY
v7NmWf27mmx+Lv8FAICh03ve0JX/Rrz06Yd25r8RMQ4YZbGecMyHjrJYAynG
i2MO7QWnHDK3LK4nrvPcyGkjh4oc8KTDHzJvv135b3vOb+Tcdf3D99tpbllc
d9tcr+vi0w6/S/nvy0597Nw1p9pRrwMV1/HWdR+221Zz7+0UaylHHlqXRx4b
df/8hdfOW3M5xs9f+9yjRq591anzcug0gfz3NWcdNa/syY/aY+64crzX9bzo
GD9v5sUTyX8jmut4pVb+G2PqURbXd3/klc+YW/aDD14wb/7zUQfsOq/urtts
Orcs/v+Jdbnq9bflvwAAwDimbf77t6+8fu5ay6kj//3qVefMGx+OnDfGDes8
N/KpX3zi4nl1H7Lz6D18IheMiOuE67HGieS/EZE/1/uJ9aY2Wm+tuePQsVZW
lD3r6Iffpfx3vIhrZet8+zH77DBuvfb9j9514QnzxsnriOtv6+upF5b/xvcE
dY7ZFbH214Je23j5b8Rj992xM//9xccvnvd7iYhrtOtrumP8PX7vdd3HP2KX
MedTz3mX/wIAAOPoPf+NvDJynmceud98j33uzWfOWwOpOfYX8fWrz507Dlqv
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
V+M9uaUc485ybKB/v8hxZY4vp7Htxh9z7NiqG3lQ5FTRRv48jbY/BzbqbFLK
oz2o27U6vpuq79wWJnLGN5Tn/KUc469ptK3tmv+8dpq/7euKj5bnRn7+mVL2
+xy3lp/j70NzvcO35fhWjg819vGM8ljkstGux3jzT8t786dU5Yy1FcpzXp7j
5ta5xHtYt5eXtB77bSnvmv98djnWPxrHjTrXp7HfMUR5jH3/uLyPdVv8tfL6
a1ek+fPfeA3x/8B/yjH+WbYfmQCA6SrGKuNv+rvS6Pf1MQ55Z1r49b/nl7Lm
WOX7c/yhdYy3pKp/EGMU9bzo6AveUerXIv+NPPP/yjlERD/xXmWf38tx31J3
pTQ6h++hjX3cVo51daq++w9HlXrXNup1zX9u57/3S1UfNsZKVi1l0W+qxx9O
azz3x6UsjlF//x9jCNEf/WqjXjv/jX+jL/idNDq2HuNBV5XXMVVz/IDJi/w3
Po/vzbFeKXtsKbu+US/GfEdKvXqMc9NUrQkY39fV46p1/hvPjzwt2t6Yi3xR
KT93Aud0Yqn7qvLcaFuPL/tc2PW/b01V29YU+d63W2WfStXfgseU7TjGMalq
p1/ZqPe2sr/4DvARqfq7cY9y7HjdX0yj71u8Lx9JVd65dSmr898498hxI/9f
qpxzfZ1yrWv+czv/rdv3OK/lS1n8e3ma/7qeOi9+SxodP35ceT3Nv09XpLH5
b4yDR7772TQ6Fyny5U+U13z/BABMR9EP+XOq8smml6apyX+jzxN9mjd3HDty
wchL65z2grK/J7bqvaCUt8dZYq7xr1M1jlyL/DfGKNpzCP83VX3Y2kTy3wem
asxny9a+1ij1LmuU1WMH7blv55a6O5Xtdv77krK9Tet5y5XXcW0C+hZtR7ST
y7fK45qH2xrbkef+tqNefJcWbd0VZbvOfz/ZqhfPi7zrfRM4p5iDEmOO7fm4
V6epyX93LM97Qcexr0hV3li3d28rdR/SqhftfuTK7XUQ43l3ptH3o85/b+o4
VsxJ+nJjeyL5b1y/E+9D+zqSrUu95zTK4nXEGHP7b0bMI/pP49yvSGPz3/iO
MvLfdVrPW6uUvz4BANNR5KrtPljYM01N/vvYUudNqRqHbcbF5bGjS906/22v
4RnjK/8q9dr7iD7g3xp1b0tjx2NqMZ/v1sb2RPLfprgOeadyDvWcw9c1Ho/8
9+Mdz9stjZ0L2M5/Y1zkzo7XFRHzIP/YsU9gsCL//UpHeeSpd5SfI4eLHPft
4+wjrq/9Yfm5zn9f0lEv2rD6e68YV9yzFZFLr5TG5tNNj09Tk/+eWp4Xa/q3
26a3pLFtZZ3/Nq/5DT9K1fcBXe1b5Jz1+1Hnv2/reD1xTt9sbE8k/22Kv0/R
DsfY+DtLvbMbj0f++6aO5x1W6tbztK9IY/PfOP9fjvPaYk77dzr2CQD0K+aX
xd/zrrUvN0tTk//Wc/QWFPU84jr/bX9n/50J7GPFUjf6jh/peD0fSWPHaSaa
/0afqXlPzJjP/MnUnf929d3q9/G8st3Of380gde2dMd+gcGJ/PfTHeXvSaPf
v8V1Gu02sinWBvx9+bnOf8/pqBd16utvj0/ztwcxprpB+fmijuc/JE1N/lu3
7wuKw0rdev5z2x8X8vzbS706/31dxz5uLFGbSP67ZCmr12GIiOtMbkjd+e8F
Hcet38d6HYYr0tj8t14LYrz4Tcc+AYD+xZy+j3WUb5emJv89utSZyHogdf57
z1Z5jLv8agLPD1OZ/z6xbEe/N9YhjXGXuP5tzVLenN8W+e8HO467U1rw+G+M
a9yy0FcF9Gki+W+sERCf7SvH2Ud8j1ffX2ii+W9cG9IeW9ytcaw3djy/XtPh
rua/zy3P236c19MU+e8/O8oj//xqR3nbVOe/Z5ft+HsUa2rX9+jbppQ/r/Hc
yH+b17LUHpMWPP4bv6fPLfBVAQDTUYxlRl64XKu8Hre9q/lv3d94Vcex4xqt
6O/U64SMl/++rpR3rSdyYY7nN7YXNf89slHWzn/jvYlr11ZMY+2e5u97Rv4b
63a1r8U7o9TdtWy3898Yy4l5jJt2nHOshfq8jnJgsCaS/4ZYuzhy3CVb9aKN
jHzzA2V7ovnvgny/RPte6/X6fHc1/92/PO/ZHceOdb4iZ6yvjR0v/63XuVqr
VR5zj16b4+llezL574MbZe38N96XuG64/Xs4vNQ7t1EW59eVo8f6XtE2zynb
V6Sx+e91qfrdt9fqjuuI47vRkzr2CQD0L+5NEX/Toy9T/13fMFX9vanIf0Nc
4xp9jP0aZZH/xX2MYn5c3X8YL/+Nseh/l/00+xp1jt4ch51o/rtzGjsvObTz
3w+W7Qc06sSapl8v5c35zvX6z821YrYox4x7ItV91Hb+G+PDscZKrCHavJ9S
fX/i5hqrQD8mmv/GPcLjcxttY517RW4X9wWKXKpeH2oq8t+Tyj6e2yiL7xv/
lKYm/43rLqJda9/jKdawjnnLt6TRNaPGy3/rHPqaNLq2crSFdY5ef7+3KPnv
IWnsvOTQzn/r+9A1193aMI220835zvX6z8c3yuK9+3s579oVaWz+e3DZjrW+
6/XO4rVdWMrP6HgtAMD0EOubxN/rGLuIez3Gei7XpanLf6Pf8cNS9xvlGHeW
4+zfqDde/hvi3knRX4v52ten0WuCY270qo16E81/7172VV+rFf2kdv4b47x/
L+cZ/aBry8+xvs0t5bXUol8VYwixxlbcp+lz5bmxRkpzbLfr/r+npCq//1N5
bTeVOrG2bHs9GWDwJpr/Rs4b6wLH5zfahPg8xzhktF1Pb9Sbivy3eaxYK+/z
qcrl6rZ7Ku5/FN/9xbUn0T5FW/uF8rxoSx/YqDde/hviO8b/ltcV70e95kG0
p3X+vCj57yblWCPl38jT2/nvIeWcI0+PNcriPk7RHsf3idGGN69ViffshlIe
16N8qTw3/sY0/xZdkcbmv6H+m/W78trq/Dr2v9Q47wcAMD3ENWWRB0f/I/oO
kR/GtWYblseXKdvNPs92pax5r4+YV9y8t2Jt2VI35rzFnN+YU9e+J0a9v/Zc
7FrkkWeV519WjtPuY0RZ1/rN+3Sc12Zlf9EHjX7OxuX467bqnF+OGfeEqu9j
tGep2xwLiP5m3O/p+aV+5LWrtI75gPK89pzquLb47PK8mCv+2DT/XGqgH9Em
7ttRvmeq1lvuKo/rF+q2bpPW4/G9VrQD7fuehVhTqqsNG8/Dc7wix6vLOd6r
7LvO3eq2fIvGc+K7vea1HyG+izyoY/9xrjE2Guve1+1aez5z1/6a4nXW7eIl
5TjNedt3K+e4c8dzDyzRFNckR7sdbWa0pVuV56/aqlP/Dl6QRu+9HPcnPqxR
L+ZTx9+euNY61uOOewQfl6q/WU27lWO055tvW/Zfv7YDOl4DAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAADA9LJnjnBwH9XT85XMs0dOxgamxS6ra
kXv2cOytyrE36eHYi+JhOd6f4/ocp/Z8LmHFxs/bp+o9XL+ncwEAGJSlc4zk
uLyHY++Z4yc5lu3h2MDUOS1V7cjWPRz7iHLsfXs49kRtk+M/Of6aqvz3mT2e
yzo5PpHj4EbZU1L1Hu7ayxkBAAxOn/nva8ux5b8ws8l/F+zkVJ3jI/o+kVSd
Q5xLM/+9b46jctyjlzMCAGa6Zaa43kTFXObx5hIvN075ZPPfqXiN8l+YHdr5
70Tbh0X57I9Xd2H576IcY7x2ssuitN9npOocN1uE59zVY98tx1Id5V3578Is
yns41X/XAIDp53U53pdj7xzfSlXf4l85rs2xQatuXO96YY7fl3p35nh3jnu3
6v0ox6Udx4rjXN/YPi/HF3M8Ksefc/wjxwnlsc1zvDfHX8qxIr6d4/DG8yea
/74ix8dy7Jbjf8pz/p2qeXTt6+6ir/SiHL8p9f6e4wM5NmrUuaacbzx+S6py
YWBmqvPfaFs+X37+Z44P5pjTqht5Wcz/vSWNtkvRhu3dsd+4rjjau3+Ver9M
1XWqzbyuK/+N7wIj5/xZGm2Po63qGp+O9vLbjXOJOcrRJq/bqPOEHD9NVZv6
4VS1fVE32vt9OvbZ9I0ct5f6vyj7WSHHW8pjbaeVOvcq23uX7Z1yXJWq9jT2
9eMcj+14fvwOvt54PTem0XHnU9Jou/zbVP2dCUeUY2zX2M/KOS7OcVsabcc/
lObP4eN3F3+Hjsvxf6XuHTnemMZeYwwAzB6xpkn0JSKfizzu6ByvT1U/4CuN
etHvq/tyF+V4aKrmxUWfLvoNzbVjos7bO471pTTaZwmvzPHHVPVRom9yXY79
UtV3ij5X9P+if/fgHCelqs8Z16E9oDx/ovnv23LcmuNPqerXPDHHq8q+vtOo
F+PPHynll5ZzeWo5j3iP6vVV9i/vRRz7yTn2Wsjxgemrzn8jR7o6x8NznJ6q
9uLnOVZr1H1TqfueVI1BHpuq/DNyykc36kWbFTn0zTlOzPHIHFeU58b3gPVc
l678tz5G1I/cL9qr76Xqu8AtGvWeW+pdXfYf8eoc/83xqUa9E0q9aMeifYvr
Zc9KVZsfud46C3hvDsvxrvL8Z6dqnnHk7/F94u866r+w1K2/O92/cez4buFp
qfr+IPLYaGebOf1Jpe5ncxya43GpytHjvd0jVdchX1zqRPt9ZHle+/rf+A7z
K+V5Uf+gxjHj783mjWPG3674Hcffmxek6r3+eNnfZQt4XwCAmSvy3/hbf3Sr
/AOlfO2yfVTZflqr3v1S1c9r9hUWJf+Nfb6wVe9ZpXy3Vvm+pfzpZXtR8t+o
d2Kr/KpSvnHZPjiN9vOaNkzVWPcVjTLzn2F2qPPfq1vlde52dtl+YNl+S6ve
Kqkaf/xVGp0/e1Oq8sP2NakXlX0cWLbb+e8uZfuS1vPWSNW8m4+X7SXK8b6c
5r9uJHLTaIOXLNt1/ntVq96JpfwJacHq+c/3ax1jUfLfzzTOJxxQys8q29GO
Rm4aY8rN8fH4XvVvqfp+NHTNf27nv/XrPal1bnH+8R3Hxxtlkf9GHr5loyyO
f0t5DACYfSL/jfGC9lyv56Wx13xFvchzu64xi+/rm32FRc1/t+qou3JrO3Ld
Q0r95zTKFiX/bfdFn1nKty/bb03Ve7Fqxz4+mqpx6rqvKf+F2aHOf3fqeCzm
t3yp/Fzndtt21DurPLZ7qq6p6Mphw73KY28q2+3896Vp/lyzFu1ctK0rNcra
7WS0cdeWfdRtdZ0PPrJVd+dSfnLHsZqmIv9tH6N+H15Wth9ctk9I84trT+q/
TxPJf6Otjpy5q22OsfcYF67ft/i7dVNHvbjG5a8d5QDAzBd57R0d5XWfp55v
d2MavSarKyJvrL+3X9T89+4ddaP/FNdlRT/ku6nKvetjnVnqLEr+G+fXHid5
Wnn+A8v2FxfyGiPq3Fj+C7NDnf92tUPx3d6vy89vLfVW6KhXzx15fKqueR0v
lwsx7/iT5ed2/vuetPA2qJmHRk4bbVHMLf5Nq97ypU6d/7bvD7RdGjufZjxT
kf8e3qq3Vil/edk+umw/dCHnMpH896bUndOGF6exryXy38901ItrqO9cyLkA
ADNT5L9/6Shv579xjVtcA3vUAqKZ/76jY59fTd3570qtenGtV+Tk8f175L8X
pOp6sH3SXct/29r5b8wl/ONCXmM9piL/hdlhQflv5JX13JY6/+1aF6memxL5
bJ3/tq+3qEW7dl35uZ3/1vNxjknjt0Grl7r19Rs/SFUbGPNZdm+cZzv/3bl1
Hnc1//19R93zU3f+e2irXjv/fXKa2vz3e+M8/4I0f/57fUc9+S8AzF4TzX/j
+qtYn7mdq4ZYj2rTxna9ZnJbrIEykfw3+pwxf21Oq7zOf+trxqY6/42cPa4F
W6OjbszRvk8y/xlmmzr/3a5VHterxhjnp8v280u9HTr2cU4aXbNgo/Lzqzrq
zSmPvbFst/Pfen2nzed7ZpWzRXl8z1hfi/y2jnofSWPHqRdH/hvH6Pq7cXma
XP77kDT+mHlc73Jh+Xki+W+cW+SuXdfqxN+xmP9cf4ch/wWA4TPR/PfYsn12
q16sHRX9hC81ymI9zZ+mseuY7F6eP5H895ZUzTlsz1d+e6l/Xtme6vz3cWX7
Ja16se5zvEffapRdVuq2r78DZpY6/31Dq/zIUl6v+bdt2W6vIxXrQ0ebF/OP
6/Wvoq2I9QLWbtW9tOzjoLLdzn/3LNtXtp4XY9NxLXK0i9GuPrrUO6NVL649
viONvVZjceS/by5l922d46/T5PLfyNVjDeavpbF/N+K7yD+k6prm8LA0/3zq
dv57XNk+tXXM+FsW3+Fe1yiT/wLA8Jlo/hu5ZozLRh4Za7fEdW7Rb4p+X4z3
Nq8te0V5blzjFnlz5JMxr/iHaWL57+vSaB8w7kEUfadY0+QX5fj1WtNTnf/G
PZ6uK2VvLa8x1hD9SarmdDfv8Xl24zU+ayHHB6avOv+NfDXWdo7PfVzHGu1a
XBOxTKPuq0vdmN8S6yZHbhlzbWN9gv0b9fYoz4/vAWPtp8hz6/nKzWtDuu5/
VK/XF9d+RA5+fKru0xZt2ONKnVgXOdrtmIMc92iLe7BFmx3XqPyiPL++t/ni
yH8PLGU3l9cX94v6cXkvJpP/hieWshtSdT3wU8r+Ip+v1xx7QKnz/VTl4Muk
+fPf+m9VjPPGGHy8x9FGx3sVv+P7NI4p/wWA4RO55nc6yqNPEX23Zl8hvqOP
66eizxD9jejfxdzAdr8q5p3F2qd/KPVi/aqDynObfY3zyjHa68nE3LS4B/Gf
yvN/U/YX173FfS1vKPWWKs9/6UJeY+TjP+koP6o8f5tGWcxnjvtA3lKOHf3a
WAPnQa3nRv+tzsk/nYCZKsYLox2IduwLqfrcR24Zue4qrboxJyW+E/tBqRfX
8sbYZNfa0TFPOq6T/XupG+1s5IrN+wA9shy72b7E93CnNY4R12REHn5QGity
7K+WOpEbxxycx6QqF4591vc1ekLZfkDr+VuU8mM6zr2p/luwcav8+FIex4+8
+6zG67lXqbN32d6/9dzVS/lzW+WPStUYcOwzvnO8IceOrTrR3se1NPHda9yb
7oiyr+b89RVLvV+WfcXYcnynuUEaK9Y87FqrMX733+8oBwAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
DC/9ABjl8wCzn885AAwv/QAY5fMAs5/POQAML9c7wiifB5j95L8AAAAMA/kv
AAAAw0D+CwDDy3xPGOXzALOf/BcAhldf/YDVcxyV4/4DPu7y5bjbD/i4s8US
jZ9XTNV7uW1P57I46BfD7OdzDgDDq69+wAPKsU8d8HHXKcd96YCPOxs8JcdF
je17p+q9fFE/p7NY6BfD7OdzDgDDS/7LRMS4b7xvlzfKVk3VfOEH93JGi4d+
Mcx+PucAMLz6ut5R/juzdOW/s5Hrf2H2k/8CAINW579n5Dg3x/dz/DTHO3Ns
1lF/vxzvL3UivpXjxam6BrVphbLPb5R6N5btpcrjXflvXBN8ZY7rGsd+ZY4L
cuyT4wtlX1/OcXTreAfkuD7HFjk+n+PmHM9uPP7EUh7P/2GO1+ZYv7WP1+d4
fo6H5/hSqRvHfFzH+xBzji/N8Z1S7yc53pFjm466TyrnXO8vzvW8HFe06u2U
4+3l3KPuTeX136M8ft/yGuN9+3X5eYfyePz85Nb+9s7xkTT6u3p3mv966/je
4+ocG+S4qtT7cY435Fi747UATBX5LwAwaHX+e3uOn+d4bqpywN/l+GOOzRt1
jyl1I498Tqryy+tK2Tsb9ZZNVb7371Tls89IVe4V9d5S6rTz3+VyfCLHP3I8
qrGvONb/5bgzVfnm0TmuKc89v1Hv+FJ2Y3kdkZeeVx57Y3ns0+WcX1FeW7zG
+zb28Y3y3DhWXF8bOfNHy3Of16i3bo7flOe/JFU55GU57sjxpzSar6byeDz/
k+U9e3OOf5bn39Sot2+Of6Xq+4QY+zyt8Z59uXHcc0vZ/5R6G6fu63/jGuH/
5vhuOfd4LHLbeH/3b9SL7wFuTdV7/LlS74Nlf19PAIuP/BcAhlff859/m6qc
tHa/VOWB15TtJXP8KlX51DKtfXyp1K2dUPZ5Qqte5ML/Lftu5r+R+34sx9/T
2NwsfL7Ue1qr/H2pyq83KNt1/vvZHEuXshhr3qeUv6n1/K1y/C3HDY2yb5S6
T2qUxXzja1OVN9bvT53T7tLa51NK+WFlO8aw/5OqMd2mY0u9Zv4bOW7k06u2
6r6j1K3HYrvmP7fz37XLa/tKqsbUa7HW94/LcVYoZa8tz31F67jvLOVdcwAG
wfxnmP3kvwAwvPpe/+rFHY+9J1V5X50rrZeq8camyMfeVfZR550xjvuHNDrX
uRZ52l5lf3X+e0kazS/37TiHyH9v69jXHuX5J5XtOv89ulXvdaX83h37rvPx
Oq+N/Ddy/CVb9fYt+6jnF6+WY+uO/R3Qqnd22W7XjffsF2ls/hs5633T/F5W
9rFp47kLy3/r/Prgjv2dXB47oGzX+e/9WvWeWsr37NjHIOgXw+zncw4Aw6vv
/PewjsfOK48150BvmeP0VM3j/WKq5vuOlFi21Ikxxi+nBavz33+UfyMPfWhH
vch/P9tRvmZ53qVlu85/92jV+1SqcvEuzyzP2a1sR/778Y56dX75kkZZ5MDH
lOPHNba3pNH34dhS561p7PcCTXGcm1plG6ZqrnhchxzX897W2GedG08k/63H
pzdN86u/N3hG2a7z31Va9Y4u5X2tKa1fDLOfzzkADK++89+uscLnpbH57wtT
laf+JVXXisY1r0en0etF6/z3l6nKWxekzn//nOOgVK3n9LM0fx4W+7mu4/lr
lOe/qmzX+e9OrXqRO/9+nHN4eho7xhn57zUd9dYr9S4s2w9M1TWz9fXGMVc4
vhM4KY3Nf+s5xO354iHmezfz35g7HdcFxzzymLf8+lJWj18vSv57Udme03Hc
Xctjp5ftOv9tr192dJL/AouXzzkADK++r/89peOxK1J1je3KqRr3jXqxHtTy
rXp1/rtc2f5aqnLZtli/KdbWun8azX9fVh47pGy/ofWcyH9/0LGvHUr908r2
ePlvrG0c1+Cu1rGPV6ax46SR/36zo149Znpio95fyutoenSpd3zZfmHZ3qpj
n/X6ziHGsmMcPNa0unur3qVp0fPfZ5TtvTuOe1R5rF7Terrmv67/hdlP/gsA
DFqd/8Zc5uZ1r2ulak3oT5ftOj9t58mx1vEfymMrlbIXl+1dW3Xr8dbIy7ru
fxT3VYrx5eZ1wPX6Vzu09vXqNLqWVhgv/z0yjZ3vW4t1pmIN5shDlyhl3yj7
3KJVN+Z6Rw49p2zH2lL/k+Z3dRqbJ29d9te+V2+dJ9f5745l++JWvfg+4eby
WPOcYp9XNrbb+e/mpc7Vrf3F6/xMqtaZXreUTdf8F5j95L8AwKDV+W/Mu435
urGmcdz/9n9TNSa5Y6m3UarypsjHIn+dk6o507Ee9F/LPtYrdSMnjvnMsZbU
E1KVu8a6S3F/oBtSlYd15b9RFrl03IOongdd57+xXtThqbp/bTwn8rs3N547
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
lDXHnJdO8+fvdf57TesYu5fysxtl7fnP65U657eee3iqvktYOwFMf/JfAGCm
i/z3062y+6Wqn/OGVF3L24z9y2NnLGCfG6ZqnnDUq+cGT/T63xhH/kr5OcZ2
/5iqvPYPOS4p5TuUfT26bL++bD+w43w/kKpx4TqPb+a/W5XnndVxHmek7vz3
uFa9e5TylzfK2vnvMqka64250nH/pZ1Tdb0xwEwi/wUAZrrIf69ulcX1vCML
iUsb9XdL1Vjst1J1jfBI499nlDoTzX+fV85p9Ry7ptGx5g+W/Yfzyv5XLNsf
n8D5zil1m/nvI8pjR3ecx2GpO/89pFVvzVJ+caOsa/2rvXL8rHE+kde/LVXz
pQFmAvkvADDTRa55Zatsn1T1c16RqmtYu+I+pW7M4Y3rhCO3i/HZWEsqxmd3
S5PLf7cp9Q7NcW6O36ZqnvJJqZobHeOtMUb8wcZzPpqqMd7xzjWia/y3zvNP
6DiPo1N3/tu+/9FE898Q1wHHNcYvzvG18rw471066gJMN/JfAGCm68p/56Sq
n/PGjvr3TFVuumHZjnWzbk1Vftt0cNnHqWV7Ue5/dEuq1rf6TI53lLLNy/Pj
euPIg5/YqH9peWzzjn3F2l37ptHre5v5b7yWyN0v73jeZWnq8t91cjwmVfeR
ajowzT+WDjBdyX8BgJmuK/8Nca+eWBdri1Z5zNmNPtC+ZTvWofpFGns9a6xn
/JlS7zmlbFHy38gHf5WqtZuPbZTHWsm3l3Nu3j+3XoPqvakaY63F/Yz/kqqc
t9Ze//n95TjNMdgYv74jTT7/jXw6cvTlyvZOqTvPrcvPTQDTn/wXAJjpxst/
Yx5yXKMa9+ONec1npuq+PtH/eXuj3itKWdy7N9aGinWjIsf83zQ251uU/Lee
fx2xUaP8ylL2mY7nvLI89pVyrhekau50XCe8R6NeO/+NtZl/mqrx2k/luC5V
c5K/W/a3bam3KPnvuaUsrleu13yOOdqRE8d7d3opj3w+1qdet+P1AEw38l8A
YKaLnO/McR6L3PN1Ob6fqhwx7qf7tDR2rDfmFZ+b49uNOieX8qvS6L2CV8hx
fRpdD3pB4rmxptV7W+UHlH08fpznPb68njiPuH9TrOu1TavOm1O1XnTTajme
Xc43Xm/MmY73JPp6m5U6u5VjP6j13FVL+Ymtspg7Hu/Fm0pZXH8c90j6Rjm/
uB/wa3Pce5zXAjDdyH8BAGa2yOe36yiPPDiuDV55sKcDMG3JfwEAZrYfpWo8
tnk9cdyTKK4b/mQvZwQwPcl/AQBmtriuN9a/ivWuvpjjm6m6TveHaey1xwDD
Tv4LADDzbZCqNani2uBYn+uYVF2vDMAo+S8AAADDQP4LAADAMJD/AgAAMAzk
vwAAAAwD+S8AAADDQP4LAADAMJD/AgAAMAzkvwAAAAwD+S8AAADDQP4LAADA
MJD/AgD065y+TwBgSMh/AQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0F
AOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjA
YGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6
pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBja
WwCAfumPAQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumP
AQyG9hYAoF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYA
oF/6YwCDob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAoF/6YwCD
ob0FAOiX/hjAYGhvAQD6pT8GMBjaWwCAfumPAQyG9hYAYPDWznFHqvpidfyt
lAOweMh/AQD68fIc30tVf+xXZRuAxUf+CwDQjxjr/VOq+mN/TcZ+ARY3+S8A
QH8uzvGfHK/u+0QAhoD8FwCgP/UYsLFfgMVP/gsA0K9t+j4BgCEh/wUAptqt
aey6xuc0HjvHYx6boscAFpX8FwCYavoXAExH/j4BAFNN/4LFyRgwMFn+PgEA
U01+wuKk/wpMlvYDAICZRP8VmCztBwAAM4n+KzBZ2g8AYKqZ/8zi5P8vYLLk
vwDAVNO/AGA68vcJAJhq+hcATEf+PgEAU03/gsXJ/Gdgsvx9AgCmmvyExUn/
FZgs7QcAADOJ/iswWdoPAABmEv1XYLK0HwDAVJvp85+XyzEnx0o9nsNS5RxW
6/EcpquZ/v8X0B/5LwAw1WZ6/+JBqXoNT+7xHOaUc3hBj+cAMNvM9L9PAMD0
M9P7F/JfgNlppv99AgCmn5nev5D/Tm/mPwOTNdP/PgEA089Mz0+a+e8OOV6Z
4805nptjzY76a+c4tdSJuCjHLq06e+Y4M8eqOS7M8ZpWnXj8kvL8J+XYOHXn
v3Ft8rE5Li91T8qxcqvO3jmenWPJHI8rdSOOStV1xTOd/iswWdoPAICx6vz3
Czn+m+PrOf63lP1fjrUadffJcUeO23JcX+Kvpe6JjXrnlXofKY9FnFsee3nZ
/kl5/h/KMdv57wY5fpjj3zk+n+O6HHfmuCVV+XLtxTn+nOM95Vy+kuM3ZX8f
XLS3YlrSfwUmS/sBADBWnf/+JY0do316KT+9bC+R46c5fpZjjUa9e+b4bY4f
NcrOK8+9MceGqcplo96epfzqNDo2G2PM30nz57+fTVVe+8BG2aY5fp2qHLf2
4vLcL6dqbDosk+NTpXyLBb34GUD/FZgs7QcAMNVmy/znS1vlq5Xy15ftZVM1
V3m/jn1ck6pctVbnv4e16sW+/pNG89TaI9LY/HfLsn1Bx7FOL49tV7br/Pfh
rXpHl/IDO/Yxk8z0/7+A/sh/AYCpNtP7F3X++7RW+d1K+RWt8hhb3THHkanK
PT+UqrnOdzTq1Pnv5q3nfi1VY8htq6ax+e/RZfu9qcr/mnFVGrteV53/btTa
50Gl/DEdxwMYBjP97xMAMP3M9P7FeOs/d+W/j83xu1Ie47gxbznWmop5zl35
771b+/xBjm+Pcx5x7XGd/55Snh/XIV8/ThxS6tb57/qt/R2Y5L/AcJvpf58A
gOlnpvcvJpr/3ifHP3N8M8fOqRoHrsXaVBPJf+Oa3t92nEM917rOf59Qtg+d
wPnP9vzX/Gdgsmb63ycAYPqZ6fnJRPPfY8v2E1r1ls/x+xx/b5SNl/8+v5Tv
0Co/JI3NfzdJ1XjwOzrON9bl+mqqcvAw2/Nf/VdgsrQfAABjTTT/fVgavSZ3
2VIW61h9oJRHvlqv6Txe/rtOjj/muClV48nhAam6z1J7/ed3l7LnNI4X62TF
PY5uTqPjz/JfgG7aDwCAsSaa/8b9j95VyiKHjXWs/pXj/TkuLOU7lbrj5b9h
j1TNgY7Hf1/+re8J3Mx/V0nV/XujPMaW/1x+jnsCb9aoJ/8F6Kb9AACm2kyf
/xxrL++ZqrHZtii/X6ss7hH8xBxHNR67e6m7XtmeU7aXTd1izvTBqVrnOeZC
L1Hqb9hR9/7lWHHMfdLoGHNtw3GOtUYpX2ucc5gpZvr/X0B/5L8AwFTTvwBg
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
2u2Za3PF2DPcnE72WLmtdu1aeetpuHM9NzbV1vXNhxaEuzdvUub9GjWsH76y
4dJcO+XvM044rEy7g/bb/P6Vyb/q/61TO9v/q2zlP3f3ovFh/Xp1E4+LcpDf
Vvmq8/57JbY9rOM+LuMVy7/aT+W5pNePO+uEvPdSBi/0+1o1Z2Su3ZRhvd2y
DvvsER5xUNsybZWzS5l/9T2LfT785euvHJV7z+88ssgt88cj2+v82rVxw7zv
Qn727LKwfZs9EvdZmVdZ1T6f8dL3EoXGP3/r4QXhXrs3S3ydvif4yzvrcm2V
p+336X/+rEadcRz5FwCA6uWTTP03U5+mvSFANbPd5d83brs8rFUrm0HP7HW4
mwtIczwpAwZRZlW7L95eFzZt1CDX/6nsqb44y0v1dqqb69fy84Xy7MSzT3T9
id99dFFe/lX2vXLcADd38ORzeueWXzzyFLceZZVDD2jjlu2xW9Pw3msnhC+s
mxl279zOLVMeUWZR21vnj8nLI9qPB66blLvGM6hA/tXx2Ld1C1d638DLLso2
/jzQ33tssdt3254Vs4a7benWaXOO1HZbe/UD2nton9Unrv/a78DvW07Kv8qt
/nFSX6b6nW2Z+h7VTt8h2DrVX6/fszK8HY+uB+5bJv+qOrZtFT6ybEr47OoZ
Ybu9Wua29efP3VCu/LtzvZ1yx84vv895a/PvTnXrhNdNP9t9Xkb2Oza3fNGU
wbl1qI/VtkPfU+gz6n9f8NDSyUX7f5Pyrz7XB+zbyi3T9xxzx/Z3vzd9f2Nt
dYzj+Velz++TK6a5atUi+1nSOHr1UZN/AQCoNqYH2fx7cdobAlQz213+VV+U
2jVr0jBvnOsl5/V1y/feo3lumfomN62c7vowbdk1kwbl3sv6Lv38Gx/j6udf
jYu25coYysparryiZZovydpqLKm11X2MbLlyhZZprGsQ9Qf62eLB6ydVOP8W
K7VR5rXXTB3WJ5fl1Udoy3WvH8uah3Ro45apL9vWM33EKXnvrcf2nM0TlZR/
1aeox8ce2j7v9Scdmc3V/XocmnecHr1hat7vVWN31U7blpR//THbyvK2/K3b
55Yr/xYqy+WVyb/6HsXaahy95Xv1c2vZT59Zmls2+4LTcm31HYk+U/qewPaj
0PW/SfnXb3vT7HPztll941qusQF2vyQ///rjs6+acGZuub4Lqor/FwTkXwAA
SkHzXX0RMO8VUFFVcs5bkfyrfsAg6l+16x5V/lhiuxbT8qsygPrPrH/QynKx
n391TWeh/Ov326mUtbVc763HupbX2o4+s0fe9tlYZGVEtbVt0TXC/jq17baO
8uZf9fH5961VX5+yk+XzNq2a58a7Wj/vwe33LrM+9QkGUf+prgP19yeeJ5U7
7bkbZw5LzL8a+2xzcKlf0T8e1ifuf1+h+ui++eHiqYNdTmvZvHFufRpTnpR/
/WuQdW2rLffHmhfLv/u03i1vu6y+/fDCLebfm68onn/1vN/exijos6HHT900
PddWfdjFtrci+VdZ2pbF7wmsvn17zuYFt/yrMfp+W//6gaTr3Mm/AABs1/qm
vQFANbTd5V9d82ltC5X1YWneKetfU/bQtZ7Km9busxfK5l/l3UL5V/2L/nNt
92yRl39vuOScLW6bjZW2azM1z5a/TuVUa1vZ+a+U121dGlutZXat6XGHdSjT
Xttm7TWHl/rC7bHfV6xS3rPnNF+SlsXzr8agb+l4WOZSn6fmMbPlGruuPnIb
T66xuPbeln81vtjfJo0VtteXN/9W5Prf3Zrm519/bHdS/tX3EH77xg13zsu/
+p1YWxsXUKgqkn/966j96+FVmjvMntN14Fpm+VffN/htb5l3AfkXAAAANUmV
nPNWJP8e37WDa2djdAuV+ittnZeN6ZcbU7t85uYxsknjny0TW/n5Nz6WNJ5/
lXes7Zu3X150+w7vlO3H1vWr/nLlTFtHZfOv33+na6S1zPK/so5/XbBKWVzP
KRvqOc1BbK9XtvTbanywPWc5L2n8s2W+8/sXn0NJ2+evz+Yo1uu0LGn8s65j
LrRNpcy/lg93aZDfP6rcb++XlH91/Pz28fyr64KtreZZ9tvqu5SN80fn5lbz
86+udbZ2SfnX/zx/eO9VeevVNcbxz6jtn9/HriL/AgAAoIapknNeP//qHN7u
Z+qX9ctqLh+10/Wr/lhljZfV2N5JQ09yj/1rM/2xu3Y9qSpp/LM/n7GqIvlX
c/naOGfd68ba6Zpe9Vurncb3apnf16prXrVMmc+fJ6m8+VdzJ8WPl/oTbftU
do2u7g9ky+ZPGJhbl9rbtltWVR+wzROtfljLtLpHk/XLKtP99tVVbnlS/tX1
vUGUt7U+LVMft76/UB/0shnnuGX6vamdP9eSvrOw+biTxj9XVf715zqzsQXa
BxuLH2xl/tU6bI42jUfX/YpsHfa70PXaWqbr2G29/rXJSfn34/vn55Zpfi0b
+67PhY070Bxf9v0H+RcAAABwqjz/FirlMMtkLZs1zvXH6Z6muneutdP8zGrn
X5+q++Dqmk6bc8nKxvSWKv+qdE8fa6++ao2dtdyj9hoTrHa6B45lH43j1b2b
lPWU65Vngwrk3y2VxhHba3Rdr/qc7Tnlcn/uZ/Wz+nMnKyPbc9oP3UfW9kel
PmZrm5R/lbu1f1qma7aV75V9rZ1d9+r3Veu4aR7vLh32zi3TMbE+4arOv/41
s9oHfT+g/Ogfh63Jvypd62ztmzfZJTyqy3657xw0Nvx/nrrOtdN3PdZO47D3
bNnMfe9Q6P5HNk+cSv9e9F2DXX+sbO3Pb03+BQAAAJztLv+qvnb/1a6/zH9e
/Yaak1hzLlm7OaP75d2vV+f3Oqe3vjW7p2wp86/mY9L1l/YeVuor9OdhVum+
Nsox1kZ5R/cismucK5t/NUe25iC2zG2lMd6DTuqWm5vKShnc8pZfGovrz0UV
RJnq9msuzGuXlH9V6lv27+sURFnaxmTbcdP9rPw2+j4gabxuVedffaaG982/
l6++M/DHh29t/lWm13GzbGqlebk0l5m1U1+tsrHfRpm0UP7V/OT6/MfnudZn
1s++5F8AAAAgp0rOeXXvnaQxz0njn/3SObnmsNX1kP6cz37ptepj1LWWNheQ
xilrub1G96ax9/Hzs+UIe07b6T9n64lnZpXy30s3z3Jjn5XXC+27xvgqq2ku
YBv/+ulz2fXauOJCpbl9Cx2v371W/LUqbfeL62aFTyyfFv7g8WuLttVx0Dhy
He+375ibu4+xX8WOo/Kb+oI155Nyv/qhk95H17sqx6r/XutQ2Trt+Gj8ddJn
Qjnf2vr3UEoq9b+rXfx672KlewDpWNk1tXoPez+bh1rHxZbF99He0/9uwP83
oM+Bjo8ybfzabPsd6DsAjZfXvam29H4qfeZ1vPV703qtD90v/TvQ63U/Jn+5
xqHH929bV0D+BQAAQHqq5JyXoihKFZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7U
z4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7U
z4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQAAkJ7Uz4cpiqo5FZB/AQCVNy5T
d2SqVgrvPTR6711TeO/twT5Bdv/7bsVrJ2dqYwXaN9+K9wC2ZJuc437vscXh
ro0bhp9sui718+3qXP/8YEN4wYDjw53q1nG5YfzgXqlvE7Xj1Z/eXBt+fP/8
KnmvgPwLAKi8u4Ls35PaKbz39dF775nCe28PDguy+z9zK177cKb+Vc62t2bq
zq14D2BLSn5++6+PNobHd+0QXnJe39TP66t73bN4vMsLOp7zxg8IX75ldurb
RO1Y9fmLK8K992geLpg8qEreLyD/AgAqj/ybnkaZ6pWpNlvx2ork3/8XZH/P
QKmV/Pz2zoVjw4Y71wt//cpNqZ/bV/e6asKZLi9848FrUt8Wases7z++2H3G
yL8AgGrEz791MtU2U0228Jr6UbsW5Vj/XlHbJMXyb4Podc3K8R5to9q5HG31
Xq3L0a5UNLa7baYaVvB19rtoUOD5eP7VWOpCv49i+bd19D51K7h9gJT8/PaQ
Dm3Ckf2OLbP8b++uD19YNzO8df6Y8OlVF4d/eGN14uu/eHtd+OqGOa7d/Usm
hj98YkmZNj/edH34u9dWuZ/fvmNueNvVY8Kv3X913nttWjndZfH/eSp5DPbf
31ufe5+Xbp7lXlOe/fv0uWXhr17OZvs3brvcvceH915VsP1f373ZrV/vo/f7
x/u35D2vMc4aJ/7nt9aGP31maXj3ovFum7WPk8/p7fLCm7dfXmYs+ecvrQgf
Wjo5vP2aCxPHrmp9es2XH24I3797nmv7m1dX5r2ffn5x3Sz3nv5x1rF9ZNmU
8L4lE1z/YNJ+6Rg8ddN0t1+PL7+ozPcdOr56H+2/frbffbFxtp+9cKNbl47p
dx9dVPB4apu1rtdvvcztQ2U/s9qXJ1dMc5+jbz60oOD7Pr/2Eve+L6+fXebz
8tWHG93+/vHNNe7nVzZcWmY/dMwfu3Gq69f/+XM35L1ex/wnTy91P+v3r9/J
s6tnuPdN2h7t93t3XxnesWCse59ix7XQ/ml7tC/6jM0Yearb/lIcz2IVkH8B
AJVn+XdIpn4b/fx/mXosU3vE2u4WZK9X/TJqp/ogU0cnrHd8pj7z2v0uU5cG
+dcZJ+VfXad6T6a+ip77b6ZezFT72PrVd7ouU3/x3kOveSDIv554UabeztRJ
mfrEa/vdTB2ZsN3+dvw02kbf9Ex9mqmxseXrM/Wh9/igTL0cbb9tm45dk1gb
rWuct0x59+Ygm231un9makG0r6967Sz/9o/WYfv1UbRe6ew99/fo517Rc8Mz
9QvvdX/L1JqgfN8hAKak57Z2Lq1zfH+58tseuzW1z6qrXRrUD9ddcX5eu7Vz
zw+bNmqQ1041rO9RLlNYuwb164VThvUOjz20fV670Wf2cDlA4zltWZ3atcP1
V47K385bZodtWjXPe+1euzdz27+lfdxv75bhWb27hT26HuBe16xJw9wY5V++
uDyvrTJ4fL/b7dUyfPeuK3NtlHW0/MpxA8Imu2T3Xceg3k51yxwHjS1Xzb7g
tDLPH9VlP5eZbb13LRznll83/eywVq1a7ueTjjwo937XTBoUtm+zR+71arP0
4qEu09p22O9J+d3PXROHnBjWrVM77/3r16sb3jhzWK7dO3de4ZZr2T6td8tr
e9rxh7hM7GflcWedkLvO2eqcU4/Ma/fE8mlhy+aN89rs32b38IN75m3V51Xf
DSj3advj26dsaO0eXjY5bNks/31btWjqvsfx86uWXzamX9ilw955bS+/sL/7
zO3WtFHe8VLWt9fPGd3PjZtYNGVwWLt2rdznavfmTcJnVs3I2259lxD//Npn
QN9x+Pt38chTyuzf6T2y+2fj6/1K+r6J/AsA2M5Y/lWmvTzI5qPZQTZbfSNT
O0XtlMu+lan/zdQ1UbsRQTYjqu0x3jovj9b5QqZOz9SpmXooWrbSaxfPv3qP
bwfZzDfHe4+fZ+o3QX6/7bOZ+o+3zad6+7Lea6csqez3RaaWZWpgpuZH2/wr
b/+SKNv/LLbsjeg9nvCW1Y3Wf2v0eP9M/TnI5v8Lou2bkal/ZOrdYHNfa9L1
v08G2f7a66PXTcjUH6Pt/ZHXTvn3v9E6F2bq5EzNy9S/M/XDIPs9gzL8qKjd
O9HP6o8/PHqPxzPVJ3qfNdG23FDkeKDmKjR+oaTntjPP7+tyVLxvVxmlU7s9
c/lM/UxHHryfyzs/e3aZW6Z+XL2273FdXB+rlqk/7IwTDnPnzOqP9POv8pdy
6HceWeT6TXt1P9C1U8a4fvpQl0XVP6v82bzJLi4L6LU/ePzasFHD+uFB++2Z
y01ah7ZHy/X8lvKvtlN51/rwHrx+UrhzvZ3CE7t3yrX76L75LncccVDb3Phl
9VEf3H5vt42/eP7GvPyr14864zjXv6i8Xqj/d/6EgW6Z5sXSPqo/+d5rJ4SN
G+4cdthnj/Av76zLy7/aJ42j1ncLylH2fjp+ykY6dt96eIF7rbZXOU+5SOvW
9xhadnSX/XP7tWTakFzOU1+nlqkfUq/XOq1v3PKvfsezRp0W/ujJJe7YDujV
1S33v/vQdgRRH6Q+OxoDoIyvZbru2d5D61LG0/baMdbnStsc/+6hPKXvAPQe
Ywf1dP3X6tNdPHWwW6bvV9RGnyHt1+Gd9s31sWpbOu+/lzs21vdv+VdtleV1
nLW/h3Xcx30Ho228Zd4FbjufW3OJ+311bNsqL//qc6XvPtTPbJ8NZWl9B2H/
drSdanNgu9a5vtzfvrrKHTu9/xVjz8it8+qJ2c+Ktke5WPunfK1lU4f1of8X
AFBdWWa8KLZ8erR8aPR4SvR4Yqzd3kG27/D96LHG4CpLK+fVibVV3lIW6xQ9
judfe89hsdd1CLJ90qujx7pe9o/eY5/6OL/jPb45Wue0WLuV0fJuCeswc6M2
HaLH6nNW/le/qfKtXTPdK2rXL3p8f9TugNj6hkXtRkaP4/n3uOjxtbHX9YiW
x/Ovlo2Ktb01Wt7OWxYf/3xp1KZz7LVqc10AlKXvmjR+Qv9meweb83BJz22V
TfZt3SJvmc65dV6vvjx/ubKgspTylx4/cN0kl2FtDKiVxu5qO5VL/PyrDOmP
DVVWU7uzT+6e93qd52u5rVdZR9uj6x79dsrcyi4ThhSfY1n5V1lVY3X95cp4
eh/LukP6dHf5KD7OVVlb7ZR3/PyrnBN/r7lj+7vn7Bhpf5Vnu3Vq6/qB/bbK
t4GXKy3/xueMtvdTLveXWy5SVvaX9z7qIPee/jYNPPHwMu+vvmO9/q3b5+bl
X/Wl+u30e9DyCwf2zH0+tP4TjjiwzP7r8zC879Hu5zN7He6Oezznfv2Bq3P9
5xX5rGr71YerfBrfF+2fbbf6SvV7tO9krNRPat/B6LHlX30P4I9VWHP5eW75
RcNPznu9Ph/6HFr/tj4Parf6spF57ZSvg6gP2Y7rKcccnMvIVvoeRNtjn39t
g7776XrgvmX2T8dS+6Wfuf4XAFANKfOozzDev6PrbpVVb48eq79VY3jrJ6zj
nqitsu/ZQXIuk95Bft6L51+NF1ZfbTw3S1JfrE/9uEcE2f7oT7zlln/bxtqP
i5afWGSdB0dtpkSPNdZY+zk5yM/ON0TbrbHDysQak/16wvrqBdlc/ED0OJ5/
r40e75/w2u8Fyfk3fq32jNi2STz/Dora6Jiqf70813FXFfXNlxlTR2039X/R
f/V5H6yfS3luqzHExx3Wocxy9R/qvTT+9qbZ57r7IxVbj87d1Xem8a4aa6vX
qi/Lnlf+9ftaVeo/Vjv1/frL1X+o5ZZ3Nea3dctdXb9XvDROV/3CxbZN+Ve5
LL5c13vqfVbOGeEeq7/vgH1bJb6PsrvGbqud5dFJQ08qs854/lU/sB4rq8bb
Wv4697RsXrT8q+tI/Xb2fupb9pdvuGq0W64x2/Gcpn7XpGOhflrlffU/Kyfr
9a9tnJPLaXocz1X63Sr3Wa61fbrhknOKHnfdT0t9vUnHU/2hPbt1rNBnVdfl
6n11jIu101jwnocnr1tjBlrs2ijx+Ftp3IKW6/fhL1efrJbr3kN6bPlX13XH
30efV403SNoGjZ9Qf/LCKWe5fmZlWy2371n8/uCkIv8CAKoh5aLPCjynMb0v
Rz9rXPKPC7SbH2T/JinPWf46PqHdvtFzN0WP4/n3x8GWz71N40zNytQzQTbv
/idq8+/Ydlr+bRzbllHR8t4F9sn8JFNPRT+vCrJji5tH7zcrWq5lj0Q/77aF
fVC9E7WN59/7osdJY7KfDsrm338ntJsWraO7tyyefzU2Wv3flmVUum5YY84b
JawT0GdEn3l95jYF2XEfbnkpz23VP3fqsV3KLFff2aCTuuVds6ox0crC8Qym
caa6/lFt9F/l0SAh/9p5vpXl3/g6bQ5ly78adxoU+fdteaZQKf+OOP2YMsu/
/fBC93r1Q2oMqV1zW6iUw/U6//rf+Drj+df6uDfOH524bTouJx/T2f1s+Vdz
KPlt7P00ftlfrnVqueaW8perP9HPvxpfrde23bNFbl903aqOi37WHF9qZ/l3
+czhZbZTv1dd062fH71hamJO90v93sWOpUrZuCKfVW2nXrfy0hEF26hvWm2G
nnJk4vMay63fs/pXLf/q+xq/je2fxsj7y9UvH8Tyb6HvGTSnnD9WWr8jZXL9
e/P338+/8e9jChX5FwBQDSkXfV7gOfXxPBP9/M0gO7Y4ieaY0t+kLsHmMcwn
JLRrHz13Y/Q4Kf/qmtxRRUrZTVn2+0E21+ka4yVBdpy28vXXg+T8G8915c2/
y4Ps+G5lUuXPNdHyjzP1nLdPI6Llln/fKrIP/aO28fx7d/Q4af7tl4Ky+Tfp
/kflyb9G11OPi9b1RfQ6Hb+k/nfUbPqsaQ62+Jx4JT23VbbUvFCFnte1nRrn
rL4vm8dI40P1nHKSHqv/WGNANY5W15fqmssgIf8qT/vrLm/+Vb+sxoTqWsek
io+/jpfNfxVfbnlv2YxsP6ayjMb0Fnofu+7Z8mh83LEqnn815jVpH1UaR6tc
afnH8m98nKy9X7zfs7z5V2ODg6ifU9cJ6xpcjb3VPFdBQv5dMat4/tUcUmoX
n6PML127rdeoj7nQ8YyPT95S2fZpDH6hNsq1GlNsY4XjpTEIyv762fJvvB+/
IvlXWTrp+lvNmaa+Zv2sebSUczXOWp81/X51TbC21c+/9u9B858VOw7kXwBA
NaRcpH6deP9o2yA/qz4StWuasI5N3jr6Ra+bmtDurOg5G08cz7/Ksrp2eJeE
1yqnWqabVOQ9lJ9/4j2ubP7tFbUbHv13ULRc18nq+wFdS6s+MZtzWvlc1wZ/
lLAu5coBmeoYPY7n31nR414Jr9Pc3KXKv3r/M2Kv09jsR6PXFpsXGzVTPPea
kp7bqo9K8/L4y3T9q8Ygqz/KX66cqfN9y5Lqv9K4YH++X5Xu26PttHmQVJXJ
v8qkyiw2d5OVxuUqE+oeMcX2UflXfZ/x5cp5eh/bz0MPaOP6kuP3ydH+XXrB
6e7eTnpckfyra479scN+WX+f9etui/yreyHp/ZPyoOaL0uuVz/S4vPlX+xYk
9JuqtJ861srXGgeg61nj949S37COZzxfbqn0XYzyYlLfrjKsxhz//vXV7veo
OZjjuVS/V83RrGux9bgU+VeP9Tn22+l3ruNlx0ffO6hdfJ42+71qvjg91rZr
/+LX3asmnn2i2z8dA60nIP8CAKoXm/9qbmz5+iA/C9ncTYtj7TSXsPLfi9Fj
XUf8pyCb1fzMqXylObF0/eu+0bJ4/h0fPV4Qew9d16t8/Xz0+Kqo3Zmxdnbt
sT+eu7L5t060PzbG2nJun+j1fwiyfbO+26Ln+sWWT4yWz48ex/OvjoPyv/qO
/fv+2nzaW5t/dcwf8h6vi9p0jb32xmh5pwAon5Ke2ypLaIyzzUGs0nxFyk/q
F/YzhF33qXmj9Fj5RvPc+vdv0bWQmi9Z7ZRxbHll8q/ul6rHmj/Z5oRWqS/N
355CZeN8/XGz6svVtc8a021zH1ke1rxH/vxDlmntGt6K5F+V5mXS8fTvSaQc
071zOzdPk91vdpvk35ey+VfXc/v7pDnKNIeVXm/36ilv/lXpOwm93uYOU+ln
fU9h34/Y/FqXnNc3b102T7R/3bfdp1cZsNjv0sbk25xdKs1TrfnC7Rpv+z3G
x4vr9xp44xdKlX/Vp2zfmejzqeOkY265WGPv1U7/fmxdaq9+Xy238e8q9dXr
M+Fnau2fcrtdP2/zkdl811a6blnH0P83UooKyL8AgMpT/lU/5l+DbG67IMje
+1d/Y/x7FWlep03RcmWvMUF23LPmetK9ifz5hs8JsllRee3iINvfq3G1/w02
9/1KPP/qvkCvRcvU33xhkJ0T6k/R9tl8xcptunZVOVd9wMqyyrm6b9Kn0X/t
HkOVzb9i45L9Pl3lU7tH8eRY+1ZBdo5o5U5dM6xjtSHa5h8Em8c3J93/SPcV
/m+0b/rdvBdkxyYrZ//Qa1eR/PuzqK3m3dJ8X5qXWvdN+nWQvWfSqGg7tX1P
BUD5lfTc1uZQivf12j17NI7zvP7Hutxh14yqT1FtbJ5czR+tOZjVb6UcYhnF
n9e5MvlXpfsMaZmuwT2//3G5+bk0xtS/72tSaZs1hlrXXiojaTs1N5NKmc/a
KQdrG7VeZXu9j8Zd67FeZ/3cFc2/ytoa+6q+PV1rrT5S9Ysq5yjbW7ttNf5Z
+6t2mutbv6d+PQ51v0vNk6Xlq+aMdO0qkn+VyXTPZh1T5V1dV6uf9VmwceLK
YXYvLH0nouOpvlk97nN057x+Yd1DS8vtPkmFSveg0rHU50vr1u9LOVz9vTZH
m/971O9P72v39x0zsEfue4BS5V8dB/070ftoTET8s/H6rZe534cyrD7H2gbd
C1jzeev7F7uuXKWxF3qs/dMxVR7W/unzYv8edNzsvsSa/83uTW3vrTnOyL8A
gO2M+hbVN3h0kJ2XSXlW9w9STq0Va6tMqaym+wArj2qcsXJTq4T19gyy18f+
NiqNbY5nTd3b9vUge82s0fzSlwXZ+baUy3Vtsu4ndGDstbqGVvdcUo77LGqj
+ZqHR+s8JGo3I3rcIPb6U6Plxe5/ZE6J2k6JLV8TLd8r4TW7B9ljo+8A7N69
etzca9M+ev3Q2Gs1d9iG6Dnd40nzQet65294bdSHHO93lsHR6zp6y3TclaP1
3cDwaJm+Q9D3HL8Mssfwu0E2C8ePE1BMSc9t1d+mPlzdSzT+nOZh0r2HNE/v
4D5HuP68+BhkzfesfKU2Gu+peW21XPf28a9j1H1b71syIe+1uv5TY6T9DKrS
eFwt9/uVVbruVPlNfY/KN7pvUHxsbaH8q7ys+zfpHj7qj1XfoN3PN17qR7P9
Vka8/ZoL8/rUlJu0fTZu2C/18eq5+P2UldF1vbSyovKn+qzj93PSfYH0WmVL
f7m9n99/rNJ1vFqufOwv1/Xa+v7CHqsPX33fel/dh0f9sZprWH2Qer3a+7+P
+HhelfKcxrX7y3QPW/WJK6cpv+p3rGV+G2VNvU7HXcdT4w2U+eN9lMr+Gt9r
feHFSvlTff/KhtofzZds38n4pfcdfWYPN4e5rl+Pf0+gcdja3/j82To2Wh7P
4k+umOaWx+9/pH5vLVc/rt7H5tP2S/3tdgxG9jvW7a+OwePLL3Kv9f9daf/0
by1v/2JzTOuzrH9vyty2nZo3S99rxMfvV7YC8i8AADsS5WHl12ax5TYGe1OV
bxFQXEnPbVUaR6m5rcqTJatjWf5NezuowqXx9+rjtL7V6lCWf7c0/1pVlfqO
1Rdd6vUG5F8AAHYkxwbZv+0rYssvi5ZPrPItAoor+fmt+kE1D7T6OdM+h98W
Rf7d/kvfwaj/OO3tqEhtb/lX/cW6/rfU6w3IvwAA7GgeD7J/33Wtr8Yx/yB6
rLmZa6e4XUCSbXLurGs+de1mqcdObg9F/t3+qzp+7ra3/LutjmFA/gUAYEej
a64HBtlri+8Istf/xu9VBGwvtsk5rq7T1DWVuvYx7fP4UpeuZ/3w3qtS3w5q
xypdd/3y+tnVMrtXpALyLwAAANKT+vkwRVE1pwLyLwAAANKT+vkwRVE1pwLy
LwAAANKT+vkwRVE1pwLyLwAAANKT+vkwRVE1pwLyLwAAANKT+vnwjlyvbZwT
zhs/IPz8xRWpb8vW1pcfbkh9G9Kurz9wtbunEsei8hWQfwEAAJCe1M+Hd+Ra
PHWwO9//xoPXpL4tFa0fPrEkPOGIA8MfPH5t6tuSdn314cbw0APahEumDUl9
W6p7BeRfAAAApCf18+Eduapz/r1m0iC37eTfbD110/SwQf167j5FaW9Lda6A
/AsAAID0pH4+vCMX+XfHqo5tW4UTh5yY+nZU5wrIvwAAAEhP6ufD1bk+vPeq
cEif7mHrlruGuzSoHx53WIdw08rpuect/76wbmZ4wYDjw5bNG4e7NW0Unnb8
IeG3Hl5QZn0PL5vs1tG0UYNw9+ZN3Lq/99jiMu2eXT3DrWOv3ZuFdWrXDtu3
2SO8cGDP8JcvLs+1eenmWWHPbh3dNg7ve3TYYtdGYasWTcOR/Y4Nf/L00qL7
dfmF/cO2e7Zw237kwfuF4846IfecXqt9adOqebhzvZ3CQzq0CZfNOKdc18Zq
HPFNs88NO++/V9i44c5h987twqdXXRzOGnWau77W2ulxvx6Hlnn9hqtGu336
xfM35q1z+czhbnyy+mfb7dXSZdRfvXxT3mu1vjWXnxfOGd0vbNakoXvvK8cN
cOv74J55Zd5r9WUj3fjv37y6MrdsweRBYcOd65VZN1X+Csi/AAAASE/q58PV
tV5ePzusX6+uy4HXXjQkXDFruMt1tWvXCp9YPs21sfyrvHV0l/3DqycODCcN
PSmst1Ndl0X/+Oaa3Pqum362a9uj6wEue10/fajLoMrCmn/J2t23ZEJYq1at
8JhD9nfvuXbu+eE5px7pXnvsoe3z2mmZMrIy9cb5o931q9oW5XU/K8fr3msn
hL26H+her1y67orz3fLvP77Y5Wht06UXnB7efMWocOCJh7t2Z/Y6PPzXRxuL
HrOJZ5/o2irX3zp/TDjz/L4us2obtd/Wru9xXcLmTXYp8/orxp7hXv+jJ5fk
ltm+n31y9/CWeRe4TLtr44buO4Hfvroq107rO7Bda/c7U+bdv83uLvfqtdou
/320H/vt3dIdN3+5tVcOT/vzV10rIP8CAAAgPamfD1fX6nrgvi4LfvbC5r5I
5a2WzRqH3Tq1dY8t/w46qZvrp7R2Nrb48eUXucc/3nR9WLdObden67dTP+Me
uzUNj++6OYdpDK4y91/eWZe3PcqfWufvX1/tHlv+1bb8/b31uXav33qZy8/T
R5xSdP+Sxj9r+5TdP7pvfl5b9deq7V0LxxVcn/qx9d2A8qq/XBk6iHK/LStv
/tXx0+PLxvTLa6ecqn7xqcP65JZpfdpv7b8eW1Y/qst+7nf2j/dvybXVvN1a
7/orR+WtV220/yNOPyb1z191rYD8CwAAgPSkfj5cHetnzy7L9Y3Gn/v4/vnh
dx5Z5H62/PvMqhl5bTQ2WcutX1Xjh/VYy+PrU4ZTbrP+2t+9tsq9v99GY49H
n9nDrePT57LPWf69Y8HYMutUdlf/ZrF9jOffP725Ntypbp1wQK+uZdoqcyu/
Jz1nZfv48i2zy2y7vkfYmvx77mlHu2OjYxJvq+8M1K9sj7W+A/ZtVaadxkRr
ndZnr9JYco1z/sMbq8u01zrs+w2q4hWQfwEAAJCe1M+Hq2O9suFSdx6vccrF
2ln+VSb2l1v/orKXHuv6Wj3es2WzcN/WLfJK45X13Bu3XZ57vdY3f8JAN+ZX
WUzXHgfZXJHLxpZ/v3b/1WW2S32w6h8tds1uPP/qemU91rXBSe113W2XDnsX
XN/kc3q71/vX7lr1PLzjVuVfXcOrPuX4MVPZMfnruze7tlrfycd0LrNOZXeN
wdax1GO11/hpZeuk/VB/8T6td0v9M1hdKyD/AgAAID2pnw9Xx3puzSV5/beF
qtD8z/H8q/mk9FjXw84bPyCxLPNpDib1eTbZpUHY5+jOrn9Y445tHfH8++2H
F5bZrq3Jv7oGWY91fW1Se11Pe9B+exZcn+ak0uv98eJWvY86qFz5V+OcAy//
HtZxH3ctcqFjprJx4lpf/56HJW6b5gdTBlZ/rx03zVmW1Fb5V9dup/0ZrK4V
kH8BAACQntTPh6tjKVMGCdedqjR31FUTzgz/9u76cudf69d8+465Zdan+Yd/
/Up2vmHNvaz+TmXFL97Ov/531BnHuXX89Jns3M6W4/z5qK2OOKitm1ur2D7G
86+ubVbuHtb3qDJt1WeqeaVOOebgguuz+b207/HnOuyzR17+Pb3HIa7/Nt7O
+skt/2pOZ12P++e31pZpq5ztzy9WLP8+vzb7fcbdi8aHg/sc4a6v9q/D9kvz
ahXL+VTxCsi/AAAASE/q58PVsTR3ksbYKgv5c0spM2kMsJ7T4/LmX+VePVY/
pN/unx9scPf10X2GlIM157Taae5lv53G8KpPMvCyoeVfG9drpbmrlGP9uaGS
auGUs9zrv/vootwyzTmt+xb9/Lkb8tqunDPCtdU1voXWZ/NfxeeOsmPh51/d
o0nLPtl0XW6ZMraOq7+Pq+aMdI+XXjw0b52fv7TC9QtrrjBbViz/6vemMc1n
nHCY61cvNMZbvw9dF6w5r9P+DFbXCsi/AAAASE/q58PVtew+RLpH7JMrprl+
VvVH6pjeuTA751R586/K7uOj6051f1/dF1f9qVqmcbxqoz5Y5U/NF6V+Zl2T
q/8e3H5vl/fU9v275+W2T4+1jWMH9QxfXDcrvO3qMe7eR5rvOJ5h46Wx3Xq9
MuPKS0e4ZboGWf2tyv33LB7v8ri2TfNiaU4t9XkXW+dFw09269T8Utoe3ZNJ
90S2Pm1rp31SO41v1s/abvVZaz6rwMu/ysS6/7Dm3tIc1NqeB66b5L6D0H4/
esPU3DqL5V+V+uD1GpU/57Vf7919pXv/G2cOS/3zV10rIP8CAAAgPamfD1fn
evD6Se661yCae0rzV+m+tva85sdSn6X6Pv3XKUdpuX+/IPUtzh3bP9ytaaPc
+nZv3sTds9d/rcbqWj+oSvdHUl+t7uuj5bofsNpZ/tU9h3VfYmuvTG3zUxcr
ZW1l0iC6f7Et1/to3ilbX6OG9d09jf2xxoVK/ebaHsvqGuOs7wg03tjPvyqN
IVfWVzuNrZ4wpJc73tpHG+Nt23l+/+Py5gBTPn9o6eS89akffczAHgW3TZla
2Td+z1+/dJ9nZXX//amKVUD+BQAAQHpSPx/eEUrXmpYyE+k63/g9juKl/tti
72n51+7ro/ZJ18lubSl3bu0+K+trbLP1FyflX7+dzeFcnnV+/uKKrdqmbz60
IPGev351ardn0T5kassVkH8BAACQntTPh6ltU/H8uz1XofxblaU+ZPVL6z7H
Sc9rzLr6h9+968rUj1d1roD8CwAAgPSkfj5MbZsi/5avdA8p9evqWC2aMrhg
u57dOrp5udI+VtW9AvIvAAAA0pP6+TC1beqdO69wfZqa7zntbdlSXTzyFHcN
cxrvrfsSa56t+RMGFrznkeb90vxeGvOd9rGq7hWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQfwEAAJCe1M+HKYqqORWQ
fwEAAJCe1M+HKYqqORWQfwEAAJCS+vXq/j3Ino9SFEVt86pTu/YXAQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAO5D/D3eS5eo=
    "], {{0, 720.}, {960., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{588.75, Automatic},
  ImageSizeRaw->{960., 720.},
  PlotRange->{{0, 960.}, {0, 720.}}]], "Output",
 CellChangeTimes->{{3.870328207376601*^9, 3.870328239913169*^9}, {
   3.870328271726125*^9, 3.870328278119659*^9}, 3.8749853945158873`*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"55aef92e-3e9d-43c7-b1d8-501955000ca6"]
}, Open  ]],

Cell["\<\
We use the soft net to learn real-valued weights.
Then we convert the real-valued weights to boolean-valued weights, just True \
and False.
And then we use the boolean weights with the hard net.
Unlike existing binarization techniques this conversion is perfect ... we don\
\[CloseCurlyQuote]t introduce any approximation error.\
\>", "Text",
 CellChangeTimes->{
  3.874992230351036*^9},ExpressionUUID->"d2deea53-7ac2-4647-9aec-\
06a1de880925"],

Cell["Let\[CloseCurlyQuote]s do this now.", "Text",
 CellChangeTimes->{
  3.874985405145102*^9},ExpressionUUID->"37061367-fea2-4878-bb09-\
303f67298789"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hnf", "=", 
   RowBox[{"HardNetFunction", "[", 
    RowBox[{"hardNet", ",", "trainedNeuralLogicNet"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"hnbe", "=", 
  RowBox[{"HardNetBooleanExpression", "[", 
   RowBox[{"hnf", ",", "inputSize"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8684476109990253`*^9, 3.868447614967239*^9}, {
   3.8684988741865396`*^9, 3.868498874592616*^9}, {3.868499185605513*^9, 
   3.8684992093586597`*^9}, 3.868501716401897*^9, {3.868514975845937*^9, 
   3.868514978733061*^9}, {3.868533857047714*^9, 3.8685338619606743`*^9}, {
   3.868592161602441*^9, 3.8685921624093037`*^9}, {3.868937316229151*^9, 
   3.8689373167579613`*^9}, {3.868937496012*^9, 3.86893752144172*^9}, {
   3.868937596537734*^9, 3.868937603616037*^9}, 3.868937747599498*^9, 
   3.868938118528597*^9, {3.868939027026972*^9, 3.8689390465517597`*^9}, {
   3.868976302381322*^9, 3.868976307139587*^9}, {3.869121279126927*^9, 
   3.869121279479135*^9}, {3.870170868231748*^9, 3.870170876076961*^9}, 
   3.8701713579985523`*^9, {3.870317394371962*^9, 3.870317399254509*^9}, {
   3.8703218191813583`*^9, 3.870321831848304*^9}, {3.8703220097353773`*^9, 
   3.870322011095257*^9}, {3.870322050265683*^9, 3.870322062125989*^9}, {
   3.870322215788803*^9, 3.870322217453288*^9}, {3.8749854102910633`*^9, 
   3.8749854358243303`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b18", "||",
         "b20"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b12", "||",
       "b13", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||",
       "b16", "||", "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b17", "||", "b18", "||", "b19"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b13", "||", "b16", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b8", "||", "b16", "||", "b17", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b4", "||", "b7"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b6", "||", "b13", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b7", "||", "b19", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"b3", "||", "b7", "||", "b11", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"b2", "||", "b13", "||", "b16", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b10", "||", "b16", "||", "b18"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b17", "||", "b19", "||", "b20"}], ")"}]}], ",", 
     RowBox[{"b13", "||", "b14", "||", "b16", "||", "b21"}], ",", 
     RowBox[{
     "b3", "||", "b7", "||", "b8", "||", "b9", "||", "b13", "||", "b15", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b8", "||", "b11", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b5", "||", "b6", "||", "b13", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"b2", "||", "b11", "||", "b13", "||", "b18", "||", "b21"}], ",", 
     
     RowBox[{"b2", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], ",", 
     RowBox[{"b1", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b16", "||",
         "b17", "||", "b20"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b4"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5", "||", "b11", "||", "b14", "||", "b16"}], 
       ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{
     "b2", "||", "b5", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b7", "||", "b18", "||", "b19"}], 
       ")"}]}], ",", 
     RowBox[{"b2", "||", "b3", "||", "b13", "||", "b19", "||", "b21"}], ",", 
     RowBox[{
     "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b13", "||", "b16", "||",
       "b17", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b11", "||", "b17", "||", "b18", "||", "b19"}], ")"}]}], ",", 
     RowBox[{
     "b7", "||", "b9", "||", "b10", "||", "b13", "||", "b18", "||", "b20"}], 
     ",", 
     RowBox[{
     "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
       "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b5", "||", "b18", "||", "b19"}], ")"}]}], ",", 
     RowBox[{"b4", "||", "b8", "||", "b13", "||", "b21"}], ",", 
     RowBox[{
     "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5", "||", "b6", "||", "b19"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b12", "||", "b14", "||", "b17", "||", "b18"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b11", "||", "b15", "||", "b16"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b6", "||", "b7", "||", "b8", "||", "b10", "||", "b11", "||",
         "b12", "||", "b17"}], ")"}]}], ",", 
     RowBox[{"b3", "||", "b7", "||", "b13", "||", "b16", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b2", "||", "b3", "||", "b5", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b2", "||", "b5", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"b8", "||", "b13", "||", "b16", "||", "b21"}], ",", 
     RowBox[{"b2", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b13", "||", "b18", "||",
       "b19", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b10", "||", "b11", "||", "b13", "||", "b15", "||", "b18", 
        "||", "b19"}], ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b2", "||", "b8", "||", "b13", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b3", "||", "b7", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b4", "||", "b7", "||", "b19"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b9", "||", "b10", "||", "b13", "||", "b15", "||", "b18", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b6", "||", "b10", "||", "b12", "||", "b14", "||", "b18", "||", 
        "b19"}], ")"}]}], ",", 
     RowBox[{
     "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{"b12", "||", "b13", "||", "b15", "||", "b17", "||", "b21"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b18", "||",
         "b20"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b12", "||",
       "b13", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||",
         "b16", "||", "b19", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b17", "||", "b18", "||", "b19"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b13", "||", "b16", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b3", "||", "b8", "||", "b16", "||", "b17", "||", "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||", "b21"}],
        ")"}]}], ",", 
     RowBox[{"b1", "||", "b4", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b6", "||", "b13", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b7", "||", "b19", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b13", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b10", "||", "b16", "||", "b18"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b17", "||", "b19", "||", "b20"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b14", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b3", "||", "b7", "||", "b8", "||", "b9", "||", "b13", "||", "b15", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b8", "||", "b11", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b5", "||", "b6", "||", "b13", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], ",", 
     
     RowBox[{
     "b2", "||", "b3", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b11", "||", "b13", "||", "b18", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b16", "||",
       "b17", "||", "b20"}], ",", 
     RowBox[{"b1", "||", "b4"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b5", "||", "b11", "||", "b14", "||", "b16"}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||",
       "b21"}], ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b5", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b6", "||", "b7", "||", "b18", "||", "b19"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b13", "||", "b19", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b13", "||", "b16", "||",
         "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"b11", "||", "b17", "||", "b18", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b7", "||", "b9", "||", "b10", "||", "b13", "||", "b18", "||", "b20"}],
        ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
         "b19", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b5", "||", "b18", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b8", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b5", "||", "b6", "||", "b19"}], ",", 
     RowBox[{"b9", "||", "b12", "||", "b14", "||", "b17", "||", "b18"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b11", "||", "b15", "||", "b16"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b6", "||", "b7", "||", "b8", "||", "b10", "||", "b11", "||",
         "b12", "||", "b17"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b2", "||", "b3", "||", "b5", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{"b2", "||", "b5", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b13", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], ",", 
     
     RowBox[{
     "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b13", "||", "b18", "||",
       "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b9", "||", "b10", "||", "b11", "||", "b13", "||", "b15", "||", "b18", "||",
       "b19"}], ",", 
     RowBox[{
     "b1", "||", "b2", "||", "b8", "||", "b13", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b4", "||", "b7", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b9", "||", "b10", "||", "b13", "||", "b15", "||", "b18", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b6", "||", "b10", "||", "b12", "||", "b14", "||", "b18", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b12", "||", "b13", "||", "b15", "||", "b17", "||", "b21"}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b18", "||",
       "b20"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b12", "||",
       "b13", "||", "b16", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||",
       "b16", "||", "b19", "||", "b21"}], ",", 
     RowBox[{"b17", "||", "b18", "||", "b19"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b13", "||", "b16", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b3", "||", "b8", "||", "b16", "||", "b17", "||", "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||", "b21"}],
        ")"}]}], ",", 
     RowBox[{"b1", "||", "b4", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b6", "||", "b13", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b7", "||", "b19", "||", "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b13", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b10", "||", "b16", "||", "b18"}], ",", 
     RowBox[{"b17", "||", "b19", "||", "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b14", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b7", "||", "b8", "||", "b9", "||", "b13", "||", "b15", "||",
         "b18", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b2", "||", "b3", "||", "b8", "||", "b11", "||", "b20"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b5", "||", "b6", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b11", "||", "b13", "||", "b18", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b2", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b16", "||",
       "b17", "||", "b20"}], ",", 
     RowBox[{"b1", "||", "b4"}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"b1", "||", "b5", "||", "b11", "||", "b14", "||", "b16"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b5"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b5", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b4", "||", "b6", "||", "b7", "||", "b18", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b13", "||", "b19", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b13", "||", "b16", "||",
       "b17", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"b11", "||", "b17", "||", "b18", "||", "b19"}], ",", 
     RowBox[{
     "b7", "||", "b9", "||", "b10", "||", "b13", "||", "b18", "||", "b20"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
         "b19", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b5", "||", "b18", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b8", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"b1", "||", "b5", "||", "b6", "||", "b19"}], ",", 
     RowBox[{"b9", "||", "b12", "||", "b14", "||", "b17", "||", "b18"}], ",", 
     
     RowBox[{"b8", "||", "b11", "||", "b15", "||", "b16"}], ",", 
     RowBox[{
     "b3", "||", "b6", "||", "b7", "||", "b8", "||", "b10", "||", "b11", "||",
       "b12", "||", "b17"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b2", "||", "b3", "||", "b5", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b5", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b13", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b13", "||", "b18", "||",
         "b19", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{
     "b9", "||", "b10", "||", "b11", "||", "b13", "||", "b15", "||", "b18", "||",
       "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b1", "||", "b2", "||", "b8", "||", "b13", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b4", "||", "b7", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b9", "||", "b10", "||", "b13", "||", "b15", "||", "b18", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b6", "||", "b10", "||", "b12", "||", "b14", "||", "b18", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b12", "||", "b13", "||", "b15", "||", "b17", "||", "b21"}], 
       ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b18", "||",
         "b20"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b12", "||",
         "b13", "||", "b16", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||",
       "b16", "||", "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b17", "||", "b18", "||", "b19"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b13", "||", "b16", "||", "b20", "||", "b21"}],
        ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b8", "||", "b16", "||", "b17", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||", "b21"}],
        ")"}]}], ",", 
     RowBox[{"b1", "||", "b4", "||", "b7"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b6", "||", "b13", "||", "b20", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b7", "||", "b19", "||", "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b13", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"b9", "||", "b10", "||", "b16", "||", "b18"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b17", "||", "b19", "||", "b20"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b13", "||", "b14", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b3", "||", "b7", "||", "b8", "||", "b9", "||", "b13", "||", "b15", "||",
       "b18", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b3", "||", "b8", "||", "b11", "||", "b20"}], 
       ")"}]}], ",", 
     RowBox[{
     "b2", "||", "b5", "||", "b6", "||", "b13", "||", "b16", "||", "b21"}], 
     ",", 
     RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
         "b18", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b11", "||", "b13", "||", "b18", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b1", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b16", "||",
         "b17", "||", "b20"}], ")"}]}], ",", 
     RowBox[{"b1", "||", "b4"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b5", "||", "b11", "||", "b14", "||", "b16"}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||",
       "b21"}], ",", 
     RowBox[{"b1", "||", "b5"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b8", "||", "b11", "||", "b13", "||", "b16", "||",
         "b20", "||", "b21"}], ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b4", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
       "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b5", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b4", "||", "b6", "||", "b7", "||", "b18", "||", "b19"}], ",", 
     RowBox[{"b2", "||", "b3", "||", "b13", "||", "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b8", "||", "b9", "||", "b10", "||", "b13", "||", "b16", "||",
         "b17", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b4", "||", "b6", "||", "b8", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b20", "||",
         "b21"}], ")"}]}], ",", 
     RowBox[{"b11", "||", "b17", "||", "b18", "||", "b19"}], ",", 
     RowBox[{
     "b7", "||", "b9", "||", "b10", "||", "b13", "||", "b18", "||", "b20"}], 
     ",", 
     RowBox[{
     "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b14", "||", "b16", "||",
       "b19", "||", "b21"}], ",", 
     RowBox[{"b5", "||", "b18", "||", "b19"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b4", "||", "b8", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b1", "||", "b5", "||", "b6", "||", "b19"}], ",", 
     RowBox[{"b9", "||", "b12", "||", "b14", "||", "b17", "||", "b18"}], ",", 
     
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b11", "||", "b15", "||", "b16"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b6", "||", "b7", "||", "b8", "||", "b10", "||", "b11", "||",
         "b12", "||", "b17"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b3", "||", "b7", "||", "b13", "||", "b16", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b2", "||", "b3", "||", "b5", "||", "b13", "||", "b21"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b5", "||", "b13", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b8", "||", "b13", "||", "b16", "||", "b21"}], ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b2", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"b9", "||", "b10", "||", "b15", "||", "b16", "||", "b18"}], ",", 
     
     RowBox[{
     "b2", "||", "b3", "||", "b4", "||", "b8", "||", "b13", "||", "b18", "||",
       "b19", "||", "b21"}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b2", "||", "b3", "||", "b7", "||", "b8", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b9", "||", "b10", "||", "b11", "||", "b13", "||", "b15", "||", "b18", 
        "||", "b19"}], ")"}]}], ",", 
     RowBox[{
     "b1", "||", "b2", "||", "b8", "||", "b13", "||", "b20", "||", "b21"}], 
     ",", 
     RowBox[{"b3", "||", "b7", "||", "b13", "||", "b21"}], ",", 
     RowBox[{"b1", "||", "b4", "||", "b7", "||", "b19"}], ",", 
     RowBox[{
     "b2", "||", "b9", "||", "b10", "||", "b13", "||", "b15", "||", "b18", "||",
       "b20", "||", "b21"}], ",", 
     RowBox[{
     "b6", "||", "b10", "||", "b12", "||", "b14", "||", "b18", "||", "b19"}], 
     ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{
       "b3", "||", "b7", "||", "b8", "||", "b11", "||", "b13", "||", "b21"}], 
       ")"}]}], ",", 
     RowBox[{"!", 
      RowBox[{"(", 
       RowBox[{"b12", "||", "b13", "||", "b15", "||", "b17", "||", "b21"}], 
       ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8749854364769278`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"7533f45d-ca38-451b-830c-fadd21ac607d"]
}, Open  ]],

Cell["\<\
This expression is a Boolean function. Each b, from 1 to 21, is a single \
input bit, which together represent a car\[CloseCurlyQuote]s features. \
\>", "Text",
 CellChangeTimes->{{3.870326367385384*^9, 3.8703265033439913`*^9}, {
  3.870326586968174*^9, 
  3.870326587487768*^9}},ExpressionUUID->"b04ea288-7eab-4c63-9364-\
fb6fe1f0beb3"],

Cell["\<\
Notice that the boolean function is a combination of NOTs and ORs, which \
corresponds to the architecture of the neural-logic net, which I\
\[CloseCurlyQuote]ll explain in a moment.\
\>", "Text",
 CellChangeTimes->{{3.87499227205476*^9, 
  3.874992277917433*^9}},ExpressionUUID->"c8a372f8-8568-491c-afa4-\
83917ea1dcd5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Drop", "[", 
  RowBox[{
   RowBox[{"testData", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellLabel->"In[37]:=",ExpressionUUID->"c68591b9-90ec-43a4-bdec-bc480c39269f"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "PurchasePrice" -> "high", "MaintenanceCost" -> "medium", "Doors" -> 2, 
       "Passengers" -> 2, "Cargo" -> "large", "Safety" -> "high"|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"PurchasePrice"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "MaintenanceCost"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"Doors"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Passengers"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cargo"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"Safety"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>, 1], 
     "InitialType" -> 
     TypeSystem`Struct[{
       "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", "Cargo", 
        "Safety"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`DocumentShape[<|{"PurchasePrice"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`], {
         "MaintenanceCost"} -> 
        TypeSystem`PackageScope`AtomShape[67.2], {"Doors"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Passengers"} -> 
        TypeSystem`PackageScope`AtomShape[34], {"Cargo"} -> 
        TypeSystem`PackageScope`AtomShape[56.00000000000001], {"Safety"} -> 
        TypeSystem`PackageScope`AtomShape[44.800000000000004`]|>, 1], "Type" -> 
     TypeSystem`Struct[{
       "PurchasePrice", "MaintenanceCost", "Doors", "Passengers", "Cargo", 
        "Safety"}, {
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[Integer], 
        TypeSystem`Atom[String], 
        TypeSystem`Atom[String]}], "Path" -> {}, "DisplayedRowCount" -> 20, 
     "DisplayedColumnCount" -> 10, "DataRowCount" -> 6, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PurchasePrice", 
                  Style[
                  "PurchasePrice", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PurchasePrice"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PurchasePrice"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["high", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PurchasePrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MaintenanceCost", 
                  Style[
                  "MaintenanceCost", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MaintenanceCost"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaintenanceCost"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["medium", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MaintenanceCost"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Doors", 
                  Style[
                  "Doors", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Doors"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Doors"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Doors"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Passengers", 
                  Style[
                  "Passengers", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Passengers"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Passengers"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Cargo", 
                  Style[
                  "Cargo", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Cargo"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cargo"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["large", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Cargo"]}, "Item", False], "Mouse"], 
              ImageSize -> {{56.00000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Safety", 
                  Style[
                  "Safety", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Safety"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Safety"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation["high", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Safety"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{215., {112.4462890625, 119.5537109375}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{215., {112.4462890625, 119.5537109375}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.874986102881106*^9, 3.874986125843895*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"43f14d5a-679f-45ef-bf5b-46474b922396"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"featureLayer", "[", "%", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8749861129283323`*^9, 3.874986123208008*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"5f51c567-dea8-47ac-9acd-54e051a03ea8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.874986115462907*^9, 3.8749861266506567`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"8ff6aadd-c16d-4456-ac62-3dd91f197710"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Harden", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.870326511882306*^9, 3.8703265662605343`*^9}, {
  3.87498610069178*^9, 3.874986132144413*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"85430b54-526e-4074-9fb9-f03f794f1c13"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "False", ",", "False", ",", "True", ",", "False", ",", "False", ",", "True",
    ",", "False", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
   "False", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
   "False", ",", "True", ",", "True", ",", "False", ",", "False"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8703265286127977`*^9, 3.8703265677234697`*^9}, 
   3.874986092875924*^9, 3.874986132671404*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"78be08bc-6290-4a77-845f-f4abd6f80d81"]
}, Open  ]],

Cell["\<\
The output is a vector of boolean values which can be interpreted as a \
probability distribution.\
\>", "Text",
 CellChangeTimes->{
  3.8703265946452513`*^9, {3.8749922607100697`*^9, 
   3.87499226096519*^9}},ExpressionUUID->"65a04b09-9d6f-4de8-921c-\
a74eb84216bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hnf", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.8703265492193203`*^9, 3.87032655887918*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"766504ad-5222-4968-9c2e-4c45b7b36d6b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "False", ",", "True", ",", "True", ",", "True", ",", "False", ",", "True",
      ",", "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "False", ",", "True", ",", "True",
      ",", "False", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "True", ",", "True",
      ",", "False", ",", "True", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "True", ",", 
     "False", ",", "True", ",", "True", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "True"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "True", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "True", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "True", ",", "True", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "True", ",", "True", ",", "False", ",", "True", ",", 
     "False", ",", "True", ",", "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "False", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "False", ",", 
     "True", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "False", ",", "True", ",", "True", ",", "True", ",", "False", ",", 
     "True", ",", "False", ",", "True", ",", "True", ",", "True", ",", "True",
      ",", "True", ",", "False", ",", "False", ",", "False", ",", "False", 
     ",", "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "False", ",", "True", ",", 
     "False", ",", "False"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "False", ",", "False", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "False", ",", 
     "False", ",", "True", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "False", ",", "False", ",", "True", ",", 
     "True", ",", "False", ",", "False", ",", "False", ",", "True", ",", 
     "False", ",", "False", ",", "False", ",", "True", ",", "True", ",", 
     "False", ",", "False", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8703265594051647`*^9, 3.870326569192264*^9}, 
   3.874986136015679*^9},
 CellLabel->"Out[40]=",ExpressionUUID->"d4bf4809-6ccf-45a4-9819-c50b20d5b3d8"]
}, Open  ]],

Cell["\<\
Now we have a learnt boolean function that can predict the acceptability of a \
car.
Let\[CloseCurlyQuote]s evaluate it on the test data.\
\>", "Text",
 CellChangeTimes->{{3.8703194810673428`*^9, 3.870319498051421*^9}, {
  3.874985262716955*^9, 3.874985263255533*^9}, {3.8749855274076853`*^9, 
  3.8749855283517427`*^9}},ExpressionUUID->"7fb2dfa2-ca03-4424-9df6-\
f9c13557cfa1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"predictions", ",", "summary"}], "}"}], "=", 
   RowBox[{"EvaluateNeuralLogicNet", "[", 
    RowBox[{"hnf", ",", "testData"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8703166596356*^9, 3.870316677884142*^9}, {
  3.870317417326557*^9, 3.870317426035041*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"13a2ce94-b726-43e3-b6a8-a980ac53773c"],

Cell["\<\
We can eyeball the predictions of the net compared to the ground truth.\
\>", "Text",
 CellChangeTimes->{{3.87031950519561*^9, 
  3.8703195166517773`*^9}},ExpressionUUID->"5b2b8457-a087-490d-a372-\
95ff87d5203a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RandomSample", "[", 
  RowBox[{"predictions", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.874985503361779*^9, 3.874985504952031*^9}, {
  3.8749861473171988`*^9, 3.874986155867394*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"2bf552be-6270-4e7c-bed7-f9fb42d64d4c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"acceptable\"\>"}], ",", 
     RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"acceptable\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"unacceptable\"\>"}], ",", 
     RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
    "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Prediction\"\>", "\[Rule]", "\<\"unacceptable\"\>"}], ",", 
     RowBox[{"\<\"Target\"\>", "\[Rule]", "\<\"unacceptable\"\>"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8749861493855667`*^9, 3.8749861565182533`*^9}},
 CellLabel->"Out[43]=",ExpressionUUID->"36acebc0-224c-48fe-b663-867ef1fd56f6"]
}, Open  ]],

Cell["And we can measure the overall accuracy of the net.", "Text",
 CellChangeTimes->{{3.870319524795453*^9, 
  3.8703195506273203`*^9}},ExpressionUUID->"9fc78c6a-48b8-4010-baee-\
fde9b5bdd3c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"summary", "[", "\"\<Accuracy\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8703174300701857`*^9, 3.87031743733882*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"b42693df-e421-4294-8d63-3fe9c57e59be"],

Cell[BoxData["0.9942196531791907`"], "Output",
 CellChangeTimes->{{3.870317432002062*^9, 3.8703174379216547`*^9}, 
   3.870322921359941*^9, 3.874985515812975*^9, 3.874986160125152*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"de579efa-6460-403f-8a4d-fa2a64982e63"]
}, Open  ]],

Cell["\<\
This is pretty amazing. We\[CloseCurlyQuote]ve trained a neural network, \
using gradient descent on a GPU, but we get a discrete boolean function. We\
\[CloseCurlyQuote]re extending the power of gradient descent into the world \
of discrete functions. And we\[CloseCurlyQuote]ve got a POC solution to one \
of the challenges to creating \[Delta]QL.\
\>", "Text",
 CellChangeTimes->{{3.874992598493312*^9, 3.8749926650136223`*^9}, {
  3.874992782413435*^9, 
  3.8749928054856253`*^9}},ExpressionUUID->"41652d4a-0103-4353-8eec-\
a5ca4867426a"],

Cell["\<\
But we get another bonus from this approach. Let\[CloseCurlyQuote]s take a \
look at the learned weights.\
\>", "Text",
 CellChangeTimes->{{3.87032663707929*^9, 3.870326641607326*^9}, {
  3.8749928095810623`*^9, 
  3.8749928230935707`*^9}},ExpressionUUID->"eeaad40f-5bd7-442c-b78b-\
82d046761f76"],

Cell[BoxData[
 RowBox[{"neuralLogicWeights", "=", 
  RowBox[{"GetNeuralLogicWeights", "[", 
   RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.870316802390691*^9, 3.8703168117703648`*^9}, 
   3.870317452732788*^9, {3.870326643939178*^9, 3.8703266487865887`*^9}, 
   3.874985538512944*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"bb0dc1a3-5cd2-4290-9ee6-f454b4fd864f"],

Cell["\<\
So the weights can be compactly represented as bit vectors. Each weight costs \
1 bit. So the total size of this classifier is very small.\
\>", "Text",
 CellChangeTimes->{{3.870326653607251*^9, 
  3.870326675303034*^9}},ExpressionUUID->"9858cc8a-2d44-4b29-aa17-\
124189cc0344"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"neuralLogicNetSize", "=", 
  RowBox[{"Quantity", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "neuralLogicWeights", "]"}], "/", "8"}], "/", 
      "1024"}], "//", "N"}], ",", "\"\<Kilobytes\>\""}], "]"}]}]], "Input",
 CellChangeTimes->{{3.868965930761516*^9, 3.868965950743415*^9}, {
  3.8689659831088343`*^9, 3.868965987890936*^9}, {3.868966862559198*^9, 
  3.868966873437675*^9}, {3.87023827052466*^9, 3.870238281251335*^9}, {
  3.870238533085649*^9, 3.870238533355043*^9}, {3.870269721688321*^9, 
  3.870269739190338*^9}, {3.870316816100664*^9, 3.8703168349241323`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"30f555f6-ae5b-4dfd-bdc5-755388129f83"],

Cell[BoxData[
 TemplateBox[{"0.1953125`", "\"kB\"", "kilobytes", "\"Kilobytes\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.870238281865775*^9, 3.8702385339826803`*^9, 
  3.870251508739937*^9, 3.8702694588883877`*^9, 3.87026974101413*^9, 
  3.870269845185416*^9, 3.87031745442416*^9, 3.870322923920594*^9, 
  3.8749855454597054`*^9, 3.87498617100019*^9},
 CellLabel->"Out[46]=",ExpressionUUID->"bb4ffee2-8dc2-480b-b143-4f55412f4646"]
}, Open  ]],

Cell["\<\
In fact, in this case the neural-logic classifier is 80 times smaller than \
standard net on the same problem (which is about 15k). \
That\[CloseCurlyQuote]s a lot smaller.
That means we can ship lots more NNs with QL without hitting OOM errors in \
standard environments.

Also, evaluating a boolean function can be a lot cheaper than evaluating a \
nonlinear real-valued function.
Different kinds of machine learning problems will generate different kinds of \
savings.
But neural-logic nets are always going to be smaller.\
\>", "Text",
 CellChangeTimes->{{3.870326680718965*^9, 3.870326717670959*^9}, {
  3.8703267848706293`*^9, 3.870326928822517*^9}, {3.8703269662539463`*^9, 
  3.8703269816372623`*^9}, {3.870327353084221*^9, 3.87032738922013*^9}, {
  3.870328312548545*^9, 3.870328398356811*^9}, {3.870328534493108*^9, 
  3.8703285345382147`*^9}, {3.874985615696063*^9, 3.8749856163277817`*^9}, {
  3.874992304381489*^9, 3.874992326061194*^9}, {3.87499284205389*^9, 
  3.8749928663816967`*^9}},ExpressionUUID->"58ab0f20-14b5-408c-8b9f-\
e564767e0125"],

Cell["\<\
How does this work? Basically by defining an entirely new kind of neural \
network architecture.\
\>", "Text",
 CellChangeTimes->{{3.874992349389361*^9, 
  3.87499240724503*^9}},ExpressionUUID->"9a677b8d-aa1c-4056-96fa-\
26d140073b09"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Information", "[", 
  RowBox[{"softNet", ",", "\"\<FullSummaryGraphic\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.874984791793639*^9, 3.874984812391904*^9}, {
  3.874984853035492*^9, 3.874984873802066*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"261c52cc-6e5c-430f-ab1f-74c464644f40"],

Cell[BoxData[
 GraphicsBox[{{
    StyleBox[{InsetBox[
       TagBox[
        TooltipBox["\<\"Acceptabi..\"\>",
         "\"Acceptability\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Acceptability", "Tooltip"]& ], 
       Offset[{0, -7}, {-1.9999999999999993, 5.3589794058235685*^-8}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Loss/Error\"\>", NCache[
       Offset[{0, Rational[-27, 2]}, {-0.9999999732051026, 
         1.0000000267948967`}], 
        Offset[{0, -13.5}, {-0.9999999732051026, 1.0000000267948967`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Cargo\"\>", 
       Offset[{0, -7}, {-9.00000005358979, -1.9999997588459262}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/Featu..\"\>",
         "\"Net/FeatureLayer/Catenate\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/FeatureLayer/Catenate", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-7.9999999732051, 1.000000214359176}], 
        Offset[{0, -13.5}, {-7.9999999732051, 1.000000214359176}]], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Doors\"\>", 
       Offset[{0, -7}, {-9.000000026794893, -0.9999997588459264}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Maintenan..\"\>",
         "\"MaintenanceCost\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "MaintenanceCost", "Tooltip"]& ], 
       Offset[{0, -7}, {-8.999999999999996, 2.411540732620606*^-7}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Passengers\"\>", 
       Offset[{0, -7}, {-8.9999999732051, 1.000000241154073}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"PurchaseP..\"\>",
         "\"PurchasePrice\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "PurchasePrice", "Tooltip"]& ], 
       Offset[{0, -7}, {-8.999999946410203, 2.0000002411540727}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Safety\"\>", 
       Offset[{0, -7}, {-8.999999919615306, 3.0000002411540723}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], 
      InsetBox["\<\"Loss\"\>", 
       Offset[{0, -7}, {2.6794897029117842*^-8, 0.9999999999999997}], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Loss/Hard..\"\>",
         "\"Loss/Harden\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Loss/Harden", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-3.9999999732051017`, 
         1.0000001071795879`}], 
        Offset[{0, -13.5}, {-3.9999999732051017`, 1.0000001071795879`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Loss/Soft..\"\>",
         "\"Loss/SoftProbs\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Loss/SoftProbs", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-2.999999973205102, 
         1.0000000803846907`}], 
        Offset[{0, -13.5}, {-2.999999973205102, 1.0000000803846907`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Loss/Soft..\"\>",
         "\"Loss/SoftmaxLayer\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Loss/SoftmaxLayer", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-1.9999999732051024`, 
         1.0000000535897937`}], 
        Offset[{0, -13.5}, {-1.9999999732051024`, 1.0000000535897937`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/7\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/7", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-6.9999999732051, 1.0000001875642788`}],
         Offset[{0, -13.5}, {-6.9999999732051, 1.0000001875642788`}]], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/1\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/1", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-9.999999892820409, 4.000000267948969}],
         Offset[{0, -13.5}, {-9.999999892820409, 4.000000267948969}]], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/3\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/3", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-8.999999892820409, 4.000000241154072}],
         Offset[{0, -13.5}, {-8.999999892820409, 4.000000241154072}]], NCache[
       ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/2\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/2", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-7.999999999999997, 
         2.1435917623294274`*^-7}], 
        Offset[{0, -13.5}, {-7.999999999999997, 2.1435917623294274`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/4\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/4", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-6.999999999999997, 
         1.875642792038249*^-7}], 
        Offset[{0, -13.5}, {-6.999999999999997, 1.875642792038249*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/5\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/5", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-7.999999946410203, 
         2.0000002143591757`}], 
        Offset[{0, -13.5}, {-7.999999946410203, 2.0000002143591757`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/6\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/6", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-5.999999999999998, 
         1.6076938217470707`*^-7}], 
        Offset[{0, -13.5}, {-5.999999999999998, 1.6076938217470707`*^-7}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/9\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/9", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-4.999999973205101, 
         1.0000001339744848`}], 
        Offset[{0, -13.5}, {-4.999999973205101, 1.0000001339744848`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}], InsetBox[
       TagBox[
        TooltipBox["\<\"Net/SoftN..\"\>",
         "\"Net/SoftNet/8\"",
         TooltipStyle->"TextStyling"],
        Annotation[#, "Net/SoftNet/8", "Tooltip"]& ], NCache[
       Offset[{0, Rational[-27, 2]}, {-5.999999973205101, 
         1.0000001607693818`}], 
        Offset[{0, -13.5}, {-5.999999973205101, 1.0000001607693818`}]], 
       NCache[ImageScaled[{Rational[1, 2], 1.}], ImageScaled[{0.5, 1.}]], 
       Automatic, {1, 0}]},
     StripOnInput->False,
     FontColor->GrayLevel[0.5]], 
    StyleBox[{
      InsetBox["\<\"4\"\>", 
       Offset[{-3.889087192318317, 3.8890874007337035}, \
{-1.449999985262806, 0.5500000388526006}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.7071068001334007, 0.7071067622396939}], 
      InsetBox["\<\"3\"\>", 
       Offset[{-5.217758092674727, 1.739252852901899}, \
{-8.479056953218153, -0.43717059731717045}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.31622779143670887`, 0.9486832895772231}], 
      InsetBox["\<\"4\"\>", 
       Offset[{-4.919349484592804, 2.459674907063231}, \
{-8.455901697074271, 0.08819682770002596}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.447213619466042, 0.8944271790168734}], 
      InsetBox["\<\"4\"\>", 
       Offset[{-3.8890871923183177, 3.889087400733702}, \
{-8.449999985262803, 0.5500002264168798}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.7071068001334004, 0.7071067622396942}], 
      InsetBox["\<\"3\"\>", 
       Offset[{1.4737193332337036*^-7, 5.499999999999999}, \
{-8.4499999732051, 1.0000002264168797}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794896967885523`*^-8}], 
      InsetBox["\<\"4\"\>", 
       Offset[{3.889087400733705, 3.8890871923183155}, \
{-8.449999961147396, 1.4500002264168796}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.7071067622396937, -0.7071068001334009}], 
      InsetBox["\<\"3\"\>", 
       Offset[{4.919349616406268, 2.459674643436302}, \
{-8.455901648210915, 1.9118036254500042}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.44721357153387314`, -0.8944272029829577}], 
      InsetBox["\<\"\[DoubleStruckCapitalR]\"\>", 
       Offset[{1.4737193393399295*^-7, 5.499999999999998}, \
{-0.44999997320510277, 1.0000000120577033}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999997, -2.679489707890781*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""},
        "RowWithSeparators"], 
       Offset[{1.4737193454461564*^-7, 5.499999999999999}, \
{-3.449999973205102, 1.0000000924423944}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794897189930118`*^-8}], 
      InsetBox["\<\"4\"\>", 
       Offset[{1.4737193332337026*^-7, 5.499999999999997}, \
{-1.4499999732051023, 1.0000000388526005}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.67948969678855*^-8}], 
      InsetBox["\<\"4\"\>", 
       Offset[{1.4737193332337026*^-7, 5.499999999999997}, \
{-2.4499999732051023, 1.0000000656474974}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.67948969678855*^-8}], 
      InsetBox["\<\"21\"\>", 
       Offset[{1.4737193454461553*^-7, 5.499999999999997}, \
{-7.4499999732051005, 1.0000001996219825}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897189930098`*^-8}], 
      InsetBox["\<\"1344\"\>", 
       Offset[{1.473719333233702*^-7, 5.499999999999997}, \
{-9.449999892820408, 4.000000253211775}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794896967885493`*^-8}], 
      InsetBox["\<\"256\"\>", 
       Offset[{1.4737193366014802*^-7, 5.499999999999997}, \
{-7.4499999999999975, 1.9962198286692792*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794897029117823`*^-8}], 
      InsetBox["\<\"1344\"\>", 
       Offset[{4.919349616406268, 2.459674643436302}, \
{-8.455901621416018, 2.9118036254500037}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.44721357153387314`, -0.8944272029829577}], 
      InsetBox["\<\"256\"\>", 
       Offset[{1.4737193366014818*^-7, 5.499999999999999}, \
{-6.4499999999999975, 1.728270858378101*^-7}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794897029117852`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", "\"21\""},
        "RowWithSeparators"], 
       Offset[{3.889087400733703, 3.889087192318317}, \
{-7.449999961147396, 1.4500001996219825}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.7071067622396939, -0.7071068001334005}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""},
        "RowWithSeparators"], 
       Offset[{-3.889087192318316, 3.8890874007337035}, \
{-5.449999985262805, 0.5500001460321887}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.7071068001334007, 0.7071067622396938}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"64\"", "\"21\""},
        "RowWithSeparators"], 
       Offset[{1.4737193332337036*^-7, 5.499999999999999}, \
{-6.4499999732051005, 1.0000001728270855}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794896967885523`*^-8}], 
      InsetBox["\<\"64\"\>", 
       Offset[{1.473719333233702*^-7, 5.499999999999997}, \
{-5.4499999732051005, 1.0000001460321886}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999996, -2.6794896967885493`*^-8}], InsetBox[
       TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", "\"64\""},
        "RowWithSeparators"], 
       Offset[{1.473719333233703*^-7, 5.499999999999999}, \
{-4.449999973205101, 1.0000001192372916}], ImageScaled[{0.5, 0.415}], 
       Automatic, {0.9999999999999998, -2.6794896967885513`*^-8}]},
     StripOnInput->False,
     FontSize->8,
     FontWeight->"Thin",
     FontColor->GrayLevel[0.7]]}, 
   {GrayLevel[0.7], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999999999993`, 
       5.3589794058235685`*^-8}, {-0.9999999732051026, 1.0000000267948967`}}],
      
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Acceptability\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Target\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Acceptability", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Target"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.00000005358979, -1.9999997588459262`}, {-7.9999999732051, 
       1.000000214359176}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Cargo\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input5\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Cargo", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input5"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.000000026794893, -0.9999997588459264}, {-7.9999999732051, 
       1.000000214359176}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Doors\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input3\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Doors", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input3"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.999999999999996, 2.411540732620606*^-7}, {-7.9999999732051,
        1.000000214359176}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"MaintenanceCost\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input2\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"MaintenanceCost", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input2"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.9999999732051, 1.000000241154073}, {-7.9999999732051, 
       1.000000214359176}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Passengers\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input4\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Passengers", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input4"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.999999946410203, 2.0000002411540727`}, {-7.9999999732051, 
       1.000000214359176}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"PurchasePrice\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input1\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"PurchasePrice", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input1"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.999999919615306, 3.0000002411540723`}, {-7.9999999732051, 
       1.000000214359176}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Safety\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input6\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Safety", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input6"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-0.9999999732051026, 1.0000000267948967`}, {
       2.6794897029117842`*^-8, 0.9999999999999997}}],
      TagBox[
       GridBox[{{"\"real\""}, {
          StyleBox[
           TemplateBox[{"\"Loss\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Loss\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{"real", 
        Style[
         Row[{"Loss", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Loss"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-3.9999999732051017`, 
       1.0000001071795879`}, {-2.999999973205102, 1.0000000803846907`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-1.9999999732051024`, 
       1.0000000535897937`}, {-0.9999999732051026, 1.0000000267948967`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-2.999999973205102, 
       1.0000000803846907`}, {-1.9999999732051024`, 1.0000000535897937`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-7.9999999732051, 1.000000214359176}, {-6.9999999732051, 
       1.0000001875642788`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-9.999999892820409, 4.000000267948969}, {-8.999999892820409, 
       4.000000241154072}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-7.999999999999997, 
       2.1435917623294274`*^-7}, {-6.999999999999997, 1.875642792038249*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-8.999999892820409, 4.000000241154072}, {-7.999999946410203, 
       2.0000002143591757`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-6.999999999999997, 
       1.875642792038249*^-7}, {-5.999999999999998, 1.6076938217470707`*^-7}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-7.999999946410203, 2.0000002143591757`}, {-6.9999999732051, 
       1.0000001875642788`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Weights\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Weights"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999999999998, 
       1.6076938217470707`*^-7}, {-4.999999973205101, 1.0000001339744848`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Weights\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Weights"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-6.9999999732051, 1.0000001875642788`}, {-5.999999973205101, 
       1.0000001607693818`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-5.999999973205101, 1.0000001607693818`}, {-4.999999973205101,
        1.0000001339744848`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[
      LineBox[{{-4.999999973205101, 
       1.0000001339744848`}, {-3.9999999732051017`, 1.0000001071795879`}}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, {
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-1.449999985262806, 0.5500000388526006}, {-0.25, 0},
        Offset[8], {1.0000000267948967`, 0.9999999732051027}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Acceptability\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Target\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Acceptability", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Target"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-8.479056953218153, -0.43717059731717045}, {-0.25, 0}, Offset[8], {
       1.00000008038469, 2.999999973205102}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Cargo\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input5\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Cargo", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input5"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.455901697074271, 0.08819682770002596}, \
{-0.25, 0}, Offset[8], {1.000000053589793, 1.9999999732051024`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Doors\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input3\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Doors", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input3"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.449999985262803, 0.5500002264168798}, {-0.25, 0},
        Offset[8], {1.000000026794896, 0.9999999732051027}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"MaintenanceCost\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input2\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"MaintenanceCost", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input2"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.4499999732051, 1.0000002264168797}, {-0.25, 0},
        Offset[8], {0.9999999999999991, -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Passengers\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input4\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Passengers", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input4"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.449999961147396, 1.4500002264168796}, {-0.25, 0},
        Offset[8], {0.9999999732051021, -1.0000000267948967`}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"PurchasePrice\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input1\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"PurchasePrice", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input1"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.455901648210915, 1.9118036254500042}, {-0.25, 0},
        Offset[8], {0.9999999464102052, -2.000000026794896}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 3\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Safety\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    
                    Offset[{0, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input6\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 3\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Safety", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  
                  Offset[{0, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input6"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-0.44999997320510277, 1.0000000120577033}, {-0.25, 0}, Offset[8], {
       0.9999999999999997, -2.679489707890781*^-8}],
      TagBox[
       GridBox[{{"\"real\""}, {
          StyleBox[
           TemplateBox[{"\"Loss\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"\"", TraditionalForm], 
                    Offset[{0, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Loss\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{"real", 
        Style[
         Row[{"Loss", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["", 
                  Offset[{0, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Loss"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-3.449999973205102, 1.0000000924423944}, {-0.25, 0},
        Offset[8], {0.9999999999999996, -2.679489718993011*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-1.4499999732051023, 1.0000000388526005}, \
{-0.25, 0}, Offset[8], {0.9999999999999998, -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-2.4499999732051023, 1.0000000656474974}, \
{-0.25, 0}, Offset[8], {0.9999999999999998, -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 4\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 4\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-7.4499999732051005, 1.0000001996219825}, \
{-0.25, 0}, Offset[8], {1., -2.679489718993011*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\"vector \"", 
            StyleBox["\"(\[VeryThinSpace]size: 21\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False], "\" of booleans\""}, 
           "RowDefault"]}, {
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector ", 
          Style["(\[VeryThinSpace]size: 21\[VeryThinSpace])", 
           GrayLevel[0.5]], " of booleans"}], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-9.449999892820408, 4.000000253211775}, {-0.25, 0},
        Offset[8], {1., -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-7.4499999999999975, 1.9962198286692792*^-7}, {-0.25, 0}, Offset[8], {
       1., -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-8.455901621416018, 2.9118036254500037}, {-0.25, 0},
        Offset[8], {0.9999999464102052, -2.000000026794896}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 1344\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 1344\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], \
{-6.4499999999999975, 1.728270858378101*^-7}, {-0.25, 0}, Offset[8], {
       0.9999999999999991, -2.6794897029117836`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 256\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 256\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-7.449999961147396, 1.4500001996219825}, {-0.25, 0},
        Offset[8], {0.999999973205103, -1.000000026794897}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Weights\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Weights"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-5.449999985262805, 0.5500001460321887}, {-0.25, 0},
        Offset[8], {1.000000026794897, 0.9999999732051027}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Weights\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Weights"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-6.4499999732051005, 1.0000001728270855}, \
{-0.25, 0}, Offset[8], {0.9999999999999991, -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 64\[Times]21\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-5.4499999732051005, 1.0000001460321886}, \
{-0.25, 0}, Offset[8], {1., -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"vector\"", 
            StyleBox["\"(\[VeryThinSpace]size: 64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"vector", 
          Style["(\[VeryThinSpace]size: 64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ], 
    TagBox[
     TooltipBox[InsetBox[
       GraphicsBox[
        {GrayLevel[0.7], 
         PolygonBox[{{-1., 0.3333333333333333}, {0., 
          0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 0.}, {-1., 
          0.3333333333333333}}]}], {-4.449999973205101, 1.0000001192372916}, {-0.25, 0},
        Offset[8], {0.9999999999999996, -2.6794896967885506`*^-8}],
      TagBox[
       GridBox[{{
          TemplateBox[{"\[ThinSpace]", "\" \"", "\"matrix\"", 
            StyleBox[
            "\"(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])\"", 
             GrayLevel[0.5], StripOnInput -> False]}, "RowWithSeparators"]}, {
         
          StyleBox[
           TemplateBox[{"\"Output\"", 
             GraphicsBox[{{}, {
                GrayLevel[0.7], {
                 
                 LineBox[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0.,
                   0.}}]}}, {
                InsetBox[
                 GraphicsBox[
                  StyleBox[
                   
                   PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], {
                    GrayLevel[0.7]}, StripOnInput -> 
                   False]], {-0.4499999999999998, 
                 1.2057703663103027`*^-8}, {-0.25, 0}, 
                 Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
                EdgeForm[
                 AbsoluteThickness[1]], FontSize -> 10, {{{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"]\"", TraditionalForm], 
                    
                    Offset[{7, 0}, {-0.9999999999999997, 
                    2.6794897029117842`*^-8}]]}}, {{
                   GrayLevel[0.85], 
                   EdgeForm[
                    GrayLevel[0.5]], 
                   DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, {
                   GrayLevel[0.5], 
                   InsetBox[
                    FormBox["\"[\"", TraditionalForm], 
                    Offset[{-5, 0}, {0., 0.}]]}}}}}, 
              ImageSize -> {68.99999999999997, 15.000001473719337`}, 
              AspectRatio -> Full, PlotRangePadding -> 0, 
              ImagePadding -> {{7., 7.}, {10., 5.}}, 
              ImageMargins -> {{0, 0}, {0, 0}}, 
              BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
             "\"Input\""}, "RowDefault"], 
           GrayLevel[0.5], StripOnInput -> False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"],
      TooltipStyle->{
       Background -> GrayLevel[0.937255], CellFrame -> 1, CellFrameColor -> 
        GrayLevel[0.85]}],
     Annotation[#, 
      Column[{
        Row[{"matrix", 
          Style["(\[VeryThinSpace]size: 4\[Times]64\[VeryThinSpace])", 
           GrayLevel[0.5]]}, " "], 
        Style[
         Row[{"Output", 
           Graphics[{{}, {
              GrayLevel[0.7], {
               
               Line[{{-0.9999999999999997, 2.6794897029117842`*^-8}, {0., 
                0.}}]}}, {
              Inset[
               Graphics[
                Style[
                 
                 Polygon[{{-1., 0.3333333333333333}, {0., 
                  0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                  0.}, {-1., 0.3333333333333333}}], 
                 GrayLevel[0.7]]], {-0.4499999999999998, 
               1.2057703663103027`*^-8}, {-0.25, 0}, 
               Offset[8], {0.9999999999999997, -2.6794897029117842`*^-8}]}, {
              EdgeForm[
               AbsoluteThickness[1]], FontSize -> 10, {{{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{-0.9999999999999997, 2.6794897029117842`*^-8}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["]", 
                  
                  Offset[{7, 0}, {-0.9999999999999997, 
                   2.6794897029117842`*^-8}]]}}, {{
                 GrayLevel[0.85], 
                 EdgeForm[
                  GrayLevel[0.5]], 
                 Disk[{0., 0.}, 
                  Offset[{2, 2}]]}, {
                 GrayLevel[0.5], 
                 Text["[", 
                  Offset[{-5, 0}, {0., 0.}]]}}}}}, 
            ImageSize -> {68.99999999999997, 15.000001473719337`}, 
            AspectRatio -> Full, PlotRangePadding -> 0, 
            ImagePadding -> {{7., 7.}, {10., 5.}}, 
            ImageMargins -> {{0, 0}, {0, 0}}, 
            BaseStyle -> {TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
           "Input"}], 
         GrayLevel[0.5]]}, Center], "Tooltip"]& ]}, 
   {EdgeForm[AbsoluteThickness[1]], 
    StyleBox[{
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-1.9999999999999993, 5.3589794058235685*^-8}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {EdgeForm[RGBColor[0.584, 0.51, 0.839]], FaceForm[RGBColor[
       0.7226666666666666, 0.6733333333333333, 0.8926666666666666]], 
       DiskBox[{-0.9999999732051026, 1.0000000267948967}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"CE\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->10,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-0.9999999732051026, 1.0000000267948967}]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-9.00000005358979, -1.9999997588459262}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-7.9999999732051, 1.000000214359176}, Offset[
        11.666666666666668]], InsetBox[
        GraphicsBox[
         {GrayLevel[0.3], 
          LineBox[{{-0.2, 0.2}, {-0.1, 0.2}, {0., 
           0.}, {-0.1, -0.2}, {-0.2, -0.2}}], LineBox[{{0., 0.}, {0.2, 0.}}], 
          LineBox[{{0.125, 0.075}, {0.2, 0.}, {0.125, -0.075}}]},
         ImageSize->16], {-7.9999999732051, 1.000000214359176}]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-9.000000026794893, -0.9999997588459264}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-8.999999999999996, 2.411540732620606*^-7}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-8.9999999732051, 1.000000241154073}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-8.999999946410203, 2.0000002411540727}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{-8.999999919615306, 3.0000002411540723}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {GrayLevel[0.85], EdgeForm[GrayLevel[0.5]], 
       DiskBox[{2.6794897029117842*^-8, 0.9999999999999997}, 
        Offset[{2., 2.}, {0., 0.}]]}, 
      {EdgeForm[GrayLevel[0.97]], FaceForm[RGBColor[0.98, 0.98, 0.98]], 
       DiskBox[{-3.9999999732051017, 1.0000001071795879}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"C\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->12,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-3.9999999732051017, 1.0000001071795879}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-2.999999973205102, 1.0000000803846907}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"\[Sum]\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->12,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-2.999999973205102, 1.0000000803846907}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-1.9999999732051024, 1.0000000535897937}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztWFtIk2EYdnO6zaFuc9N5SHSbp6lT2cmpqNOpOwiRUhkUoXkgCoVpSBdF
dROdLqqbLqKuuomC6EARFEGR0F1FEdVVFEQXRecDnZ5HNhiytWn/1oG98Prr
9/7/93zv+73f+72P5SNTA+PitLS0aRl+DAzPugKB4a2DSvyxcnJ648Tk2Kh3
cmZsYizQPJKOQQe0FCpJS0lKUpKS/1syMjJUpaWl4yaTaX9FRcU2rVbbl2hM
vV4/7fF4Xvv9/m/d3d1P8PzS39//w263nxeJROJEYNbU1OwjBrC+wt9Rjkkk
kmyLxXKS42VlZZuExszLy3NxbqvVetrtdj/Nzs42hWxSqbSANpvNdlZoXKfT
ec3n833Kzc21er3eD3g25eTkNFL5O3C/OxyOi0Jiwh8d58UeXtDpdCvoWyQ1
m81HhcRFjDs5L/Z3T3V19e6GhoZjGo3GvVCzsrL0QuLCxwHiVlVV7UK8r+bn
5/tCNuZVc3PzFaxpr5CYFKVSaSNua2vrTZ6hzMzMvJCtrq7uMG3FxcVrhcaF
iFpaWq5zfuKiTniKiopWMX85xvqRAMx5kclkJcA5F55HnZ2d9+HnmkRhhkt6
eroCZ7eO60gGXkr+TUHN1UEbk604Dzui1dtEKu7SIeiZZOuf3ueUJFcKCtgq
xc5Hg8EwIyQu7nQ/52UvhbvvRjTFPTgkJC7vm7a2tlvBvnSzkHPHEvQTWpfL
9Yi9eWFh4WAysdmj9fT0PGe81Wp1ezzfKBSKCvIJ9B8H+ESPa14KNvpiC/qa
t319fa9410d7D3sjR495nDyCvTX6+mfsexkvo9G4dSnY6KV6yYHIEeRy+bKF
drFYLGWeEZM5AZ+NHGe8Ojo67hF7KX4zz7DXDzlnSUnJuoX2ysrKnbTV1tYe
7O3tfRFuQ86vpg0xDywSVgTOdYrf1tfXH4m0JsT1XXt7+232sfQ7xF2o4G4b
gmd9djGg8GU7v+N84JgZC+0hfzDvFvobrcYsprcGR1jO3OC+ku9FWdf83Y1a
40VPP1deXj4Vib+Qp8eDSY6JPH6DM/SRXCHae+AKh4jLPh7xfk/OErKpVCon
+UuknIgkXFtXV9fjYB6t/9W7jC/fA/+8hNy9ExrnuWLNw7o/I68N8eCG7oVY
9bmpqekE44+z/TLIneYQ027+HwBruMuzRz4XD2Y4biwFR3nA91HLWokTZiP/
voz9sceL+TuCmq5hfcA+qZOBl5KU/E3yE7YM2js=
            "], {{0, 29.333333333333332`}, {16., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->135.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->16,
          ImageSizeRaw->{16., 29.333333333333332`},
          PlotRange->{{0, 16.}, {0, 29.333333333333332`}}],
         TraditionalForm], {-1.9999999732051024, 1.0000000535897937}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-6.9999999732051, 1.0000001875642788}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontFamily->"Source Code Pro",
         FontSize->14,
         FontWeight->Bold,
         FontSlant->Italic,
         FontColor->RGBColor[
          0.2627450980392157, 0.5372549019607843, 
           0.34509803921568627`]], {-6.9999999732051, 1.0000001875642788}]}, 
      {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
       0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
       RectangleBox[NCache[
        Offset[{Rational[-21, 2], Rational[-21, 2]}, {-9.999999892820409, 
          4.000000267948969}], 
         Offset[{-10.5, -10.5}, {-9.999999892820409, 4.000000267948969}]], 
        NCache[Offset[{Rational[21, 2], Rational[21, 2]}, {-9.999999892820409,
           4.000000267948969}], 
         Offset[{10.5, 10.5}, {-9.999999892820409, 4.000000267948969}]]], 
       InsetBox[
        StyleBox["\<\"A\"\>",
         StripOnInput->False,
         FontSize->12,
         FontWeight->Bold], {-9.999999892820409, 4.000000267948969}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-8.999999892820409, 4.000000241154072}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
            "], {{0, 25.5}, {40., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->144.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40., 25.5},
          PlotRange->{{0, 40.}, {0, 25.5}}],
         TraditionalForm], {-8.999999892820409, 4.000000241154072}]}, 
      {EdgeForm[GrayLevel[0.7]], FaceForm[RGBColor[
       0.7999999999999999, 0.7999999999999999, 0.7999999999999999]], 
       RectangleBox[NCache[
        Offset[{Rational[-21, 2], Rational[-21, 2]}, {-7.999999999999997, 
          2.1435917623294274`*^-7}], 
         Offset[{-10.5, -10.5}, {-7.999999999999997, 
          2.1435917623294274`*^-7}]], NCache[
        Offset[{Rational[21, 2], Rational[21, 2]}, {-7.999999999999997, 
          2.1435917623294274`*^-7}], 
         Offset[{10.5, 10.5}, {-7.999999999999997, 
          2.1435917623294274`*^-7}]]], InsetBox[
        StyleBox["\<\"A\"\>",
         StripOnInput->False,
         FontSize->12,
         FontWeight->Bold], {-7.999999999999997, 2.1435917623294274*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-6.999999999999997, 1.875642792038249*^-7}, Offset[
        11.666666666666668]], InsetBox[
        FormBox[
         GraphicsBox[
          TagBox[RasterBox[CompressedData["
1:eJztm01oE0EUxzetQkEUPSiIILSKl4JgBSkeUvyiFKyUVC9CoUlmZhOh0aaK
CmIufpwEDx4UhEq12dnQg0Lx4qHgRT2IFz2Jh4J6EQo9KBYt6ZtaJPuStkkz
u7OP5AevJTn998fbN9PZbXviYky0WJY11gY/YvGrx7LZ+PXB7fDhXGYsbWc4
68tc5jbPdida4cvDUANQm6zQ0286AHGa/upDmz/O5QGbuzd0la5cPqPFnxBy
n+DyK1RRV+nIFQB1+xOisBeud1anu4byx91p3e4axV8q6RyqeP1M3oW6VU/p
ukCfqcsfuJrC7nK5GQLbNm1s2B/n+U7sDtbgPp3hCFCHPyeP/L23rGJEZzgC
bMif2uuBr8VSfzaTMd3hCLAhfzaX46j3PuZyuRbd4QhQsz/GCu3g66/Hn3DO
+xGOADX7A18PUe99brA1t5Sa/KVShT3ga8G75roJv8IRoCZ/MPfuo96bFeLR
Zr/CEaBqf6nUxC7w9Qvt9y74GY4AVfuzuXPH23vu9+Hh8TY/wxGgKn/p9OQO
cDaP1txRv8MRoCp/grk5NPd+DA1NbPE7HAHW9Tcy8mwb+Jrz9p68FkQ4Aqzr
T7lCvTeXSLzYGkQ4AqzpT92j6l5Fa+7NoMIRYE1/gslLqPfm1VoSVDgCrOpP
7U3A1zfv3HNvBxmOAKv6g7mXRr33Mx4v7AwyHAEq+lN/k+FnajD37gUdjgAV
/akzAdR7v4V4ujvocAQo86fOotSZFJp7D0yEI0CZP3UWinrvj3pGbiIcATz+
1Bk8+PqE5t5jU+EI4PEHc28Q9d5iMlnYbyocAUr8FSPg6wN6j2DSXDQS/Pdn
J93+8ufh+U6T4Qiw4q8Y4dx5h/xNmY1GgmV/MPdO4t5T7waZDkeAFX9yBp3N
T5sORoR+uG+P4t5jTHabDkYEtWa8RP5emQ5FhY6OI6Pla26hx3QuKvRE7Tee
d6i4fG06ExUYyx/s7b3i6T2b5U+ZzoURwh0IZXG5UOpP7f/C+P4jni9hKq8/
edq0q0qojGGtrq7Y8u8TxzNfLKv1jPVvPxiWWsZ0j1XTfzZzzvrWQHUC98Xz
sFY0ar8VzHnSoO/e6qD5/5dNmjTxjSUqhKUq
            "], {{0, 25.5}, {40., 0}}, {0, 255},
            ColorFunction->RGBColor,
            ImageResolution->144.],
           BoxForm`ImageTag[
           "Byte", ColorSpace -> "RGB", Interleaving -> True, Magnification -> 
            Automatic],
           Selectable->False],
          DefaultBaseStyle->"ImageGraphics",
          ImageSize->20,
          ImageSizeRaw->{40., 25.5},
          PlotRange->{{0, 40.}, {0, 25.5}}],
         TraditionalForm], {-6.999999999999997, 1.875642792038249*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-7.999999946410203, 2.0000002143591757}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"Reshape\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->6,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-7.999999946410203, 2.0000002143591757}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-5.999999999999998, 1.6076938217470707*^-7}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"Reshape\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->6,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-5.999999999999998, 1.6076938217470707*^-7}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-4.999999973205101, 1.0000001339744848}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"\[NegativeVeryThinSpace]\[NegativeVeryThinSpace]#\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontFamily->"Source Code Pro",
         FontSize->14,
         FontWeight->Bold,
         FontSlant->Italic,
         FontColor->RGBColor[
          0.2627450980392157, 0.5372549019607843, 
           0.34509803921568627`]], {-4.999999973205101, 1.0000001339744848}]}, 
      {EdgeForm[GrayLevel[0.85]], FaceForm[RGBColor[0.9, 0.9, 0.9]], 
       DiskBox[{-5.999999973205101, 1.0000001607693818}, Offset[
        11.666666666666668]], InsetBox[
        StyleBox["\<\"Max\"\>",
         StripOnInput->False,
         LineColor->GrayLevel[0.33],
         FrontFaceColor->GrayLevel[0.33],
         BackFaceColor->GrayLevel[0.33],
         GraphicsColor->GrayLevel[0.33],
         FontSize->9,
         FontWeight->Bold,
         FontColor->GrayLevel[
          0.33]], {-5.999999973205101, 1.0000001607693818}]}},
     FontSize->10]}},
  AspectRatio->Full,
  BaseStyle->{TooltipBoxOptions -> {TooltipDelay -> 0.08}},
  ImageMargins->{{0, 0}, {0, 0}},
  ImagePadding->{{27.999999999999957`, 25.}, {25., 15.}},
  ImageSize->{602.9999955788418, 370.00000147371924`},
  PlotRangePadding->0]], "Output",
 CellChangeTimes->{
  3.874984812754005*^9, {3.8749848532825003`*^9, 3.874984884268964*^9}},
 CellLabel->"Out[19]=",ExpressionUUID->"e3db4df3-ebf9-4e22-a2fb-ed499bb7b2fd"]
}, Open  ]],

Cell["\<\
I chose this architecture because it\[CloseCurlyQuote]s the smallest \
neural-logic network that can learn the classification problem.
The first layer consists of 64 neurons that act like the logical OR operator \
but are continuous functions and therefore differentiable.
The second layer consists of 4 neurons that act like the logical NOT operator \
but are also differentiable.
The learnable real-valued weights in this net are real-valued \
\[OpenCurlyDoubleQuote]soft bits\[CloseCurlyDoubleQuote] that range between 0 \
and 1.
They control whether specific OR or NOT operations are active.
Although the semantics correspond to non-differentiable logical operations \
the entire net is end-to-end differentiable.
But the activation functions are quite unlike normal neural networks.
Plus, there are additional special neural components, which ensure we can \
train it like a normal neural network.\
\>", "Text",
 CellChangeTimes->{{3.87498500183842*^9, 3.874985006204474*^9}, {
  3.874992423811966*^9, 3.874992446589238*^9}, {3.874992568421557*^9, 
  3.8749925805257273`*^9}, {3.8750018384818583`*^9, 
  3.875001848681061*^9}},ExpressionUUID->"9bf7d484-9f4c-4f50-9d80-\
fd38d710dc69"],

Cell["\<\
So training takes longer.
Neural-logic nets have the same worst-case time-complexity as standard nets \
but there is a constant cost to pay.
But the additional training costs yield the benefit of very compact \
classifiers that are cheap to query and have the same predictive performance, \
as we\[CloseCurlyQuote]re about to see.\
\>", "Text",
 CellChangeTimes->{
  3.874985126549492*^9, {3.874992451001885*^9, 
   3.874992451229539*^9}},ExpressionUUID->"842b7684-051d-40bd-ad8e-\
72eacdb1ba8f"],

Cell["\<\
And we build boolean function analogues of all the existing kinds of neural \
network architectures.
And this kind of network is just the kind of thing we need to integrate NN \
learning with QL at a fundamental level.
That\[CloseCurlyQuote]s it for now!
Want to find out more? Visit the repo: https://github.com/github/neural-logic\
\
\>", "Text",
 CellChangeTimes->{
  3.8749856235932198`*^9},ExpressionUUID->"7303512a-3a03-4fd9-8cd4-\
53ce333092ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Notes", "Chapter",
 CellChangeTimes->{{3.8647936427675457`*^9, 3.864793644095471*^9}, {
  3.868426121194284*^9, 3.868426122274289*^9}, {3.87022866137819*^9, 
  3.870228664045348*^9}, {3.870228734654456*^9, 
  3.870228735269162*^9}},ExpressionUUID->"59eda8dc-4a92-49e4-abd9-\
aef5d515665c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"trainedSoftNet", ",", "trainedHardNet"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[LeftAssociation]", 
        RowBox[{"\"\<TrainedNet\>\"", "->", 
         RowBox[{"NetDelete", "[", 
          RowBox[{
           RowBox[{"NetFlatten", "[", "#", "]"}], ",", "\"\<Loss/Error\>\""}],
           "]"}]}], "\[RightAssociation]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "}"}], ",", 
       RowBox[{"\"\<Output\>\"", "->", 
        RowBox[{"NetDecoder", "[", 
         RowBox[{"encoders", "[", "\"\<Acceptability\>\"", "]"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], ",", 
      RowBox[{"HardenNet", "[", 
       RowBox[{"result", "[", "\"\<TrainedNet\>\"", "]"}], "]"}]}], "}"}]}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.868441715962099*^9, 3.868441726772949*^9}, {
   3.868442062468679*^9, 3.868442075018716*^9}, {3.868442527005735*^9, 
   3.86844256484381*^9}, {3.868442825916274*^9, 3.868442879501833*^9}, {
   3.868442927862575*^9, 3.868442930140501*^9}, {3.868442994108386*^9, 
   3.868442997385559*^9}, {3.868443171305544*^9, 3.868443172008521*^9}, {
   3.868443210207801*^9, 3.86844327444496*^9}, {3.868443832176667*^9, 
   3.868443841549613*^9}, {3.868443968480337*^9, 3.86844397610231*^9}, {
   3.868445156069516*^9, 3.868445169542899*^9}, {3.86844548965233*^9, 
   3.8684454911676607`*^9}, {3.868445524601853*^9, 3.868445525318458*^9}, {
   3.8684457755379953`*^9, 3.8684457785428762`*^9}, {3.868445841953512*^9, 
   3.868445843190568*^9}, {3.868446029551764*^9, 3.8684460319907627`*^9}, {
   3.868446204633617*^9, 3.8684462159667997`*^9}, {3.868446498761023*^9, 
   3.868446502318582*^9}, 3.868446990300243*^9, {3.868447023781098*^9, 
   3.868447024311913*^9}, {3.86912103176339*^9, 3.869121111451393*^9}, 
   3.8691211481142063`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ClassifierMeasurements", "[", 
    RowBox[{"#", ",", 
     RowBox[{"testData", "->", "\"\<Acceptability\>\""}]}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"trainedSoftNet", ",", "trainedHardNet"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.868441761355565*^9, 3.86844176541033*^9}, {
   3.868442023100346*^9, 3.8684420354226837`*^9}, {3.868444107190956*^9, 
   3.868444110989802*^9}, {3.868444188263138*^9, 3.868444188997357*^9}, {
   3.8684443072021*^9, 3.868444343231183*^9}, {3.86844438017598*^9, 
   3.868444387605728*^9}, {3.868444533736438*^9, 3.868444535818205*^9}, {
   3.868444625239705*^9, 3.868444635677659*^9}, {3.8684447356698933`*^9, 
   3.8684447565897284`*^9}, 3.86844479804601*^9, {3.868445054584428*^9, 
   3.868445061735847*^9}, {3.868447028248465*^9, 3.868447028907001*^9}, {
   3.868964207787449*^9, 3.868964270803673*^9}, {3.869042816860148*^9, 
   3.869042853385454*^9}, {3.8691211223288383`*^9, 3.869121124951189*^9}, {
   3.869642753255953*^9, 3.869642753983399*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "3b4a514c-82fc-457f-b2e0-0edfac19f449"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "346"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"98.8", "0.6"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    98.8439306358381486461`3., 0.5755160004611363789`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"74.9", "2.3"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    74.8554913294797756862`3., 2.3357365785874173447`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.9730923752947436833`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0131859308978910517`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.94672051349896158`3.", "\", \"", 
                    "0.9994642370905257867`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 0.94672051349896158`3., 
                    ", ", 0.9994642370905257867`3., "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.0272762626645504658`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0135501291949454913`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0001760042746594831`3.", "\", \"", 
                    "0.0543765210544414485`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0001760042746594831`3., ", ", 0.0543765210544414485`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"6.86`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"1.34`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2KPTPSsljI3d3tkfz9zJcdPlrf3Bu3VvPyi+
xFAHo01YXtQcbXhr/2Tl6ucXol7Zb+DI2VfU+xCnely0Pa/gg2myb+3faTHO
a7v8wt6p6Y5X6cHbJJsTs+Zvhrn2G3uzrGNuM9c/sW96cvac08djONU/4+9K
OPnyrf3Mc1qmS56/tu91ThBeMPUpXP5hlcg694e37GEhRmr44KIB1zVzqQ==

                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["258", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "258", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9961389961389961`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9980657640232108`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{258, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9961389961389961}], 
                    Row[{"FScore = ", 0.9980657640232108}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015151515151515152`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.003861003861003861`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.015151515151515152`}], 
                    Row[{"Row fraction = ", 0.003861003861003861}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["64", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9696969696969698`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{64, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.9696969696969697}], 
                    Row[{"Recall = ", 0.9696969696969697}], 
                    Row[{"FScore = ", 0.9696969696969698}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["1", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "1", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.015151515151515152`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.1`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{1, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.015151515151515152`}], 
                    Row[{"Row fraction = ", 0.1}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.18181818181818182`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.030303030303030304`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.18181818181818182`}], 
                    Row[{"Row fraction = ", 0.030303030303030304`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["9", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "9", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8181818181818182`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.8571428571428572`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{9, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8181818181818182}], 
                    Row[{"Recall = ", 0.9}], 
                    Row[{"FScore = ", 0.8571428571428572}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    "259", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9961389961389961`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{259, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 0.9961389961389961}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{66, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9696969696969697}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "0.9`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 0.9}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "258", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{258, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{66, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 0.9696969696969697}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8181818181818182`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8181818181818182}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["259", TraditionalForm]}, {2.5, 
                    FormBox["66", TraditionalForm]}, {1.5, 
                    FormBox["11", TraditionalForm]}, {0.5, 
                    FormBox["10", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["258", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["66", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "very good" -> 0.25,
              "good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"high", "low", "very high", "medium"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "medium", "high", "very high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 3, 2, 4}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 4, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {4, 
                    Interval[{5, 
                    DirectedInfinity[1]}], 2}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"large", "small", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "very good", "good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
CUb8nzFcBT1z+hCX3ez+XtcN0f8L7darVQ==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {5376}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
fVLnoMtBHfsM6vHiw2a0tWWeSXgN7fms0twy5OCGt3m+SeNRcj0i6wnaNYVy
flcveWD9JaEqzklPtlPk5w++5Hs6eCkRB96Do6+w44rTqw692ScSL8zertTf
KWS9aPzOa7slCyHjRkcF8TUzqeeYgeM9xeEipLNtZpo/SNiH5j8eOjU3ezkK
cALHkUOh6hfq/ZErnYu3XWIbSKzTArxX3c7A2ndDz3VriFhK4afxN2vUHOq8
IvAvuZ8OB0Qff14K05PmesRJ9BL6gzG95iGGe/23S7fMQqswPMnjdrzkmrgi
n/qcQwp82MHRPKjfQHvz5+gtszdJ/n0D6hcNnhw/3WtEfobd9BeYfnTXLwF9
/W37FneHgShZPmx8x/17yy8FbJKmHvLKVlQR25xHN1Olrp+U+Ek3vmBxpEhs
fZ/Vj3a9wW/Tw4Xb/4rc36Wk6wqvtCESyt+jYW59ykOReSyO5zOpns+yYgvr
JerRaWaEvFFkMZ1ekihXP+O6UB/LVn/0eTtzgsaxPyqv8uhe2v7+pXeaI49r
OylHGj4ON6tEJrl9lIXrnLhDLc9h/RUn27znjGgWvuxvWofF6mcSePtP4syI
0aNdz8AKLTvxJ+SzreIaxPLJGL//K8pRbE9/XQE4mpmJrZccG75U6354jvLC
+zBGmUnKf8HuP5bP205yf0sO+3UlEq9qwjKleb78J/Trfq/6T8jh3aiCz5P/
Byj3zpK/km/sPifjm33+mlG30WAzEb9yz+hlENusOYvThH56cfPAX8Flcndh
HeTM6/2Clu++iejvfRnrFqefnjD+eW+3/6fWj/01KiU+7IFh2b+Vt7WdHv6O
X5qd594DpV/f+jv2edb+nXWqzfTX78rlOBzx/lfs+Ycybrx9+TvnM4N7nvo3
9W22nUljpbpv5Q7oLft9xbOYVV/HyvMRf/lDiiVr+f8Fe5sbhzxvjSQBZbHN
o6U6z+Hd/3S9JaevbtJ/Aj9J8bdnwJ+/ri2cOT17dTPfCxBXz1q/7jTIyZr6
+yx8g87Bh2zhcwHmvuKdEuVIk29ONtTnqwTKm9dV+ufCMlDe+Y2hsvCzkw+J
1A+ulhzt8wz2+O1CPJhD32T/SX2ZOYYivxOZp7Qf0uL/VO85bfy9ts/4nfG5
nElCv7PmZuUjDp8fVE/Tpo07pnVXqeYRJNK01c2ax/ivUfaOb6J5/4+/2K2s
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
s6XGya0vowbZq1iK+Je8T7NzQSQWD9ln2xudbvBCTzSer9dfKIfpOSjj2Lvz
9kxMvv2Fhn5r01ZC4xLgPjMovjNjFVWvl+Uv+2eqlGD5Uc/L6D53rpGQr4tV
noi/FS5nIZ/P8vfJaYrgz9D6gM8n6RlNKfOZkU/BT0weYPr0s7yL4djJ+mDD
oEhh/LCnR9ZhcmKUPlREheO/N8F1065sYsnZySPQQYpLRyr74/pF9L6yYGPN
eux6SaiPtP4+rpr13KVQm1LvpKCcm7p4PkvitzIaNSDFhn5+ZeKEX/flx+4J
9wlhrmwndj/b36VM14N/ZD9c7s6dtL/HGJuHyTY/R8TP+cpca10P+n2RJODM
mNj+otC+7+m/v590yvphSxqNCqT2779F9cJ7HrJw4kul15/S+y/bz17cR/T5
S+Bdkff5WP3VRdan8oosjkLlRVd7ymkqFCAh3fcN0Fsocp/F7mImMu/AnuYi
dp3Sf40yq5ua/70xMl1demOL4YK/up8Td7a+5O+GAvrOoIV62mORvOe8fiv8
fc/YVfTqb+jHOxslgif77J6/Wnf/FfrNtM3okEdCvzKsPC5LFVf9a2R6/skY
6/Of+r4Ku7XK31/XnWF3rTo5LBWxMXqZtqWbIwr6P40z0ZkTthLtr3HUpXfl
MWF/kAE1Xm2L13V7GI+vIyHy040HjgM6ryZrbp9c+HsoYuQxeyYJ51lYw3MS
KPyVnF075oQcotWr+2fqPB2ZXm88cG3dNyOi/SzzC8UUfYwShzburaJ+z5Ws
R0resZ3PZfjOPIz6upSp7kz0p8ONU7G2GDn2aOXqhzeo66sk+aV7aZHKLSW+
xHEFcXnOrFGcPMadxzHi7GA96ibMY/YMMetPJOlLpiNVP26/uTGE6HfOdv1s
YZzozMTnvcj+knUcip4P/G737D+Ecn6RY9TDdhs2/LFxpKXVg28rhF4ejcLG
I+crWb/ARxd0q1Wo683E5BOndB/1vfnfjXey/uS6IWu9IesvoOR9YAq9K6H2
0lHi+TDcyNSuLd/f+psZ9Pjpq9rbTc+6okD+SXbG4CtzqfH1u/nyk3LfulPv
C2yCxibqjxLWAd7sRuF9Js+iHX6fOsvwnfq2DH9oPSPjIK4OyxgHjEFX4fvw
kMfVmrlmzqdU4Twbw76+jm5cxvgk6fcTAnWDKGdr52rk1byA3N401y+YnUBO
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
QtBt76dd0+HgVGD/qCkZCLmfhk8o50a4+6b9p/DfAYo+ffquveeC1oQM/+TR
gY+Q+clyAP9H5VQ37iXqfRT5fPcjJjs+TIF/TwR2vhNyS6e+hye6plo7fgrh
++1k+YAuij5lseFGEMVeGn7OxAy87pNxBf02Owvlxjdoo+C4tPonDuJkG9lR
x2+hfLTNjSLp5YHzHINWqkZ1ENrP7OBVT7HHvPs5h2feTyjvYUqBA+NYwGOk
1bxh005E/ZovehtWh0irX5OXWedNWS6or3ubuaNHP0JCKvpXb+Dj69RazGEr
xSXQr3cZEMWD6vkHKUtvVQUyUfPB7Med+Jg+roolFZ+mC98D5+1YXywLXrT0
Kc9Q79xRNspf1PPjrE/w55LnFLqd7tlPtI621rlKyS9JfiT3g3wE/eS8lCQf
8M9R8I0a8noTumT5+IG6/eC/Wx//SDM7XOdL2f8Pht/09hEhq5fwJfprTo7i
q2fjjonoSbw/E+Mfjl+fJ1ibEL/cy0teQeOQjJvAH27LhdcR5qaW+L4EK+pN
9z5WOUjEhfvU8A5Ff/I4ACcyXx917bcLPbyh/qDRS0hNalVTTkTA/QfDFdQx
4N+f/ewWzCoortLGHwFnzqx2ORR+Mfkv1k6BH2a0LaKMC+ID5BtMz8T97jbG
u/ehZNxuDL2SMLs3/H1LoM/KdR1SDo0Qvq/G6K5bS5s/X5dXIBucHS/fCcHn
0SXVD0k4g/hKDe2q1tZTJF/YRybR7wP06KPw9wVv9N4G5FWNh0bKiTNIQ6qO
S0vI+mgyzfyRLZGfcJzldKtEFn7enRDJ/AKcN6LU+QbjRLWTBUxPNGF5oP+n
p/DvIooZX6rjV3/ortMaw5cJN3F07XNTry9tqfVTWvlvNiA3Pt7G5y9OFuh1
79BLcv1sLi79Jw3q1cfhJd0+DhQqbv6VLH/ewLJSv0rxfmsRBN+P5fqL78Pr
CoulHh+mb4b1mw/GD7ahkvSx6vaid0PJNwEO3Jmdxe4Tw3lieLpZ+ojDDeaf
srOTTC5nUOedz/UfJx+w0goFep87O/xKqxc1Ivk3dYfkfRgBv2eW1aI8/lKU
Jn450UuFz+9Y2+ZGIIBPgNOdpUL57LTJORT/GyrKrdisZiI1DtZr6jPVu2UQ
5XDtJ+RS9JQkJ8h+7MI0bTxfyH7/dlDNQMOBT/S3WHnehtssz+l50+EiQsE4
11prTLeS4xNxEuFzst1nXB+0lc7fjO++tPOMrC9pXJnqSs6v59rcnE3498dh
+kjCQda66KRldqL1Br7E/Jd13I7m1r5jZ1K/XyWgd3fAv58srf6S8lCQBxt6
Ca/DnPOvT0mUixaHiawbOtfhfL6OD/z+I6y15j6kQzbW1ozTrotajd8vbB5r
e0HwXeJb5fsto5VC0Iy66e/Xx+PfCQouSKtpmuqJMq069D92TPr9fGThF9S7
HjPkK7RqOFB+srwvpa3yehH2KT6ye6jBuzZ4264p/v7L0SXIar+gIhWePgrs
ND108ameqifaUUk/Y/d42vXMmF8Gpqcjt15/Gr1jhzd2vqAu3TnTSNHn9MVt
/jtqQ9H/Q96Xx8XU/Y8PES2W7MkydtnalSx3FGXLGpFtoqKFkKWoTFGWknYl
1SD7VkgJ3dFCKtqoSFpJCmPf83uannPvnbvMvVN5nufz/f31fp1zz/I+7+2c
e877vM9YT51uhbZChK6gHMDj14bl8aFL9mLbI+3f29LCwbrxXVXuxZGXofDW
9zx3jhuKlAd82rxv5u7ioS6E9jD1RWnlNqdiD6lHIPjg6cUEquvfg55ERD/J
xpynUfH5tppZyhtFNL6BpPFi5zsghyA9dJ9Rof4E1M+7prsM12sb9b15AAG9
sfz0tz4N2W1bauIvHwTFbth1euynUqnGD9pZ3+s0dLnnVL+rUZHwkmVq3bem
Hob9L9uEqLXuSsALTx+metHGrp/rcA8xO8A+efUw9GjiXZ9ZB1B5x+szgNkf
VvZXPUCtt2Or7YfPySLWA+XxdAdwWPnzo8WjG/3sG/hG1j6Wn0DeHcN6aUwS
kMZ/Yr24eBdK4sV4Z+hFwJe6zApKuLKHkl7S2qEa863rtObtRejQpXp0+aEt
InsvUOc+gYKV2k2ZbE19ngz0CC+/xd5vDHNT3ZE04AuWbvNPnqXE63e/cKsd
8kKIhC4ck4ob0Ka0W7Yz/korPd+SpTYW/Q8/6fvgo89XD8Z2siXtNBaaa76c
4Ac7IvYMz3+8/JjN7ZPwdPdCAh8B3ejsxOO3zwS1npaIvv2Vz//IOkPAC/TL
+fVl7IsXTwl2EDveBjx3F8ltK5oYAZPoGylsJW+6xHd5LLYdzotnr6FFs7cs
6vyI/D+cbD3fPnfnrG2dywh2Cs8P/Hzc1tv1oOfacJiqXTwcV9VucHRgJPzu
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
7ZJ/v3ODs7D95rtFNev7mXTywpuXQG7P1dF0weN/8EfoPUvh3qsP2aJ4wLBd
UDmJDsi3m4NK36eXtZi0i4Oek718W48TQhj+SpRbYruyQqK8g9oFyWW7rubf
NcqGk/5T6AcOgvoJgorncyeMX8GoX6x8R/J4AsIf0e8Gvr7Q8cd+S6TH3t0G
NbqWzOyUNP09n7hrseW3B9CnuGlzVcbSrzNA9EfgkS6bPLzDl4n5fLx28813
Xxv3wcLvivbVOIdPZpLkgK4/YvpF3kuLf0M5znEGatPPa0cWzPCtmcWcv1g6
qseki/G813KgjiQ5BunNXa6zT6CEcghdVOAwW61BlPxmKZalS613LeU0d66Y
KUeyD+bqlU/UmMk5rj9E+ULwQ+R5xb3Jx4o2NJarrZM97jbSXo2z+kL1lkLx
/66vpm9+OrUI+jHIbXmJeoAAgUj65ozv+nflNwoC3h/oahInOp/nRf+gX78N
XCCnEq4ZBc2ZsvaL58iXUMuO/irdxliK6x0bl8UfEBwubpezJrmaNWyj4Ozb
l/WFXLJcEvGa0TlovWV/3Lv3fC9PsF8OUr7UWis/6Lh5Qz38bz/o3+nUVbGA
+1lqQ0L3qXXu7Z0byrHV25eQ8Gn4P/cHeZ+cmG/eoWLtT4rSr8+DfmQ4Xpm7
SdT+px/R4nqfDG7dWmsjOf/UK8V7TSnuWyPlPi20dPLB3IfC4Ml2NaaMe0DZ
Hwo6kOz6wRGy+9em/y5YMfF6FBUdZKqvAZ/djlaQpd1WfuRkme4LUfLlifJB
G68asr/aiQvyh8qkoxdTyA11AcfFXTp7iXHXfluw+syb1QOdP9rNnz15Xy75
3RkQfhT6xuk1lVIPKPPnRQ9vdznHHKcvizNQPfB/UdtxrjxZXlMU7OKuevNI
9Msa1k1NrvEdebYNF7xunaZ1I1l1eqCYDhGLWrdemSva1+aV5GXTyvNnXpaK
Nv7eAv/Wwgwow36be72Ftcx8vJ2ip8qL9RJ0nNOy1LKrOake1+UjXS0MjKWW
d2nlC1Q/Bb/FfLNckA0h9hpUb9Vi16cWLcj8lBVPJH9T9Z/YLiIfDMrzvvYt
lwZ/9p3tMVCLE0feGEVHQU5zk8f12ommg+wPMm7+8w1bJseT2vFy7zGx4F87
/XtVGvSBPb6N4i5wXP3ntmfCPo0qZGzvjpmv01/XH/Vz0xLu6WjuckAg98T2
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
dwpFIj4j/RPJI1vrDC1etdU/B/nMleqPOId/n6SVE6h/p47EdBkyE11HRvhB
Rxeih0C524UmtJlGf8/Uso0Ps9o/F88zBI5LKhjpG8LvFSuk/l8JDKYmQYHH
vlXwh+QwpkdkL9sfnCHpDZ2+EvWTzp6Rel14dwpFegGSD6KvxHLjY6tuWfaI
gAMnD1ri9Acvgk9We1MZtemLvi66H584xSDj5jT6+MsP2S07Wyyi1y+Rfk45
cBKIx2bEsb7Ki+v8oV9TWJqcOEdP0K87E+miwMcueHACQviGLT/fPI8kP+6Y
pMlUeeoxdIufS1stUtrXVXy/JOtEbByQvn5V7Cz/3VL5hYMIPRi/giuXRd5U
dkXBB0Z+A+QnELvJrOzRZMR69F4rxA8idMvQLnvqZ/K5uO9bf+sk/ZRpnUrQ
hM3sXBwWGvh8POE5jmwPyLjZvPV8O3NNIdZfcD2nHICMvCoNu6xB423fTlnT
3j6ach7HC772DHph3GVujSH4fkkR3sOGlOsZnCd9GnUdmXvSl3K+xT5vJl9+
AO/tf2ef63/6zz8fjsrzQ8JQ3q9flPsyvNPL/9P7qimhzqn9jz89adB1RL7B
YKn7FDw91YC/3m8QfHpIefnQT/L/H9/9PF+rWzPxOh73Q3Wj3gPAPbbuPJN6
rL4TpJ8Ho/LbCuldTvoMbND1TYHKEPpx390l69yM97L5G9MzlH6Xnxkmk33x
7qeK95+5yQ4ZIsgJtac/r7hF0Xzq6d9i+2b18/j76xMNAHmZzbz/s/ZsjHSu
r+goFMvr+ql/796MxuSzclq9ziGxlqlI3V/ifTwG/s/yZ5dOGDogEo7qO3KO
t3qEBILK6aCovb7G5HV2zHvcMwN8Ur8XtVc1uhbYzqXmeU91B3kC29td2Wne
sFURcGUXzaBHeyNJ+Hs+8YrWbCqU4LcOG75gZVcPEh7bBZoDbt/ZTkU//0di
OuP+Vt542F2r637YruWHsPLyLKp+8U5ZvMY974yvkYWf7Pu7MiHbxfsHboks
x+Jhz31UQsIjq7zk/Y7Iv21vT9wwP+LGuD29Hk2PVVuWykw/ld6IxsHE1XOW
rWUJGX8nbzmo3pcel3QGPquL87bPRPW7+1vH8GGWY0nf8bbeSOtnIISOPdfy
zIzbIbPdYtrn9j6D5h9WzLyzv73AUW75YvwAp3hPNKTuu7lZteUeWnzWXj+e
tvodhfMjIrnQ+QU6v7PzQU0Rt5UXkN7PY1pU73qwS+b+9czPsnxlC9YXrJ11
iEgl0eflPfvug54xEv07NPZTh+Sn8yX400wWVue2FWL7w02cng+9yXN5l/vn
u+En+48Z/GanxJ/ZC3Q/eOTn4PzEvZ4V0Iy1ZjpmF1B/ZL6nXUZS1A4gvxB4
oGs/eO8QIZD/rZRMDOJ0DzDWs/sa+c47VMj8IuJN1nVnXVLCt4vVAyw/9Cvy
ZfZT8vqvlRtmHxq9bTc8/mWbg68sHzeY3wTBIzqqJc+bgPkva3uja3WNTysI
SfZChFC3j0rRHcTnWlgh2tHQku9ta7sbHoK76SmMcinWA37H31s8fNmvuny4
graFkJT6/LWFF7D1id9T4vf2WBq73Bt9v33Etqfqfui9iMT2EHyHRgiLinp9
TMLOj0ozZb9vi0gfES+Ifil0iOHMQWZhVmHk/BH3xrWemjgCfI7Fv0X3AQcP
h0Hzut791sT6BTR4yKJ01ePM101A8qmssUrbyQF/d8j7eqnPniwgXxC4QC+Y
A3vQr0MS4Wxn48vCjkIg/nD/msvD7oHvtTcrqL64fGhTCb9V75u3D481F8s9
yIB6Px4A2YGm4vUpVoAbeL5NJV+Rv7J4YpTPX+0O0+kNCJocbz47bAHZXv2m
zHPoLkyTZl84uuj0kli+YrLl9bfrSkjyQ+yNSD9FfwRDDlRJ6tPZtUguxXPL
gPToxfewamqI3uub2mlic3tlaxJe0PcjuiZz4+9OgY88PGF8282S9D4vMjp4
wbEAIH0U/ePfs62SSe/XtiPnC4Rf372eunw2rX0Q5UhsF9GDIe3X7fZL8cW+
Z4d9ZLSOzU3TINcj+lcQX5jyAan/e/VbpQdH3uDGi6caXpR6UdpjC6k9taYj
Kz7f8YcPZcZ6d/Un6z/SLsg+GOijXOOB03yve1rxqkA7c16ydXSfw/j9IpfQ
l9CJj0XHP3qieonQjXx3aszcQnMrVA7ul48XntBDz63L2p8PMdmzdFWWS+rn
65cU6lWUS8ofv9/Utqqobt1Q5McejdpuHWVsAxeM+jLXpc0iyXfEZyJE3tus
NUhq8mc+V5UY56YwYbOk/uKCwdvO3rSU4GWKj+q9iM69wcYdok7Sr98mnupf
eLWPO/xZqfT87i17aPtj3eHaMJ9mQtJ7e3/hwq7vVtF+L4VvbNgbtz7LUv4A
jktOPOc9Ib59lOg7nsnRi1DfV2eTX/QrpZUDUz6+a6ewIFs5DWr7ZZi72TzK
eSL3/LDH0voj6UdCrvznUTD6yZ+wIxkiyqm+/ZT4kxYWnwxs0HXbr1fGTb+x
BLcuxzpbAo7PmHa39tORrpR8Yip/yXiyrG7dub78Qtbzubv7J0J0dtXFuIv6
1N5eQH0F8d0oowkP2i3A9oNXeRq3j8TVX5wJaZ6c4HtLiWw39ZXjwuo4jxNH
hzWYPmDKWT1Nn5LqndQ6dGfaLeb5mEfHGCRsPk3mK6jddC32wnUmOL3jffGV
P/5dCr9Zm16R440xfkWudpj6PVnfEyHib3eb7+ijdQ7Pr99maN4xOn/RAP6S
1eo5LBMekV1K8QOsbu7RwPa876g/t2kXJs1/CDwnk++jRGAqnO+TYhwJL+hZ
9us9BN53KGrmuuHGPun+rJHih3n8tfXKpy0v5GtC8vtdOqhj327VqN+y35cq
BbLnp0j1C/zz58X3gHFOnmiUOHhW9lm5zqfJ3V7Ub8r/de7wZHC+zZcHQjro
pKPnBNWKt08bmyvmh8B+iFzxzuyXd8DnSO4ezhpg9e6fiHfmLK3G74cD7JX9
qwp336Cg5r1c5/L+FmRPNZKJ34I3rRpeb414lzd4eOPi6tklXszPS0mBXJ0k
mfSUt8VXKj/4435JPzeL1PNfQ3leR7B5J/k+hTDHoT/2mzTquXN+WN+GPb/V
QOMXa5beP5U3gH0xuvHi9LzGNFt5ru1WeE4rrWPt75DjVUFQ1vrS9HvnQvJ/
mEf50LUfnNF4s7vGg5eoTOAy8gevZu6kKufYmYL1DdMf3gsr8vkKUH/p+HA0
wmB+W0y8gQyQc3xFjgT/kIT25W+2Mx/3ZeCXpD3e+CSSHQ3vkahrP2MpqX8X
rv7QvWwsV78kMI1VKY1//KALDRd3dcg2I0inI3N6Q4xv9Whpg9ZfbnT5R9Rm
sh0S6X99Ltd4lBrlPFzw8z7ze6Xo5Ie0K6te2j0blWCwWUh6T7Q3OojUTz/X
0mSf9PUbbs2mXTi5tlL1oqXTN/pp1OxrpxjTU6GaP2l1BzLfqfAXrSfHV37W
0Fyjuo0yTo3bdmUGE3vnhC9A75VA/Gp95Ux8T9W+Pw+9H1gl1DJ49mfxfwQ/
0h58zwWFvLm1C8n/mSD5UtDBPWv7mAmfSPxdkUI+vwjiC4KX7v2fZ96cmWic
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
izM4RvJM1AvMM593WRxHKxh4G2yfonqzLPOl+R0cVEnarbJvOfofzlQP6fwq
kS9Y+OutANrNOVr9IAuNz8+MC+kxSnGZ5FmwY43QoI/43BCL3QKmlF/3ujxI
fHt39L+2xC9unWkTIWP7BdoBQ38G8pdEOVL4CT7HslTyPRO+i/w0hX3w04Zm
AvubdWlIQNU35ufNsXp5IS6L5KdA/gsDeW+zyXHJyLiJfLe4spfeYsz/f/St
9Imp39B8X1Lwi2FA6LfYTybg/8mIAW1U7TpJn188eotbf2IVLBXPjzgV28nr
BTJAlt3Rv3LvX2NBbnNWDNR354OkYF2p/OTyZ/nLglcw/Kzs+23tc8JjPzQX
08G6Z8Do/lL+Ew3q8ZJmHszbVCtT/ABr3WD6PCQMIG+eImXcWINBOfe3OcHT
xP+p3NKJEfXSpzGd63du/31mLI4uTvZ/cu8Fx0Kd2bkQlTTK+3tYTpcyRJDd
oxeav+9v2LPDB+r5FVO7ZT+lXLfnr/8NPlcqi/4fXSU+3yPI1MTlA2IvPC9e
N2NvXCdXHhLBA1Op5734g67IlZ+CVm82PgSf07HPGRV/UFUolW7zTJnOe/EL
ujHKFycovc38/ucGgIKva0Pl0odObtTjvEETqfF+vO79N2CfWXPKGyYP4F+C
nB6tGM3jBNd2ZzRo+zR+ij+ijPn9abLCD+msmFe6/+n9vGJYdatNz7hiyv18
zo+UWGnfCwRxjRd3HT7sTO6aSw2TH1BZQfZ8In8gN7fDP3EvMGO/c8ee0u+z
Sofsh9LL5ox/2lsIcR7leLZvJxS/32sqfzxTa6ddnTMXkfN3BLzW2DVG+vkC
waNt1Pfy3Fek9Odsvep7kPOZs4dGXpV/PnWHd9LigJlUuv425Pef2qh58PiB
7xo+jlLH6/y4zOZS+cpXDWSuZzVX36hXr2qQ+VVjQe6B++L5BNtoA7N8tQ0J
tzorRoytO98p2DItCzpk92BMR2b50RDIi/GXKz6b/Xgjo3kUp/Vpyv0uTpMX
OH/ONZ22tMH5k2PlV97ipHz/G3Tx5T5ljM5TC4ym/NP6C9QLpyCZ/Cv71xnx
OVVBShE4j5PoffKFlZLn22E+P3/X+WHeoAHy3UNJ1w+1EXV0adlS0sXd/pUy
bkheyN40SOp/OWdaC1x8M2+Kkkz3w7PcLtTta3iobWtIfZa5XnU7cfu8Itsj
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
Qj1fP/DrBXSlh022YlAprdzooKx6gMANacUdltbdY8DRHIqLQ2G79MTdH8uL
UMDJTdDhF7p/puIc+qmZnvh/iz2ztZjPnLOTyPtZMvSTNaUGN1/gqDWlzyN+
NNdu+R1t3DyVb3ScnGcbQwd75b1yyK5rChT9uhQatGTQ0IntmPt3jF5xNzqs
xfFrfkQFqR5iVxR84Fy1u4Sli6WYlE+iF7EPBN89x3ebZmLW90r4I3Wdt5Dv
rSZC1QdfLvNaLoJrTQstHxLyCjCZ3zHRNyo8dHaIwKaQzkydlC2U+E1/1uVN
DNvI/Jw1wrdXu299WWL8mJYe2723oLZDS6nqsWGW1P93vuNv8vkWpnoP8stE
OkF8RvwOIl9Z6aivHwL1h+jX69suRX3er4CieuOxO+hurWqDzx8o4q88fAPY
ETtz0kNo/NIjN1TmRlHiE33nU/ih52s7qfcDMLLTrKaXOvKnMfJnLLdc6fvL
xPomB8j/Yb6h2ua9Med/XYKWnbLoz9yfYiDXyoX6PlKqfnf+dLGndmUG9OP4
uyurpqB+t/eA0V+1Q8njM6hcml1vLCTPr0dOKjs5frkno/7YfxLnteO+XJHH
WH5SIG+YMfiedjn6xxRypvUUj+u8WwV1+xB9CkuhlhXW75I0GPGBEsbvnbtq
Nrte+UD5z13Q+QFCz3jtHQNzqfMB8X8HgO81AcG1Pu0/PafIw9P87fovXAb3
pcqgl6yNAWi80rkf1m94U8n3KhHtjQ4S66uN+vFyZUd6uWmaGf3iDhdKo5+b
kiw1XzQlBOmNHPrLbbblFRCfVdegro8PM6ePji/EdppdTLbMkrLfje1P8Xz6
+RnIr8gqb2nw+yryeo28foOB/fO5HcH5zOrjrwrV6PdTBiSarUu480/kMZIV
cp/co457qKiSut4mK+RfqbzT4PRHl57foDSEku+82mH1u0etvpAQh8C1W90g
8d2NBXkbtKWu3/LU5lPncW3kPIXskXP++/syGqMfXQ9JzcvKs+jGaF+NNawE
nE+XARRovAiXSueIF3Hy4OWUlDBa/+cXfcLFt7I61Mqer7AhYEnwFSb1uN96
S83zK3Ab2aD7HrTy+/alQeJm5YWspim5dXpS4i7z98+nx2y800Uo1oPdTn9v
vDzJjpzhHdOgcbGs3rdw69NcDZ//dL9EJvhuQGfetSpwfo7EbQkni6MiYQQS
y0X9U59Ntlti/T+Qt9X+DRAvRX0QPn6eyxOoMG3TKQ9MvNU8aIx7ixtoHJ3F
Vec1qoalkN9Xy7KtmP+lQ2aXB7K1o+DefMumDjnidXiWfl61BP8eg7OVLzD3
j2m1aeo29rZM9OH4Siw32PX8sZmWkJbvWH3S3VYKTU+LPfgrxIdUn4Iu7rIv
5P3oiDNqX3LPnqCqL4Gfg6Tfc6J/8zHpe+wzdvz/ZMrluK12IfEDi2+dD328
IAY/G373FPIwVnjddw5XKt9EdGDp+tlRrBfsvKdXGdnvhu83SPiI9YLMj59f
eioEjs0cdd1JBRwvRsFvgenXaqhvXvGOsvNgfs+PXPOq+wLmcW5M7VYKXVK/
I9obnT30vz+35qRuKRT/eu/AlC17sPYm4bPPYhjtbw/tsU8XOMBEPUk3G3/f
MALNd67bs9D44kbcvQr85GrwOLh2viBsRf5CIB8yrwYdN5uG3neAqcc65oKu
r0+fcdVxQEe0/xi5s2IH5TPmCwInXOUs9muyg4ovPO4jNN++wu4KBUEhmmcA
4RMTvZemv5J+kf0Kb2bZQZK8QXqCyFckh76rqxjzAfSezi8ifE84k643aRCZ
PlnbdTzo1Dq8NARobyB8q1w6JeiNpV8fAdnT8xQ3TZUDuHVI/t5fhTLTT1df
r9ei7AUe4Lx6dPDL2GVdnzxeAnccU/2wyBDsj77Hl09sUZePheOc8hJC6mt4
evb3+IW7B523YZ/sceJd1aaPtcDcF+u4ZNiQ1YKdkuemI34rncSM2xh6cHi2
2lkIPWpWw8mCbV17dqHMlyMrZNlH3APaWUFfzpgOBrLlP+uzkHzuT2PntFVN
DMj7QnRykfibqa0+r7DB/VeyyldnSqODF65PuY4muLg+SWr/YlweQX4zvX1u
aqP3WB89Mbm/ehp+3WfDJUbrBYLjPuj83KHlMf6nM+B7/0Byp4Pw74ODwtqD
/R0WiuR80WvT8IDbd4D0YO3h7FV0/f/SxtoXp6xw/zs8thF5/sw3Ler0/K5M
dsKd5eUleX7z81fT7ERwfjUKubHHO96ANghuLFTP2QgT9Zlob3QQqc87P/h9
vNIi+H6E8qU55bKfowXZD1HOUuTOa3L0ikROxYtPp+7i48758SEF8PmbrO+u
B5pR7LeA5K63YU7gxi2uInp5U8PA8Vyc320yDiaD7bZil2f1kg5CSTtM9RrL
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
v/3ZufT7SkT9dJ4X9/mxNy4/qcAojTrfHTRM3A9+n9RjJLn/gZya/qchR1u/
uZy6vOb8bC80HuusdbdWlYPkv++Moj0xRPSbqDetksIGp7Wo//o9kV8ILLti
FOhl7wC0K7pyon0g9kbsp++KgVmmn8nr+YOUKz8uc6U8D8BZu/8OtPsU91My
l7yuqn0h+NL7Xeup6GQFdC+QPN89FJ/wsy4ej6ejUwKVPp1tVvY/+VXW4s4F
84smZgDtkMgHvkbpvYmnyP+X8Az24uoa9JzpoUAljaC75PyGIL8y0ca0W/sp
6P4O4ldjTM02bB0A1rsVqm/HqDmWQoqfp1tdXC1eX2bx9MHnWBnYI6P60vwr
9ruKhPkd3e/g6Oev25yLxcu2HvyKpDegdhG/SSwn+tuPQ3+VBPUm07ckps0c
6y/ke1JEfHuYWi4zf0blmQV3zT+I82ff4m9CZzUiDZKC6eM8KPxXnf7orEz6
tKEU6vmg8/NknhWJL3nvHP3e/uE/0b53VnZZk/ZlqTT/iINfzoS+m1YBnn/f
PdWp/OoM8Pxh/QH+riD1dbT99Hq89tALV6n5CbnhRvj9VKb7QP+rJ+h0A9Uz
3f69Nh14BV4/n9TEOqRVMPie1zjtIXc7eB3E9ov12jcDWJ+OT0R8SH1seer8
U4zxMaBXJijY/NZsW2UQ7PrRrYseJm9afSGILmy5SH7nuthtdlkje95tIv76
8kEKZA+5Iz2+nYqfCD3rBG3eq2PmzYj+TWJ5LJ4BbRb7wS05j6E2Zx28dB7S
z4OI+vEpa0zKlkfi8YdXtLNunu1wG3c/AKdbPDruHdrmnDurohTLL/bzDgVA
vhLLie/p7I0I1w1Tbjale6mET52zvvv1a4HTO/aNyU9I/CT2m4JO/pmNeVj7
ZgVeeQ20d6UL1fcdAveT+kOBn22QCs73w0Dv+ck5lxnr5yX7vlquWfR5aBB8
ZR2OXS/vKJTwCXnfOuOWo1oHIRVd3LO3xfrA35wPPvcMopepvIn0iOQxtWUF
LR9A72X1s/V5jx1/uuvrvXHAnO/4AwVD99TlQankk+OpRfb2fS59XBkFPZxx
L6XnERbRRTd+MfaH23emJYfi8qNwu5u8gTzXTxz/a2MkjECkXWI5U0hst0zz
fk+lTWi5rHhAzwj0jn88rM9sIake0i4If6z77lbPo4JgjfHJQzZ7gPHT0b3F
gh3boq1Q5u+Y9L8+ciDC4/pp/dcIN8Fp7XcZNutdSotXXvpF9tJjVYXM3zmd
nLzv5pB+9e4nU/pB7+n0BgQzW/d3y36xR24+isYdaFAlqd7GETmTOtocBH6n
ueZAR88uqL8Kjpw+TrjaCqVr17eY1uxlcNeHdrb9NDyZ2C37eudnMvOtoer9
vNbRY9nTA4zbF/llt/apkucgmw3VjhqoPcbvL+h6OqEGmjXOjMuKNGSiN6y+
bZnrr1vAMJuCpD9+d0frxSGFLsB6q2tDe0829yPRf9u7qmSsyX6Z9e3pYr34
kh5VUK/nRyE1lyUSf0bBH27t2brxbTmnmtafiuYJqwc/g3SavNa3Zcluxw1l
r3R6fz5/bLpepXWD00HXLgP+1cvvg/D5ufinKy5eQSlfdtsqUnsCc07O/NF2
TOxdDKd+DCotxdwft3e3da9Xmqsl7630szYaCsXnHHjWT9H73LDzPRO1y1DN
cn5FcjP0foNr/ltCFLoIqerLBY8c87qk1UK8P8tapPEUKvBTzt+rLMbPsVUm
nyfuvGnes9h88fyNm34wHvr4QP3DzQulUPSCTQd27nGQzLOYtB9y+yUUHtNz
x532defsRo5+DR3M0Rt86iC6b3lbxUNzdWadHRU+Oi/h6x3rpElXxqPni0qv
WXW6Vff/zR6YA84XsmGQ4zb1un0p7ur7GdCgjdG/dS3GSvC8zboEXT0ijmdj
Wabeg8rNHh4apyb1fnLWrBLK+2PqBYn9Q6BPjetzPQH6f0PUMxDM2N7W/a0f
eD8Y1J6In02aPoF0vE+MC2RAd+AjjdYzDMX85Te3YnRPDbtjIHpOeXa5klUT
I1S+PxJG3PiNiUft++XDII26/LECExU0rxdRb0CQAb/Y/s/I+w0IPNXZOfyE
fimQXxh9xZVPmfv77NBj9jBGfqx1yynPkbBrNKOpyvmtFND/m8UflG7O9guG
Z772OvhGZS2wP0h/NylYjc67I46X4Wu3wtHPNTJH/8+H7t2gabAYXQ+Muju0
zyEtin2I/UmcYc/8cHa4fg4aDz2384aiDoPm0OqlHHrPzVMk57GV+FXlWKi5
pjUVXwSdhmeT2lkZLLQ5vIheL6TYByUc2OxEeOfXlOvljCAiXzr7l0In2zTk
Cq3eI3ZzvdnV+SkF4DwnUtrlPdiTBD3+bf2tRxTuvCM/XA+fR7fvVepzONjx
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
JDvg1K6mxuPn0Eyi/+5hMLuhnpS/lw2vqvpVUl6AFoD5y9n8CShnedEl0bIM
KJ8bOvyEnQXoX6raa6mff7vZubVIu9gF+U/fyMk1xmJSV723/qXv16hOnOb5
aqg1/yqwvaJ8XRsC+WMcKPleUfu24HkuMmy5hc2z8zJblJ6H/9gQPevBzOd+
Le73QcHgwrOe21+WK5/f09Te/Le0F2L/6CA/1ectmfR/bR73/Tls/vgGisSV
lLjGezqW07r7pwb5Ndc52ZF480pGP+cVmYL3lfwLIS85hfEedEFUT2779j4W
X8ej2ecVOUC0ZvEHuR9TfC/9o8zH86PDlc+r4/lbe54o/hTsRXSxL/y8Colf
tvf84lvgPMWHgDle73XfH2s73teuy+anfAy8aJwrJztH6wLAc1suY7vIHJAm
VegJFvdVev4LPdOVMb4KDZ4rj7ttln8QOxe+npZFea9pjcUz8ckxZxnbM09J
/mJ5vY126u37i9HH4qsIbcPYX4iDEWy9W+R7ntpPJ03gfp+tvL7VIJXiHC/w
GcYX6joOXI/NrxmeF6jk/nIlkJ+/AtyPRYfdUs8LChcy4udvvUztd975ofC1
LWN/IDo8R+k8ouD3aO55iZns2OmHt/flLhh1hYkvdfHyJ9mmKvvOe5rwceIj
7h/eYdT+bNn1zPfBJ15vxjheEOwPV+++3U9s3wL1nq0/c/ubTgLtPCx9Tdzc
RWr5jUrw4bdN2bOOflL3zKvsV8HemF0Ic7cz7wf5h/QvumYIP3f6P60F61U=

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {65536}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1: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
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {5376}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {65536}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/18" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/19" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e41e1dbf_400c_48bb_afc6_36f89af082c3", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
BoBR3gGYKA7AhM7f5gSlmwf/JWhmAVgMA8DCU2A0RxcAM1vy7NiZNADrdkej
Tfv1L0HVd5tDjf8eA2D9COzkt1dmUdaa1x87cwnA/NcA2K2ZY+oEzeNgtF5t
APvPlKB1tOcwWvIOACu6OTn0kc/GpzeCaucAbr1GAObGBLCp+2G0Ca5AwiEA
a6mE0dK3MujEdw3QHeIzFHSHOIGF7hDrEXeI2ZIJljLyDJbqArHI+KjX8qOu
Y9gBVAm2icplJKH/yZQlHBJRZPyj5ONfVED3iwWf7xf7orbfhGP/2/1i1XVd
1eN/fg/4f20k4p6wDd+a/1/uCaMLwOi7DeyiTPzar852oXYKnS4I9EGH6M5h
tKB0V80xuEKJdpSl+gSdC8eH1FkktS3JDNDHr+D2lklCnmWR2DupVTzX4rUL
BJYb/uSVvFztaBhXihUJWUwXqQ75gFNyAMWFz/D/MdlFNJlzfuG2/SbkJcfD
0s/63zI3p9hmBAm/9W/099+HZUzh0ubp6r7RsmlOlx4uoRQXMudv1ryZcXgd
62BA5sta6ibORX+txfz9YZyUuXwKurJkp7mytJOiubYyjuyUEWR5mLj7k0U5
NO7w2qSfTWhU3eeSJCyXq6u5TPMGU1/8+Xafv94W42NTM15jQlYkTXf8cwDi
Ug5j55fMYLkZOmHJX/omO3GTwziFzbptaBhMTzNMn2aYh/uEhluMT1ni95YC
3glLtLYfy3y7/wxzoFnXEl2zQZe08NtOJEPNbSc/hnfAMdFZ8in8ftQ7YYfW
XO4U4RbwpF8LJZNfkZcDjWfHIBottdQ0bjclr8kIungFp3Hz75Slpo3+xyRn
Zwln87U4dtw8dB8qZZXmPlSluWTf2v0hY/F7PFZOVeUBulvGXAnjWK621EJ3
mtao7jRlGu//zzgXc0r7iqrJJTS3ZhpVGM3i2tLVN2kku4qsSPb4vYoX0j7d
7XzPrAr9+iLhvTP0MIlerXARP1f6lX+1qaG2xWn+k2TLcv2dlHGpC9dnVrE5
1DKtm+hUNgc/M/uGrLk/oSdyKBdIpBxqiQ5tpmW1zqUs7aIpd7ESHdL0jCKr
ZOMTxH1NfVpcZidlRrm+jLSaFCVyKMwiRWpR1cd8F2ZS5pULDoqMiZO3m/3p
Py7MKrISGceUFMpc56DTlwc1N1yTHDVHWyezc0qsKBMuwhxQ/51GmaafV6Xj
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
1kh1IvzG/wEE9Npv
                    "]]|>, "orcInstance" -> 100889504, "orcModuleId" -> 
                    75651744, "targetMachineId" -> 58926576|>, 
                    139925782382400, 139925782382256, 139925782382336, 
                    139925782376448, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_5d3d2e54_f7bb_40fb_892f_fafc8c7aa5b7", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
/xQ1Cgv/DoXdwP4=
                    "]]|>, "orcInstance" -> 99876720, "orcModuleId" -> 
                    100727728, "targetMachineId" -> 102435472|>, 
                    139925782368800, 139925782368400, 139925782368480, 
                    139925782368256, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {4, 64},
                     "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "75528d63483215f8", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 736640, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 22, 18, 27, 18.287247`8.014723315057642}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|"Input" -> {{"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "low"}, {"medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 4, 4, "small", "low"}, {
          "medium", "very high", 3, 4, "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "low", 4, 2, "medium", "high"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "medium", 4, 2, "small", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 4, 4, "large", "low"}, {
          "medium", "low", 2, 2, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 4, 4, "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "low", "low", 3, 2, "medium", "low"}, {
          "very high", "high", 3, 2, "small", "medium"}, {
          "high", "low", 2, 2, "large", "medium"}, {
          "medium", "high", 3, 2, "large", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "high", 4, 2, "small", "low"}, {
          "very high", "high", 3, 4, "medium", "medium"}, {
          "high", "high", 4, 2, "large", "medium"}, {"medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "large", "medium"}, {
          "medium", "medium", 4, 4, "large", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "high", 2, 4, "large", "medium"}, {
          "medium", "low", 4, 4, "small", "low"}, {
          "very high", "high", 3, 2, "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 3, 4, "large", "high"}, {
          "low", "very high", 3, 2, "small", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "high", 4, 2, "medium", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "high", 2, 2, "large", "low"}, {"medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "medium", 4, 2, "medium", "high"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "medium", "very high", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "medium", "low", 4, 2, "large", "medium"}, {
          "very high", "high", 2, 2, "large", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 2, 2, "large", "high"}, {
          "very high", "medium", 2, 4, "small", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 3, 4, "small", "high"}, {
          "high", "very high", 4, 2, "small", "medium"}, {
          "very high", "low", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 2, "large", "low"}, {
          "medium", "high", 3, 2, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "medium", 2, 2, "large", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 2, 2, "medium", "medium"}, {
          "high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 2, 2, "large", "high"}, {
          "low", "low", 2, 2, "small", "medium"}, {"very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 4, 4, "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "very high", 4, 4, "medium", "low"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 4, 2, "small", "high"}, {
          "high", "high", 4, 4, "small", "high"}, {
          "very high", "high", 3, 4, "medium", "high"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 2, 4, "small", "high"}, {
          "high", "low", 3, 2, "large", "low"}, {
          "high", "medium", 3, 2, "medium", "medium"}, {
          "medium", "high", 4, 4, "small", "low"}, {
          "low", "low", 3, 4, "medium", "high"}, {
          "high", "high", 4, 2, "small", "medium"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "large", "medium"}, {
          "very high", "high", 2, 4, "small", "low"}, {
          "very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "very high", 4, 4, "large", "low"}, {
          "low", "medium", 3, 2, "large", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 2, "medium", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "very high", "low", 3, 4, "large", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 3, 2, "medium", "high"}, {
          "very high", "high", 2, 2, "small", "low"}, {
          "high", "very high", 3, 2, "small", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "small", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "medium", 4, 2, "large", "low"}, {
          "low", "high", 3, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "small", "low"}, {
          "medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "medium", 3, 4, "small", "low"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 4, 4, "large", "low"}, {"high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "medium", 4, 2, "small", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "very high", 4, 4, "large", "low"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 2, 2, "medium", "low"}, {
          "high", "low", 3, 2, "medium", "medium"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "low", 4, 4, "medium", "high"}, {"very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 3, 2, "large", "high"}, {
          "high", "low", 4, 2, "large", "low"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 4, "medium", "low"}, {
          "medium", "medium", 3, 2, "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "medium", "high", 4, 4, "large", "medium"}, {
          "low", "high", 2, 2, "medium", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "low", 3, 2, "medium", "high"}, {"very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "high", 3, 4, "large", "high"}, {
          "low", "medium", 2, 2, "medium", "medium"}, {
          "high", "low", 2, 2, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "low", "low", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "very high", 2, 2, "medium", "medium"}, {
          "high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "low", 2, 4, "large", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "medium", "low"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 2, "medium", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "very high", 2, 2, "medium", "high"}, {
          "low", "very high", 4, 4, "small", "medium"}, {
          "low", "very high", 3, 2, "large", "low"}, {
          "very high", "medium", 2, 4, "large", "medium"}, {
          "low", "high", 2, 4, "medium", "low"}, {
          "very high", "very high", 4, 2, "small", "medium"}, {
          "high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 2, 2, "medium", "low"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 4, 2, "small", "medium"}, {
          "low", "low", 2, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 3, 4, "small", "low"}, {
          "low", "very high", 3, 2, "small", "low"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 3, 4, "large", "medium"}, {
          "high", "high", 2, 4, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 4, 4, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 4, 2, "large", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "very high", "medium", 3, 4, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 2, 2, "medium", "medium"}, {
          "low", "medium", 4, 2, "large", "low"}, {
          "very high", "very high", 4, 4, "medium", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 2, 4, "large", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "low", "low", 4, 2, "large", "high"}, {
          "high", "low", 3, 2, "small", "low"}, {
          "low", "medium", 4, 4, "large", "low"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "low", 2, 4, "large", "low"}, {
          "low", "medium", 3, 4, "small", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 2, 2, "small", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "low", 4, 4, "medium", "low"}, {
          "medium", "very high", 3, 2, "large", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "low", 3, 2, "medium", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 4, 4, "small", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "high", 2, 2, "small", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "very high", 2, 2, "large", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 4, 4, "medium", "medium"}, {
          "high", "low", 3, 4, "medium", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 2, "large", "medium"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 2, "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "low", 4, 4, "medium", "medium"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 2, "medium", "low"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 4, "medium", "high"}, {
          "medium", "high", 3, 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 4, "small", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 2, 2, "medium", "medium"}, {
          "low", "very high", 2, 4, "large", "low"}, {
          "medium", "high", 2, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 4, 4, "large", "high"}, {
          "very high", "medium", 3, 4, "medium", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "low", "low", 2, 2, "medium", "medium"}, {
          "high", "very high", 2, 2, "small", "high"}, {
          "medium", "high", 2, 4, "medium", "low"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "very high", 4, 2, "medium", "high"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 2, "medium", "low"}, {
          "low", "low", 3, 2, "large", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 4, "small", "low"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "high", "very high", 2, 4, "large", "medium"}, {
          "very high", "medium", 2, 4, "large", "high"}, {
          "low", "high", 2, 4, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "low", 4, 4, "medium", "high"}, {
          "medium", "low", 2, 4, "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "medium", 2, 4, "small", "low"}, {
          "low", "medium", 4, 2, "large", "high"}, {
          "medium", "medium", 4, 4, "large", "high"}, {
          "very high", "high", 2, 2, "small", "medium"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "high", 3, 2, "small", "low"}, {
          "very high", "high", 4, 2, "small", "low"}, {
          "very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "medium"}, {
          "low", "very high", 2, 2, "small", "high"}, {
          "low", "high", 2, 4, "large", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "low", 3, 2, "small", "high"}, {
          "high", "medium", 2, 2, "medium", "medium"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 3, 4, "medium", "medium"}, {
          "high", "medium", 2, 2, "large", "low"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 4, "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "high", "high", 2, 4, "small", "medium"}, {
          "medium", "medium", 2, 4, "large", "high"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "medium", 3, 4, "medium", "low"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}}, 
        "Output" -> {
         "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "acceptable", "very good", "unacceptable", "unacceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable"}|>, 
      "Predictions" -> {
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", "good", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "acceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "acceptable", "very good", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "good", "unacceptable", "acceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable"}, 
      "LogProbabilities" -> CompressedData["
1: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
Unfldg70KEJ9mFJI6gth/5/8Pwv0Zt4=
       "], 
      "CountMatrix" -> {{258, 1, 0, 0, 0}, {0, 64, 0, 2, 0}, {0, 0, 11, 0, 
       0}, {0, 1, 0, 9, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwl0+lrCAAAxuHNZGxjGzY2O4yxZXNnyzbmZlhsxpj7KORK5Mx95MyZK3eE
kCvlzhU5c6TkCOUKOcIHR3jw4Xnfv+CXNGhM4ejAgICAUubfE0RpgilHCKGE
UZ4KhBNBJBWJIpqqxBBLNeKIJ4FEqlODZGqTQipppFOfBjSkEY1pQgaZNCWL
bHJoTi4taElb2tGePDrSic7k04WuFFBIN4roTg+KKaE3fehLP/ozgIEMZghD
GcZwRjCSUYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZ
wUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznB
SU5xmjOc5RznucBFLnGZK1zlGte5wU1ucZs73OUe93nAQx7xmCc85RnPecFL
XvGaN7zlHe/5wEc+8ZkvfOUb3/nBT37xm78RBAb+7yGIMgRTlhBCCaM84UQQ
SUUqUZkooqlCDLHEEU8CiVQniZokU4vapJBKHdJIpy71aERjMsikKVlkk0Mz
cmlBS1rRmja0pQN55FNAIUUU05NelPAHziVs4A==
         "], {233}, {}, {}, {}}, {{}, {5, 8, 19, 20, 23, 35, 37, 45, 52, 56, 
         67, 72, 88, 89, 98, 101, 102, 111, 112, 114, 117, 124, 135, 142, 149,
          163, 166, 170, 180, 182, 183, 197, 200, 207, 212, 214, 215, 217, 
         222, 226, 227, 237, 242, 246, 247, 260, 261, 265, 280, 283, 290, 297,
          304, 308, 309, 312, 327, 330, 331, 334, 335, 336, 339, 342}, {}, {
         42, 332}, {}}, {{}, {}, {33, 41, 46, 66, 78, 110, 155, 305, 318, 326,
          341}, {}, {}}, {{}, {174}, {}, {6, 61, 68, 106, 191, 248, 253, 270, 
         303}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "very good", "good"}, "Weights" -> 
      SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.0007459537572254334, "SingleEvaluationTime" -> 
      0.00686825, "Version" -> {13.1, 0}|>]], ",", 
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "Net",ExpressionUUID->
                   "84927d99-f12c-4f71-ba49-148fdae16204"],
                  TextCell["Net"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "346"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"99.4", "0.4"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    99.4219653179190743231`3., 0.4081394480165771443`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"74.9", "2.3"}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    74.8554913294797756862`3., 2.3357365785874173447`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.974359812778236134`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0142607803867494942`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.9458382520047371456`3.", "\", \"", 
                    "1.0028813735517352335`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.9458382520047371456`3., ", ", 1.0028813735517352335`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.0259746259207042744`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0146355289962333442`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   TemplateBox[{"\"95% confidence interval: [\"", 
                    RowBox[{"-", "0.0032964320717624139`3."}], "\", \"", 
                    "0.0552456839131709593`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", \
-0.0032964320717624139`3., ", ", 0.0552456839131709593`3., "]"}], 
                   "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"7.02`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"1.08`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGBggWIQGwI+2FNKc+TIrfiw5a19wUOV5Z/kX9vzZJs0mvQ9
JtkclYBZDyvc3trbTF+/vKXupX2D/42KewvukWzOgVbOrl7HN/ZlN2Xj3QWf
2nNsShRf/PEkTvWJwsJLeY3e2d9dwf1t+4839neVrbTfRL+Ayz+sElnn/vCW
PQMKoDzcADrcXVw=
                    "], {{0, 0}, {4, 4}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["259", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "259", "\" examples of \"", "\"unacceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{259, " examples of ", "unacceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"unacceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "unacceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["64", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" examples of \"", "\"acceptable\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9846153846153846`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{64, " examples of ", "acceptable", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 0.9696969696969697}], 
                    Row[{"FScore = ", 0.9846153846153846}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"acceptable\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "acceptable"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "acceptable", 
                    " misclassified as ", "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["11", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" examples of \"", "\"very good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " examples of ", "very good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"good\"", 
                    "\" misclassified as \"", "\"very good\""}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "good", " misclassified as ", 
                    "very good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 3.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"unacceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "unacceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["2", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 2.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "2", "\" examples of \"", "\"acceptable\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Column fraction = \"", "0.16666666666666666`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{
                    "\"Row fraction = \"", "0.030303030303030304`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{2, " examples of ", "acceptable", 
                    " misclassified as ", "good"}], 
                    Row[{"Column fraction = ", 0.16666666666666666`}], 
                    Row[{"Row fraction = ", 0.030303030303030304`}]}], 
                    "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"very good\"", 
                    "\" misclassified as \"", "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "very good", " misclassified as ",
                     "good"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["10", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" examples of \"", "\"good\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8333333333333334`"}, 
                    "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"FScore = \"", "0.9090909090909091`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{10, " examples of ", "good", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 0.8333333333333334}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 0.9090909090909091}]}], "Tooltip"]& ]}, 
                    
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 3.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "259", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{259, " example", "s", " of class ", "unacceptable"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 2.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "66", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Recall = \"", "0.9696969696969697`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{66, " example", "s", " of class ", "acceptable"}], 
                    Row[{"Recall = ", 0.9696969696969697}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{11, " example", "s", " of class ", "very good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {4.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "10", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{10, " example", "s", " of class ", "good"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "259", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"unacceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{259, " example", "s", " classified as ", 
                    "unacceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "64", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"acceptable\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{64, " example", "s", " classified as ", 
                    "acceptable"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "11", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"very good\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{11, " example", "s", " classified as ", 
                    "very good"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {3.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "12", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"good\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Precision = \"", "0.8333333333333334`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{12, " example", "s", " classified as ", "good"}], 
                    Row[{"Precision = ", 0.8333333333333334}]}], 
                    "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{3.5, 
                    FormBox[
                    RotationBox["\"unacceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["\"acceptable\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["\"very good\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"good\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{3.5, 
                    FormBox["259", TraditionalForm]}, {2.5, 
                    FormBox["66", TraditionalForm]}, {1.5, 
                    FormBox["11", TraditionalForm]}, {0.5, 
                    FormBox["10", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["259", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["64", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox["11", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox["12", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox[
                    "\"unacceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"acceptable\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {2.5, 
                    FormBox[
                    RotationBox[
                    "\"very good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {3.5, 
                    FormBox[
                    RotationBox[
                    "\"good\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->212.4,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> 
             "DejaVu Sans", NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[<|
     "Model" -> ClassifierFunction[<|
        "ExampleNumber" -> Missing[], "ClassNumber" -> 4, 
         "Input" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "ToMLDataset", <|
             "Input" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, 
              "Output" -> <|
               "PurchasePrice" -> <|"Type" -> "Expression"|>, 
                "MaintenanceCost" -> <|"Type" -> "Expression"|>, 
                "Doors" -> <|"Type" -> "Expression"|>, 
                "Passengers" -> <|"Type" -> "Expression"|>, 
                "Cargo" -> <|"Type" -> "Expression"|>, 
                "Safety" -> <|"Type" -> "Expression"|>|>, "Preprocessor" -> 
              MachineLearning`MLProcessor["Identity"], "ScalarFeature" -> 
              False, "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"|>], "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>]|>, 
         "Output" -> <|
          "Preprocessor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "Processor" -> 
           MachineLearning`MLProcessor[
            "Identity", <|
             "Invertibility" -> "Perfect", "Missing" -> "Allowed"|>], 
           "ProbabilityPostprocessor" -> Identity, "Name" -> "class", 
           "Marginal" -> <|
            "unacceptable" -> 0.25, "acceptable" -> 0.25, "very good" -> 0.25,
              "good" -> 0.25|>|>, "LabelSplitter" -> 
         MachineLearning`MLProcessor[
          "FeatureLabelSplit", <|
           "Processor" -> MachineLearning`MLProcessor["RuleSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False|>], 
         "RecalibrationFunction" -> None, "ImputationStrategy" -> Automatic, 
         "Prior" -> Automatic, "Utility" -> 
         SparseArray[
          Automatic, {4, 5}, 0., {
           1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {5}}}, {1., 1., 1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> 
         MachineLearning`PackageScope`$BatchProcessing, 
         "Model" -> <|
          "Method" -> "Net", "Net" -> 
           NetGraph[<|
             "Type" -> "Graph", 
              "Inputs" -> <|
               "PurchasePrice" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"high", "low", "very high", "medium"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "MaintenanceCost" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "medium", "high", "very high"}, 
                   "OutputForm" -> "IndicatorVector", "Dimensions" -> {}, 
                   "Multilabel" -> False, "$Count" -> 4, "$Version" -> 
                   "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Doors" -> 
                NetEncoder["Class", <|"Labels" -> {
                    Interval[{5, 
                    DirectedInfinity[1]}], 3, 2, 4}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 4, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Passengers" -> 
                NetEncoder["Class", <|"Labels" -> {4, 
                    Interval[{5, 
                    DirectedInfinity[1]}], 2}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Cargo" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"large", "small", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]], "Safety" -> 
                NetEncoder[
                 "Class", <|
                  "Labels" -> {"low", "high", "medium"}, "OutputForm" -> 
                   "IndicatorVector", "Dimensions" -> {}, "Multilabel" -> 
                   False, "$Count" -> 3, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{3}, 
                   NeuralNetworks`IndexIntegerT[0, 1]]]|>, 
              "Outputs" -> <|
               "Output" -> 
                NetDecoder[
                 "Class", <|
                  "Labels" -> {
                    "unacceptable", "acceptable", "very good", "good"}, 
                   "InputDepth" -> 1, "Multilabel" -> False, "Dimensions" -> 
                   4, "$Rank" -> 0, "$Version" -> "13.1.3"|>, 
                  NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]|>, 
              "Nodes" -> <|
               "TrainedNet" -> <|
                 "Type" -> "Graph", 
                  "Inputs" -> <|"PurchasePrice" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "MaintenanceCost" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Doors" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Passengers" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Cargo" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Safety" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                  "Outputs" -> <|
                   "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                  "Nodes" -> <|
                   "Net/SoftNet/1" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJztWUtOAzEMHVggLsABuAIcAHGFcoIiwaoSUlkgdhydIlSpGs0kdvxsv6R9
EqidZpL4G/vl/vVj8349TdPn7eHfZvv1vN9vv19u/r68bXePD7urw8fpbprh
5+n/T4qlsZr3I1Hbl1Z2zZqMOmmxXaQcjDrLQFSMlfy/J7tf/KZvlOx3sS0/
RrRRtEzIusFr79I4XfuMWFc6X8u6iFp4/huqxvQ6/7XjUftA1DjZeWces0y1
9Ajw1BdybmkeiIZnTl5aSzKvdB+lcR59uxeW9l4bMwJKfi/RSek3T77KksM1
crWuj4ZnPeWBFr6ixS5Z8rLouQUI/x8dkrPrOEZzpvZ0Jmqw5lPZnBHS17Pt
pjmrW+YZyTe9ZRlJVxqU4imzv15au7X+tNSDjD6ByMVouWo5jKH287jvytrz
ab6y8Het+2eMi9GgOZM8fBs1t2bdXv2KkXOw1jQMHKrm3NDEiuf5x1w71ICo
t06foeM7Ih961rNLz6N0EgWv/Zxrj1ZDDzphyYkttXJvnDRDPpH2SohepBd4
98ORvWgUfxDlE9Z6gcV3Jfd0KDuyyLwEiR48143gqz2B6qXYcljrelZ/Qvem
Fi4cpWPm+J+jZj+W+tQTTByVhBdYsk2mDCje3PNuBpGLR46BGjK5TuseUO+t
8XYsZ7OFS2P3bWn8WrhZj94zCi06QNeo2rWjUbJ3pl3RNrDMw+rfEcg+Xyxj
I+2GjCOkDrTzIO+Y2OKmhVPO9KGIuTxqiNa9WOZi87U5vO5Jjs9ZOL6MedE1
i9cciLwqrcc97IXsKaLlWOtTJe954HQ/GbGL8M81f7D6SUQuz+AokDhHXn4O
Sf3fs3wMqMWkNr6tOSaiDongQJh9ky23eNrDUgPMY0N6frFwbN5g5QFq0PJK
ePl+AdHsMFc=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {5376}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/2" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJACZAoMGeAQXA
+CAaGROSx6cPnSYGYDOPVD345NHFcenF5XdseomxGxcfWS+x7ifGTGxypMYP
KeGJzyx8fsZnDz71uNTgspOYOMTnVlzmE5MG8LkTXRxbmBDKC8SaBwEAQ41N
ZA==
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/3" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJztWUuuBMltHGsh+Bq+gnwAQVeQTzAG7NUAAqSF4J2Pbj8ID2oUqqv4iWAE
q18A0sz0qyKzMplkMPhv//mXP//373755Ze//ev//9+ff/37n/7611//5z9+
//Uf//Xrb//+h9/+5Zcv/OP//4n//eM//jcJtL939u78ML772+aWPUXs0fS3
3sFtPQgwY5XpbyJ+WOeNsDt9bm44W+vxt4k4RNuahPu6N60vulbVNx35Q2Ud
V5yu813qPcmsQR2TaB7IqJFZm+/iqhqjLkBxZ0W/wYR6vUxeh8yDEf7y1L18
td/leu+eO7Ph2jNUsLVHmMqbKL9s28eY3VAXne5BBIg9jeRkp31RaXDde+m0
hy7I5gXF2TtpLlvu7sa+OgJ0rDLfn/DJnpc5x8IZUPFxVTuiPdRUDax+c4e7
OMYFIhej9TyUzsWEuv9Basqvv3e+A9VLOmLDGq+QqXnutZExF3GCo+bg0Jt2
/bC+YeK+OMztOu8iOKZzj+yAp2nqX0DNKhk2ngjUvnzC/rr3JAjf6Dlrdz2v
76O0alfNSqmPMmP7eHZoDqXOPd37ol7/N7IxOqWNfcp89XVvFD25ggu4zYQy
mOLeDjoO2vemO313X9Q9OwKb9J5MnULo1QigdfOrmJw8y80x/wpHDbYC17zq
uq67513yRwQMnazSc7tyAYZewOSvipqM0ljQmFiHay7Lghk3zt/utLare5SN
M4VWsqnuVXGXu9H5220fWbO2il+FLeX84Du+WLqE27zg+53p+EKfcbUOMvrn
zH6q9B10jkHWt4nepgKXOuGiCTruucsZfUMxu1Gikle2fFsXE7NDVD3rPO+o
GznUtq5fVt+C6qfUvWmWA0bzkrIfmcDVdzp/Q+T8JmKSqTWz7TFsOsfMK1xr
AmNedPf3qRhg5pipnrvTKznqP4h3mZjSp179se2jdGx27UHeKZf4qvK+rkai
6s3e2djGa5Wa6mZ0NJltPcEP3uMJ51apd446Nfp9hK9p/WYTZ5jANM89+ka8
y5wDXvlG8OApvShje2oN0zNXZQ8+5U8JtKbC3O8Jrahra0qjUsbZphhX6ODu
OhTqjjI0i4z/SZufeN8q++OwT4r5nYM9JNg5xfnbUUDkRwddDa1vM99BoNPT
RPaqy02rPS/iHCP+or9X7CLXPMkppmconfeQdRQRe+g1uYF9L5WI5j+FzqXU
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
1q/2pTo7uHqmYjvzDiuXdWPnXV7ZprO/W/+m2YhjPlSv6S4XRNcydZ8+HShN
HOmXDWWOYWvaDvyke/fZ2Lo/bJ/veNVkD7P1bBT1yq1vvOP/qD4UZevbDouT
Z95lgGW7EhfHfNKti+o8MbkGRZ8SscOI941xwIQrV0DbYGm3LDsTGhQa0z5d
8hYLyBrm/q0ZML4lolN09Gdk3zzNuxC6O+I9lp+z5ya+rTsTekL+c+KOCL8q
dHumd3YmcpbzTCaTt12+MYK7fhntI/KsKg7Y+mM1flQxg+7D2bE1rXFNxAL6
XQQqPAStp0bhMKdCIrqPV+dzd2fUmkF0TR2OzY5HdR2N2HDvQ9Vw0J2v3mX6
6tpzr2+O+r8673beRcTiWXwj9JfJHK+KK8Y+MbkBQmN8jQ/2vjtyJjcwuHan
B71aj0tPrfYzwbUzyNaRDfx9Wpc4/g3NE9F9CNoGg7cj3432omw98sp3x1b3
GbRPBRD7OlW7mFqI6/ncwUU3RN3vq3/vYkqDj/hXroMBRA7YuBfT2tanAsmn
I1x0G1RxGLn3W/YbUUuv4hQ12+noSVuw/buiPYbz/OEsxtD3A2UXZYNh303b
Q/m++i5Hvava9z9RC1Dqu5M63pSvuzs+sd+s3Kzwye4brzjUJF/NzOs6fNEB
DppLZ96UtZH1gTjrCXT082qedNyHDN5xoomZFyLmz56t9PiKGoO0xeKHT4l7
Rm2q3p1NQNeUK61pgpNXfah1gAmtI/OsIw9A1iykrs+Eel1P1CAimO6br+6b
w5459n4TuqvD3n8BWR9coeLoEQ6M6MuVHIN1f11jcVK77WAi5itcbrL/r9pn
+LmzX9nDSO/DOqMIZ3a9w0ywtCmULQQyZ4vgFw5xVNV/p9ZRsVNdO/M8kPpA
N7+ifCOgvgNb9FzlmaPB5D4THOp4Fo57/A3ntR3hrDGere3qTk58C7vOsXPj
1Pkq4miCS0zZu8rXqlo0zUMdea9TfnSFao+y94Oha0V5llIr6uJunxUawg/i
QPXF7N4WoR1mgcodCL6n0E6UtdHxHiPOQKUBse6Gc894BGqmuJlHV99H7V3n
PYe4RwA14+jmo8lc5HgORzDyN/u738XFhv3OQN1fTMV5Vs9havloIL6t6iNb
VxxqTXbmpOi1XWMNAVQMqDWw7jMT64jaqfJDJc924GlduOkLV++z53Lbgeo/
fuAF5xyH9HX2jvMcz/3uqDgAMh+/06scc35HQ3CYpz21LkxrWQwtKXo2x5xZ
zfEZf9H3quue1oKY+QtlRzWrmJ4LqbhPlnsoedKETYf6hLa7TQeK6MJP48zT
dSBSPxFxU90HNu+N+jnzx9Dwutwt8z7jWSbOzipyfpG9mq59qJzF5PoOZ+6C
7n2r2FaiGy9u3/SurnVzwFPPP4NKfZjKt8q9zdbYyG+VZxjvvr7v1sNN9yzK
HokN9HegYo7hw1HTmPyWTl/C5EdIZPtStG52Z5dZR7Po9H0O5x7Vj46/XT1f
XUfU5t16UD1rNY8i9wIR61P63VksMWPm3RoYYO+rc194hqetkalFbtirK6jq
G0q36+rsLLzmy2zujPw9+h7LTxdV/jetG6PXodYKKpwjum/b6twVpngV+lk3
bMsvTN+OcFtrlnO5rR+J6W9zqmln9llaLJOLRG1HeNumOdCUP4f7j1gDIqdd
xUwknrL3QLn36D1X+O/g2F9m3z37dxTQsxeUDxc8Ye3b777KD1KLnDqLbr6o
cJkrnyzt5kynq9qKPquurZWYQ6x5okZ03+u+W7XJ3N/JGRrbZ8Z2t5dzq9kT
++2kgW4B695Nax8ZG6i1ZG2+q0WoGo6oUZlvY9TE6N8V+lCXF1b+3sXUPT7b
nwo/zfisPn9nw0lX3lJz0Ll1y3d/QcFRUe+gtTXFuVVyLIqHR6GKERYPm373
Bx59qTMcvwGVUxl9WjZ3bNbQVXpPBYgeEfUuyl+1F2Ct5e4ZR0S58TS3iUK1
z4p+sgKkX9V9iwLdd0z6ZvWoTrrDE+CaBz8JbprY8e5HbHW59+RsU6HJV4Co
T873VlFXsrOoLlz236WvYPpA93+oHshdH52yH/Wl2udpv6+57C7XV+rjJLdD
5tUNOlaVr0zXn0m8q81TtXpa+1fNYZ9WyzN5ykXjddG/jjG4LWdc4XjeWzTK
KCZ73uwaKnYc7oSD3hi5ix1NBYWNdSvCLVxqRMSHU45C62LbtOWJPj3zN7f7
ydRiJ3pQhu6L8KFANAdN7Gkm7h1qIrrmRPy941dO8XbHZ5/Qf51BeS6M+5f1
4XQW32DeF5fvVcUYqo4yeyCXMzqDcm3O+/IFFd9C9ezItdw9w8plbn0Hw16m
B0fVP6cZwtkaUM89AU53nW1fMdth+WRqFAg/DncIWTeidahS1zPvVJ5FxKbi
PJHrj/jpvjutqWeed7iPr3DJi5Gcp9ar0ejmeUUdncATe4SNmNyDrfuN7GWm
dK5qHq3o7Ypee6Ovyhqme8azfzrr2w7nd4coL4z8HcGBWXroNP9l9uXIXsM5
Rt10Ope9QtVpBNCzVWeo+53Ne3fEtE56hSfpwe5w0P/d0eG1zHnyE/b2FZOz
E5S2/BS48NYOl0afKXJm9Mk97RdU80o33Xqjb5SuU/G7CdV9cohxlh6j6tEm
OVv2/WitifagGX/o+oSO+cos4i52uzxiSvdSxWvVHoPzofwgbTL2d2NtQzyT
eS5qx3nmlMVkz4PEZH+DnLcwoe5fGe+66yZPnz1N67XIXK2c13Q4xMaYuuuN
0Darz09pvl17U1y3agt9v1xtTfg928tsXlTWSdWMs5IvN+lNXahne5EYRmoo
CF2qsobpPrRif5pbXEEdlxNQcREWupoYu75v0zG2aEhOPDSbZxk67pQNNdia
1yRnrOQLli7BBip+mf1GFwytYRKT8xinutjtcavPKm1OQjUPVtlVI3qPr2qp
+3wD5V/VI6PuhIpLZmx29BYmru4JQ+eJ2qn+fXJfo/t2ty/qXKEGQv/69D2c
xnQtyPS8zP71bB2TWo/jLOnq78fct/GOI/gRs39i2WbVcpeZzJR/ll61YY7R
jbcqt586O2StmboXd/vM1MAynDnzfsZPtU+r7snkHXTp0avzoElOdVxD5LlJ
bfhp+Z0J9jpQvT7a/93zV7m+o7NcPdetfY5x/7pnLjH/BSWXrvR2Ku1OFS/H
/2bndXR8dnMES3Ng9VRIKLjMBNQ5ZytU++aUD6LPINbSecf57kbr5BadbRoM
nZZxxzJ3zUVfRgO11rvfWf0dOx+68qDIuphrReqyXSD74Wz9zdSxOz9ILXBL
Dvo0Duu8tmlUZwgMnz94j4mzqPYDjF4HFX93tSL7zVlexNTCkGuufFcGjD5i
Wx6p9mToXvjde9V42sYfMvcyYuvu36Pvd3xHbaLPrmuPlfeQPB7tAwH33Mfk
j1c+3eC4Jjew92jyDJzOuzoHOLu76N6AkfeR9RzlS9FHM3uJ7jtRexWuPFHz
Ge8j0eEvW/bBQZ+4s63Q/Zm+kLGCyK1XterpiObGTf3JT6/wg3dQn1Umx7us
tcvnqnVtmxao8HP0d7XvE/ziLmbcYsGhV5nAVX7p6s5RP5lnrmwzejPnM1XO
SDoxgNLWmfyPnRO7a0H2N1249UdIjQ5po3Nf73JUJT9386YrFJyBjeyZMrFx
/1RA3XHE+84zqkkO9hO/Os7L4grbzzRbizPnx+SybBvZv03zc1fdaKI3zNiO
xndFp0IiW0O7d6tiz7mOX73jOH9BrDXTm2UQuTPb654ronng9XzVZ8H2P9nL
nNli6LsIIPs2VZ5/BboPPcuBHR9nd27qjBH+7njrT38UA5P/d9fh4kt57ncx
jcrnCn4UyXEZW6ga96OV/ROdHl7B6RSaw1QOrdY39p6g63jXjtt9Q+1/9T51
YoXJ0bL22ZqIQiu78+fUG1/Bta9E+ETrk8ff0bmcyV+Qmh4anXtSvftnPqf4
MvN9pk61NY8puOWV/ckZwV1tivy+Haq+MHrenR7MRQfqoLKfqt4lU8c38D9n
TPRNnXccfVSgXherf47aZ9tD8z9U/4JYi8oGYg2Mb4n0FXdctXK+iD7G5X5F
/TnEUQXK+6tAtNdWf5fSf3c/1HuHAntWcvasg17s7kMdX2r/HUzk8Y21IlvH
Xe6p054ydOwpHZTlN8qht9dXxzVVkNHup7Wdahw95Ww+Fc6ak1ufcvZ3B467
oX5HsG29Xaj7swwUswbG+0wOrv7ers/szM8hfqu5kYUuB0Nz9W+bqDlAFM65
7ArI3swB03xq031T2p84F5Vdl9iP4JgXO3pKdv5Z+U0900Yju0cdHy695Tvw
zvr/ACXfhPE=
                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {65536}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/4" -> <|
                    "Type" -> "NetArray", 
                    "Arrays" -> <|"Array" -> CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOI5DJACYa7BkwAEwM
mUZWh8yHsdHl0c1GtweXflzqiDEHG0A2n1h/EdKDSy02M/GZS6xZ2Mwm1kxC
4UGMW0hRQ6oZ2PxJrF+JjRdc6YsYd2GjiQlLbGYTaycxYURpeENoAHoUhtc=

                    "]|>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "$ArrayDimensions" -> {256}|>, "Inputs" -> <||>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/5" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {5376}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/6" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/7" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {65536}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>|>,
                     "Net/SoftNet/8" -> <|
                    "Type" -> "Elementwise", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[Clip[#, {0, 1}]& ], 
                    "$Dimensions" -> {256}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/9" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 21}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{5376}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/10" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/11" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{256, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{65536}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/12" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 256}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/FeatureLayer/Catenate" -> <|
                    "Type" -> "Catenate", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> 1|>, 
                    "Inputs" -> <|"Input1" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input2" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input3" -> 
                    NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input4" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input5" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Input6" -> 
                    NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>, 
                    "Outputs" -> <|"Output" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]]|>|>, 
                    "Net/SoftNet/13" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|"Input" -> NeuralNetworks`TensorT[{21}, 
                    NeuralNetworks`IndexIntegerT[0, 1]], "Weights" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 21}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/14" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 21}, NeuralNetworks`AtomT]|>,
                     "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/15" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/16" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardAND[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/17" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Min, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 256}, 
                    NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT]|>|>, 
                    "Net/SoftNet/18" -> <|
                    "Type" -> "Threading", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> 
                    NeuralNetworks`ValidatedParameter[
                    neurallogic`DifferentiableHardNOT[
                    Slot["Input"], 
                    Slot["Weights"]]& ], "Broadcasting" -> 
                    NeuralNetworks`ValidatedParameter[1]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{256}, NeuralNetworks`AtomT], 
                    "Weights" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`AtomT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 256}, 
                    NeuralNetworks`RealT]|>|>, 
                    "Net/SoftNet/19" -> <|
                    "Type" -> "Reshape", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{4, 64}]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 256}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/Harden" -> <|
                    "Type" -> "Compiled", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "LayerFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    Map[
                    Map[If[# > 0.5, 1., 0.]& , #]& , 
                    NeuralNetworks`Private`Compilation`input]]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_e41e1dbf_400c_48bb_afc6_36f89af082c3", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1: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
BoBR3gGYKA7AhM7f5gSlmwf/JWhmAVgMA8DCU2A0RxcAM1vy7NiZNADrdkej
Tfv1L0HVd5tDjf8eA2D9COzkt1dmUdaa1x87cwnA/NcA2K2ZY+oEzeNgtF5t
APvPlKB1tOcwWvIOACu6OTn0kc/GpzeCaucAbr1GAObGBLCp+2G0Ca5AwiEA
a6mE0dK3MujEdw3QHeIzFHSHOIGF7hDrEXeI2ZIJljLyDJbqArHI+KjX8qOu
Y9gBVAm2icplJKH/yZQlHBJRZPyj5ONfVED3iwWf7xf7orbfhGP/2/1i1XVd
1eN/fg/4f20k4p6wDd+a/1/uCaMLwOi7DeyiTPzar852oXYKnS4I9EGH6M5h
tKB0V80xuEKJdpSl+gSdC8eH1FkktS3JDNDHr+D2lklCnmWR2DupVTzX4rUL
BJYb/uSVvFztaBhXihUJWUwXqQ75gFNyAMWFz/D/MdlFNJlzfuG2/SbkJcfD
0s/63zI3p9hmBAm/9W/099+HZUzh0ubp6r7RsmlOlx4uoRQXMudv1ryZcXgd
62BA5sta6ibORX+txfz9YZyUuXwKurJkp7mytJOiubYyjuyUEWR5mLj7k0U5
NO7w2qSfTWhU3eeSJCyXq6u5TPMGU1/8+Xafv94W42NTM15jQlYkTXf8cwDi
Ug5j55fMYLkZOmHJX/omO3GTwziFzbptaBhMTzNMn2aYh/uEhluMT1ni95YC
3glLtLYfy3y7/wxzoFnXEl2zQZe08NtOJEPNbSc/hnfAMdFZ8in8ftQ7YYfW
XO4U4RbwpF8LJZNfkZcDjWfHIBottdQ0bjclr8kIungFp3Hz75Slpo3+xyRn
Zwln87U4dtw8dB8qZZXmPlSluWTf2v0hY/F7PFZOVeUBulvGXAnjWK621EJ3
mtao7jRlGu//zzgXc0r7iqrJJTS3ZhpVGM3i2tLVN2kku4qsSPb4vYoX0j7d
7XzPrAr9+iLhvTP0MIlerXARP1f6lX+1qaG2xWn+k2TLcv2dlHGpC9dnVrE5
1DKtm+hUNgc/M/uGrLk/oSdyKBdIpBxqiQ5tpmW1zqUs7aIpd7ESHdL0jCKr
ZOMTxH1NfVpcZidlRrm+jLSaFCVyKMwiRWpR1cd8F2ZS5pULDoqMiZO3m/3p
Py7MKrISGceUFMpc56DTlwc1N1yTHDVHWyezc0qsKBMuwhxQ/51GmaafV6Xj
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
1kh1IvzG/wEE9Npv
                    "]]|>, "orcInstance" -> 100889504, "orcModuleId" -> 
                    75651744, "targetMachineId" -> 58926576|>, 
                    139925782382400, 139925782382256, 139925782382336, 
                    139925782376448, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]} -> \"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]]"]], "GradientFunction" -> NeuralNetworks`ValidatedParameter[
                    CompiledCodeFunction[<|"Signature" -> TypeSpecifier[{
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]], 
                    "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]} -> "PackedArray"["Real64", 
                    LiteralType[2, "Integer64"]]], "Input" -> 
                    Compile`Program[{}, 
                    Function[{
                    Typed[NeuralNetworks`Private`Compilation`input, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Compilation`outgrad, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]], 
                    Typed[NeuralNetworks`Private`Misc`output, 
                    TypeSpecifier["PackedArray"]["MachineReal", 2]]}, 
                    Native`UncheckedBlock[
                    NeuralNetworks`Private`Compilation`outgrad]]], 
                    "ErrorFunction" -> Null, "InitializationName" -> 
                    "Initialization_5d3d2e54_f7bb_40fb_892f_fafc8c7aa5b7", 
                    "ExpressionName" -> "Main_ExprInvocation", "CName" -> 
                    "Main_CInvocation", "FunctionName" -> "Main", "SystemID" -> 
                    "Linux-x86-64", "VersionData" -> {13.1, 0, 0}, 
                    "CompiledIR" -> <|
                    "Linux-x86-64" -> ByteArray[CompressedData["
1:eJytWAtYU9eW3icJOQcM4QSjBgl4wsOipfQkvIKATUjQqGAD0iltvc2DJBUN
EAIi+MxLEi3WqFwvWttGazveTjsf1sf1evtIAC2t2IFSq169CoKPaX1Wq7Z6
x9nnJFHGmfm+mW8m35ezzl57rb3WXuvfa+99RPq6cj0CACAFABQp/Oey+QBE
wLaeQ6bMfeUL06oH+zXjymwllIyIA8DPLADGMUSAAdsT4R+1J2+S97LmsHFJ
3mbExUmNwOISWW/qbYJiRtHmcUU9uIQvxQTzoiR6j8rSI0pWxrrbcPlmhqEX
28snFLM8xNeIRO8STE+b7hWv7Fy4iTjaC8ddRwBQCKkkyRNJ6GcB0bMpHQJR
KnzEPcNZu9ur1RsWEikmhy+mFVzCZHZHHoPsSJZ5/PO2J83tWFn92/Eteg/G
25/G6GwHRSRHoWYZ+sWzcbXeMyLlvtrnTYnMTgazmrkOTj3HLts87d1dWOyu
PWSXdsC4fif2sUOSWeAsjn/9O35Z12gD9zYxjtdSNqr8MitVJ9jzdrLNu/lD
T+yH7x1698qkHaak7XPmym2bs4rbyV97foFC8OUD/X2MsdurzGy+oNod95mO
GMT+RbZnWmw9hpcfH4qeuHcWHmMtteAFuNY1+8NtrmmgCPve4bBeWISWwVy8
AOce7xl6BH+o7K82DPGCcbIaGRtR2SL25BA9IMXPUMfvuEAL+PlQ/t+AF0Rd
cUa33qJ4TG2UTGAm30IqbYuZzocUC+xHtFG2KSC2H433poBYLXJFy9yJgylm
y1aqfwpYAB4CG3MoBkTCcdjjKYvEZEZlDs4FKfHeZyiVj6LZKSCy0+zd9bQK
xvTFgBmniDlUxwvgQ3AfAagfmlMjOnAnwDb9RnUgHqY/xvYCSPHF5PArcFZv
665YBzgtq0Qs7HjPm+BbLdMe6Y8Dc2AMcBiD8R6ZwBMpF4vIqdhRMUyUfBuR
3sVK0r5lcuCc8ezL9qmsAZdsO14y3uXfRrIqsuXYx5FyUnRoKuuUy88Yn7jS
z8y/H5Hvc+bY3PWLmE0qdNkedOUpbdTFfvY1HwqfNwl0GUCXk6jVhzYQaA2I
sVrQevqdYgYF4LsWbfShTTK0xsuFT6rZz75kQy0+tJ5Am/vZ123ochxtCirS
vftw1GpD58ZgvNii1rZ2gGQVdey4HjiQt/JPw9VNr3DXH18onsQxrD4m79v/
l7fQ4foc/JtZS9YN3uFjH3z8l2O+jg0RmwOGT9t/+vacCDkqqmACIINBwQV+
7tfeWPtk+A4Xos0PWisEe4MBw2zwAQR+7/qGyQRggfCPKSj/o5yFICQlA0Iy
i2OyIjFqCBnNocY54C2TAf5jNTa52+rOOwQLBGywaDGOVjVhopoN/LAmEHQh
0ALFR4c8OUAFHaDNY5S5dUeVbABSKB+J0FAfbejl2ICAGgqEhjIm8iYDxDfW
qx9nJmbT49ITgqZtot+vqzADlh9QFkHIYsK6s0GdJ86bP5XJACcYlaDFw1sw
rg1UjrW4drqBRGX0hEJzJPbKfTcLECCbiLGpmpPYwY/jlXjbIqfOPspSzJ0F
rgio+rcXOv4OpJmYTdgzLDTxkUKPQurqbiuyoS3NaENHPecSiLmGc+/YuJmc
osSuQMK3O4UmMoIWc8b3MQt7FYVtzMK+5rZGC7oCQ1tUbosFXW5hNjW7LYQ7
ro/HverlDpMxtWTMyE3uTTU3E+9JOCcSnhIldOkSTeS6/M+c+f2KvP3Mgs+c
BS5mft9NfpMWXbEIzV3ktsKnzW3xui1atCkNbbofAYddZnNrMHe9wG3tcLd0
2NOv3+ReH+L+4udeJZn63p3C0Z3CPvp5Vif8RiTssSd8o2P/4FXk9SryOujn
oW5pu0LqYea3dz8PjT505H/PzO/s5nxV7bZUuq0WZ+MitFnrbhS4G33uuG8X
xFwHMT+ruaNe7ogsZpjgXoWzINISzgYSu+SJ34mEZ+2JZ4eEo8MJPyKJJkGZ
tFMxY4czv0+dEpqI1r2sGW3uKCu5442hIpC4OPEbnfCKKOFcIGE1kkg5LEq4
qWNXrHVK+7rzOxWFMCAPuwpGFfke2OxuOxIFZ+peBv3B0OVpqLXDvnAE5171
cy+qubfJ5MB38sTR4UmnhhPOQQdUcfmdzsL9znhXt7RNkdfXXXAokNfbDedY
0KfaX4+h0Kt6GMBKd9yZo9yr2phrQ7AexFwkYy4SMXfV3FqcO0JyYfP2EPtf
h7ijau59MvnCVZ2wy55wanjSVVHCJVFCjygBZvCKaIqJeCf/M0XhIWZeuzOv
r/IzmH042eXQT5V7mQVGz829iHNv0t7eILm3vdw7ai6F0RaI+9cgtSaqCIWH
ExdplaiIZHvbpk0DSh+eZigQS4re8orebyaSGAvitR8MRfUwXq4zm6y6GkJR
V2OpNhuthCRDnJkhziAJU52VKKmuXdpMNEtziLScrOf01Y3TiLS5S2uNhDgn
nZCQEsm00rpaQiIh5EvfoNuEWDpDnDlDItHM1zVWNxk1mtKljTp9tbm6sUVh
rqs1amZpNGpd1RKjQW616lo05UadOSdLI/mvmf8fg8wgUpt0VnGWtFRXXUv9
gwwJXKOsAMdOKsheldZRrqvat6RhTvKzDe/Hp0p//vOKqswt45Y07H12y9vz
VjTEp8rKD4dYvH+aV5X8YNe8Jc/Gp6rAH+F6F8GYj4uypsF1hC6vtHTA3HVD
xOb1dzsuCY/ujL4ip5b5JSq5FD4nZo1ouZfVEPYxoxT4Yy6ruXc6bXa0JY1e
lc3u+iAmKy07uqX7kfzdzsL2bsYSuMCFZ4eFZwnhqI56XrEndumE/TuFvUEg
IQOwFFK1Ce0r2O3M3wEXI7PQ5yyAC9PbTdUmHcRHHbVfsorTqapJneH4bYAv
j/teFtmv5kaUMYrLYGW8Bcse3EXAs661lWJy3l6RFpZoNhonTgM4y5nn+WcT
53iRmvDynO/DXdTr92kdJo53i1rtNXGY+2nS3q7GveN2x4tlO3AW80cOltx/
WJx+QiGXZfi0p2wCBkNQi6eRAjFpg0MejWbUbRXhDp7zAhzQdhZsT8UPi7Mm
F8tlrfEMLmcWh0OwAr5NThnHFMdOEojT3oWjqri7XmHo37cQVJXOqaqQGc4c
DAgm4Kf31z7fL8N4Afz4ndlKUdZgpFSZSRw5/lN2zY1Hq1jcAY6q/t7y0vP3
3nutrQzZVHqvaVeFrOLyipoHngFK/V5NiipCmX3ugeeDtAn4ieWrRmbqk2ZF
KJduPBNVjpR9cnmmPh0KHPjigef3BBRouZ78D5T1879FFAzKs1T1t1tKz/xW
d96fmaB08pe9d/JOzaNDL+FQ0iSnnIwoQwZWAXcWMnDn5CU95AxKAUDEMG9w
Hq+1DmsPclhd5rg252kJge0zqrmmY36CE9qHqBwm0TlU0DmkNrGsNtAOUrOB
K1VHRdG+HuFxtE6ek4HJSZnzHwViAgaZKVW3RmMZhE3H1CcztFsJDKV0qcLx
jI3vT+K9sFpjS5JyRrJWK0tQCwm+e9hcExf7HTGeka5il3gGG+crOmYlhwS+
uD3Gn9YxmGIHMdUu47XLox9jKpmWpXDFpnF1BOLq2N6iRZ4JzkF+PMOkGDLj
Qvbn+ORU54ppMiziMdY6s4qczjYBH8ccAeHCVzPZyNw0vNcTGHARApXJJ5Nn
tuqtaWmqzNadDpqMWtOw3ogfNgiI+ZgDOcF28Wzy3Nbi9ymugBOPK2SgO5qB
spPZbL5D298vl7H3cew4NPEilFei/en2/g07f5VEMSRncRciaBMI1JhD7kSR
yX0SjpLUqwtEGBtPVO5jKTcjn3azlQTPv3hYlg3ntdVJY3DjKW45smnVTzP1
MyBM7q564HmHLzM8/CVaSaPjXkvp+bsbH/QiQo4ta83xKXI9QzUyfpLklQ1Z
eJGSVGb+nVeGHR9NnoSXogMQtpeza3768lryQRqkf95433OERuX15Jn66XOD
ON14atwCCMyTuRTzuRII1S9OHoSSX1OSv1HMLOhJzoYHvZGyJ0vhWrKJcnjw
8MZT0eXUOpipT1NRMH/guZXGIEofuQp7oilcRtO4ZNQf5PQiEBKsv0rS0f3G
RfiiYzeF/VtFRb7nul3S11qjoEDcBXOctOe0xIZceIKPtf9dzeEzoi+q8VQ1
/8j/ABuCp7HhIyVPsFFRCbFR9AQbBq+SwsbiIDaWB7GxmELByRA2DkBsNP9N
MLFmF0FMMpBmGQdBOLlYXDjlyahd0CdhFYVS7hXK9rGKclsvdcNBLAqcrSX1
Whns2JDAMpHHSDzgkd+ClmVN+PFY/HO8139s6PUoXGKWsfjIIik198wwRs4f
3iigMXJ+ppU50IhHl59d9frgn/4OC01qBB735SrWukhiw4sLexsByiSOa+7l
JEe7cB5noGSNkl+U+WtvhHJMoQnVqRYqz89DRBx4FyJCsB6Wqg33Zl5I/qEL
AuenXzZQMImCMHnnxoFrUJKcGyxhGzs4VPJHZloZOFUZby8vPfNgzQPPCVja
TjfeSG4KgVpAYwSCemoQI1iwZv1fsXGOxsZLNDawMDYiv5fF8Yum8ZnRqWp2
hJih5hersdENlI6BPafDKHBpfV/Fu1oxZhXXW6422bevrXbymExY70jmi3mm
SEeo+DFjqofVpcVMt3YunTXCHkhXyFlw8eMOrZZd5ZPuYwVKlImcKdPurMQ+
/djeVWYkMyKStq2Ttm7kL58pSPxD4HO4xknc70Fi7YRgj30y/n1un0Q4C2Yf
EBjb1M+uzJmHq+u97Cj1HwKH+B7D1AuCmeVXfr25wx5nsNzohMWYReptSii8
mESVbnZ3usJBuQAoF5pw9t/S5bIj8slpBqN3rL4tgMQ/re9HXXE9AfJYZ1rA
Y0dshKAjMAW61BfLqhCG9YZOy4WP9cYHoqdMMwhu5kMYMhBY/xjT4VTsIjiV
zkBaj1zAyWWZASyBJeP76+GGzgBy0uIsxw6LsdUylM8adcykNgwM0x6S32eS
HUbLu754psDDSKT29yKkNdojImzDbB3fr92KrIdx1zPgDv6qfFtqM+xboMK0
W31wwU6FG9CeCb1w2/nxaOc2xhRKe+5j7WFKW749rK0ffju147C48iMQRXlQ
8diDygjogc+h7fF1yHCO79V+mGkLAUogLqYeLODdonb7BWvGfcUv61kz+JWl
hFf8cNkqLt08H9zSclbhdPOy6YOQ/OAc4QIl79HnU46Ii/m3zv89Is3RTc4f
md3TGK1C0mNvnb9bSER0qnrWjEyyU9vko0/Os8rBm8qHuXWk6/myQDSl/mWN
JkCpn7mfQDc/0XTRzYeRtG7dyaYkUbRE5HcY/C5p6eWsHl6Qf/7uhLEL+9Yb
9E785Tvxc59stEIGbe5u7WsDYw41W1ZH0e6d+fx3cqZIyVJkDU7hre0vyZk6
dsAT+6ufe1H5kNpQ2t8++bOyh5bJD+3d9USw5kq4eJKLcYPVDF63YS52h7/Z
FrUleNMGRnjweBPSWGa7lrodU+dCMzxMPg8pFXfqXFkZGo+i46nrd/BmDd6G
nTGQfgRpfuhsAMb0g5A89Qvf98OU/hiVAoAwdEYJU4qPpQMwHb7zwBNK81OC
dqhPHmEa5r8E3+PAExoepzZUl8M0bHcnCH5ZCNMw/yIS9HnvGLsAnt+6QnMJ
07D8iZDciaf8vBRqX3qKfw8EYxamYT4b2p0AntAwPx4J6odpmJ8O2+PAExrm
54bkcp+SVyHBzzBhGo4PGJM3dnheoXtGLHhCw3zq9zuIGXsQM/cpvFDXL6m0
ura6sVpnrl4O73R1tUp4jaMuY2ZzU02GsdlirGrMqBbPshqNpfOX1hit1VX0
La58aW1jdY1Ro7AadY3GsT20Yo2xpsrSkmEhq6XBR3VO1pz/YEeTbcg0SIzZ
WRpTrl6vySJNeo00T2LSmHSmKmlVrk6Xrc+lHNEo5tQ21VXRSnT7ZavOYjFa
NQqd2Uwzipst1icy843LNOFLc7HVWmdtMDYWN1cZLVTngsYWs7HC2NA429io
Ka0w1jbUWaFa1aLHEipdrQFqBucVkqAM0BEINt+AAzYarbU6c4jxOFZWGJLa
Rp05o7YOTlTXkNFQVWcxZhiMVWZ4eSczxITBoMuU6jN1mXk5UmN2ZpVRn2vI
kkjJ7LxcXVV2ldRQlUOacgw6eLXXwJu9peo5M3XVf7n08XeA/9VXgIxl5oyS
/xQ1Cgv/DoXdwP4=
                    "]]|>, "orcInstance" -> 99876720, "orcModuleId" -> 
                    100727728, "targetMachineId" -> 102435472|>, 
                    139925782368800, 139925782368400, 139925782368480, 
                    139925782368256, 
                    "{\"PackedArray\"[\"Real64\", LiteralType[2, \
\"Integer64\"]], \"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]], \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]} -> \
\"PackedArray\"[\"Real64\", LiteralType[2, \"Integer64\"]]"]], "$InputType" -> 
                    "Real", "$OutputType" -> "Real", "$InputShape" -> {4, 64},
                     "$Batched" -> False, "$CompileBatchedWrapper" -> False, 
                    "$MXOpName" -> "75528d63483215f8", "$Checked" -> True, 
                    "$Scalar" -> {False, False}|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>|>,
                     "Loss/SoftProbs" -> <|
                    "Type" -> "Aggregation", "Arrays" -> <||>, 
                    "Parameters" -> <|
                    "Function" -> Total, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[2]|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 64}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>, 
                    "Loss/SoftmaxLayer" -> <|
                    "Type" -> "Softmax", "Arrays" -> <||>, 
                    "Parameters" -> <|"Level" -> -1|>, 
                    "Inputs" -> <|
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>, 
                    "Outputs" -> <|
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]|>|>|>, 
                  "Edges" -> {
                   NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input1"] -> 
                    NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input2"] -> 
                    NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input3"] -> 
                    NeuralNetworks`NetPath["Inputs", "Doors"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input4"] -> 
                    NeuralNetworks`NetPath["Inputs", "Passengers"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input5"] -> 
                    NeuralNetworks`NetPath["Inputs", "Cargo"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Inputs", "Input6"] -> 
                    NeuralNetworks`NetPath["Inputs", "Safety"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/6", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/8", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/9", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/11", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Weights"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/12", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/FeatureLayer/Catenate", "Outputs", 
                    "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/13", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/14", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/15", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/16", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/17", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/18", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Net/SoftNet/19", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/Harden", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftProbs", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "Loss/SoftmaxLayer", "Outputs", "Output"]}|>|>, 
              "Edges" -> {
               NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Cargo"] -> 
                NeuralNetworks`NetPath["Inputs", "Cargo"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Doors"] -> 
                NeuralNetworks`NetPath["Inputs", "Doors"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "MaintenanceCost"] -> 
                NeuralNetworks`NetPath["Inputs", "MaintenanceCost"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Passengers"] -> 
                NeuralNetworks`NetPath["Inputs", "Passengers"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "PurchasePrice"] -> 
                NeuralNetworks`NetPath["Inputs", "PurchasePrice"], 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Inputs", "Safety"] -> 
                NeuralNetworks`NetPath["Inputs", "Safety"], 
                NeuralNetworks`NetPath["Outputs", "Output"] -> 
                NeuralNetworks`NetPath[
                 "Nodes", "TrainedNet", "Outputs", "Output"]}|>, <|
             "Version" -> "13.1.3", "Unstable" -> False|>], "Processor" -> 
           MachineLearning`MLProcessor["Identity"]|>, 
         "Log" -> <|
          "FunctionMemory" -> 447360, "LanguageVersion" -> {13.1, 0}, "Date" -> 
           DateObject[{2022, 8, 22, 18, 27, 18.698522`8.024382263909242}, 
             "Instant", "Gregorian", 1.]|>|>], 
      "TestSet" -> <|"Input" -> {{"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "low"}, {"medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 4, 4, "small", "low"}, {
          "medium", "very high", 3, 4, "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "low", 4, 2, "medium", "high"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "medium", "medium", 4, 2, "small", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 4, 4, "large", "low"}, {
          "medium", "low", 2, 2, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 4, 4, "small", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"very high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "high"}, {
          "low", "low", 3, 2, "medium", "low"}, {
          "very high", "high", 3, 2, "small", "medium"}, {
          "high", "low", 2, 2, "large", "medium"}, {
          "medium", "high", 3, 2, "large", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "medium", "high", 4, 2, "small", "low"}, {
          "very high", "high", 3, 4, "medium", "medium"}, {
          "high", "high", 4, 2, "large", "medium"}, {"medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "large", "medium"}, {
          "medium", "medium", 4, 4, "large", "low"}, {"high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "high", 2, 4, "large", "medium"}, {
          "medium", "low", 4, 4, "small", "low"}, {
          "very high", "high", 3, 2, "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 3, 4, "large", "high"}, {
          "low", "very high", 3, 2, "small", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "high", 4, 2, "medium", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "high", 2, 2, "large", "low"}, {"medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "high", "medium", 4, 2, "medium", "high"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "medium", "very high", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {
          "medium", "low", 4, 2, "large", "medium"}, {
          "very high", "high", 2, 2, "large", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"low", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 2, 2, "large", "high"}, {
          "very high", "medium", 2, 4, "small", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "high", 3, 4, "small", "high"}, {
          "high", "very high", 4, 2, "small", "medium"}, {
          "very high", "low", 3, 4, "medium", "low"}, {
          "medium", "low", 2, 2, "large", "low"}, {
          "medium", "high", 3, 2, "large", "medium"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "high"}, {
          "medium", "medium", 2, 2, "large", "low"}, {"medium", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 2, 2, "medium", "medium"}, {
          "high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "very high", 2, 2, "large", "high"}, {
          "low", "low", 2, 2, "small", "medium"}, {"very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 4, 4, "small", "high"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "very high", 4, 4, "medium", "low"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "medium", 4, 2, "small", "high"}, {
          "high", "high", 4, 4, "small", "high"}, {
          "very high", "high", 3, 4, "medium", "high"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 2, 4, "small", "high"}, {
          "high", "low", 3, 2, "large", "low"}, {
          "high", "medium", 3, 2, "medium", "medium"}, {
          "medium", "high", 4, 4, "small", "low"}, {
          "low", "low", 3, 4, "medium", "high"}, {
          "high", "high", 4, 2, "small", "medium"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "large", "medium"}, {
          "very high", "high", 2, 4, "small", "low"}, {
          "very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "very high", 4, 4, "large", "low"}, {
          "low", "medium", 3, 2, "large", "high"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 2, "medium", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "very high", "low", 3, 4, "large", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 3, 2, "medium", "high"}, {
          "very high", "high", 2, 2, "small", "low"}, {
          "high", "very high", 3, 2, "small", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "small", "low"}, {
          "very high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "medium", "medium", 4, 2, "large", "low"}, {
          "low", "high", 3, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "medium", 2, 4, "small", "low"}, {
          "medium", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "medium", 3, 4, "small", "low"}, {"high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "high", 4, 4, "large", "low"}, {"high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "low", "medium", 4, 2, "small", "medium"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "very high", "very high", 4, 4, "large", "low"}, {
          "very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "very high", "medium", 2, 2, "medium", "low"}, {
          "high", "low", 3, 2, "medium", "medium"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "low", 4, 4, "medium", "high"}, {"very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 3, 2, "large", "high"}, {
          "high", "low", 4, 2, "large", "low"}, {"medium", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 4, "medium", "low"}, {
          "medium", "medium", 3, 2, "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {
          "medium", "high", 4, 4, "large", "medium"}, {
          "low", "high", 2, 2, "medium", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "low", 3, 2, "medium", "high"}, {"very high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "high", 3, 4, "large", "high"}, {
          "low", "medium", 2, 2, "medium", "medium"}, {
          "high", "low", 2, 2, "medium", "low"}, {"very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {
          "low", "low", 2, 4, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "high", "very high", 2, 2, "medium", "medium"}, {
          "high", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"medium", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "low", 2, 4, "large", "high"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "very high", "very high", 3, 4, "medium", "low"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "low"}, {"high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 2, 2, "medium", "medium"}, {
          "high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {"low", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "medium"}, {
          "very high", "very high", 2, 2, "medium", "high"}, {
          "low", "very high", 4, 4, "small", "medium"}, {
          "low", "very high", 3, 2, "large", "low"}, {
          "very high", "medium", 2, 4, "large", "medium"}, {
          "low", "high", 2, 4, "medium", "low"}, {
          "very high", "very high", 4, 2, "small", "medium"}, {
          "high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "medium", 2, 2, "medium", "low"}, {
          "very high", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {"high", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 4, 2, "small", "medium"}, {
          "low", "low", 2, 2, "medium", "low"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "medium", 3, 4, "small", "low"}, {
          "low", "very high", 3, 2, "small", "low"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 3, 4, "medium", "low"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 3, 4, "large", "medium"}, {
          "high", "high", 2, 4, "large", "high"}, {"low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "very high", 4, 4, "medium", "high"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "very high", 4, 2, "large", "low"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "high"}, {
          "very high", "medium", 3, 4, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "medium", "high", 2, 2, "medium", "medium"}, {
          "low", "medium", 4, 2, "large", "low"}, {
          "very high", "very high", 4, 4, "medium", "medium"}, {
          "medium", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "low", "high", 2, 4, "large", "medium"}, {"medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "low", "low", 4, 2, "large", "high"}, {
          "high", "low", 3, 2, "small", "low"}, {
          "low", "medium", 4, 4, "large", "low"}, {"very high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "high"}, {
          "low", "low", 2, 4, "large", "low"}, {
          "low", "medium", 3, 4, "small", "low"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "high", "low", 2, 2, "small", "medium"}, {"high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "high", "low", 4, 4, "medium", "low"}, {
          "medium", "very high", 3, 2, "large", "medium"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "low", 3, 2, "medium", "low"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "medium"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 4, 4, "small", "high"}, {"high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "very high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "high", 2, 2, "small", "medium"}, {"medium", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "medium", "very high", 2, 2, "large", "medium"}, {"high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "low"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "high", "low", 4, 4, "medium", "medium"}, {
          "high", "low", 3, 4, "medium", "high"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"high", "high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 2, "large", "medium"}, {"medium", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {"high", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"low", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "medium", 4, 2, "medium", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "low"}, {
          "medium", "low", 4, 4, "medium", "medium"}, {"low", "medium", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "low", "very high", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 2, "medium", "low"}, {
          "medium", "medium", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {"medium", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "low", 4, 2, "medium", "low"}, {
          "very high", "very high", 3, 4, "medium", "high"}, {
          "medium", "high", 3, 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "medium", "medium", 4, 4, "small", "medium"}, {
          "high", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {"low", "medium", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "very high", "very high", 2, 2, "medium", "medium"}, {
          "low", "very high", 2, 4, "large", "low"}, {
          "medium", "high", 2, 4, "small", "low"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "high", "very high", 4, 4, "large", "high"}, {
          "very high", "medium", 3, 4, "medium", "low"}, {"high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "very high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "low", "low", 2, 2, "medium", "medium"}, {
          "high", "very high", 2, 2, "small", "high"}, {
          "medium", "high", 2, 4, "medium", "low"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "low"}, {
          "very high", "very high", 4, 2, "medium", "high"}, {
          "very high", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 2, "medium", "low"}, {
          "low", "low", 3, 2, "large", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "medium", "low"}, {
          "medium", "low", 3, 4, "small", "low"}, {"low", "low", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "medium"}, {
          "medium", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "high"}, {"low", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {"very high", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "large", "low"}, {
          "high", "very high", 2, 4, "large", "medium"}, {
          "very high", "medium", 2, 4, "large", "high"}, {
          "low", "high", 2, 4, "medium", "medium"}, {"high", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "high"}, {
          "very high", "low", 4, 4, "medium", "high"}, {
          "medium", "low", 2, 4, "small", "low"}, {"medium", "low", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {"low", "medium", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "low"}, {
          "low", "medium", 2, 4, "small", "low"}, {
          "low", "medium", 4, 2, "large", "high"}, {
          "medium", "medium", 4, 4, "large", "high"}, {
          "very high", "high", 2, 2, "small", "medium"}, {"low", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "medium"}, {
          "very high", "high", 3, 2, "small", "low"}, {
          "very high", "high", 4, 2, "small", "low"}, {
          "very high", "low", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "medium", "low"}, {
          "medium", "high", 3, 2, "medium", "medium"}, {
          "low", "very high", 2, 2, "small", "high"}, {
          "low", "high", 2, 4, "large", "high"}, {"high", "high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "low", 3, 2, "small", "high"}, {
          "high", "medium", 2, 2, "medium", "medium"}, {"very high", "low", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "medium", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "low", "low", 3, 4, "medium", "medium"}, {
          "high", "medium", 2, 2, "large", "low"}, {"high", "high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "high"}, {
          "medium", "medium", 2, 4, "small", "high"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "large", "medium"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "medium", "high"}, {
          "high", "very high", 
           Interval[{5, 
             DirectedInfinity[1]}], 2, "small", "medium"}, {"low", "high", 
           Interval[{5, 
             DirectedInfinity[1]}], 4, "small", "medium"}, {
          "high", "high", 2, 4, "small", "medium"}, {
          "medium", "medium", 2, 4, "large", "high"}, {
          "low", "very high", 4, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "high"}, {
          "medium", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}, {
          "low", "medium", 3, 4, "medium", "low"}, {
          "very high", "very high", 2, 
           Interval[{5, 
             DirectedInfinity[1]}], "large", "medium"}, {
          "low", "very high", 3, 
           Interval[{5, 
             DirectedInfinity[1]}], "small", "low"}}, 
        "Output" -> {
         "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "very good", 
          "acceptable", "acceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "very good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "acceptable", "good", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "good", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "good", "acceptable", "very good", "unacceptable", "unacceptable", 
          "acceptable", "acceptable", "unacceptable", "unacceptable", 
          "acceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
          "unacceptable", "unacceptable", "very good", "acceptable", 
          "unacceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "acceptable", "acceptable", 
          "acceptable", "unacceptable", "unacceptable", "acceptable", 
          "unacceptable", "very good", "acceptable", "unacceptable", 
          "unacceptable", "unacceptable", "unacceptable"}|>, 
      "Predictions" -> {
       "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "good", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "acceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", "good", 
        "unacceptable", "unacceptable", "acceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "acceptable", "good", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "very good", "acceptable", 
        "acceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "very good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", "good", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "good", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "acceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "good", "acceptable", "very good", 
        "unacceptable", "unacceptable", "acceptable", "acceptable", 
        "unacceptable", "unacceptable", "acceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "unacceptable", "unacceptable", "unacceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable", 
        "very good", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "acceptable", "good", "unacceptable", "acceptable", 
        "acceptable", "acceptable", "unacceptable", "unacceptable", 
        "acceptable", "unacceptable", "very good", "acceptable", 
        "unacceptable", "unacceptable", "unacceptable", "unacceptable"}, 
      "LogProbabilities" -> CompressedData["
1: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
X38lrKeanfxkv7wtoHMlSXz0cLqC9YXfrzgcJ4+h9W0Jobh4O72M5BcuHi9H
5ytDqKPs+RDWv1/ZPNBSJx9qDHXJmXMnsC5JzHAYhezCjXabIu65QTzV8/nH
UD966B8XnVB/OrpJZpVelw9zDOuL/61vZFgd8OfoscxuxUY6WLnqMcLbsHnX
QhF/JHfoPUHxn+tv/97X5p63Ib1BJFKQpbVZ/zy68xKfD2f7D6djGmJVB8vS
rex563zy+wKTd3i/R/aec574QJv+lk3wF/WW4E8ywxjnA3H9Hcc4H2UUf9XV
1z9L3HmO9tgjgevkKrcfioj/XnuKW7Igvo+x+M43Bxhn+rcIvm8lFLfsvaJN
a+0h54+xv3Pj/8sLXN5YYXPWLORPXfClx2mOlMJD5uIpXU0LH1OwM3fSbleJ
biZg8PBRqQfSmWkjjHcfgPG//FfkTa+BY8HMritVXgMNxMavCbd6RXJWTVQX
+/51YR/Bj6Qy4ZeXTodoX103VfKe8K/eg/QNPuZUYv48Hnkc6mhrMCFtFNbX
P6KLsK5O9o/3QLq7brN3WkXGdHrhCXkcX9f/Wo3tHiRViu3x+/s9WRafXD0i
Tr+Kqy/FvV/owPN3/9OfmsniV5LF727PsZKmMO6Ze/6B497JehIPH7XK4Tzv
Z6fx6t7yGHq49DPsv6KKm3xkX4me47g/U7X7WU6TrQ09ejWpHwY+rcb7uL+5
Cduv+l4/1n+JgcLLOlD/jdQucUH91c7IFKz/FvVkMTFDdel9IBLbK3vZDYyv
/sO/sD+YkFT3kwmAua/53nOFDB+M8JH1UNA2A+bFR7Qtd2iAsMNh2M9j7u9R
l7SLoLljamUz1g+/64ON7P45fSCuvymuP12B3n8l/9u/2Heb4KuZ1WGbDRZP
3frCm+kNd8TvQXZEpeD3Hh3qDwCKnzK7G2K/Q/0fwPLbWeUDfv5CVv9rzd6L
82yWw5oHvBMd9PSfg4ai70xq8mpwHraZ0yV64NNJ3Skn+J0fuxvXVStSSH9b
VbJ91sf5PrTgMum3JocQ/SW6RvRA1mCoX8bcpDxXk3xhokn6hiciSH2ms61L
pG/cSaWx+amfzUtn2PeT4t4P6fv2i6puVFCRbD7is+/vStg+m7j+dj8DH/vn
v/0DJVYfc/2DAOP6N0jfB7B6Pu0t+X5KxOr9lIamsYXaNnTvLILPvtATeF+K
d8j7S/7ts7tMLX3pkcJz2P6X1Qbi99ryeqS/Ju77BnHvVy2mCVR2Qfwf8l2X
Wg7x/8cIXvIE/lgQMOvFRIT/93oJ6iV8e6DyLR9/x/PhMb8ybetmxuJPhaEl
/HH/k/+C2fjB5b+lNzKnCGF+GxtN8pvnJpLXfiXc1kP7E9f/tt/+BvdzjmiJ
3MvbymmTyHwDdP9HyzG477Mo/0Npf+hf9CzVWzg/p30i3/e0MiZKKP4Y1yrf
D1g8g359rwTb77HNdcyT2gYlbL+7PoUf1KCdzC45Znz7qM9cPGsNj3XAnZXf
36tBe4qz78jelpUR7srMSuUmVUn4vNwY3ZEy8PetC/PgqP9/8xaX18TpQ62e
o/tDGjrogy7RfyB9KxhJvi/rCSDfl+2c8lG+CeItif3eIyGKfP/xmv0eRNz3
S36j7k7961I6U2T05dQlmL/2B55dXihpBlZPjns0f6CO2PcHuHwQVV3n9Ooh
9vwH9rxnRHP/YmUbuojt/4ax/V91to9zoKpXtO+/vj/akE/ww31/1F9YrxdW
7EPHzbTC/bpL0tIY/3JqA7D/doRen4jy3wWdLIttMP+pM0XRyTDvvQy5lPRC
wwic667BdjmstNQ4FdqlWmaeJvr+rKAiGtrHAqQveTLDwljIaJdrqaO6Jc64
EL+/1Ulagt8TzP0Gt3cyjAqex+pXNi+1snhf6L4af3c4onf1PvS9Yapa4LAS
vi24uIR8hyju+5Z8Wxe7MHlTsHGfzyOUv4Oj8uCxFchqTUjaAPfhg/PvGMqW
9V8na9cyNl87UGbUazi/3+oRA/rTNzOzA+MWrZPQBxkfi01K+Wbg1KC2iYMg
rvo3RHzIm6TNNMhMnTwI4bq3zH0QXNfE1pO4TxF2O87kSq00Y/BGAR5bgABl
VVyfqTjdFynOl6NPXCbx36qwCsfJb/VE57Wg9Tkr/4MvRzZvcfogX9ioh3B8
8IrAZPDwC3TIotWqKG8x7sqjEB/OtX5OuWQkZHbd+IS/nxm0aqoa6n9xozh8
f+h8JCEBebDHfV5Qtcp3+qLGU74E3F+IwcGt+PuowOZPQwfZ0MFs//AOi78u
tn8YL+wTjV7aSlkCgr+viSS/KDwn+cBGZ1gu+r7n4hPyfc9X/zNwXU6gPLRR
DeFF3PeT/wHOLC73
       "], 
      "CountMatrix" -> {{259, 0, 0, 0, 0}, {0, 64, 0, 2, 0}, {0, 0, 11, 0, 
       0}, {0, 0, 0, 10, 0}}, "IndicesMatrix" -> {{CompressedData["
1:eJwl0/lrCAAABeANGdvYwcaYHQzL5toybcMMw7Awx5j7KORK5Mx95MyZK3eE
kCvlzhU5c6TkCOUmR/jBEb7lh++99w+8xMFjC8cEBgQElBYlXapkU4YgyhNM
CKFUoCJhhBNBJFFEU5UYqlGdWGoQRzwJ1CSJOtQlmRRSaUgjGpNGOk3IoCmZ
ZJFNM1qQQ0tyyaMt7cinAx3pRAGd6UJXCulGd3rQkyKK6UNf+tGfAQxkEEMY
yjCGM4KRjGI04xjPBCYyiclMYSrTmM4MZjKL2cxhLvOYzwIWsojFLGEpy1jO
ClayitWsYS3rWM8GNrKJzWxhK9vYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte
8orXvOEt73jPBz7yic984Svf+M4PfvKL3/zhLyVHCKRU4P9flCWIcgQTQigV
CCOcCCKpRGWiiKYKMVQjlhrEEU8CidQiidrUoS7J1COFVOrTgDTSyaApmWSR
TTOak0NLcmlFa9qQR3vyKaArhXSniF70pph/R/ptyg==
         "], {}, {}, {}, {}}, {{}, {5, 8, 19, 20, 23, 35, 37, 45, 52, 56, 67, 
         72, 88, 89, 98, 101, 102, 111, 112, 114, 117, 124, 135, 142, 149, 
         163, 166, 170, 180, 182, 183, 197, 200, 207, 212, 214, 215, 217, 222,
          226, 227, 237, 242, 246, 247, 260, 261, 265, 280, 283, 290, 297, 
         304, 308, 309, 312, 327, 330, 331, 334, 335, 336, 339, 342}, {}, {42,
          332}, {}}, {{}, {}, {33, 41, 46, 66, 78, 110, 155, 305, 318, 326, 
         341}, {}, {}}, {{}, {}, {}, {6, 61, 68, 106, 174, 191, 248, 253, 270,
          303}, {}}}, 
      "ExtendedClasses" -> {
       "unacceptable", "acceptable", "very good", "good"}, "Weights" -> 
      SparseArray[Automatic, {346}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.0009207803468208091, "SingleEvaluationTime" -> 
      0.00702325, "Version" -> {13.1, 0}|>]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8684443883703527`*^9, 3.868444628441779*^9, 3.8684447374621*^9, 
   3.868444798788579*^9, {3.8684450567305193`*^9, 3.8684450634502573`*^9}, 
   3.86844514160921*^9, {3.868445216184236*^9, 3.868445245788845*^9}, 
   3.86844550286349*^9, 3.868445684338311*^9, 3.868445860318709*^9, 
   3.868446035571615*^9, 3.8684462387314863`*^9, 3.868446531804*^9, 
   3.868446992824225*^9, 3.868447029560577*^9, 3.8684986039156446`*^9, 
   3.8685204529294043`*^9, 3.8685215146011333`*^9, 3.8685301612497177`*^9, 
   3.868530590591856*^9, 3.86853261496434*^9, 3.8685338436228123`*^9, {
   3.868535643570589*^9, 3.868535653266458*^9}, 3.86853620504729*^9, 
   3.868536647435892*^9, 3.8685368910591183`*^9, 3.868536956624065*^9, 
   3.868537492992119*^9, {3.8685379158969793`*^9, 3.868537942476584*^9}, 
   3.8685921415849247`*^9, 3.868599486276321*^9, 3.86860013955028*^9, 
   3.8686009455378437`*^9, 3.868601165154408*^9, 3.868602872755411*^9, 
   3.868604168888167*^9, 3.8686705600345984`*^9, 3.868672040003127*^9, 
   3.868681397928339*^9, 3.868938938636381*^9, 3.8689425626275787`*^9, 
   3.868943546605094*^9, 3.86894388526086*^9, 3.868944114037065*^9, 
   3.868944544993232*^9, 3.868945583119274*^9, 3.868945795964314*^9, 
   3.868946090455439*^9, 3.868946301277932*^9, 3.868946812077159*^9, 
   3.868947529554852*^9, 3.868948234247651*^9, 3.868949916263268*^9, 
   3.86895035411582*^9, 3.868950591820963*^9, 3.868955715946851*^9, 
   3.8689590912506847`*^9, 3.868961292873067*^9, {3.868964211642971*^9, 
   3.868964271971294*^9}, 3.8689658659417048`*^9, 3.868975187773774*^9, 
   3.868975807387333*^9, 3.869030236615261*^9, 3.869030576485284*^9, 
   3.8690318983554163`*^9, 3.8690322955085077`*^9, 3.8690328949105043`*^9, 
   3.869033235901104*^9, 3.869033495671227*^9, 3.869034576712833*^9, 
   3.869035610130576*^9, 3.8690361433581657`*^9, 3.869036324430427*^9, 
   3.869036425981944*^9, 3.8690403482379503`*^9, 3.869040564944063*^9, 
   3.869041421524418*^9, 3.869041561340787*^9, 3.869041673839971*^9, 
   3.8690421991522627`*^9, 3.869042855424157*^9, 3.86904326803651*^9, 
   3.869043554339016*^9, 3.869043746795423*^9, 3.869105420473537*^9, 
   3.869105653283306*^9, 3.869105982326734*^9, 3.869107184493881*^9, 
   3.869108234728773*^9, 3.869111749761622*^9, {3.869111919016803*^9, 
   3.8691119399060993`*^9}, 3.869112356812172*^9, 3.869112702187408*^9, {
   3.869112904171596*^9, 3.869112930067875*^9}, {3.8691133852077427`*^9, 
   3.869113414126828*^9}, {3.869121126953014*^9, 3.8691211520853*^9}, {
   3.869121847143949*^9, 3.86912185561662*^9}, 3.869203188780602*^9, {
   3.8692071057867537`*^9, 3.86920713930786*^9}, 3.869207400202592*^9, {
   3.869207739721821*^9, 3.8692077456111937`*^9}, {3.869207952002699*^9, 
   3.869207963437224*^9}, 3.8692080125106792`*^9, {3.869208714713435*^9, 
   3.869208729773431*^9}, 3.869209077756652*^9, 3.8692094954446297`*^9, {
   3.869210938078933*^9, 3.8692109446365433`*^9}, 3.869211902166511*^9, {
   3.869213234631062*^9, 3.8692133334937763`*^9}, {3.869214218655706*^9, 
   3.869214223564402*^9}, 3.869215458371559*^9, {3.869215992069166*^9, 
   3.869216010528124*^9}, 3.869216652211252*^9, 3.8692170070767508`*^9, 
   3.8692173280534887`*^9, {3.869217675130456*^9, 3.869217685513886*^9}, {
   3.8692180388130713`*^9, 3.8692180459383907`*^9}, {3.869219076882539*^9, 
   3.8692191672841787`*^9}, 3.869219428759843*^9, {3.869219704836887*^9, 
   3.869219710189546*^9}, {3.869281650336409*^9, 3.869281656282543*^9}, 
   3.869292838989414*^9, 3.8696410838252277`*^9, {3.869642408118239*^9, 
   3.8696424286143847`*^9}, 3.869642755347784*^9, 3.8696432269045877`*^9, 
   3.869643433213999*^9, 3.869643780899444*^9, 3.869645951169808*^9, 
   3.869650675377988*^9, 3.869651296119297*^9, 3.869652542480788*^9, 
   3.870170564724118*^9, 3.870170594923359*^9, 3.87017167984599*^9, 
   3.8701718638983192`*^9, 3.870172515986945*^9, 3.8701739174158583`*^9, 
   3.870175278398274*^9, 3.8701754171170807`*^9, {3.8701754851450853`*^9, 
   3.870175522278379*^9}, 3.8701766976169653`*^9, 3.870176853105291*^9, 
   3.870178039550136*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"c6499215-9887-4f95-a86d-95bb186d731f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hncwt2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Prediction\>\"", "->", 
         RowBox[{"trainedHardNet", "[", 
          RowBox[{
           RowBox[{"KeyDrop", "[", 
            RowBox[{"{", "\"\<Acceptability\>\"", "}"}], "]"}], "@", "#"}], 
          "]"}]}], ",", 
        RowBox[{"\"\<Target\>\"", "->", 
         RowBox[{"#", "[", "\"\<Acceptability\>\"", "]"}]}]}], "}"}], "]"}], 
     "&"}], "/@", 
    RowBox[{"Normal", "[", "testData", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eval2", "=", 
   RowBox[{"HardNetClassifyEvaluation", "[", "hncwt2", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"eval2", "[", "\"\<Accuracy\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.868975856473425*^9, 3.868975907241156*^9}, {
  3.8689759541160727`*^9, 3.868975992561887*^9}, {3.86897610020459*^9, 
  3.8689762477878838`*^9}, {3.86897641471817*^9, 3.8689764578527117`*^9}, {
  3.8690344006348124`*^9, 3.869034400937387*^9}, {3.86904291870931*^9, 
  3.8690429575864353`*^9}, {3.869121310826304*^9, 3.869121313255774*^9}, {
  3.869219749034794*^9, 3.869219752143724*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"431bf369-571a-4438-9ea5-687fe2d08638"],

Cell[BoxData["0.9942196531791907`"], "Output",
 CellChangeTimes->{
  3.869034589981593*^9, 3.869035628358029*^9, 3.869036154844352*^9, 
   3.869036336039586*^9, 3.8690364370454893`*^9, 3.869040359402629*^9, 
   3.869040578854313*^9, 3.869041436196286*^9, 3.8690415773217983`*^9, 
   3.869041690219269*^9, 3.86904221419751*^9, {3.869042932618347*^9, 
   3.869042959198248*^9}, 3.869043287868927*^9, 3.869043565179612*^9, 
   3.8690437567886467`*^9, 3.869104986359107*^9, 3.8691051668148937`*^9, 
   3.869105434085964*^9, 3.869105669300963*^9, 3.869105996859831*^9, 
   3.869107199042075*^9, 3.869111759364867*^9, 3.869111970506278*^9, {
   3.869121299804845*^9, 3.869121316611709*^9}, 3.8692088360902042`*^9, 
   3.86920910005622*^9, 3.869209505631686*^9, 3.869210957184381*^9, 
   3.869211922653748*^9, 3.869213358735955*^9, 3.869214238649056*^9, 
   3.8692154737290087`*^9, 3.869216025505147*^9, 3.8692166649342213`*^9, 
   3.8692170219382353`*^9, 3.869217343847763*^9, 3.8692177067848663`*^9, 
   3.869218058215096*^9, 3.869219448602796*^9, 3.869219753147689*^9, 
   3.8692817014660397`*^9, 3.8692932434109373`*^9, 3.869641124299802*^9, 
   3.8696424595787277`*^9, 3.869642789251828*^9, 3.8696432594825153`*^9, 
   3.869643480889119*^9, 3.869643823403762*^9, 3.8696460912872143`*^9, 
   3.8696509625586653`*^9, 3.869651314560199*^9, 3.869652665647365*^9, 
   3.870171463192264*^9, 3.8701717900384283`*^9, 3.870172009220956*^9, 
   3.870174022298609*^9, 3.870178162663396*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"29d759ca-6037-4c3e-8ac2-75c827e53807"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1440, 762},
WindowMargins->{{0, Automatic}, {0, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.25 Inherited,
FrontEndVersion->"13.1 for Linux x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bb152893-2729-4208-943a-55ec5c3ee311"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 472, 7, 122, "Title",ExpressionUUID->"f846cc42-aa02-4854-b58f-d6a00f3f9f87"],
Cell[CellGroupData[{
Cell[1077, 33, 300, 5, 85, "Chapter",ExpressionUUID->"5f3c722a-5b07-470f-a683-0797441c8c07"],
Cell[1380, 40, 774, 15, 36, "Input",ExpressionUUID->"3d283193-d4ed-4662-9e0d-84eec54ddecd"],
Cell[2157, 57, 509, 10, 36, "Input",ExpressionUUID->"4d8c095b-e185-42e8-80ee-27a0867c4855"],
Cell[CellGroupData[{
Cell[2691, 71, 164, 3, 68, "Subsection",ExpressionUUID->"f72c241a-1149-4a03-acba-ddb61b56d0cd"],
Cell[2858, 76, 2756, 68, 192, "Input",ExpressionUUID->"2edd8689-bcff-48b4-83d7-4dbc778e046c"],
Cell[5617, 146, 1227, 31, 89, "Input",ExpressionUUID->"6c7ad687-6d4c-4bac-b40e-f187c4e5c0d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6881, 182, 220, 4, 68, "Subsection",ExpressionUUID->"7c05c242-1747-4740-86f8-9b6f56cec517"],
Cell[7104, 188, 2510, 58, 347, "Input",ExpressionUUID->"f6750e7f-a063-4c4f-888f-5be83e682770"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9651, 251, 269, 4, 68, "Subsection",ExpressionUUID->"a8b3252c-540b-4f9d-b22d-df59ae9d30be"],
Cell[9923, 257, 3023, 49, 218, "Input",ExpressionUUID->"d716c9c0-e25b-49fc-8778-6b0e6c9888bc"],
Cell[12949, 308, 802, 16, 115, "Input",ExpressionUUID->"0157c297-7579-4c36-a2ea-5d4df0024196"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13788, 329, 323, 5, 68, "Subsection",ExpressionUUID->"2cfca464-a6ee-4f84-87bd-c33f3d393bed"],
Cell[14114, 336, 1276, 32, 166, "Input",ExpressionUUID->"97dae8b9-699f-460c-9d4d-9c4fe4b770c3"],
Cell[15393, 370, 401, 8, 36, "Input",ExpressionUUID->"90a2ce41-ec16-4f6e-bb59-22c60344c976"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15843, 384, 506, 8, 70, "Chapter",ExpressionUUID->"44ee7f34-be8d-40a3-97bd-bccca135e259"],
Cell[16352, 394, 816, 15, 130, "Text",ExpressionUUID->"ee66235f-cbea-435d-b390-03b65cb5dde2"],
Cell[17171, 411, 1963, 51, 261, "Code",ExpressionUUID->"7e1eb8b3-dd0d-4f36-b4e2-78adf2e015ee"],
Cell[19137, 464, 217, 5, 43, "Text",ExpressionUUID->"fa5d384c-044d-4395-b35b-3eca9c099c47"],
Cell[19357, 471, 414, 10, 93, "Code",ExpressionUUID->"f9e1851b-ef02-4274-bf50-2163cc7a8101"],
Cell[19774, 483, 207, 6, 43, "Text",ExpressionUUID->"6f2f4b32-4df0-4594-9a04-66fb39e206eb"],
Cell[19984, 491, 1807, 51, 144, "Code",ExpressionUUID->"afdfd67b-dfc6-4891-9a06-3de07e7901e8"],
Cell[21794, 544, 367, 8, 43, "Text",ExpressionUUID->"1efabde9-eef0-4da1-9773-e76d5683b0f1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22198, 557, 451, 7, 85, "Chapter",ExpressionUUID->"fafce9a4-5484-477e-b8f8-b0432c640e7e"],
Cell[22652, 566, 627, 11, 130, "Text",ExpressionUUID->"b587d4fc-24d0-466d-b175-add0367e8438"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23316, 582, 421, 6, 85, "Chapter",ExpressionUUID->"d41d36bd-b10c-4e23-8a27-3e5f40d34098"],
Cell[23740, 590, 324, 7, 43, "Text",ExpressionUUID->"f6512788-9b46-4ed1-ba42-b506771f8715"],
Cell[24067, 599, 326, 7, 43, "Text",ExpressionUUID->"5f2c8098-0705-4920-aa90-41d8be537866"],
Cell[24396, 608, 17744, 295, 215, "Input",ExpressionUUID->"8e74de02-8280-4744-9620-1d43e671a2b9"],
Cell[42143, 905, 262, 6, 43, "Text",ExpressionUUID->"5033ad36-d625-4bfc-8cf9-2c9fcac25029"],
Cell[42408, 913, 663, 11, 130, "Text",ExpressionUUID->"36e47ac2-3c02-42d5-8e9f-d13da77f6832"],
Cell[43074, 926, 277, 6, 43, "Text",ExpressionUUID->"0b8753b9-0046-41e1-9565-4d2992602974"],
Cell[43354, 934, 532, 16, 67, "Code",ExpressionUUID->"190c71f5-07a3-47a5-800b-fd03a5e56c7d"],
Cell[43889, 952, 574, 10, 72, "Text",ExpressionUUID->"56e2eb67-4c41-4e07-a985-c3cdbd05b7f0"],
Cell[44466, 964, 274, 6, 36, "Input",ExpressionUUID->"dea07a01-7bca-435a-a32e-35dfb818b95e"],
Cell[CellGroupData[{
Cell[44765, 974, 228, 4, 36, "Input",ExpressionUUID->"c631f489-5f6e-49e4-bc02-bf97f19ae420"],
Cell[44996, 980, 152, 2, 41, "Output",ExpressionUUID->"ecbc7e14-34bb-4507-ba8a-a190f52e76cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45185, 987, 230, 4, 36, "Input",ExpressionUUID->"98729a94-4090-43c7-ae7a-9b18dc287efa"],
Cell[45418, 993, 153, 2, 41, "Output",ExpressionUUID->"9ff0a984-117b-41c7-b703-5a365333cab0"]
}, Open  ]],
Cell[45586, 998, 437, 9, 101, "Text",ExpressionUUID->"0aefce02-6319-4f6d-85a1-0c2218d39676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46060, 1012, 348, 6, 85, "Chapter",ExpressionUUID->"acd93fc0-6d03-4a62-9ebb-c4c334b9a32e"],
Cell[CellGroupData[{
Cell[46433, 1022, 177, 2, 36, "Input",ExpressionUUID->"229104b6-7e11-46aa-b4e8-a7bd60993967"],
Cell[46613, 1026, 127461, 2370, 815, "Output",ExpressionUUID->"c6b821f8-b368-4eef-a81f-3bee6a977667"]
}, Open  ]],
Cell[174089, 3399, 239, 5, 36, "Input",ExpressionUUID->"9c3c95be-707e-44e7-8087-1b8558cab784"],
Cell[174331, 3406, 590, 12, 130, "Text",ExpressionUUID->"48ea5e8f-466a-4c85-ab93-40800af9e474"],
Cell[174924, 3420, 8550, 203, 45, "Input",ExpressionUUID->"ba27c735-2399-42eb-ad4b-c0f8a3f95181"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183511, 3628, 488, 7, 85, "Chapter",ExpressionUUID->"85881d34-aa2c-47a4-9cef-231d0c092462"],
Cell[184002, 3637, 247, 5, 43, "Text",ExpressionUUID->"00d95308-a694-443a-a631-9d6d99579905"],
Cell[184252, 3644, 244, 6, 36, "Input",ExpressionUUID->"89b5ca0c-dca6-43c9-830b-af8d63b75cc9"],
Cell[CellGroupData[{
Cell[184521, 3654, 180, 2, 36, "Input",ExpressionUUID->"b13d7a02-3b63-4065-b259-b90f732e995b"],
Cell[184704, 3658, 262947, 5103, 83, "Output",ExpressionUUID->"1f4ba63f-3fe6-4215-8381-3cf638d65592"]
}, Open  ]],
Cell[447666, 8764, 784, 14, 72, "Text",ExpressionUUID->"7fb122b0-11ec-4374-8553-decf50e0a6b9"],
Cell[448453, 8780, 326, 7, 43, "Text",ExpressionUUID->"5ffa9b79-f5dc-428f-803a-6955dbdea24d"],
Cell[448782, 8789, 322, 5, 43, "Text",ExpressionUUID->"7a697f04-03c9-417e-8209-cc642ea858a3"],
Cell[CellGroupData[{
Cell[449129, 8798, 2243, 32, 36, "Input",ExpressionUUID->"387375e3-e26e-4be9-88bf-1141a90e448f"],
Cell[451375, 8832, 32694, 668, 616, "Output",ExpressionUUID->"573eb6cf-acfc-4282-b5bf-24b7cc8b35e4"]
}, Open  ]],
Cell[484084, 9503, 553, 11, 158, "Text",ExpressionUUID->"436dc481-493a-4854-ae98-ffc8efad6c40"],
Cell[484640, 9516, 339, 7, 36, "Input",ExpressionUUID->"db16a4ec-95e1-41d9-a946-025c87ea0139"],
Cell[484982, 9525, 1031, 19, 187, "Text",ExpressionUUID->"471beace-3c54-497f-b2ed-e2d40ad7ebd0"],
Cell[CellGroupData[{
Cell[486038, 9548, 342, 7, 36, "Input",ExpressionUUID->"251bf960-d576-492e-b02e-99402db120bf"],
Cell[486383, 9557, 46510, 766, 573, "Output",ExpressionUUID->"55aef92e-3e9d-43c7-b1d8-501955000ca6"]
}, Open  ]],
Cell[532908, 10326, 454, 10, 130, "Text",ExpressionUUID->"d2deea53-7ac2-4647-9aec-06a1de880925"],
Cell[533365, 10338, 153, 3, 43, "Text",ExpressionUUID->"37061367-fea2-4878-bb09-303f67298789"],
Cell[CellGroupData[{
Cell[533543, 10345, 1443, 24, 63, "Input",ExpressionUUID->"d5f7f5e3-d7b8-496b-8c38-f73def7abcc2"],
Cell[534989, 10371, 30252, 802, 1770, "Output",ExpressionUUID->"7533f45d-ca38-451b-830c-fadd21ac607d"]
}, Open  ]],
Cell[565256, 11176, 347, 7, 43, "Text",ExpressionUUID->"b04ea288-7eab-4c63-9364-fb6fe1f0beb3"],
Cell[565606, 11185, 331, 7, 43, "Text",ExpressionUUID->"c8a372f8-8568-491c-afa4-83917ea1dcd5"],
Cell[CellGroupData[{
Cell[565962, 11196, 239, 6, 36, "Input",ExpressionUUID->"c68591b9-90ec-43a4-bdec-bc480c39269f"],
Cell[566204, 11204, 33868, 611, 255, "Output",ExpressionUUID->"43f14d5a-679f-45ef-bf5b-46474b922396"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600109, 11820, 245, 4, 36, "Input",ExpressionUUID->"5f51c567-dea8-47ac-9acd-54e051a03ea8"],
Cell[600357, 11826, 421, 7, 41, "Output",ExpressionUUID->"8ff6aadd-c16d-4456-ac62-3dd91f197710"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600815, 11838, 254, 4, 36, "Input",ExpressionUUID->"85430b54-526e-4074-9fb9-f03f794f1c13"],
Cell[601072, 11844, 556, 10, 41, "Output",ExpressionUUID->"78be08bc-6290-4a77-845f-f4abd6f80d81"]
}, Open  ]],
Cell[601643, 11857, 277, 7, 43, "Text",ExpressionUUID->"65a04b09-9d6f-4de8-921c-a74eb84216bd"],
Cell[CellGroupData[{
Cell[601945, 11868, 202, 3, 36, "Input",ExpressionUUID->"766504ad-5222-4968-9c2e-4c45b7b36d6b"],
Cell[602150, 11873, 4149, 66, 403, "Output",ExpressionUUID->"d4bf4809-6ccf-45a4-9819-c50b20d5b3d8"]
}, Open  ]],
Cell[606314, 11942, 388, 8, 72, "Text",ExpressionUUID->"7fb2dfa2-ca03-4424-9df6-f9c13557cfa1"],
Cell[606705, 11952, 408, 9, 36, "Input",ExpressionUUID->"13a2ce94-b726-43e3-b6a8-a980ac53773c"],
Cell[607116, 11963, 222, 5, 43, "Text",ExpressionUUID->"5b2b8457-a087-490d-a372-95ff87d5203a"],
Cell[CellGroupData[{
Cell[607363, 11972, 294, 5, 36, "Input",ExpressionUUID->"2bf552be-6270-4e7c-bed7-f9fb42d64d4c"],
Cell[607660, 11979, 891, 19, 73, "Output",ExpressionUUID->"36acebc0-224c-48fe-b663-867ef1fd56f6"]
}, Open  ]],
Cell[608566, 12001, 195, 3, 43, "Text",ExpressionUUID->"9fc78c6a-48b8-4010-baee-fde9b5bdd3c9"],
Cell[CellGroupData[{
Cell[608786, 12008, 221, 3, 36, "Input",ExpressionUUID->"b42693df-e421-4294-8d63-3fe9c57e59be"],
Cell[609010, 12013, 263, 3, 41, "Output",ExpressionUUID->"de579efa-6460-403f-8a4d-fa2a64982e63"]
}, Open  ]],
Cell[609288, 12019, 552, 10, 72, "Text",ExpressionUUID->"41652d4a-0103-4353-8eec-a5ca4867426a"],
Cell[609843, 12031, 307, 7, 43, "Text",ExpressionUUID->"eeaad40f-5bd7-442c-b78b-82d046761f76"],
Cell[610153, 12040, 412, 7, 36, "Input",ExpressionUUID->"bb0dc1a3-5cd2-4290-9ee6-f454b4fd864f"],
Cell[610568, 12049, 288, 6, 43, "Text",ExpressionUUID->"9858cc8a-2d44-4b29-aa17-124189cc0344"],
Cell[CellGroupData[{
Cell[610881, 12059, 721, 14, 36, "Input",ExpressionUUID->"30f555f6-ae5b-4dfd-bdc5-755388129f83"],
Cell[611605, 12075, 439, 7, 53, "Output",ExpressionUUID->"bb4ffee2-8dc2-480b-b143-4f55412f4646"]
}, Open  ]],
Cell[612059, 12085, 1068, 20, 187, "Text",ExpressionUUID->"58ab0f20-14b5-408c-8b9f-e564767e0125"],
Cell[613130, 12107, 245, 6, 43, "Text",ExpressionUUID->"9a677b8d-aa1c-4056-96fa-26d140073b09"],
Cell[CellGroupData[{
Cell[613400, 12117, 312, 5, 36, "Input",ExpressionUUID->"261c52cc-6e5c-430f-ab1f-74c464644f40"],
Cell[613715, 12124, 234579, 5403, 483, "Output",ExpressionUUID->"e3db4df3-ebf9-4e22-a2fb-ed499bb7b2fd"]
}, Open  ]],
Cell[848309, 17530, 1199, 21, 245, "Text",ExpressionUUID->"9bf7d484-9f4c-4f50-9d80-fd38d710dc69"],
Cell[849511, 17553, 506, 11, 101, "Text",ExpressionUUID->"842b7684-051d-40bd-ad8e-72eacdb1ba8f"],
Cell[850020, 17566, 462, 11, 130, "Text",ExpressionUUID->"7303512a-3a03-4fd9-8cd4-53ce333092ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[850519, 17582, 295, 5, 85, "Chapter",ExpressionUUID->"59eda8dc-4a92-49e4-abd9-aef5d515665c"],
Cell[850817, 17589, 2095, 41, 115, "Input",ExpressionUUID->"dc052208-a168-4c64-b029-ac8d65307887"],
Cell[CellGroupData[{
Cell[852937, 17634, 1124, 19, 36, "Input",ExpressionUUID->"0e2adce8-9cfc-4570-baad-c4cfc7b05c63"],
Cell[854064, 17655, 542657, 9890, 614, "Output",ExpressionUUID->"c6499215-9887-4f95-a86d-95bb186d731f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1396758, 27550, 1293, 30, 89, "Input",ExpressionUUID->"431bf369-571a-4438-9ea5-687fe2d08638"],
Cell[1398054, 27582, 1556, 22, 41, "Output",ExpressionUUID->"29d759ca-6037-4c3e-8ac2-75c827e53807"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

